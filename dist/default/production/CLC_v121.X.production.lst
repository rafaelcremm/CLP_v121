

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 20 16:48:57 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F18877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    39                           	psect	stringtext32,global,class=STRCODE,delta=2,noexec
    40                           	psect	stringtext33,global,class=STRCODE,delta=2,noexec
    41                           	psect	stringtext34,global,class=STRCODE,delta=2,noexec
    42                           	psect	stringtext35,global,class=STRCODE,delta=2,noexec
    43                           	psect	stringtext36,global,class=STRCODE,delta=2,noexec
    44                           	psect	stringtext37,global,class=STRCODE,delta=2,noexec
    45                           	psect	stringtext38,global,class=STRCODE,delta=2,noexec
    46                           	psect	stringtext39,global,class=STRCODE,delta=2,noexec
    47                           	psect	stringtext40,global,class=STRCODE,delta=2,noexec
    48                           	psect	stringtext41,global,class=STRCODE,delta=2,noexec
    49                           	psect	cinit,global,class=CODE,merge=1,delta=2
    50                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    52                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    53                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    54                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    55                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    56                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    57                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    58                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    59                           	psect	clrtext,global,class=CODE,delta=2
    60                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    61                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    62                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    63                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    64                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    65                           	psect	text1,local,class=CODE,merge=1,delta=2
    66                           	psect	text2,local,class=CODE,merge=1,delta=2
    67                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text4,local,class=CODE,merge=1,delta=2
    69                           	psect	text5,local,class=CODE,merge=1,delta=2
    70                           	psect	text6,local,class=CODE,merge=1,delta=2
    71                           	psect	text7,local,class=CODE,merge=1,delta=2
    72                           	psect	text8,local,class=CODE,merge=1,delta=2
    73                           	psect	text9,local,class=CODE,merge=1,delta=2
    74                           	psect	text10,local,class=CODE,merge=1,delta=2
    75                           	psect	text11,local,class=CODE,merge=1,delta=2
    76                           	psect	text12,local,class=CODE,merge=1,delta=2
    77                           	psect	text13,local,class=CODE,merge=1,delta=2
    78                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    79                           	psect	text15,local,class=CODE,merge=1,delta=2
    80                           	psect	text16,local,class=CODE,merge=1,delta=2
    81                           	psect	text17,local,class=CODE,merge=1,delta=2
    82                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    83                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text23,local,class=CODE,merge=1,delta=2
    88                           	psect	text24,local,class=CODE,merge=1,delta=2
    89                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    90                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text37,local,class=CODE,merge=1,delta=2
   102                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text39,local,class=CODE,merge=1,delta=2
   104                           	psect	text40,local,class=CODE,merge=1,delta=2
   105                           	psect	text41,local,class=CODE,merge=1,delta=2
   106                           	psect	text42,local,class=CODE,merge=1,delta=2
   107                           	psect	text43,local,class=CODE,merge=1,delta=2
   108                           	psect	text44,local,class=CODE,merge=1,delta=2
   109                           	psect	text45,local,class=CODE,merge=1,delta=2
   110                           	psect	text46,local,class=CODE,merge=1,delta=2
   111                           	psect	text47,local,class=CODE,merge=1,delta=2
   112                           	psect	text48,local,class=CODE,merge=1,delta=2
   113                           	psect	text49,local,class=CODE,merge=1,delta=2
   114                           	psect	text50,local,class=CODE,merge=1,delta=2
   115                           	psect	text51,local,class=CODE,merge=1,delta=2
   116                           	psect	text52,local,class=CODE,merge=1,delta=2
   117                           	psect	text53,local,class=CODE,merge=1,delta=2
   118                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
   119                           	psect	text55,local,class=CODE,merge=1,delta=2
   120                           	psect	text56,local,class=CODE,merge=1,delta=2
   121                           	psect	text57,local,class=CODE,merge=1,delta=2
   122                           	psect	text58,local,class=CODE,merge=1,delta=2
   123                           	psect	text59,local,class=CODE,merge=1,delta=2
   124                           	psect	text60,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text61,local,class=CODE,merge=1,delta=2
   126                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text63,local,class=CODE,merge=1,delta=2
   128                           	psect	text64,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text65,local,class=CODE,merge=1,delta=2,group=2
   130                           	psect	text66,local,class=CODE,merge=1,delta=2,group=2
   131                           	psect	text67,local,class=CODE,merge=1,delta=2
   132                           	psect	text68,local,class=CODE,merge=1,delta=2,group=3
   133                           	psect	text69,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text70,local,class=CODE,merge=1,delta=2,group=2
   135                           	psect	text71,local,class=CODE,merge=1,delta=2
   136                           	psect	text72,local,class=CODE,merge=1,delta=2
   137                           	psect	text73,local,class=CODE,merge=1,delta=2
   138                           	psect	text74,local,class=CODE,merge=1,delta=2
   139                           	psect	text75,local,class=CODE,merge=1,delta=2
   140                           	psect	text76,local,class=CODE,merge=1,delta=2
   141                           	psect	text77,local,class=CODE,merge=1,delta=2
   142                           	psect	text78,local,class=CODE,merge=1,delta=2
   143                           	psect	text79,local,class=CODE,merge=1,delta=2
   144                           	psect	text80,local,class=CODE,merge=1,delta=2
   145                           	psect	text81,local,class=CODE,merge=1,delta=2
   146                           	psect	text82,local,class=CODE,merge=1,delta=2
   147                           	psect	text83,local,class=CODE,merge=1,delta=2
   148                           	psect	text84,local,class=CODE,merge=1,delta=2
   149                           	psect	text85,local,class=CODE,merge=1,delta=2
   150                           	psect	text86,local,class=CODE,merge=1,delta=2
   151                           	psect	text87,local,class=CODE,merge=1,delta=2
   152                           	psect	text88,local,class=CODE,merge=1,delta=2
   153                           	psect	text89,local,class=CODE,merge=1,delta=2
   154                           	psect	text90,local,class=CODE,merge=1,delta=2
   155                           	psect	text91,local,class=CODE,merge=1,delta=2
   156                           	psect	text92,local,class=CODE,merge=1,delta=2
   157                           	psect	text93,local,class=CODE,merge=1,delta=2
   158                           	psect	text94,local,class=CODE,merge=1,delta=2
   159                           	psect	text95,local,class=CODE,merge=1,delta=2
   160                           	psect	text96,local,class=CODE,merge=1,delta=2
   161                           	psect	text97,local,class=CODE,merge=1,delta=2
   162                           	psect	text98,local,class=CODE,merge=1,delta=2
   163                           	psect	text99,local,class=CODE,merge=1,delta=2
   164                           	psect	text100,local,class=CODE,merge=1,delta=2
   165                           	psect	text101,local,class=CODE,merge=1,delta=2
   166                           	psect	intentry,global,class=CODE,delta=2
   167                           	psect	text103,local,class=CODE,merge=1,delta=2
   168                           	psect	text104,local,class=CODE,merge=1,delta=2
   169                           	psect	text105,local,class=CODE,merge=1,delta=2
   170                           	psect	text106,local,class=CODE,merge=1,delta=2
   171                           	psect	text107,local,class=CODE,merge=1,delta=2
   172                           	psect	text108,local,class=CODE,merge=1,delta=2
   173                           	psect	text109,local,class=CODE,merge=1,delta=2
   174                           	psect	text110,local,class=CODE,merge=1,delta=2
   175                           	psect	text111,local,class=CODE,merge=1,delta=2
   176                           	psect	text112,local,class=CODE,merge=1,delta=2
   177                           	psect	text113,local,class=CODE,merge=1,delta=2
   178                           	psect	text114,local,class=CODE,merge=1,delta=2
   179                           	psect	text115,local,class=CODE,merge=1,delta=2
   180                           	psect	text116,local,class=CODE,merge=1,delta=2
   181                           	psect	text117,local,class=CODE,merge=1,delta=2
   182                           	psect	text118,local,class=CODE,merge=1,delta=2
   183                           	psect	text119,local,class=CODE,merge=1,delta=2
   184                           	psect	text120,local,class=CODE,merge=1,delta=2
   185                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   186                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   187                           	dabs	1,0x1920,80
   188                           	dabs	1,0x18A0,80
   189                           	dabs	1,0x1820,80
   190                           	dabs	1,0x17E8,8
   191                           	dabs	1,0x2EF8,0,_step
   192                           	dabs	1,0x7E,2
   193  0000                     
   194                           ; Version 2.40
   195                           ; Generated 02/12/2021 GMT
   196                           ; 
   197                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   198                           ; All rights reserved.
   199                           ; 
   200                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   201                           ; 
   202                           ; Redistribution and use in source and binary forms, with or without modification, are
   203                           ; permitted provided that the following conditions are met:
   204                           ; 
   205                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   206                           ;        conditions and the following disclaimer.
   207                           ; 
   208                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   209                           ;        of conditions and the following disclaimer in the documentation and/or other
   210                           ;        materials provided with the distribution. Publication is not required when
   211                           ;        this file is used in an embedded application.
   212                           ; 
   213                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   214                           ;        software without specific prior written permission.
   215                           ; 
   216                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   217                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   218                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   219                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   220                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   221                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   222                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   223                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   224                           ; 
   225                           ; 
   226                           ; Code-generator required, PIC16F18877 Definitions
   227                           ; 
   228                           ; SFR Addresses
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001C                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0110                     	;# 
   289  0110                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0112                     	;# 
   293  0113                     	;# 
   294  0114                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0119                     	;# 
   301  0119                     	;# 
   302  0119                     	;# 
   303  011A                     	;# 
   304  011A                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011B                     	;# 
   308  011B                     	;# 
   309  011B                     	;# 
   310  011B                     	;# 
   311  011C                     	;# 
   312  011C                     	;# 
   313  011C                     	;# 
   314  011D                     	;# 
   315  011D                     	;# 
   316  011D                     	;# 
   317  011E                     	;# 
   318  011E                     	;# 
   319  011E                     	;# 
   320  011F                     	;# 
   321  011F                     	;# 
   322  011F                     	;# 
   323  011F                     	;# 
   324  011F                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  018E                     	;# 
   328  018F                     	;# 
   329  0190                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0196                     	;# 
   333  0197                     	;# 
   334  0198                     	;# 
   335  0199                     	;# 
   336  019A                     	;# 
   337  019B                     	;# 
   338  019C                     	;# 
   339  020C                     	;# 
   340  020C                     	;# 
   341  020D                     	;# 
   342  020E                     	;# 
   343  020F                     	;# 
   344  020F                     	;# 
   345  0210                     	;# 
   346  0210                     	;# 
   347  0211                     	;# 
   348  0211                     	;# 
   349  0212                     	;# 
   350  0212                     	;# 
   351  0213                     	;# 
   352  0214                     	;# 
   353  0215                     	;# 
   354  0215                     	;# 
   355  0216                     	;# 
   356  0216                     	;# 
   357  0217                     	;# 
   358  0217                     	;# 
   359  0218                     	;# 
   360  0218                     	;# 
   361  0219                     	;# 
   362  021A                     	;# 
   363  021B                     	;# 
   364  021B                     	;# 
   365  021C                     	;# 
   366  021C                     	;# 
   367  021D                     	;# 
   368  021D                     	;# 
   369  021E                     	;# 
   370  021F                     	;# 
   371  028C                     	;# 
   372  028C                     	;# 
   373  028D                     	;# 
   374  028D                     	;# 
   375  028E                     	;# 
   376  028F                     	;# 
   377  0290                     	;# 
   378  0290                     	;# 
   379  0291                     	;# 
   380  0292                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0293                     	;# 
   384  0294                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0296                     	;# 
   388  0297                     	;# 
   389  0298                     	;# 
   390  0298                     	;# 
   391  0299                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  029B                     	;# 
   395  029C                     	;# 
   396  029C                     	;# 
   397  029D                     	;# 
   398  030C                     	;# 
   399  030C                     	;# 
   400  030D                     	;# 
   401  030E                     	;# 
   402  030F                     	;# 
   403  0310                     	;# 
   404  0310                     	;# 
   405  0311                     	;# 
   406  0312                     	;# 
   407  0313                     	;# 
   408  0314                     	;# 
   409  0314                     	;# 
   410  0315                     	;# 
   411  0316                     	;# 
   412  0317                     	;# 
   413  0318                     	;# 
   414  0318                     	;# 
   415  0319                     	;# 
   416  031A                     	;# 
   417  031B                     	;# 
   418  031C                     	;# 
   419  031C                     	;# 
   420  031D                     	;# 
   421  031E                     	;# 
   422  031F                     	;# 
   423  038C                     	;# 
   424  038C                     	;# 
   425  038D                     	;# 
   426  038E                     	;# 
   427  0390                     	;# 
   428  0390                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  040C                     	;# 
   432  040D                     	;# 
   433  040E                     	;# 
   434  040F                     	;# 
   435  0410                     	;# 
   436  0411                     	;# 
   437  0416                     	;# 
   438  0416                     	;# 
   439  0417                     	;# 
   440  0418                     	;# 
   441  0418                     	;# 
   442  0419                     	;# 
   443  041A                     	;# 
   444  041A                     	;# 
   445  041B                     	;# 
   446  041C                     	;# 
   447  041C                     	;# 
   448  041D                     	;# 
   449  041E                     	;# 
   450  041F                     	;# 
   451  048C                     	;# 
   452  048C                     	;# 
   453  048D                     	;# 
   454  048E                     	;# 
   455  048F                     	;# 
   456  048F                     	;# 
   457  0490                     	;# 
   458  0491                     	;# 
   459  0492                     	;# 
   460  0492                     	;# 
   461  0493                     	;# 
   462  0494                     	;# 
   463  0495                     	;# 
   464  0495                     	;# 
   465  0496                     	;# 
   466  0497                     	;# 
   467  0498                     	;# 
   468  0499                     	;# 
   469  049A                     	;# 
   470  049B                     	;# 
   471  049C                     	;# 
   472  049D                     	;# 
   473  050C                     	;# 
   474  050C                     	;# 
   475  050D                     	;# 
   476  050E                     	;# 
   477  050F                     	;# 
   478  050F                     	;# 
   479  0510                     	;# 
   480  0511                     	;# 
   481  0512                     	;# 
   482  0512                     	;# 
   483  0513                     	;# 
   484  0514                     	;# 
   485  0515                     	;# 
   486  0515                     	;# 
   487  0516                     	;# 
   488  0517                     	;# 
   489  0518                     	;# 
   490  0519                     	;# 
   491  051A                     	;# 
   492  051B                     	;# 
   493  051C                     	;# 
   494  051D                     	;# 
   495  058C                     	;# 
   496  058C                     	;# 
   497  058D                     	;# 
   498  058E                     	;# 
   499  058F                     	;# 
   500  058F                     	;# 
   501  0590                     	;# 
   502  0591                     	;# 
   503  0592                     	;# 
   504  0593                     	;# 
   505  060C                     	;# 
   506  060D                     	;# 
   507  060E                     	;# 
   508  060F                     	;# 
   509  0610                     	;# 
   510  0611                     	;# 
   511  0612                     	;# 
   512  0613                     	;# 
   513  0614                     	;# 
   514  0616                     	;# 
   515  0617                     	;# 
   516  0618                     	;# 
   517  0619                     	;# 
   518  061A                     	;# 
   519  061B                     	;# 
   520  061C                     	;# 
   521  061D                     	;# 
   522  061E                     	;# 
   523  068C                     	;# 
   524  068D                     	;# 
   525  068E                     	;# 
   526  068F                     	;# 
   527  0690                     	;# 
   528  0691                     	;# 
   529  0692                     	;# 
   530  0693                     	;# 
   531  0694                     	;# 
   532  070C                     	;# 
   533  070D                     	;# 
   534  070E                     	;# 
   535  070F                     	;# 
   536  0710                     	;# 
   537  0711                     	;# 
   538  0712                     	;# 
   539  0713                     	;# 
   540  0714                     	;# 
   541  0716                     	;# 
   542  0717                     	;# 
   543  0718                     	;# 
   544  0719                     	;# 
   545  071A                     	;# 
   546  071B                     	;# 
   547  071C                     	;# 
   548  071D                     	;# 
   549  071E                     	;# 
   550  0796                     	;# 
   551  0797                     	;# 
   552  0798                     	;# 
   553  0799                     	;# 
   554  079A                     	;# 
   555  079B                     	;# 
   556  080C                     	;# 
   557  080D                     	;# 
   558  080E                     	;# 
   559  080F                     	;# 
   560  0810                     	;# 
   561  0811                     	;# 
   562  0812                     	;# 
   563  0813                     	;# 
   564  0814                     	;# 
   565  081A                     	;# 
   566  081B                     	;# 
   567  081C                     	;# 
   568  081D                     	;# 
   569  081E                     	;# 
   570  081F                     	;# 
   571  088C                     	;# 
   572  088D                     	;# 
   573  088E                     	;# 
   574  088F                     	;# 
   575  0890                     	;# 
   576  0891                     	;# 
   577  0892                     	;# 
   578  0893                     	;# 
   579  0895                     	;# 
   580  0896                     	;# 
   581  0897                     	;# 
   582  0898                     	;# 
   583  0899                     	;# 
   584  089A                     	;# 
   585  089B                     	;# 
   586  090C                     	;# 
   587  090E                     	;# 
   588  090F                     	;# 
   589  091F                     	;# 
   590  098F                     	;# 
   591  098F                     	;# 
   592  0990                     	;# 
   593  0991                     	;# 
   594  0992                     	;# 
   595  0993                     	;# 
   596  0994                     	;# 
   597  0995                     	;# 
   598  0996                     	;# 
   599  0997                     	;# 
   600  1E0F                     	;# 
   601  1E10                     	;# 
   602  1E11                     	;# 
   603  1E12                     	;# 
   604  1E13                     	;# 
   605  1E14                     	;# 
   606  1E15                     	;# 
   607  1E16                     	;# 
   608  1E17                     	;# 
   609  1E18                     	;# 
   610  1E19                     	;# 
   611  1E1A                     	;# 
   612  1E1B                     	;# 
   613  1E1C                     	;# 
   614  1E1D                     	;# 
   615  1E1E                     	;# 
   616  1E1F                     	;# 
   617  1E20                     	;# 
   618  1E21                     	;# 
   619  1E22                     	;# 
   620  1E23                     	;# 
   621  1E24                     	;# 
   622  1E25                     	;# 
   623  1E26                     	;# 
   624  1E27                     	;# 
   625  1E28                     	;# 
   626  1E29                     	;# 
   627  1E2A                     	;# 
   628  1E2B                     	;# 
   629  1E2C                     	;# 
   630  1E2D                     	;# 
   631  1E2E                     	;# 
   632  1E2F                     	;# 
   633  1E30                     	;# 
   634  1E31                     	;# 
   635  1E32                     	;# 
   636  1E33                     	;# 
   637  1E34                     	;# 
   638  1E35                     	;# 
   639  1E36                     	;# 
   640  1E37                     	;# 
   641  1E8F                     	;# 
   642  1E90                     	;# 
   643  1E91                     	;# 
   644  1E92                     	;# 
   645  1E93                     	;# 
   646  1E94                     	;# 
   647  1E95                     	;# 
   648  1E96                     	;# 
   649  1E97                     	;# 
   650  1E9C                     	;# 
   651  1E9D                     	;# 
   652  1E9E                     	;# 
   653  1EA1                     	;# 
   654  1EA2                     	;# 
   655  1EA3                     	;# 
   656  1EA4                     	;# 
   657  1EA5                     	;# 
   658  1EA9                     	;# 
   659  1EAA                     	;# 
   660  1EAB                     	;# 
   661  1EAC                     	;# 
   662  1EB1                     	;# 
   663  1EB2                     	;# 
   664  1EB3                     	;# 
   665  1EB8                     	;# 
   666  1EB9                     	;# 
   667  1EBA                     	;# 
   668  1EBB                     	;# 
   669  1EBC                     	;# 
   670  1EBD                     	;# 
   671  1EBE                     	;# 
   672  1EC3                     	;# 
   673  1EC5                     	;# 
   674  1EC6                     	;# 
   675  1EC7                     	;# 
   676  1EC8                     	;# 
   677  1EC9                     	;# 
   678  1ECA                     	;# 
   679  1ECB                     	;# 
   680  1ECC                     	;# 
   681  1F10                     	;# 
   682  1F11                     	;# 
   683  1F12                     	;# 
   684  1F13                     	;# 
   685  1F14                     	;# 
   686  1F15                     	;# 
   687  1F16                     	;# 
   688  1F17                     	;# 
   689  1F18                     	;# 
   690  1F19                     	;# 
   691  1F1A                     	;# 
   692  1F1B                     	;# 
   693  1F1C                     	;# 
   694  1F1D                     	;# 
   695  1F1E                     	;# 
   696  1F1F                     	;# 
   697  1F20                     	;# 
   698  1F21                     	;# 
   699  1F22                     	;# 
   700  1F23                     	;# 
   701  1F24                     	;# 
   702  1F25                     	;# 
   703  1F26                     	;# 
   704  1F27                     	;# 
   705  1F28                     	;# 
   706  1F29                     	;# 
   707  1F2A                     	;# 
   708  1F2B                     	;# 
   709  1F2C                     	;# 
   710  1F2D                     	;# 
   711  1F2E                     	;# 
   712  1F2F                     	;# 
   713  1F30                     	;# 
   714  1F31                     	;# 
   715  1F32                     	;# 
   716  1F38                     	;# 
   717  1F39                     	;# 
   718  1F3A                     	;# 
   719  1F3B                     	;# 
   720  1F3C                     	;# 
   721  1F3D                     	;# 
   722  1F3E                     	;# 
   723  1F3F                     	;# 
   724  1F40                     	;# 
   725  1F41                     	;# 
   726  1F43                     	;# 
   727  1F44                     	;# 
   728  1F45                     	;# 
   729  1F46                     	;# 
   730  1F47                     	;# 
   731  1F48                     	;# 
   732  1F49                     	;# 
   733  1F4A                     	;# 
   734  1F4B                     	;# 
   735  1F4C                     	;# 
   736  1F4E                     	;# 
   737  1F4F                     	;# 
   738  1F50                     	;# 
   739  1F51                     	;# 
   740  1F52                     	;# 
   741  1F53                     	;# 
   742  1F54                     	;# 
   743  1F55                     	;# 
   744  1F56                     	;# 
   745  1F57                     	;# 
   746  1F59                     	;# 
   747  1F5A                     	;# 
   748  1F5B                     	;# 
   749  1F5C                     	;# 
   750  1F5D                     	;# 
   751  1F61                     	;# 
   752  1F62                     	;# 
   753  1F64                     	;# 
   754  1F65                     	;# 
   755  1F66                     	;# 
   756  1F67                     	;# 
   757  1F68                     	;# 
   758  1F69                     	;# 
   759  1F6A                     	;# 
   760  1F6B                     	;# 
   761  1F6C                     	;# 
   762  1F6D                     	;# 
   763  1FE4                     	;# 
   764  1FE5                     	;# 
   765  1FE6                     	;# 
   766  1FE7                     	;# 
   767  1FE8                     	;# 
   768  1FE9                     	;# 
   769  1FEA                     	;# 
   770  1FEB                     	;# 
   771  1FED                     	;# 
   772  1FEE                     	;# 
   773  1FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000D                     	;# 
   788  000E                     	;# 
   789  000F                     	;# 
   790  0010                     	;# 
   791  0011                     	;# 
   792  0012                     	;# 
   793  0013                     	;# 
   794  0014                     	;# 
   795  0015                     	;# 
   796  0016                     	;# 
   797  0017                     	;# 
   798  0018                     	;# 
   799  0019                     	;# 
   800  001A                     	;# 
   801  001C                     	;# 
   802  001C                     	;# 
   803  001D                     	;# 
   804  001D                     	;# 
   805  001E                     	;# 
   806  001F                     	;# 
   807  008C                     	;# 
   808  008C                     	;# 
   809  008D                     	;# 
   810  008E                     	;# 
   811  008E                     	;# 
   812  008F                     	;# 
   813  0090                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0093                     	;# 
   817  0094                     	;# 
   818  0095                     	;# 
   819  0096                     	;# 
   820  0097                     	;# 
   821  0098                     	;# 
   822  0099                     	;# 
   823  009A                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010E                     	;# 
   832  010F                     	;# 
   833  0110                     	;# 
   834  0110                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0114                     	;# 
   841  0115                     	;# 
   842  0116                     	;# 
   843  0116                     	;# 
   844  0117                     	;# 
   845  0119                     	;# 
   846  0119                     	;# 
   847  0119                     	;# 
   848  011A                     	;# 
   849  011A                     	;# 
   850  011A                     	;# 
   851  011B                     	;# 
   852  011B                     	;# 
   853  011B                     	;# 
   854  011B                     	;# 
   855  011B                     	;# 
   856  011C                     	;# 
   857  011C                     	;# 
   858  011C                     	;# 
   859  011D                     	;# 
   860  011D                     	;# 
   861  011D                     	;# 
   862  011E                     	;# 
   863  011E                     	;# 
   864  011E                     	;# 
   865  011F                     	;# 
   866  011F                     	;# 
   867  011F                     	;# 
   868  011F                     	;# 
   869  011F                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  018E                     	;# 
   873  018F                     	;# 
   874  0190                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0196                     	;# 
   878  0197                     	;# 
   879  0198                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019C                     	;# 
   884  020C                     	;# 
   885  020C                     	;# 
   886  020D                     	;# 
   887  020E                     	;# 
   888  020F                     	;# 
   889  020F                     	;# 
   890  0210                     	;# 
   891  0210                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0214                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0216                     	;# 
   901  0216                     	;# 
   902  0217                     	;# 
   903  0217                     	;# 
   904  0218                     	;# 
   905  0218                     	;# 
   906  0219                     	;# 
   907  021A                     	;# 
   908  021B                     	;# 
   909  021B                     	;# 
   910  021C                     	;# 
   911  021C                     	;# 
   912  021D                     	;# 
   913  021D                     	;# 
   914  021E                     	;# 
   915  021F                     	;# 
   916  028C                     	;# 
   917  028C                     	;# 
   918  028D                     	;# 
   919  028D                     	;# 
   920  028E                     	;# 
   921  028F                     	;# 
   922  0290                     	;# 
   923  0290                     	;# 
   924  0291                     	;# 
   925  0292                     	;# 
   926  0292                     	;# 
   927  0293                     	;# 
   928  0293                     	;# 
   929  0294                     	;# 
   930  0295                     	;# 
   931  0296                     	;# 
   932  0296                     	;# 
   933  0297                     	;# 
   934  0298                     	;# 
   935  0298                     	;# 
   936  0299                     	;# 
   937  0299                     	;# 
   938  029A                     	;# 
   939  029B                     	;# 
   940  029C                     	;# 
   941  029C                     	;# 
   942  029D                     	;# 
   943  030C                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  030F                     	;# 
   948  0310                     	;# 
   949  0310                     	;# 
   950  0311                     	;# 
   951  0312                     	;# 
   952  0313                     	;# 
   953  0314                     	;# 
   954  0314                     	;# 
   955  0315                     	;# 
   956  0316                     	;# 
   957  0317                     	;# 
   958  0318                     	;# 
   959  0318                     	;# 
   960  0319                     	;# 
   961  031A                     	;# 
   962  031B                     	;# 
   963  031C                     	;# 
   964  031C                     	;# 
   965  031D                     	;# 
   966  031E                     	;# 
   967  031F                     	;# 
   968  038C                     	;# 
   969  038C                     	;# 
   970  038D                     	;# 
   971  038E                     	;# 
   972  0390                     	;# 
   973  0390                     	;# 
   974  0391                     	;# 
   975  0392                     	;# 
   976  040C                     	;# 
   977  040D                     	;# 
   978  040E                     	;# 
   979  040F                     	;# 
   980  0410                     	;# 
   981  0411                     	;# 
   982  0416                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  0418                     	;# 
   987  0419                     	;# 
   988  041A                     	;# 
   989  041A                     	;# 
   990  041B                     	;# 
   991  041C                     	;# 
   992  041C                     	;# 
   993  041D                     	;# 
   994  041E                     	;# 
   995  041F                     	;# 
   996  048C                     	;# 
   997  048C                     	;# 
   998  048D                     	;# 
   999  048E                     	;# 
  1000  048F                     	;# 
  1001  048F                     	;# 
  1002  0490                     	;# 
  1003  0491                     	;# 
  1004  0492                     	;# 
  1005  0492                     	;# 
  1006  0493                     	;# 
  1007  0494                     	;# 
  1008  0495                     	;# 
  1009  0495                     	;# 
  1010  0496                     	;# 
  1011  0497                     	;# 
  1012  0498                     	;# 
  1013  0499                     	;# 
  1014  049A                     	;# 
  1015  049B                     	;# 
  1016  049C                     	;# 
  1017  049D                     	;# 
  1018  050C                     	;# 
  1019  050C                     	;# 
  1020  050D                     	;# 
  1021  050E                     	;# 
  1022  050F                     	;# 
  1023  050F                     	;# 
  1024  0510                     	;# 
  1025  0511                     	;# 
  1026  0512                     	;# 
  1027  0512                     	;# 
  1028  0513                     	;# 
  1029  0514                     	;# 
  1030  0515                     	;# 
  1031  0515                     	;# 
  1032  0516                     	;# 
  1033  0517                     	;# 
  1034  0518                     	;# 
  1035  0519                     	;# 
  1036  051A                     	;# 
  1037  051B                     	;# 
  1038  051C                     	;# 
  1039  051D                     	;# 
  1040  058C                     	;# 
  1041  058C                     	;# 
  1042  058D                     	;# 
  1043  058E                     	;# 
  1044  058F                     	;# 
  1045  058F                     	;# 
  1046  0590                     	;# 
  1047  0591                     	;# 
  1048  0592                     	;# 
  1049  0593                     	;# 
  1050  060C                     	;# 
  1051  060D                     	;# 
  1052  060E                     	;# 
  1053  060F                     	;# 
  1054  0610                     	;# 
  1055  0611                     	;# 
  1056  0612                     	;# 
  1057  0613                     	;# 
  1058  0614                     	;# 
  1059  0616                     	;# 
  1060  0617                     	;# 
  1061  0618                     	;# 
  1062  0619                     	;# 
  1063  061A                     	;# 
  1064  061B                     	;# 
  1065  061C                     	;# 
  1066  061D                     	;# 
  1067  061E                     	;# 
  1068  068C                     	;# 
  1069  068D                     	;# 
  1070  068E                     	;# 
  1071  068F                     	;# 
  1072  0690                     	;# 
  1073  0691                     	;# 
  1074  0692                     	;# 
  1075  0693                     	;# 
  1076  0694                     	;# 
  1077  070C                     	;# 
  1078  070D                     	;# 
  1079  070E                     	;# 
  1080  070F                     	;# 
  1081  0710                     	;# 
  1082  0711                     	;# 
  1083  0712                     	;# 
  1084  0713                     	;# 
  1085  0714                     	;# 
  1086  0716                     	;# 
  1087  0717                     	;# 
  1088  0718                     	;# 
  1089  0719                     	;# 
  1090  071A                     	;# 
  1091  071B                     	;# 
  1092  071C                     	;# 
  1093  071D                     	;# 
  1094  071E                     	;# 
  1095  0796                     	;# 
  1096  0797                     	;# 
  1097  0798                     	;# 
  1098  0799                     	;# 
  1099  079A                     	;# 
  1100  079B                     	;# 
  1101  080C                     	;# 
  1102  080D                     	;# 
  1103  080E                     	;# 
  1104  080F                     	;# 
  1105  0810                     	;# 
  1106  0811                     	;# 
  1107  0812                     	;# 
  1108  0813                     	;# 
  1109  0814                     	;# 
  1110  081A                     	;# 
  1111  081B                     	;# 
  1112  081C                     	;# 
  1113  081D                     	;# 
  1114  081E                     	;# 
  1115  081F                     	;# 
  1116  088C                     	;# 
  1117  088D                     	;# 
  1118  088E                     	;# 
  1119  088F                     	;# 
  1120  0890                     	;# 
  1121  0891                     	;# 
  1122  0892                     	;# 
  1123  0893                     	;# 
  1124  0895                     	;# 
  1125  0896                     	;# 
  1126  0897                     	;# 
  1127  0898                     	;# 
  1128  0899                     	;# 
  1129  089A                     	;# 
  1130  089B                     	;# 
  1131  090C                     	;# 
  1132  090E                     	;# 
  1133  090F                     	;# 
  1134  091F                     	;# 
  1135  098F                     	;# 
  1136  098F                     	;# 
  1137  0990                     	;# 
  1138  0991                     	;# 
  1139  0992                     	;# 
  1140  0993                     	;# 
  1141  0994                     	;# 
  1142  0995                     	;# 
  1143  0996                     	;# 
  1144  0997                     	;# 
  1145  1E0F                     	;# 
  1146  1E10                     	;# 
  1147  1E11                     	;# 
  1148  1E12                     	;# 
  1149  1E13                     	;# 
  1150  1E14                     	;# 
  1151  1E15                     	;# 
  1152  1E16                     	;# 
  1153  1E17                     	;# 
  1154  1E18                     	;# 
  1155  1E19                     	;# 
  1156  1E1A                     	;# 
  1157  1E1B                     	;# 
  1158  1E1C                     	;# 
  1159  1E1D                     	;# 
  1160  1E1E                     	;# 
  1161  1E1F                     	;# 
  1162  1E20                     	;# 
  1163  1E21                     	;# 
  1164  1E22                     	;# 
  1165  1E23                     	;# 
  1166  1E24                     	;# 
  1167  1E25                     	;# 
  1168  1E26                     	;# 
  1169  1E27                     	;# 
  1170  1E28                     	;# 
  1171  1E29                     	;# 
  1172  1E2A                     	;# 
  1173  1E2B                     	;# 
  1174  1E2C                     	;# 
  1175  1E2D                     	;# 
  1176  1E2E                     	;# 
  1177  1E2F                     	;# 
  1178  1E30                     	;# 
  1179  1E31                     	;# 
  1180  1E32                     	;# 
  1181  1E33                     	;# 
  1182  1E34                     	;# 
  1183  1E35                     	;# 
  1184  1E36                     	;# 
  1185  1E37                     	;# 
  1186  1E8F                     	;# 
  1187  1E90                     	;# 
  1188  1E91                     	;# 
  1189  1E92                     	;# 
  1190  1E93                     	;# 
  1191  1E94                     	;# 
  1192  1E95                     	;# 
  1193  1E96                     	;# 
  1194  1E97                     	;# 
  1195  1E9C                     	;# 
  1196  1E9D                     	;# 
  1197  1E9E                     	;# 
  1198  1EA1                     	;# 
  1199  1EA2                     	;# 
  1200  1EA3                     	;# 
  1201  1EA4                     	;# 
  1202  1EA5                     	;# 
  1203  1EA9                     	;# 
  1204  1EAA                     	;# 
  1205  1EAB                     	;# 
  1206  1EAC                     	;# 
  1207  1EB1                     	;# 
  1208  1EB2                     	;# 
  1209  1EB3                     	;# 
  1210  1EB8                     	;# 
  1211  1EB9                     	;# 
  1212  1EBA                     	;# 
  1213  1EBB                     	;# 
  1214  1EBC                     	;# 
  1215  1EBD                     	;# 
  1216  1EBE                     	;# 
  1217  1EC3                     	;# 
  1218  1EC5                     	;# 
  1219  1EC6                     	;# 
  1220  1EC7                     	;# 
  1221  1EC8                     	;# 
  1222  1EC9                     	;# 
  1223  1ECA                     	;# 
  1224  1ECB                     	;# 
  1225  1ECC                     	;# 
  1226  1F10                     	;# 
  1227  1F11                     	;# 
  1228  1F12                     	;# 
  1229  1F13                     	;# 
  1230  1F14                     	;# 
  1231  1F15                     	;# 
  1232  1F16                     	;# 
  1233  1F17                     	;# 
  1234  1F18                     	;# 
  1235  1F19                     	;# 
  1236  1F1A                     	;# 
  1237  1F1B                     	;# 
  1238  1F1C                     	;# 
  1239  1F1D                     	;# 
  1240  1F1E                     	;# 
  1241  1F1F                     	;# 
  1242  1F20                     	;# 
  1243  1F21                     	;# 
  1244  1F22                     	;# 
  1245  1F23                     	;# 
  1246  1F24                     	;# 
  1247  1F25                     	;# 
  1248  1F26                     	;# 
  1249  1F27                     	;# 
  1250  1F28                     	;# 
  1251  1F29                     	;# 
  1252  1F2A                     	;# 
  1253  1F2B                     	;# 
  1254  1F2C                     	;# 
  1255  1F2D                     	;# 
  1256  1F2E                     	;# 
  1257  1F2F                     	;# 
  1258  1F30                     	;# 
  1259  1F31                     	;# 
  1260  1F32                     	;# 
  1261  1F38                     	;# 
  1262  1F39                     	;# 
  1263  1F3A                     	;# 
  1264  1F3B                     	;# 
  1265  1F3C                     	;# 
  1266  1F3D                     	;# 
  1267  1F3E                     	;# 
  1268  1F3F                     	;# 
  1269  1F40                     	;# 
  1270  1F41                     	;# 
  1271  1F43                     	;# 
  1272  1F44                     	;# 
  1273  1F45                     	;# 
  1274  1F46                     	;# 
  1275  1F47                     	;# 
  1276  1F48                     	;# 
  1277  1F49                     	;# 
  1278  1F4A                     	;# 
  1279  1F4B                     	;# 
  1280  1F4C                     	;# 
  1281  1F4E                     	;# 
  1282  1F4F                     	;# 
  1283  1F50                     	;# 
  1284  1F51                     	;# 
  1285  1F52                     	;# 
  1286  1F53                     	;# 
  1287  1F54                     	;# 
  1288  1F55                     	;# 
  1289  1F56                     	;# 
  1290  1F57                     	;# 
  1291  1F59                     	;# 
  1292  1F5A                     	;# 
  1293  1F5B                     	;# 
  1294  1F5C                     	;# 
  1295  1F5D                     	;# 
  1296  1F61                     	;# 
  1297  1F62                     	;# 
  1298  1F64                     	;# 
  1299  1F65                     	;# 
  1300  1F66                     	;# 
  1301  1F67                     	;# 
  1302  1F68                     	;# 
  1303  1F69                     	;# 
  1304  1F6A                     	;# 
  1305  1F6B                     	;# 
  1306  1F6C                     	;# 
  1307  1F6D                     	;# 
  1308  1FE4                     	;# 
  1309  1FE5                     	;# 
  1310  1FE6                     	;# 
  1311  1FE7                     	;# 
  1312  1FE8                     	;# 
  1313  1FE9                     	;# 
  1314  1FEA                     	;# 
  1315  1FEB                     	;# 
  1316  1FED                     	;# 
  1317  1FEE                     	;# 
  1318  1FEF                     	;# 
  1319  0000                     	;# 
  1320  0001                     	;# 
  1321  0002                     	;# 
  1322  0003                     	;# 
  1323  0004                     	;# 
  1324  0005                     	;# 
  1325  0006                     	;# 
  1326  0007                     	;# 
  1327  0008                     	;# 
  1328  0009                     	;# 
  1329  000A                     	;# 
  1330  000B                     	;# 
  1331  000C                     	;# 
  1332  000D                     	;# 
  1333  000E                     	;# 
  1334  000F                     	;# 
  1335  0010                     	;# 
  1336  0011                     	;# 
  1337  0012                     	;# 
  1338  0013                     	;# 
  1339  0014                     	;# 
  1340  0015                     	;# 
  1341  0016                     	;# 
  1342  0017                     	;# 
  1343  0018                     	;# 
  1344  0019                     	;# 
  1345  001A                     	;# 
  1346  001C                     	;# 
  1347  001C                     	;# 
  1348  001D                     	;# 
  1349  001D                     	;# 
  1350  001E                     	;# 
  1351  001F                     	;# 
  1352  008C                     	;# 
  1353  008C                     	;# 
  1354  008D                     	;# 
  1355  008E                     	;# 
  1356  008E                     	;# 
  1357  008F                     	;# 
  1358  0090                     	;# 
  1359  0090                     	;# 
  1360  0091                     	;# 
  1361  0093                     	;# 
  1362  0094                     	;# 
  1363  0095                     	;# 
  1364  0096                     	;# 
  1365  0097                     	;# 
  1366  0098                     	;# 
  1367  0099                     	;# 
  1368  009A                     	;# 
  1369  009B                     	;# 
  1370  009C                     	;# 
  1371  009D                     	;# 
  1372  009E                     	;# 
  1373  010C                     	;# 
  1374  010D                     	;# 
  1375  010E                     	;# 
  1376  010E                     	;# 
  1377  010F                     	;# 
  1378  0110                     	;# 
  1379  0110                     	;# 
  1380  0111                     	;# 
  1381  0112                     	;# 
  1382  0112                     	;# 
  1383  0113                     	;# 
  1384  0114                     	;# 
  1385  0114                     	;# 
  1386  0115                     	;# 
  1387  0116                     	;# 
  1388  0116                     	;# 
  1389  0117                     	;# 
  1390  0119                     	;# 
  1391  0119                     	;# 
  1392  0119                     	;# 
  1393  011A                     	;# 
  1394  011A                     	;# 
  1395  011A                     	;# 
  1396  011B                     	;# 
  1397  011B                     	;# 
  1398  011B                     	;# 
  1399  011B                     	;# 
  1400  011B                     	;# 
  1401  011C                     	;# 
  1402  011C                     	;# 
  1403  011C                     	;# 
  1404  011D                     	;# 
  1405  011D                     	;# 
  1406  011D                     	;# 
  1407  011E                     	;# 
  1408  011E                     	;# 
  1409  011E                     	;# 
  1410  011F                     	;# 
  1411  011F                     	;# 
  1412  011F                     	;# 
  1413  011F                     	;# 
  1414  011F                     	;# 
  1415  018C                     	;# 
  1416  018D                     	;# 
  1417  018E                     	;# 
  1418  018F                     	;# 
  1419  0190                     	;# 
  1420  0191                     	;# 
  1421  0192                     	;# 
  1422  0196                     	;# 
  1423  0197                     	;# 
  1424  0198                     	;# 
  1425  0199                     	;# 
  1426  019A                     	;# 
  1427  019B                     	;# 
  1428  019C                     	;# 
  1429  020C                     	;# 
  1430  020C                     	;# 
  1431  020D                     	;# 
  1432  020E                     	;# 
  1433  020F                     	;# 
  1434  020F                     	;# 
  1435  0210                     	;# 
  1436  0210                     	;# 
  1437  0211                     	;# 
  1438  0211                     	;# 
  1439  0212                     	;# 
  1440  0212                     	;# 
  1441  0213                     	;# 
  1442  0214                     	;# 
  1443  0215                     	;# 
  1444  0215                     	;# 
  1445  0216                     	;# 
  1446  0216                     	;# 
  1447  0217                     	;# 
  1448  0217                     	;# 
  1449  0218                     	;# 
  1450  0218                     	;# 
  1451  0219                     	;# 
  1452  021A                     	;# 
  1453  021B                     	;# 
  1454  021B                     	;# 
  1455  021C                     	;# 
  1456  021C                     	;# 
  1457  021D                     	;# 
  1458  021D                     	;# 
  1459  021E                     	;# 
  1460  021F                     	;# 
  1461  028C                     	;# 
  1462  028C                     	;# 
  1463  028D                     	;# 
  1464  028D                     	;# 
  1465  028E                     	;# 
  1466  028F                     	;# 
  1467  0290                     	;# 
  1468  0290                     	;# 
  1469  0291                     	;# 
  1470  0292                     	;# 
  1471  0292                     	;# 
  1472  0293                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0296                     	;# 
  1477  0296                     	;# 
  1478  0297                     	;# 
  1479  0298                     	;# 
  1480  0298                     	;# 
  1481  0299                     	;# 
  1482  0299                     	;# 
  1483  029A                     	;# 
  1484  029B                     	;# 
  1485  029C                     	;# 
  1486  029C                     	;# 
  1487  029D                     	;# 
  1488  030C                     	;# 
  1489  030C                     	;# 
  1490  030D                     	;# 
  1491  030E                     	;# 
  1492  030F                     	;# 
  1493  0310                     	;# 
  1494  0310                     	;# 
  1495  0311                     	;# 
  1496  0312                     	;# 
  1497  0313                     	;# 
  1498  0314                     	;# 
  1499  0314                     	;# 
  1500  0315                     	;# 
  1501  0316                     	;# 
  1502  0317                     	;# 
  1503  0318                     	;# 
  1504  0318                     	;# 
  1505  0319                     	;# 
  1506  031A                     	;# 
  1507  031B                     	;# 
  1508  031C                     	;# 
  1509  031C                     	;# 
  1510  031D                     	;# 
  1511  031E                     	;# 
  1512  031F                     	;# 
  1513  038C                     	;# 
  1514  038C                     	;# 
  1515  038D                     	;# 
  1516  038E                     	;# 
  1517  0390                     	;# 
  1518  0390                     	;# 
  1519  0391                     	;# 
  1520  0392                     	;# 
  1521  040C                     	;# 
  1522  040D                     	;# 
  1523  040E                     	;# 
  1524  040F                     	;# 
  1525  0410                     	;# 
  1526  0411                     	;# 
  1527  0416                     	;# 
  1528  0416                     	;# 
  1529  0417                     	;# 
  1530  0418                     	;# 
  1531  0418                     	;# 
  1532  0419                     	;# 
  1533  041A                     	;# 
  1534  041A                     	;# 
  1535  041B                     	;# 
  1536  041C                     	;# 
  1537  041C                     	;# 
  1538  041D                     	;# 
  1539  041E                     	;# 
  1540  041F                     	;# 
  1541  048C                     	;# 
  1542  048C                     	;# 
  1543  048D                     	;# 
  1544  048E                     	;# 
  1545  048F                     	;# 
  1546  048F                     	;# 
  1547  0490                     	;# 
  1548  0491                     	;# 
  1549  0492                     	;# 
  1550  0492                     	;# 
  1551  0493                     	;# 
  1552  0494                     	;# 
  1553  0495                     	;# 
  1554  0495                     	;# 
  1555  0496                     	;# 
  1556  0497                     	;# 
  1557  0498                     	;# 
  1558  0499                     	;# 
  1559  049A                     	;# 
  1560  049B                     	;# 
  1561  049C                     	;# 
  1562  049D                     	;# 
  1563  050C                     	;# 
  1564  050C                     	;# 
  1565  050D                     	;# 
  1566  050E                     	;# 
  1567  050F                     	;# 
  1568  050F                     	;# 
  1569  0510                     	;# 
  1570  0511                     	;# 
  1571  0512                     	;# 
  1572  0512                     	;# 
  1573  0513                     	;# 
  1574  0514                     	;# 
  1575  0515                     	;# 
  1576  0515                     	;# 
  1577  0516                     	;# 
  1578  0517                     	;# 
  1579  0518                     	;# 
  1580  0519                     	;# 
  1581  051A                     	;# 
  1582  051B                     	;# 
  1583  051C                     	;# 
  1584  051D                     	;# 
  1585  058C                     	;# 
  1586  058C                     	;# 
  1587  058D                     	;# 
  1588  058E                     	;# 
  1589  058F                     	;# 
  1590  058F                     	;# 
  1591  0590                     	;# 
  1592  0591                     	;# 
  1593  0592                     	;# 
  1594  0593                     	;# 
  1595  060C                     	;# 
  1596  060D                     	;# 
  1597  060E                     	;# 
  1598  060F                     	;# 
  1599  0610                     	;# 
  1600  0611                     	;# 
  1601  0612                     	;# 
  1602  0613                     	;# 
  1603  0614                     	;# 
  1604  0616                     	;# 
  1605  0617                     	;# 
  1606  0618                     	;# 
  1607  0619                     	;# 
  1608  061A                     	;# 
  1609  061B                     	;# 
  1610  061C                     	;# 
  1611  061D                     	;# 
  1612  061E                     	;# 
  1613  068C                     	;# 
  1614  068D                     	;# 
  1615  068E                     	;# 
  1616  068F                     	;# 
  1617  0690                     	;# 
  1618  0691                     	;# 
  1619  0692                     	;# 
  1620  0693                     	;# 
  1621  0694                     	;# 
  1622  070C                     	;# 
  1623  070D                     	;# 
  1624  070E                     	;# 
  1625  070F                     	;# 
  1626  0710                     	;# 
  1627  0711                     	;# 
  1628  0712                     	;# 
  1629  0713                     	;# 
  1630  0714                     	;# 
  1631  0716                     	;# 
  1632  0717                     	;# 
  1633  0718                     	;# 
  1634  0719                     	;# 
  1635  071A                     	;# 
  1636  071B                     	;# 
  1637  071C                     	;# 
  1638  071D                     	;# 
  1639  071E                     	;# 
  1640  0796                     	;# 
  1641  0797                     	;# 
  1642  0798                     	;# 
  1643  0799                     	;# 
  1644  079A                     	;# 
  1645  079B                     	;# 
  1646  080C                     	;# 
  1647  080D                     	;# 
  1648  080E                     	;# 
  1649  080F                     	;# 
  1650  0810                     	;# 
  1651  0811                     	;# 
  1652  0812                     	;# 
  1653  0813                     	;# 
  1654  0814                     	;# 
  1655  081A                     	;# 
  1656  081B                     	;# 
  1657  081C                     	;# 
  1658  081D                     	;# 
  1659  081E                     	;# 
  1660  081F                     	;# 
  1661  088C                     	;# 
  1662  088D                     	;# 
  1663  088E                     	;# 
  1664  088F                     	;# 
  1665  0890                     	;# 
  1666  0891                     	;# 
  1667  0892                     	;# 
  1668  0893                     	;# 
  1669  0895                     	;# 
  1670  0896                     	;# 
  1671  0897                     	;# 
  1672  0898                     	;# 
  1673  0899                     	;# 
  1674  089A                     	;# 
  1675  089B                     	;# 
  1676  090C                     	;# 
  1677  090E                     	;# 
  1678  090F                     	;# 
  1679  091F                     	;# 
  1680  098F                     	;# 
  1681  098F                     	;# 
  1682  0990                     	;# 
  1683  0991                     	;# 
  1684  0992                     	;# 
  1685  0993                     	;# 
  1686  0994                     	;# 
  1687  0995                     	;# 
  1688  0996                     	;# 
  1689  0997                     	;# 
  1690  1E0F                     	;# 
  1691  1E10                     	;# 
  1692  1E11                     	;# 
  1693  1E12                     	;# 
  1694  1E13                     	;# 
  1695  1E14                     	;# 
  1696  1E15                     	;# 
  1697  1E16                     	;# 
  1698  1E17                     	;# 
  1699  1E18                     	;# 
  1700  1E19                     	;# 
  1701  1E1A                     	;# 
  1702  1E1B                     	;# 
  1703  1E1C                     	;# 
  1704  1E1D                     	;# 
  1705  1E1E                     	;# 
  1706  1E1F                     	;# 
  1707  1E20                     	;# 
  1708  1E21                     	;# 
  1709  1E22                     	;# 
  1710  1E23                     	;# 
  1711  1E24                     	;# 
  1712  1E25                     	;# 
  1713  1E26                     	;# 
  1714  1E27                     	;# 
  1715  1E28                     	;# 
  1716  1E29                     	;# 
  1717  1E2A                     	;# 
  1718  1E2B                     	;# 
  1719  1E2C                     	;# 
  1720  1E2D                     	;# 
  1721  1E2E                     	;# 
  1722  1E2F                     	;# 
  1723  1E30                     	;# 
  1724  1E31                     	;# 
  1725  1E32                     	;# 
  1726  1E33                     	;# 
  1727  1E34                     	;# 
  1728  1E35                     	;# 
  1729  1E36                     	;# 
  1730  1E37                     	;# 
  1731  1E8F                     	;# 
  1732  1E90                     	;# 
  1733  1E91                     	;# 
  1734  1E92                     	;# 
  1735  1E93                     	;# 
  1736  1E94                     	;# 
  1737  1E95                     	;# 
  1738  1E96                     	;# 
  1739  1E97                     	;# 
  1740  1E9C                     	;# 
  1741  1E9D                     	;# 
  1742  1E9E                     	;# 
  1743  1EA1                     	;# 
  1744  1EA2                     	;# 
  1745  1EA3                     	;# 
  1746  1EA4                     	;# 
  1747  1EA5                     	;# 
  1748  1EA9                     	;# 
  1749  1EAA                     	;# 
  1750  1EAB                     	;# 
  1751  1EAC                     	;# 
  1752  1EB1                     	;# 
  1753  1EB2                     	;# 
  1754  1EB3                     	;# 
  1755  1EB8                     	;# 
  1756  1EB9                     	;# 
  1757  1EBA                     	;# 
  1758  1EBB                     	;# 
  1759  1EBC                     	;# 
  1760  1EBD                     	;# 
  1761  1EBE                     	;# 
  1762  1EC3                     	;# 
  1763  1EC5                     	;# 
  1764  1EC6                     	;# 
  1765  1EC7                     	;# 
  1766  1EC8                     	;# 
  1767  1EC9                     	;# 
  1768  1ECA                     	;# 
  1769  1ECB                     	;# 
  1770  1ECC                     	;# 
  1771  1F10                     	;# 
  1772  1F11                     	;# 
  1773  1F12                     	;# 
  1774  1F13                     	;# 
  1775  1F14                     	;# 
  1776  1F15                     	;# 
  1777  1F16                     	;# 
  1778  1F17                     	;# 
  1779  1F18                     	;# 
  1780  1F19                     	;# 
  1781  1F1A                     	;# 
  1782  1F1B                     	;# 
  1783  1F1C                     	;# 
  1784  1F1D                     	;# 
  1785  1F1E                     	;# 
  1786  1F1F                     	;# 
  1787  1F20                     	;# 
  1788  1F21                     	;# 
  1789  1F22                     	;# 
  1790  1F23                     	;# 
  1791  1F24                     	;# 
  1792  1F25                     	;# 
  1793  1F26                     	;# 
  1794  1F27                     	;# 
  1795  1F28                     	;# 
  1796  1F29                     	;# 
  1797  1F2A                     	;# 
  1798  1F2B                     	;# 
  1799  1F2C                     	;# 
  1800  1F2D                     	;# 
  1801  1F2E                     	;# 
  1802  1F2F                     	;# 
  1803  1F30                     	;# 
  1804  1F31                     	;# 
  1805  1F32                     	;# 
  1806  1F38                     	;# 
  1807  1F39                     	;# 
  1808  1F3A                     	;# 
  1809  1F3B                     	;# 
  1810  1F3C                     	;# 
  1811  1F3D                     	;# 
  1812  1F3E                     	;# 
  1813  1F3F                     	;# 
  1814  1F40                     	;# 
  1815  1F41                     	;# 
  1816  1F43                     	;# 
  1817  1F44                     	;# 
  1818  1F45                     	;# 
  1819  1F46                     	;# 
  1820  1F47                     	;# 
  1821  1F48                     	;# 
  1822  1F49                     	;# 
  1823  1F4A                     	;# 
  1824  1F4B                     	;# 
  1825  1F4C                     	;# 
  1826  1F4E                     	;# 
  1827  1F4F                     	;# 
  1828  1F50                     	;# 
  1829  1F51                     	;# 
  1830  1F52                     	;# 
  1831  1F53                     	;# 
  1832  1F54                     	;# 
  1833  1F55                     	;# 
  1834  1F56                     	;# 
  1835  1F57                     	;# 
  1836  1F59                     	;# 
  1837  1F5A                     	;# 
  1838  1F5B                     	;# 
  1839  1F5C                     	;# 
  1840  1F5D                     	;# 
  1841  1F61                     	;# 
  1842  1F62                     	;# 
  1843  1F64                     	;# 
  1844  1F65                     	;# 
  1845  1F66                     	;# 
  1846  1F67                     	;# 
  1847  1F68                     	;# 
  1848  1F69                     	;# 
  1849  1F6A                     	;# 
  1850  1F6B                     	;# 
  1851  1F6C                     	;# 
  1852  1F6D                     	;# 
  1853  1FE4                     	;# 
  1854  1FE5                     	;# 
  1855  1FE6                     	;# 
  1856  1FE7                     	;# 
  1857  1FE8                     	;# 
  1858  1FE9                     	;# 
  1859  1FEA                     	;# 
  1860  1FEB                     	;# 
  1861  1FED                     	;# 
  1862  1FEE                     	;# 
  1863  1FEF                     	;# 
  1864  0000                     	;# 
  1865  0001                     	;# 
  1866  0002                     	;# 
  1867  0003                     	;# 
  1868  0004                     	;# 
  1869  0005                     	;# 
  1870  0006                     	;# 
  1871  0007                     	;# 
  1872  0008                     	;# 
  1873  0009                     	;# 
  1874  000A                     	;# 
  1875  000B                     	;# 
  1876  000C                     	;# 
  1877  000D                     	;# 
  1878  000E                     	;# 
  1879  000F                     	;# 
  1880  0010                     	;# 
  1881  0011                     	;# 
  1882  0012                     	;# 
  1883  0013                     	;# 
  1884  0014                     	;# 
  1885  0015                     	;# 
  1886  0016                     	;# 
  1887  0017                     	;# 
  1888  0018                     	;# 
  1889  0019                     	;# 
  1890  001A                     	;# 
  1891  001C                     	;# 
  1892  001C                     	;# 
  1893  001D                     	;# 
  1894  001D                     	;# 
  1895  001E                     	;# 
  1896  001F                     	;# 
  1897  008C                     	;# 
  1898  008C                     	;# 
  1899  008D                     	;# 
  1900  008E                     	;# 
  1901  008E                     	;# 
  1902  008F                     	;# 
  1903  0090                     	;# 
  1904  0090                     	;# 
  1905  0091                     	;# 
  1906  0093                     	;# 
  1907  0094                     	;# 
  1908  0095                     	;# 
  1909  0096                     	;# 
  1910  0097                     	;# 
  1911  0098                     	;# 
  1912  0099                     	;# 
  1913  009A                     	;# 
  1914  009B                     	;# 
  1915  009C                     	;# 
  1916  009D                     	;# 
  1917  009E                     	;# 
  1918  010C                     	;# 
  1919  010D                     	;# 
  1920  010E                     	;# 
  1921  010E                     	;# 
  1922  010F                     	;# 
  1923  0110                     	;# 
  1924  0110                     	;# 
  1925  0111                     	;# 
  1926  0112                     	;# 
  1927  0112                     	;# 
  1928  0113                     	;# 
  1929  0114                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0116                     	;# 
  1934  0117                     	;# 
  1935  0119                     	;# 
  1936  0119                     	;# 
  1937  0119                     	;# 
  1938  011A                     	;# 
  1939  011A                     	;# 
  1940  011A                     	;# 
  1941  011B                     	;# 
  1942  011B                     	;# 
  1943  011B                     	;# 
  1944  011B                     	;# 
  1945  011B                     	;# 
  1946  011C                     	;# 
  1947  011C                     	;# 
  1948  011C                     	;# 
  1949  011D                     	;# 
  1950  011D                     	;# 
  1951  011D                     	;# 
  1952  011E                     	;# 
  1953  011E                     	;# 
  1954  011E                     	;# 
  1955  011F                     	;# 
  1956  011F                     	;# 
  1957  011F                     	;# 
  1958  011F                     	;# 
  1959  011F                     	;# 
  1960  018C                     	;# 
  1961  018D                     	;# 
  1962  018E                     	;# 
  1963  018F                     	;# 
  1964  0190                     	;# 
  1965  0191                     	;# 
  1966  0192                     	;# 
  1967  0196                     	;# 
  1968  0197                     	;# 
  1969  0198                     	;# 
  1970  0199                     	;# 
  1971  019A                     	;# 
  1972  019B                     	;# 
  1973  019C                     	;# 
  1974  020C                     	;# 
  1975  020C                     	;# 
  1976  020D                     	;# 
  1977  020E                     	;# 
  1978  020F                     	;# 
  1979  020F                     	;# 
  1980  0210                     	;# 
  1981  0210                     	;# 
  1982  0211                     	;# 
  1983  0211                     	;# 
  1984  0212                     	;# 
  1985  0212                     	;# 
  1986  0213                     	;# 
  1987  0214                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0216                     	;# 
  1991  0216                     	;# 
  1992  0217                     	;# 
  1993  0217                     	;# 
  1994  0218                     	;# 
  1995  0218                     	;# 
  1996  0219                     	;# 
  1997  021A                     	;# 
  1998  021B                     	;# 
  1999  021B                     	;# 
  2000  021C                     	;# 
  2001  021C                     	;# 
  2002  021D                     	;# 
  2003  021D                     	;# 
  2004  021E                     	;# 
  2005  021F                     	;# 
  2006  028C                     	;# 
  2007  028C                     	;# 
  2008  028D                     	;# 
  2009  028D                     	;# 
  2010  028E                     	;# 
  2011  028F                     	;# 
  2012  0290                     	;# 
  2013  0290                     	;# 
  2014  0291                     	;# 
  2015  0292                     	;# 
  2016  0292                     	;# 
  2017  0293                     	;# 
  2018  0293                     	;# 
  2019  0294                     	;# 
  2020  0295                     	;# 
  2021  0296                     	;# 
  2022  0296                     	;# 
  2023  0297                     	;# 
  2024  0298                     	;# 
  2025  0298                     	;# 
  2026  0299                     	;# 
  2027  0299                     	;# 
  2028  029A                     	;# 
  2029  029B                     	;# 
  2030  029C                     	;# 
  2031  029C                     	;# 
  2032  029D                     	;# 
  2033  030C                     	;# 
  2034  030C                     	;# 
  2035  030D                     	;# 
  2036  030E                     	;# 
  2037  030F                     	;# 
  2038  0310                     	;# 
  2039  0310                     	;# 
  2040  0311                     	;# 
  2041  0312                     	;# 
  2042  0313                     	;# 
  2043  0314                     	;# 
  2044  0314                     	;# 
  2045  0315                     	;# 
  2046  0316                     	;# 
  2047  0317                     	;# 
  2048  0318                     	;# 
  2049  0318                     	;# 
  2050  0319                     	;# 
  2051  031A                     	;# 
  2052  031B                     	;# 
  2053  031C                     	;# 
  2054  031C                     	;# 
  2055  031D                     	;# 
  2056  031E                     	;# 
  2057  031F                     	;# 
  2058  038C                     	;# 
  2059  038C                     	;# 
  2060  038D                     	;# 
  2061  038E                     	;# 
  2062  0390                     	;# 
  2063  0390                     	;# 
  2064  0391                     	;# 
  2065  0392                     	;# 
  2066  040C                     	;# 
  2067  040D                     	;# 
  2068  040E                     	;# 
  2069  040F                     	;# 
  2070  0410                     	;# 
  2071  0411                     	;# 
  2072  0416                     	;# 
  2073  0416                     	;# 
  2074  0417                     	;# 
  2075  0418                     	;# 
  2076  0418                     	;# 
  2077  0419                     	;# 
  2078  041A                     	;# 
  2079  041A                     	;# 
  2080  041B                     	;# 
  2081  041C                     	;# 
  2082  041C                     	;# 
  2083  041D                     	;# 
  2084  041E                     	;# 
  2085  041F                     	;# 
  2086  048C                     	;# 
  2087  048C                     	;# 
  2088  048D                     	;# 
  2089  048E                     	;# 
  2090  048F                     	;# 
  2091  048F                     	;# 
  2092  0490                     	;# 
  2093  0491                     	;# 
  2094  0492                     	;# 
  2095  0492                     	;# 
  2096  0493                     	;# 
  2097  0494                     	;# 
  2098  0495                     	;# 
  2099  0495                     	;# 
  2100  0496                     	;# 
  2101  0497                     	;# 
  2102  0498                     	;# 
  2103  0499                     	;# 
  2104  049A                     	;# 
  2105  049B                     	;# 
  2106  049C                     	;# 
  2107  049D                     	;# 
  2108  050C                     	;# 
  2109  050C                     	;# 
  2110  050D                     	;# 
  2111  050E                     	;# 
  2112  050F                     	;# 
  2113  050F                     	;# 
  2114  0510                     	;# 
  2115  0511                     	;# 
  2116  0512                     	;# 
  2117  0512                     	;# 
  2118  0513                     	;# 
  2119  0514                     	;# 
  2120  0515                     	;# 
  2121  0515                     	;# 
  2122  0516                     	;# 
  2123  0517                     	;# 
  2124  0518                     	;# 
  2125  0519                     	;# 
  2126  051A                     	;# 
  2127  051B                     	;# 
  2128  051C                     	;# 
  2129  051D                     	;# 
  2130  058C                     	;# 
  2131  058C                     	;# 
  2132  058D                     	;# 
  2133  058E                     	;# 
  2134  058F                     	;# 
  2135  058F                     	;# 
  2136  0590                     	;# 
  2137  0591                     	;# 
  2138  0592                     	;# 
  2139  0593                     	;# 
  2140  060C                     	;# 
  2141  060D                     	;# 
  2142  060E                     	;# 
  2143  060F                     	;# 
  2144  0610                     	;# 
  2145  0611                     	;# 
  2146  0612                     	;# 
  2147  0613                     	;# 
  2148  0614                     	;# 
  2149  0616                     	;# 
  2150  0617                     	;# 
  2151  0618                     	;# 
  2152  0619                     	;# 
  2153  061A                     	;# 
  2154  061B                     	;# 
  2155  061C                     	;# 
  2156  061D                     	;# 
  2157  061E                     	;# 
  2158  068C                     	;# 
  2159  068D                     	;# 
  2160  068E                     	;# 
  2161  068F                     	;# 
  2162  0690                     	;# 
  2163  0691                     	;# 
  2164  0692                     	;# 
  2165  0693                     	;# 
  2166  0694                     	;# 
  2167  070C                     	;# 
  2168  070D                     	;# 
  2169  070E                     	;# 
  2170  070F                     	;# 
  2171  0710                     	;# 
  2172  0711                     	;# 
  2173  0712                     	;# 
  2174  0713                     	;# 
  2175  0714                     	;# 
  2176  0716                     	;# 
  2177  0717                     	;# 
  2178  0718                     	;# 
  2179  0719                     	;# 
  2180  071A                     	;# 
  2181  071B                     	;# 
  2182  071C                     	;# 
  2183  071D                     	;# 
  2184  071E                     	;# 
  2185  0796                     	;# 
  2186  0797                     	;# 
  2187  0798                     	;# 
  2188  0799                     	;# 
  2189  079A                     	;# 
  2190  079B                     	;# 
  2191  080C                     	;# 
  2192  080D                     	;# 
  2193  080E                     	;# 
  2194  080F                     	;# 
  2195  0810                     	;# 
  2196  0811                     	;# 
  2197  0812                     	;# 
  2198  0813                     	;# 
  2199  0814                     	;# 
  2200  081A                     	;# 
  2201  081B                     	;# 
  2202  081C                     	;# 
  2203  081D                     	;# 
  2204  081E                     	;# 
  2205  081F                     	;# 
  2206  088C                     	;# 
  2207  088D                     	;# 
  2208  088E                     	;# 
  2209  088F                     	;# 
  2210  0890                     	;# 
  2211  0891                     	;# 
  2212  0892                     	;# 
  2213  0893                     	;# 
  2214  0895                     	;# 
  2215  0896                     	;# 
  2216  0897                     	;# 
  2217  0898                     	;# 
  2218  0899                     	;# 
  2219  089A                     	;# 
  2220  089B                     	;# 
  2221  090C                     	;# 
  2222  090E                     	;# 
  2223  090F                     	;# 
  2224  091F                     	;# 
  2225  098F                     	;# 
  2226  098F                     	;# 
  2227  0990                     	;# 
  2228  0991                     	;# 
  2229  0992                     	;# 
  2230  0993                     	;# 
  2231  0994                     	;# 
  2232  0995                     	;# 
  2233  0996                     	;# 
  2234  0997                     	;# 
  2235  1E0F                     	;# 
  2236  1E10                     	;# 
  2237  1E11                     	;# 
  2238  1E12                     	;# 
  2239  1E13                     	;# 
  2240  1E14                     	;# 
  2241  1E15                     	;# 
  2242  1E16                     	;# 
  2243  1E17                     	;# 
  2244  1E18                     	;# 
  2245  1E19                     	;# 
  2246  1E1A                     	;# 
  2247  1E1B                     	;# 
  2248  1E1C                     	;# 
  2249  1E1D                     	;# 
  2250  1E1E                     	;# 
  2251  1E1F                     	;# 
  2252  1E20                     	;# 
  2253  1E21                     	;# 
  2254  1E22                     	;# 
  2255  1E23                     	;# 
  2256  1E24                     	;# 
  2257  1E25                     	;# 
  2258  1E26                     	;# 
  2259  1E27                     	;# 
  2260  1E28                     	;# 
  2261  1E29                     	;# 
  2262  1E2A                     	;# 
  2263  1E2B                     	;# 
  2264  1E2C                     	;# 
  2265  1E2D                     	;# 
  2266  1E2E                     	;# 
  2267  1E2F                     	;# 
  2268  1E30                     	;# 
  2269  1E31                     	;# 
  2270  1E32                     	;# 
  2271  1E33                     	;# 
  2272  1E34                     	;# 
  2273  1E35                     	;# 
  2274  1E36                     	;# 
  2275  1E37                     	;# 
  2276  1E8F                     	;# 
  2277  1E90                     	;# 
  2278  1E91                     	;# 
  2279  1E92                     	;# 
  2280  1E93                     	;# 
  2281  1E94                     	;# 
  2282  1E95                     	;# 
  2283  1E96                     	;# 
  2284  1E97                     	;# 
  2285  1E9C                     	;# 
  2286  1E9D                     	;# 
  2287  1E9E                     	;# 
  2288  1EA1                     	;# 
  2289  1EA2                     	;# 
  2290  1EA3                     	;# 
  2291  1EA4                     	;# 
  2292  1EA5                     	;# 
  2293  1EA9                     	;# 
  2294  1EAA                     	;# 
  2295  1EAB                     	;# 
  2296  1EAC                     	;# 
  2297  1EB1                     	;# 
  2298  1EB2                     	;# 
  2299  1EB3                     	;# 
  2300  1EB8                     	;# 
  2301  1EB9                     	;# 
  2302  1EBA                     	;# 
  2303  1EBB                     	;# 
  2304  1EBC                     	;# 
  2305  1EBD                     	;# 
  2306  1EBE                     	;# 
  2307  1EC3                     	;# 
  2308  1EC5                     	;# 
  2309  1EC6                     	;# 
  2310  1EC7                     	;# 
  2311  1EC8                     	;# 
  2312  1EC9                     	;# 
  2313  1ECA                     	;# 
  2314  1ECB                     	;# 
  2315  1ECC                     	;# 
  2316  1F10                     	;# 
  2317  1F11                     	;# 
  2318  1F12                     	;# 
  2319  1F13                     	;# 
  2320  1F14                     	;# 
  2321  1F15                     	;# 
  2322  1F16                     	;# 
  2323  1F17                     	;# 
  2324  1F18                     	;# 
  2325  1F19                     	;# 
  2326  1F1A                     	;# 
  2327  1F1B                     	;# 
  2328  1F1C                     	;# 
  2329  1F1D                     	;# 
  2330  1F1E                     	;# 
  2331  1F1F                     	;# 
  2332  1F20                     	;# 
  2333  1F21                     	;# 
  2334  1F22                     	;# 
  2335  1F23                     	;# 
  2336  1F24                     	;# 
  2337  1F25                     	;# 
  2338  1F26                     	;# 
  2339  1F27                     	;# 
  2340  1F28                     	;# 
  2341  1F29                     	;# 
  2342  1F2A                     	;# 
  2343  1F2B                     	;# 
  2344  1F2C                     	;# 
  2345  1F2D                     	;# 
  2346  1F2E                     	;# 
  2347  1F2F                     	;# 
  2348  1F30                     	;# 
  2349  1F31                     	;# 
  2350  1F32                     	;# 
  2351  1F38                     	;# 
  2352  1F39                     	;# 
  2353  1F3A                     	;# 
  2354  1F3B                     	;# 
  2355  1F3C                     	;# 
  2356  1F3D                     	;# 
  2357  1F3E                     	;# 
  2358  1F3F                     	;# 
  2359  1F40                     	;# 
  2360  1F41                     	;# 
  2361  1F43                     	;# 
  2362  1F44                     	;# 
  2363  1F45                     	;# 
  2364  1F46                     	;# 
  2365  1F47                     	;# 
  2366  1F48                     	;# 
  2367  1F49                     	;# 
  2368  1F4A                     	;# 
  2369  1F4B                     	;# 
  2370  1F4C                     	;# 
  2371  1F4E                     	;# 
  2372  1F4F                     	;# 
  2373  1F50                     	;# 
  2374  1F51                     	;# 
  2375  1F52                     	;# 
  2376  1F53                     	;# 
  2377  1F54                     	;# 
  2378  1F55                     	;# 
  2379  1F56                     	;# 
  2380  1F57                     	;# 
  2381  1F59                     	;# 
  2382  1F5A                     	;# 
  2383  1F5B                     	;# 
  2384  1F5C                     	;# 
  2385  1F5D                     	;# 
  2386  1F61                     	;# 
  2387  1F62                     	;# 
  2388  1F64                     	;# 
  2389  1F65                     	;# 
  2390  1F66                     	;# 
  2391  1F67                     	;# 
  2392  1F68                     	;# 
  2393  1F69                     	;# 
  2394  1F6A                     	;# 
  2395  1F6B                     	;# 
  2396  1F6C                     	;# 
  2397  1F6D                     	;# 
  2398  1FE4                     	;# 
  2399  1FE5                     	;# 
  2400  1FE6                     	;# 
  2401  1FE7                     	;# 
  2402  1FE8                     	;# 
  2403  1FE9                     	;# 
  2404  1FEA                     	;# 
  2405  1FEB                     	;# 
  2406  1FED                     	;# 
  2407  1FEE                     	;# 
  2408  1FEF                     	;# 
  2409  0000                     	;# 
  2410  0001                     	;# 
  2411  0002                     	;# 
  2412  0003                     	;# 
  2413  0004                     	;# 
  2414  0005                     	;# 
  2415  0006                     	;# 
  2416  0007                     	;# 
  2417  0008                     	;# 
  2418  0009                     	;# 
  2419  000A                     	;# 
  2420  000B                     	;# 
  2421  000C                     	;# 
  2422  000D                     	;# 
  2423  000E                     	;# 
  2424  000F                     	;# 
  2425  0010                     	;# 
  2426  0011                     	;# 
  2427  0012                     	;# 
  2428  0013                     	;# 
  2429  0014                     	;# 
  2430  0015                     	;# 
  2431  0016                     	;# 
  2432  0017                     	;# 
  2433  0018                     	;# 
  2434  0019                     	;# 
  2435  001A                     	;# 
  2436  001C                     	;# 
  2437  001C                     	;# 
  2438  001D                     	;# 
  2439  001D                     	;# 
  2440  001E                     	;# 
  2441  001F                     	;# 
  2442  008C                     	;# 
  2443  008C                     	;# 
  2444  008D                     	;# 
  2445  008E                     	;# 
  2446  008E                     	;# 
  2447  008F                     	;# 
  2448  0090                     	;# 
  2449  0090                     	;# 
  2450  0091                     	;# 
  2451  0093                     	;# 
  2452  0094                     	;# 
  2453  0095                     	;# 
  2454  0096                     	;# 
  2455  0097                     	;# 
  2456  0098                     	;# 
  2457  0099                     	;# 
  2458  009A                     	;# 
  2459  009B                     	;# 
  2460  009C                     	;# 
  2461  009D                     	;# 
  2462  009E                     	;# 
  2463  010C                     	;# 
  2464  010D                     	;# 
  2465  010E                     	;# 
  2466  010E                     	;# 
  2467  010F                     	;# 
  2468  0110                     	;# 
  2469  0110                     	;# 
  2470  0111                     	;# 
  2471  0112                     	;# 
  2472  0112                     	;# 
  2473  0113                     	;# 
  2474  0114                     	;# 
  2475  0114                     	;# 
  2476  0115                     	;# 
  2477  0116                     	;# 
  2478  0116                     	;# 
  2479  0117                     	;# 
  2480  0119                     	;# 
  2481  0119                     	;# 
  2482  0119                     	;# 
  2483  011A                     	;# 
  2484  011A                     	;# 
  2485  011A                     	;# 
  2486  011B                     	;# 
  2487  011B                     	;# 
  2488  011B                     	;# 
  2489  011B                     	;# 
  2490  011B                     	;# 
  2491  011C                     	;# 
  2492  011C                     	;# 
  2493  011C                     	;# 
  2494  011D                     	;# 
  2495  011D                     	;# 
  2496  011D                     	;# 
  2497  011E                     	;# 
  2498  011E                     	;# 
  2499  011E                     	;# 
  2500  011F                     	;# 
  2501  011F                     	;# 
  2502  011F                     	;# 
  2503  011F                     	;# 
  2504  011F                     	;# 
  2505  018C                     	;# 
  2506  018D                     	;# 
  2507  018E                     	;# 
  2508  018F                     	;# 
  2509  0190                     	;# 
  2510  0191                     	;# 
  2511  0192                     	;# 
  2512  0196                     	;# 
  2513  0197                     	;# 
  2514  0198                     	;# 
  2515  0199                     	;# 
  2516  019A                     	;# 
  2517  019B                     	;# 
  2518  019C                     	;# 
  2519  020C                     	;# 
  2520  020C                     	;# 
  2521  020D                     	;# 
  2522  020E                     	;# 
  2523  020F                     	;# 
  2524  020F                     	;# 
  2525  0210                     	;# 
  2526  0210                     	;# 
  2527  0211                     	;# 
  2528  0211                     	;# 
  2529  0212                     	;# 
  2530  0212                     	;# 
  2531  0213                     	;# 
  2532  0214                     	;# 
  2533  0215                     	;# 
  2534  0215                     	;# 
  2535  0216                     	;# 
  2536  0216                     	;# 
  2537  0217                     	;# 
  2538  0217                     	;# 
  2539  0218                     	;# 
  2540  0218                     	;# 
  2541  0219                     	;# 
  2542  021A                     	;# 
  2543  021B                     	;# 
  2544  021B                     	;# 
  2545  021C                     	;# 
  2546  021C                     	;# 
  2547  021D                     	;# 
  2548  021D                     	;# 
  2549  021E                     	;# 
  2550  021F                     	;# 
  2551  028C                     	;# 
  2552  028C                     	;# 
  2553  028D                     	;# 
  2554  028D                     	;# 
  2555  028E                     	;# 
  2556  028F                     	;# 
  2557  0290                     	;# 
  2558  0290                     	;# 
  2559  0291                     	;# 
  2560  0292                     	;# 
  2561  0292                     	;# 
  2562  0293                     	;# 
  2563  0293                     	;# 
  2564  0294                     	;# 
  2565  0295                     	;# 
  2566  0296                     	;# 
  2567  0296                     	;# 
  2568  0297                     	;# 
  2569  0298                     	;# 
  2570  0298                     	;# 
  2571  0299                     	;# 
  2572  0299                     	;# 
  2573  029A                     	;# 
  2574  029B                     	;# 
  2575  029C                     	;# 
  2576  029C                     	;# 
  2577  029D                     	;# 
  2578  030C                     	;# 
  2579  030C                     	;# 
  2580  030D                     	;# 
  2581  030E                     	;# 
  2582  030F                     	;# 
  2583  0310                     	;# 
  2584  0310                     	;# 
  2585  0311                     	;# 
  2586  0312                     	;# 
  2587  0313                     	;# 
  2588  0314                     	;# 
  2589  0314                     	;# 
  2590  0315                     	;# 
  2591  0316                     	;# 
  2592  0317                     	;# 
  2593  0318                     	;# 
  2594  0318                     	;# 
  2595  0319                     	;# 
  2596  031A                     	;# 
  2597  031B                     	;# 
  2598  031C                     	;# 
  2599  031C                     	;# 
  2600  031D                     	;# 
  2601  031E                     	;# 
  2602  031F                     	;# 
  2603  038C                     	;# 
  2604  038C                     	;# 
  2605  038D                     	;# 
  2606  038E                     	;# 
  2607  0390                     	;# 
  2608  0390                     	;# 
  2609  0391                     	;# 
  2610  0392                     	;# 
  2611  040C                     	;# 
  2612  040D                     	;# 
  2613  040E                     	;# 
  2614  040F                     	;# 
  2615  0410                     	;# 
  2616  0411                     	;# 
  2617  0416                     	;# 
  2618  0416                     	;# 
  2619  0417                     	;# 
  2620  0418                     	;# 
  2621  0418                     	;# 
  2622  0419                     	;# 
  2623  041A                     	;# 
  2624  041A                     	;# 
  2625  041B                     	;# 
  2626  041C                     	;# 
  2627  041C                     	;# 
  2628  041D                     	;# 
  2629  041E                     	;# 
  2630  041F                     	;# 
  2631  048C                     	;# 
  2632  048C                     	;# 
  2633  048D                     	;# 
  2634  048E                     	;# 
  2635  048F                     	;# 
  2636  048F                     	;# 
  2637  0490                     	;# 
  2638  0491                     	;# 
  2639  0492                     	;# 
  2640  0492                     	;# 
  2641  0493                     	;# 
  2642  0494                     	;# 
  2643  0495                     	;# 
  2644  0495                     	;# 
  2645  0496                     	;# 
  2646  0497                     	;# 
  2647  0498                     	;# 
  2648  0499                     	;# 
  2649  049A                     	;# 
  2650  049B                     	;# 
  2651  049C                     	;# 
  2652  049D                     	;# 
  2653  050C                     	;# 
  2654  050C                     	;# 
  2655  050D                     	;# 
  2656  050E                     	;# 
  2657  050F                     	;# 
  2658  050F                     	;# 
  2659  0510                     	;# 
  2660  0511                     	;# 
  2661  0512                     	;# 
  2662  0512                     	;# 
  2663  0513                     	;# 
  2664  0514                     	;# 
  2665  0515                     	;# 
  2666  0515                     	;# 
  2667  0516                     	;# 
  2668  0517                     	;# 
  2669  0518                     	;# 
  2670  0519                     	;# 
  2671  051A                     	;# 
  2672  051B                     	;# 
  2673  051C                     	;# 
  2674  051D                     	;# 
  2675  058C                     	;# 
  2676  058C                     	;# 
  2677  058D                     	;# 
  2678  058E                     	;# 
  2679  058F                     	;# 
  2680  058F                     	;# 
  2681  0590                     	;# 
  2682  0591                     	;# 
  2683  0592                     	;# 
  2684  0593                     	;# 
  2685  060C                     	;# 
  2686  060D                     	;# 
  2687  060E                     	;# 
  2688  060F                     	;# 
  2689  0610                     	;# 
  2690  0611                     	;# 
  2691  0612                     	;# 
  2692  0613                     	;# 
  2693  0614                     	;# 
  2694  0616                     	;# 
  2695  0617                     	;# 
  2696  0618                     	;# 
  2697  0619                     	;# 
  2698  061A                     	;# 
  2699  061B                     	;# 
  2700  061C                     	;# 
  2701  061D                     	;# 
  2702  061E                     	;# 
  2703  068C                     	;# 
  2704  068D                     	;# 
  2705  068E                     	;# 
  2706  068F                     	;# 
  2707  0690                     	;# 
  2708  0691                     	;# 
  2709  0692                     	;# 
  2710  0693                     	;# 
  2711  0694                     	;# 
  2712  070C                     	;# 
  2713  070D                     	;# 
  2714  070E                     	;# 
  2715  070F                     	;# 
  2716  0710                     	;# 
  2717  0711                     	;# 
  2718  0712                     	;# 
  2719  0713                     	;# 
  2720  0714                     	;# 
  2721  0716                     	;# 
  2722  0717                     	;# 
  2723  0718                     	;# 
  2724  0719                     	;# 
  2725  071A                     	;# 
  2726  071B                     	;# 
  2727  071C                     	;# 
  2728  071D                     	;# 
  2729  071E                     	;# 
  2730  0796                     	;# 
  2731  0797                     	;# 
  2732  0798                     	;# 
  2733  0799                     	;# 
  2734  079A                     	;# 
  2735  079B                     	;# 
  2736  080C                     	;# 
  2737  080D                     	;# 
  2738  080E                     	;# 
  2739  080F                     	;# 
  2740  0810                     	;# 
  2741  0811                     	;# 
  2742  0812                     	;# 
  2743  0813                     	;# 
  2744  0814                     	;# 
  2745  081A                     	;# 
  2746  081B                     	;# 
  2747  081C                     	;# 
  2748  081D                     	;# 
  2749  081E                     	;# 
  2750  081F                     	;# 
  2751  088C                     	;# 
  2752  088D                     	;# 
  2753  088E                     	;# 
  2754  088F                     	;# 
  2755  0890                     	;# 
  2756  0891                     	;# 
  2757  0892                     	;# 
  2758  0893                     	;# 
  2759  0895                     	;# 
  2760  0896                     	;# 
  2761  0897                     	;# 
  2762  0898                     	;# 
  2763  0899                     	;# 
  2764  089A                     	;# 
  2765  089B                     	;# 
  2766  090C                     	;# 
  2767  090E                     	;# 
  2768  090F                     	;# 
  2769  091F                     	;# 
  2770  098F                     	;# 
  2771  098F                     	;# 
  2772  0990                     	;# 
  2773  0991                     	;# 
  2774  0992                     	;# 
  2775  0993                     	;# 
  2776  0994                     	;# 
  2777  0995                     	;# 
  2778  0996                     	;# 
  2779  0997                     	;# 
  2780  1E0F                     	;# 
  2781  1E10                     	;# 
  2782  1E11                     	;# 
  2783  1E12                     	;# 
  2784  1E13                     	;# 
  2785  1E14                     	;# 
  2786  1E15                     	;# 
  2787  1E16                     	;# 
  2788  1E17                     	;# 
  2789  1E18                     	;# 
  2790  1E19                     	;# 
  2791  1E1A                     	;# 
  2792  1E1B                     	;# 
  2793  1E1C                     	;# 
  2794  1E1D                     	;# 
  2795  1E1E                     	;# 
  2796  1E1F                     	;# 
  2797  1E20                     	;# 
  2798  1E21                     	;# 
  2799  1E22                     	;# 
  2800  1E23                     	;# 
  2801  1E24                     	;# 
  2802  1E25                     	;# 
  2803  1E26                     	;# 
  2804  1E27                     	;# 
  2805  1E28                     	;# 
  2806  1E29                     	;# 
  2807  1E2A                     	;# 
  2808  1E2B                     	;# 
  2809  1E2C                     	;# 
  2810  1E2D                     	;# 
  2811  1E2E                     	;# 
  2812  1E2F                     	;# 
  2813  1E30                     	;# 
  2814  1E31                     	;# 
  2815  1E32                     	;# 
  2816  1E33                     	;# 
  2817  1E34                     	;# 
  2818  1E35                     	;# 
  2819  1E36                     	;# 
  2820  1E37                     	;# 
  2821  1E8F                     	;# 
  2822  1E90                     	;# 
  2823  1E91                     	;# 
  2824  1E92                     	;# 
  2825  1E93                     	;# 
  2826  1E94                     	;# 
  2827  1E95                     	;# 
  2828  1E96                     	;# 
  2829  1E97                     	;# 
  2830  1E9C                     	;# 
  2831  1E9D                     	;# 
  2832  1E9E                     	;# 
  2833  1EA1                     	;# 
  2834  1EA2                     	;# 
  2835  1EA3                     	;# 
  2836  1EA4                     	;# 
  2837  1EA5                     	;# 
  2838  1EA9                     	;# 
  2839  1EAA                     	;# 
  2840  1EAB                     	;# 
  2841  1EAC                     	;# 
  2842  1EB1                     	;# 
  2843  1EB2                     	;# 
  2844  1EB3                     	;# 
  2845  1EB8                     	;# 
  2846  1EB9                     	;# 
  2847  1EBA                     	;# 
  2848  1EBB                     	;# 
  2849  1EBC                     	;# 
  2850  1EBD                     	;# 
  2851  1EBE                     	;# 
  2852  1EC3                     	;# 
  2853  1EC5                     	;# 
  2854  1EC6                     	;# 
  2855  1EC7                     	;# 
  2856  1EC8                     	;# 
  2857  1EC9                     	;# 
  2858  1ECA                     	;# 
  2859  1ECB                     	;# 
  2860  1ECC                     	;# 
  2861  1F10                     	;# 
  2862  1F11                     	;# 
  2863  1F12                     	;# 
  2864  1F13                     	;# 
  2865  1F14                     	;# 
  2866  1F15                     	;# 
  2867  1F16                     	;# 
  2868  1F17                     	;# 
  2869  1F18                     	;# 
  2870  1F19                     	;# 
  2871  1F1A                     	;# 
  2872  1F1B                     	;# 
  2873  1F1C                     	;# 
  2874  1F1D                     	;# 
  2875  1F1E                     	;# 
  2876  1F1F                     	;# 
  2877  1F20                     	;# 
  2878  1F21                     	;# 
  2879  1F22                     	;# 
  2880  1F23                     	;# 
  2881  1F24                     	;# 
  2882  1F25                     	;# 
  2883  1F26                     	;# 
  2884  1F27                     	;# 
  2885  1F28                     	;# 
  2886  1F29                     	;# 
  2887  1F2A                     	;# 
  2888  1F2B                     	;# 
  2889  1F2C                     	;# 
  2890  1F2D                     	;# 
  2891  1F2E                     	;# 
  2892  1F2F                     	;# 
  2893  1F30                     	;# 
  2894  1F31                     	;# 
  2895  1F32                     	;# 
  2896  1F38                     	;# 
  2897  1F39                     	;# 
  2898  1F3A                     	;# 
  2899  1F3B                     	;# 
  2900  1F3C                     	;# 
  2901  1F3D                     	;# 
  2902  1F3E                     	;# 
  2903  1F3F                     	;# 
  2904  1F40                     	;# 
  2905  1F41                     	;# 
  2906  1F43                     	;# 
  2907  1F44                     	;# 
  2908  1F45                     	;# 
  2909  1F46                     	;# 
  2910  1F47                     	;# 
  2911  1F48                     	;# 
  2912  1F49                     	;# 
  2913  1F4A                     	;# 
  2914  1F4B                     	;# 
  2915  1F4C                     	;# 
  2916  1F4E                     	;# 
  2917  1F4F                     	;# 
  2918  1F50                     	;# 
  2919  1F51                     	;# 
  2920  1F52                     	;# 
  2921  1F53                     	;# 
  2922  1F54                     	;# 
  2923  1F55                     	;# 
  2924  1F56                     	;# 
  2925  1F57                     	;# 
  2926  1F59                     	;# 
  2927  1F5A                     	;# 
  2928  1F5B                     	;# 
  2929  1F5C                     	;# 
  2930  1F5D                     	;# 
  2931  1F61                     	;# 
  2932  1F62                     	;# 
  2933  1F64                     	;# 
  2934  1F65                     	;# 
  2935  1F66                     	;# 
  2936  1F67                     	;# 
  2937  1F68                     	;# 
  2938  1F69                     	;# 
  2939  1F6A                     	;# 
  2940  1F6B                     	;# 
  2941  1F6C                     	;# 
  2942  1F6D                     	;# 
  2943  1FE4                     	;# 
  2944  1FE5                     	;# 
  2945  1FE6                     	;# 
  2946  1FE7                     	;# 
  2947  1FE8                     	;# 
  2948  1FE9                     	;# 
  2949  1FEA                     	;# 
  2950  1FEB                     	;# 
  2951  1FED                     	;# 
  2952  1FEE                     	;# 
  2953  1FEF                     	;# 
  2954  0000                     	;# 
  2955  0001                     	;# 
  2956  0002                     	;# 
  2957  0003                     	;# 
  2958  0004                     	;# 
  2959  0005                     	;# 
  2960  0006                     	;# 
  2961  0007                     	;# 
  2962  0008                     	;# 
  2963  0009                     	;# 
  2964  000A                     	;# 
  2965  000B                     	;# 
  2966  000C                     	;# 
  2967  000D                     	;# 
  2968  000E                     	;# 
  2969  000F                     	;# 
  2970  0010                     	;# 
  2971  0011                     	;# 
  2972  0012                     	;# 
  2973  0013                     	;# 
  2974  0014                     	;# 
  2975  0015                     	;# 
  2976  0016                     	;# 
  2977  0017                     	;# 
  2978  0018                     	;# 
  2979  0019                     	;# 
  2980  001A                     	;# 
  2981  001C                     	;# 
  2982  001C                     	;# 
  2983  001D                     	;# 
  2984  001D                     	;# 
  2985  001E                     	;# 
  2986  001F                     	;# 
  2987  008C                     	;# 
  2988  008C                     	;# 
  2989  008D                     	;# 
  2990  008E                     	;# 
  2991  008E                     	;# 
  2992  008F                     	;# 
  2993  0090                     	;# 
  2994  0090                     	;# 
  2995  0091                     	;# 
  2996  0093                     	;# 
  2997  0094                     	;# 
  2998  0095                     	;# 
  2999  0096                     	;# 
  3000  0097                     	;# 
  3001  0098                     	;# 
  3002  0099                     	;# 
  3003  009A                     	;# 
  3004  009B                     	;# 
  3005  009C                     	;# 
  3006  009D                     	;# 
  3007  009E                     	;# 
  3008  010C                     	;# 
  3009  010D                     	;# 
  3010  010E                     	;# 
  3011  010E                     	;# 
  3012  010F                     	;# 
  3013  0110                     	;# 
  3014  0110                     	;# 
  3015  0111                     	;# 
  3016  0112                     	;# 
  3017  0112                     	;# 
  3018  0113                     	;# 
  3019  0114                     	;# 
  3020  0114                     	;# 
  3021  0115                     	;# 
  3022  0116                     	;# 
  3023  0116                     	;# 
  3024  0117                     	;# 
  3025  0119                     	;# 
  3026  0119                     	;# 
  3027  0119                     	;# 
  3028  011A                     	;# 
  3029  011A                     	;# 
  3030  011A                     	;# 
  3031  011B                     	;# 
  3032  011B                     	;# 
  3033  011B                     	;# 
  3034  011B                     	;# 
  3035  011B                     	;# 
  3036  011C                     	;# 
  3037  011C                     	;# 
  3038  011C                     	;# 
  3039  011D                     	;# 
  3040  011D                     	;# 
  3041  011D                     	;# 
  3042  011E                     	;# 
  3043  011E                     	;# 
  3044  011E                     	;# 
  3045  011F                     	;# 
  3046  011F                     	;# 
  3047  011F                     	;# 
  3048  011F                     	;# 
  3049  011F                     	;# 
  3050  018C                     	;# 
  3051  018D                     	;# 
  3052  018E                     	;# 
  3053  018F                     	;# 
  3054  0190                     	;# 
  3055  0191                     	;# 
  3056  0192                     	;# 
  3057  0196                     	;# 
  3058  0197                     	;# 
  3059  0198                     	;# 
  3060  0199                     	;# 
  3061  019A                     	;# 
  3062  019B                     	;# 
  3063  019C                     	;# 
  3064  020C                     	;# 
  3065  020C                     	;# 
  3066  020D                     	;# 
  3067  020E                     	;# 
  3068  020F                     	;# 
  3069  020F                     	;# 
  3070  0210                     	;# 
  3071  0210                     	;# 
  3072  0211                     	;# 
  3073  0211                     	;# 
  3074  0212                     	;# 
  3075  0212                     	;# 
  3076  0213                     	;# 
  3077  0214                     	;# 
  3078  0215                     	;# 
  3079  0215                     	;# 
  3080  0216                     	;# 
  3081  0216                     	;# 
  3082  0217                     	;# 
  3083  0217                     	;# 
  3084  0218                     	;# 
  3085  0218                     	;# 
  3086  0219                     	;# 
  3087  021A                     	;# 
  3088  021B                     	;# 
  3089  021B                     	;# 
  3090  021C                     	;# 
  3091  021C                     	;# 
  3092  021D                     	;# 
  3093  021D                     	;# 
  3094  021E                     	;# 
  3095  021F                     	;# 
  3096  028C                     	;# 
  3097  028C                     	;# 
  3098  028D                     	;# 
  3099  028D                     	;# 
  3100  028E                     	;# 
  3101  028F                     	;# 
  3102  0290                     	;# 
  3103  0290                     	;# 
  3104  0291                     	;# 
  3105  0292                     	;# 
  3106  0292                     	;# 
  3107  0293                     	;# 
  3108  0293                     	;# 
  3109  0294                     	;# 
  3110  0295                     	;# 
  3111  0296                     	;# 
  3112  0296                     	;# 
  3113  0297                     	;# 
  3114  0298                     	;# 
  3115  0298                     	;# 
  3116  0299                     	;# 
  3117  0299                     	;# 
  3118  029A                     	;# 
  3119  029B                     	;# 
  3120  029C                     	;# 
  3121  029C                     	;# 
  3122  029D                     	;# 
  3123  030C                     	;# 
  3124  030C                     	;# 
  3125  030D                     	;# 
  3126  030E                     	;# 
  3127  030F                     	;# 
  3128  0310                     	;# 
  3129  0310                     	;# 
  3130  0311                     	;# 
  3131  0312                     	;# 
  3132  0313                     	;# 
  3133  0314                     	;# 
  3134  0314                     	;# 
  3135  0315                     	;# 
  3136  0316                     	;# 
  3137  0317                     	;# 
  3138  0318                     	;# 
  3139  0318                     	;# 
  3140  0319                     	;# 
  3141  031A                     	;# 
  3142  031B                     	;# 
  3143  031C                     	;# 
  3144  031C                     	;# 
  3145  031D                     	;# 
  3146  031E                     	;# 
  3147  031F                     	;# 
  3148  038C                     	;# 
  3149  038C                     	;# 
  3150  038D                     	;# 
  3151  038E                     	;# 
  3152  0390                     	;# 
  3153  0390                     	;# 
  3154  0391                     	;# 
  3155  0392                     	;# 
  3156  040C                     	;# 
  3157  040D                     	;# 
  3158  040E                     	;# 
  3159  040F                     	;# 
  3160  0410                     	;# 
  3161  0411                     	;# 
  3162  0416                     	;# 
  3163  0416                     	;# 
  3164  0417                     	;# 
  3165  0418                     	;# 
  3166  0418                     	;# 
  3167  0419                     	;# 
  3168  041A                     	;# 
  3169  041A                     	;# 
  3170  041B                     	;# 
  3171  041C                     	;# 
  3172  041C                     	;# 
  3173  041D                     	;# 
  3174  041E                     	;# 
  3175  041F                     	;# 
  3176  048C                     	;# 
  3177  048C                     	;# 
  3178  048D                     	;# 
  3179  048E                     	;# 
  3180  048F                     	;# 
  3181  048F                     	;# 
  3182  0490                     	;# 
  3183  0491                     	;# 
  3184  0492                     	;# 
  3185  0492                     	;# 
  3186  0493                     	;# 
  3187  0494                     	;# 
  3188  0495                     	;# 
  3189  0495                     	;# 
  3190  0496                     	;# 
  3191  0497                     	;# 
  3192  0498                     	;# 
  3193  0499                     	;# 
  3194  049A                     	;# 
  3195  049B                     	;# 
  3196  049C                     	;# 
  3197  049D                     	;# 
  3198  050C                     	;# 
  3199  050C                     	;# 
  3200  050D                     	;# 
  3201  050E                     	;# 
  3202  050F                     	;# 
  3203  050F                     	;# 
  3204  0510                     	;# 
  3205  0511                     	;# 
  3206  0512                     	;# 
  3207  0512                     	;# 
  3208  0513                     	;# 
  3209  0514                     	;# 
  3210  0515                     	;# 
  3211  0515                     	;# 
  3212  0516                     	;# 
  3213  0517                     	;# 
  3214  0518                     	;# 
  3215  0519                     	;# 
  3216  051A                     	;# 
  3217  051B                     	;# 
  3218  051C                     	;# 
  3219  051D                     	;# 
  3220  058C                     	;# 
  3221  058C                     	;# 
  3222  058D                     	;# 
  3223  058E                     	;# 
  3224  058F                     	;# 
  3225  058F                     	;# 
  3226  0590                     	;# 
  3227  0591                     	;# 
  3228  0592                     	;# 
  3229  0593                     	;# 
  3230  060C                     	;# 
  3231  060D                     	;# 
  3232  060E                     	;# 
  3233  060F                     	;# 
  3234  0610                     	;# 
  3235  0611                     	;# 
  3236  0612                     	;# 
  3237  0613                     	;# 
  3238  0614                     	;# 
  3239  0616                     	;# 
  3240  0617                     	;# 
  3241  0618                     	;# 
  3242  0619                     	;# 
  3243  061A                     	;# 
  3244  061B                     	;# 
  3245  061C                     	;# 
  3246  061D                     	;# 
  3247  061E                     	;# 
  3248  068C                     	;# 
  3249  068D                     	;# 
  3250  068E                     	;# 
  3251  068F                     	;# 
  3252  0690                     	;# 
  3253  0691                     	;# 
  3254  0692                     	;# 
  3255  0693                     	;# 
  3256  0694                     	;# 
  3257  070C                     	;# 
  3258  070D                     	;# 
  3259  070E                     	;# 
  3260  070F                     	;# 
  3261  0710                     	;# 
  3262  0711                     	;# 
  3263  0712                     	;# 
  3264  0713                     	;# 
  3265  0714                     	;# 
  3266  0716                     	;# 
  3267  0717                     	;# 
  3268  0718                     	;# 
  3269  0719                     	;# 
  3270  071A                     	;# 
  3271  071B                     	;# 
  3272  071C                     	;# 
  3273  071D                     	;# 
  3274  071E                     	;# 
  3275  0796                     	;# 
  3276  0797                     	;# 
  3277  0798                     	;# 
  3278  0799                     	;# 
  3279  079A                     	;# 
  3280  079B                     	;# 
  3281  080C                     	;# 
  3282  080D                     	;# 
  3283  080E                     	;# 
  3284  080F                     	;# 
  3285  0810                     	;# 
  3286  0811                     	;# 
  3287  0812                     	;# 
  3288  0813                     	;# 
  3289  0814                     	;# 
  3290  081A                     	;# 
  3291  081B                     	;# 
  3292  081C                     	;# 
  3293  081D                     	;# 
  3294  081E                     	;# 
  3295  081F                     	;# 
  3296  088C                     	;# 
  3297  088D                     	;# 
  3298  088E                     	;# 
  3299  088F                     	;# 
  3300  0890                     	;# 
  3301  0891                     	;# 
  3302  0892                     	;# 
  3303  0893                     	;# 
  3304  0895                     	;# 
  3305  0896                     	;# 
  3306  0897                     	;# 
  3307  0898                     	;# 
  3308  0899                     	;# 
  3309  089A                     	;# 
  3310  089B                     	;# 
  3311  090C                     	;# 
  3312  090E                     	;# 
  3313  090F                     	;# 
  3314  091F                     	;# 
  3315  098F                     	;# 
  3316  098F                     	;# 
  3317  0990                     	;# 
  3318  0991                     	;# 
  3319  0992                     	;# 
  3320  0993                     	;# 
  3321  0994                     	;# 
  3322  0995                     	;# 
  3323  0996                     	;# 
  3324  0997                     	;# 
  3325  1E0F                     	;# 
  3326  1E10                     	;# 
  3327  1E11                     	;# 
  3328  1E12                     	;# 
  3329  1E13                     	;# 
  3330  1E14                     	;# 
  3331  1E15                     	;# 
  3332  1E16                     	;# 
  3333  1E17                     	;# 
  3334  1E18                     	;# 
  3335  1E19                     	;# 
  3336  1E1A                     	;# 
  3337  1E1B                     	;# 
  3338  1E1C                     	;# 
  3339  1E1D                     	;# 
  3340  1E1E                     	;# 
  3341  1E1F                     	;# 
  3342  1E20                     	;# 
  3343  1E21                     	;# 
  3344  1E22                     	;# 
  3345  1E23                     	;# 
  3346  1E24                     	;# 
  3347  1E25                     	;# 
  3348  1E26                     	;# 
  3349  1E27                     	;# 
  3350  1E28                     	;# 
  3351  1E29                     	;# 
  3352  1E2A                     	;# 
  3353  1E2B                     	;# 
  3354  1E2C                     	;# 
  3355  1E2D                     	;# 
  3356  1E2E                     	;# 
  3357  1E2F                     	;# 
  3358  1E30                     	;# 
  3359  1E31                     	;# 
  3360  1E32                     	;# 
  3361  1E33                     	;# 
  3362  1E34                     	;# 
  3363  1E35                     	;# 
  3364  1E36                     	;# 
  3365  1E37                     	;# 
  3366  1E8F                     	;# 
  3367  1E90                     	;# 
  3368  1E91                     	;# 
  3369  1E92                     	;# 
  3370  1E93                     	;# 
  3371  1E94                     	;# 
  3372  1E95                     	;# 
  3373  1E96                     	;# 
  3374  1E97                     	;# 
  3375  1E9C                     	;# 
  3376  1E9D                     	;# 
  3377  1E9E                     	;# 
  3378  1EA1                     	;# 
  3379  1EA2                     	;# 
  3380  1EA3                     	;# 
  3381  1EA4                     	;# 
  3382  1EA5                     	;# 
  3383  1EA9                     	;# 
  3384  1EAA                     	;# 
  3385  1EAB                     	;# 
  3386  1EAC                     	;# 
  3387  1EB1                     	;# 
  3388  1EB2                     	;# 
  3389  1EB3                     	;# 
  3390  1EB8                     	;# 
  3391  1EB9                     	;# 
  3392  1EBA                     	;# 
  3393  1EBB                     	;# 
  3394  1EBC                     	;# 
  3395  1EBD                     	;# 
  3396  1EBE                     	;# 
  3397  1EC3                     	;# 
  3398  1EC5                     	;# 
  3399  1EC6                     	;# 
  3400  1EC7                     	;# 
  3401  1EC8                     	;# 
  3402  1EC9                     	;# 
  3403  1ECA                     	;# 
  3404  1ECB                     	;# 
  3405  1ECC                     	;# 
  3406  1F10                     	;# 
  3407  1F11                     	;# 
  3408  1F12                     	;# 
  3409  1F13                     	;# 
  3410  1F14                     	;# 
  3411  1F15                     	;# 
  3412  1F16                     	;# 
  3413  1F17                     	;# 
  3414  1F18                     	;# 
  3415  1F19                     	;# 
  3416  1F1A                     	;# 
  3417  1F1B                     	;# 
  3418  1F1C                     	;# 
  3419  1F1D                     	;# 
  3420  1F1E                     	;# 
  3421  1F1F                     	;# 
  3422  1F20                     	;# 
  3423  1F21                     	;# 
  3424  1F22                     	;# 
  3425  1F23                     	;# 
  3426  1F24                     	;# 
  3427  1F25                     	;# 
  3428  1F26                     	;# 
  3429  1F27                     	;# 
  3430  1F28                     	;# 
  3431  1F29                     	;# 
  3432  1F2A                     	;# 
  3433  1F2B                     	;# 
  3434  1F2C                     	;# 
  3435  1F2D                     	;# 
  3436  1F2E                     	;# 
  3437  1F2F                     	;# 
  3438  1F30                     	;# 
  3439  1F31                     	;# 
  3440  1F32                     	;# 
  3441  1F38                     	;# 
  3442  1F39                     	;# 
  3443  1F3A                     	;# 
  3444  1F3B                     	;# 
  3445  1F3C                     	;# 
  3446  1F3D                     	;# 
  3447  1F3E                     	;# 
  3448  1F3F                     	;# 
  3449  1F40                     	;# 
  3450  1F41                     	;# 
  3451  1F43                     	;# 
  3452  1F44                     	;# 
  3453  1F45                     	;# 
  3454  1F46                     	;# 
  3455  1F47                     	;# 
  3456  1F48                     	;# 
  3457  1F49                     	;# 
  3458  1F4A                     	;# 
  3459  1F4B                     	;# 
  3460  1F4C                     	;# 
  3461  1F4E                     	;# 
  3462  1F4F                     	;# 
  3463  1F50                     	;# 
  3464  1F51                     	;# 
  3465  1F52                     	;# 
  3466  1F53                     	;# 
  3467  1F54                     	;# 
  3468  1F55                     	;# 
  3469  1F56                     	;# 
  3470  1F57                     	;# 
  3471  1F59                     	;# 
  3472  1F5A                     	;# 
  3473  1F5B                     	;# 
  3474  1F5C                     	;# 
  3475  1F5D                     	;# 
  3476  1F61                     	;# 
  3477  1F62                     	;# 
  3478  1F64                     	;# 
  3479  1F65                     	;# 
  3480  1F66                     	;# 
  3481  1F67                     	;# 
  3482  1F68                     	;# 
  3483  1F69                     	;# 
  3484  1F6A                     	;# 
  3485  1F6B                     	;# 
  3486  1F6C                     	;# 
  3487  1F6D                     	;# 
  3488  1FE4                     	;# 
  3489  1FE5                     	;# 
  3490  1FE6                     	;# 
  3491  1FE7                     	;# 
  3492  1FE8                     	;# 
  3493  1FE9                     	;# 
  3494  1FEA                     	;# 
  3495  1FEB                     	;# 
  3496  1FED                     	;# 
  3497  1FEE                     	;# 
  3498  1FEF                     	;# 
  3499  0000                     	;# 
  3500  0001                     	;# 
  3501  0002                     	;# 
  3502  0003                     	;# 
  3503  0004                     	;# 
  3504  0005                     	;# 
  3505  0006                     	;# 
  3506  0007                     	;# 
  3507  0008                     	;# 
  3508  0009                     	;# 
  3509  000A                     	;# 
  3510  000B                     	;# 
  3511  000C                     	;# 
  3512  000D                     	;# 
  3513  000E                     	;# 
  3514  000F                     	;# 
  3515  0010                     	;# 
  3516  0011                     	;# 
  3517  0012                     	;# 
  3518  0013                     	;# 
  3519  0014                     	;# 
  3520  0015                     	;# 
  3521  0016                     	;# 
  3522  0017                     	;# 
  3523  0018                     	;# 
  3524  0019                     	;# 
  3525  001A                     	;# 
  3526  001C                     	;# 
  3527  001C                     	;# 
  3528  001D                     	;# 
  3529  001D                     	;# 
  3530  001E                     	;# 
  3531  001F                     	;# 
  3532  008C                     	;# 
  3533  008C                     	;# 
  3534  008D                     	;# 
  3535  008E                     	;# 
  3536  008E                     	;# 
  3537  008F                     	;# 
  3538  0090                     	;# 
  3539  0090                     	;# 
  3540  0091                     	;# 
  3541  0093                     	;# 
  3542  0094                     	;# 
  3543  0095                     	;# 
  3544  0096                     	;# 
  3545  0097                     	;# 
  3546  0098                     	;# 
  3547  0099                     	;# 
  3548  009A                     	;# 
  3549  009B                     	;# 
  3550  009C                     	;# 
  3551  009D                     	;# 
  3552  009E                     	;# 
  3553  010C                     	;# 
  3554  010D                     	;# 
  3555  010E                     	;# 
  3556  010E                     	;# 
  3557  010F                     	;# 
  3558  0110                     	;# 
  3559  0110                     	;# 
  3560  0111                     	;# 
  3561  0112                     	;# 
  3562  0112                     	;# 
  3563  0113                     	;# 
  3564  0114                     	;# 
  3565  0114                     	;# 
  3566  0115                     	;# 
  3567  0116                     	;# 
  3568  0116                     	;# 
  3569  0117                     	;# 
  3570  0119                     	;# 
  3571  0119                     	;# 
  3572  0119                     	;# 
  3573  011A                     	;# 
  3574  011A                     	;# 
  3575  011A                     	;# 
  3576  011B                     	;# 
  3577  011B                     	;# 
  3578  011B                     	;# 
  3579  011B                     	;# 
  3580  011B                     	;# 
  3581  011C                     	;# 
  3582  011C                     	;# 
  3583  011C                     	;# 
  3584  011D                     	;# 
  3585  011D                     	;# 
  3586  011D                     	;# 
  3587  011E                     	;# 
  3588  011E                     	;# 
  3589  011E                     	;# 
  3590  011F                     	;# 
  3591  011F                     	;# 
  3592  011F                     	;# 
  3593  011F                     	;# 
  3594  011F                     	;# 
  3595  018C                     	;# 
  3596  018D                     	;# 
  3597  018E                     	;# 
  3598  018F                     	;# 
  3599  0190                     	;# 
  3600  0191                     	;# 
  3601  0192                     	;# 
  3602  0196                     	;# 
  3603  0197                     	;# 
  3604  0198                     	;# 
  3605  0199                     	;# 
  3606  019A                     	;# 
  3607  019B                     	;# 
  3608  019C                     	;# 
  3609  020C                     	;# 
  3610  020C                     	;# 
  3611  020D                     	;# 
  3612  020E                     	;# 
  3613  020F                     	;# 
  3614  020F                     	;# 
  3615  0210                     	;# 
  3616  0210                     	;# 
  3617  0211                     	;# 
  3618  0211                     	;# 
  3619  0212                     	;# 
  3620  0212                     	;# 
  3621  0213                     	;# 
  3622  0214                     	;# 
  3623  0215                     	;# 
  3624  0215                     	;# 
  3625  0216                     	;# 
  3626  0216                     	;# 
  3627  0217                     	;# 
  3628  0217                     	;# 
  3629  0218                     	;# 
  3630  0218                     	;# 
  3631  0219                     	;# 
  3632  021A                     	;# 
  3633  021B                     	;# 
  3634  021B                     	;# 
  3635  021C                     	;# 
  3636  021C                     	;# 
  3637  021D                     	;# 
  3638  021D                     	;# 
  3639  021E                     	;# 
  3640  021F                     	;# 
  3641  028C                     	;# 
  3642  028C                     	;# 
  3643  028D                     	;# 
  3644  028D                     	;# 
  3645  028E                     	;# 
  3646  028F                     	;# 
  3647  0290                     	;# 
  3648  0290                     	;# 
  3649  0291                     	;# 
  3650  0292                     	;# 
  3651  0292                     	;# 
  3652  0293                     	;# 
  3653  0293                     	;# 
  3654  0294                     	;# 
  3655  0295                     	;# 
  3656  0296                     	;# 
  3657  0296                     	;# 
  3658  0297                     	;# 
  3659  0298                     	;# 
  3660  0298                     	;# 
  3661  0299                     	;# 
  3662  0299                     	;# 
  3663  029A                     	;# 
  3664  029B                     	;# 
  3665  029C                     	;# 
  3666  029C                     	;# 
  3667  029D                     	;# 
  3668  030C                     	;# 
  3669  030C                     	;# 
  3670  030D                     	;# 
  3671  030E                     	;# 
  3672  030F                     	;# 
  3673  0310                     	;# 
  3674  0310                     	;# 
  3675  0311                     	;# 
  3676  0312                     	;# 
  3677  0313                     	;# 
  3678  0314                     	;# 
  3679  0314                     	;# 
  3680  0315                     	;# 
  3681  0316                     	;# 
  3682  0317                     	;# 
  3683  0318                     	;# 
  3684  0318                     	;# 
  3685  0319                     	;# 
  3686  031A                     	;# 
  3687  031B                     	;# 
  3688  031C                     	;# 
  3689  031C                     	;# 
  3690  031D                     	;# 
  3691  031E                     	;# 
  3692  031F                     	;# 
  3693  038C                     	;# 
  3694  038C                     	;# 
  3695  038D                     	;# 
  3696  038E                     	;# 
  3697  0390                     	;# 
  3698  0390                     	;# 
  3699  0391                     	;# 
  3700  0392                     	;# 
  3701  040C                     	;# 
  3702  040D                     	;# 
  3703  040E                     	;# 
  3704  040F                     	;# 
  3705  0410                     	;# 
  3706  0411                     	;# 
  3707  0416                     	;# 
  3708  0416                     	;# 
  3709  0417                     	;# 
  3710  0418                     	;# 
  3711  0418                     	;# 
  3712  0419                     	;# 
  3713  041A                     	;# 
  3714  041A                     	;# 
  3715  041B                     	;# 
  3716  041C                     	;# 
  3717  041C                     	;# 
  3718  041D                     	;# 
  3719  041E                     	;# 
  3720  041F                     	;# 
  3721  048C                     	;# 
  3722  048C                     	;# 
  3723  048D                     	;# 
  3724  048E                     	;# 
  3725  048F                     	;# 
  3726  048F                     	;# 
  3727  0490                     	;# 
  3728  0491                     	;# 
  3729  0492                     	;# 
  3730  0492                     	;# 
  3731  0493                     	;# 
  3732  0494                     	;# 
  3733  0495                     	;# 
  3734  0495                     	;# 
  3735  0496                     	;# 
  3736  0497                     	;# 
  3737  0498                     	;# 
  3738  0499                     	;# 
  3739  049A                     	;# 
  3740  049B                     	;# 
  3741  049C                     	;# 
  3742  049D                     	;# 
  3743  050C                     	;# 
  3744  050C                     	;# 
  3745  050D                     	;# 
  3746  050E                     	;# 
  3747  050F                     	;# 
  3748  050F                     	;# 
  3749  0510                     	;# 
  3750  0511                     	;# 
  3751  0512                     	;# 
  3752  0512                     	;# 
  3753  0513                     	;# 
  3754  0514                     	;# 
  3755  0515                     	;# 
  3756  0515                     	;# 
  3757  0516                     	;# 
  3758  0517                     	;# 
  3759  0518                     	;# 
  3760  0519                     	;# 
  3761  051A                     	;# 
  3762  051B                     	;# 
  3763  051C                     	;# 
  3764  051D                     	;# 
  3765  058C                     	;# 
  3766  058C                     	;# 
  3767  058D                     	;# 
  3768  058E                     	;# 
  3769  058F                     	;# 
  3770  058F                     	;# 
  3771  0590                     	;# 
  3772  0591                     	;# 
  3773  0592                     	;# 
  3774  0593                     	;# 
  3775  060C                     	;# 
  3776  060D                     	;# 
  3777  060E                     	;# 
  3778  060F                     	;# 
  3779  0610                     	;# 
  3780  0611                     	;# 
  3781  0612                     	;# 
  3782  0613                     	;# 
  3783  0614                     	;# 
  3784  0616                     	;# 
  3785  0617                     	;# 
  3786  0618                     	;# 
  3787  0619                     	;# 
  3788  061A                     	;# 
  3789  061B                     	;# 
  3790  061C                     	;# 
  3791  061D                     	;# 
  3792  061E                     	;# 
  3793  068C                     	;# 
  3794  068D                     	;# 
  3795  068E                     	;# 
  3796  068F                     	;# 
  3797  0690                     	;# 
  3798  0691                     	;# 
  3799  0692                     	;# 
  3800  0693                     	;# 
  3801  0694                     	;# 
  3802  070C                     	;# 
  3803  070D                     	;# 
  3804  070E                     	;# 
  3805  070F                     	;# 
  3806  0710                     	;# 
  3807  0711                     	;# 
  3808  0712                     	;# 
  3809  0713                     	;# 
  3810  0714                     	;# 
  3811  0716                     	;# 
  3812  0717                     	;# 
  3813  0718                     	;# 
  3814  0719                     	;# 
  3815  071A                     	;# 
  3816  071B                     	;# 
  3817  071C                     	;# 
  3818  071D                     	;# 
  3819  071E                     	;# 
  3820  0796                     	;# 
  3821  0797                     	;# 
  3822  0798                     	;# 
  3823  0799                     	;# 
  3824  079A                     	;# 
  3825  079B                     	;# 
  3826  080C                     	;# 
  3827  080D                     	;# 
  3828  080E                     	;# 
  3829  080F                     	;# 
  3830  0810                     	;# 
  3831  0811                     	;# 
  3832  0812                     	;# 
  3833  0813                     	;# 
  3834  0814                     	;# 
  3835  081A                     	;# 
  3836  081B                     	;# 
  3837  081C                     	;# 
  3838  081D                     	;# 
  3839  081E                     	;# 
  3840  081F                     	;# 
  3841  088C                     	;# 
  3842  088D                     	;# 
  3843  088E                     	;# 
  3844  088F                     	;# 
  3845  0890                     	;# 
  3846  0891                     	;# 
  3847  0892                     	;# 
  3848  0893                     	;# 
  3849  0895                     	;# 
  3850  0896                     	;# 
  3851  0897                     	;# 
  3852  0898                     	;# 
  3853  0899                     	;# 
  3854  089A                     	;# 
  3855  089B                     	;# 
  3856  090C                     	;# 
  3857  090E                     	;# 
  3858  090F                     	;# 
  3859  091F                     	;# 
  3860  098F                     	;# 
  3861  098F                     	;# 
  3862  0990                     	;# 
  3863  0991                     	;# 
  3864  0992                     	;# 
  3865  0993                     	;# 
  3866  0994                     	;# 
  3867  0995                     	;# 
  3868  0996                     	;# 
  3869  0997                     	;# 
  3870  1E0F                     	;# 
  3871  1E10                     	;# 
  3872  1E11                     	;# 
  3873  1E12                     	;# 
  3874  1E13                     	;# 
  3875  1E14                     	;# 
  3876  1E15                     	;# 
  3877  1E16                     	;# 
  3878  1E17                     	;# 
  3879  1E18                     	;# 
  3880  1E19                     	;# 
  3881  1E1A                     	;# 
  3882  1E1B                     	;# 
  3883  1E1C                     	;# 
  3884  1E1D                     	;# 
  3885  1E1E                     	;# 
  3886  1E1F                     	;# 
  3887  1E20                     	;# 
  3888  1E21                     	;# 
  3889  1E22                     	;# 
  3890  1E23                     	;# 
  3891  1E24                     	;# 
  3892  1E25                     	;# 
  3893  1E26                     	;# 
  3894  1E27                     	;# 
  3895  1E28                     	;# 
  3896  1E29                     	;# 
  3897  1E2A                     	;# 
  3898  1E2B                     	;# 
  3899  1E2C                     	;# 
  3900  1E2D                     	;# 
  3901  1E2E                     	;# 
  3902  1E2F                     	;# 
  3903  1E30                     	;# 
  3904  1E31                     	;# 
  3905  1E32                     	;# 
  3906  1E33                     	;# 
  3907  1E34                     	;# 
  3908  1E35                     	;# 
  3909  1E36                     	;# 
  3910  1E37                     	;# 
  3911  1E8F                     	;# 
  3912  1E90                     	;# 
  3913  1E91                     	;# 
  3914  1E92                     	;# 
  3915  1E93                     	;# 
  3916  1E94                     	;# 
  3917  1E95                     	;# 
  3918  1E96                     	;# 
  3919  1E97                     	;# 
  3920  1E9C                     	;# 
  3921  1E9D                     	;# 
  3922  1E9E                     	;# 
  3923  1EA1                     	;# 
  3924  1EA2                     	;# 
  3925  1EA3                     	;# 
  3926  1EA4                     	;# 
  3927  1EA5                     	;# 
  3928  1EA9                     	;# 
  3929  1EAA                     	;# 
  3930  1EAB                     	;# 
  3931  1EAC                     	;# 
  3932  1EB1                     	;# 
  3933  1EB2                     	;# 
  3934  1EB3                     	;# 
  3935  1EB8                     	;# 
  3936  1EB9                     	;# 
  3937  1EBA                     	;# 
  3938  1EBB                     	;# 
  3939  1EBC                     	;# 
  3940  1EBD                     	;# 
  3941  1EBE                     	;# 
  3942  1EC3                     	;# 
  3943  1EC5                     	;# 
  3944  1EC6                     	;# 
  3945  1EC7                     	;# 
  3946  1EC8                     	;# 
  3947  1EC9                     	;# 
  3948  1ECA                     	;# 
  3949  1ECB                     	;# 
  3950  1ECC                     	;# 
  3951  1F10                     	;# 
  3952  1F11                     	;# 
  3953  1F12                     	;# 
  3954  1F13                     	;# 
  3955  1F14                     	;# 
  3956  1F15                     	;# 
  3957  1F16                     	;# 
  3958  1F17                     	;# 
  3959  1F18                     	;# 
  3960  1F19                     	;# 
  3961  1F1A                     	;# 
  3962  1F1B                     	;# 
  3963  1F1C                     	;# 
  3964  1F1D                     	;# 
  3965  1F1E                     	;# 
  3966  1F1F                     	;# 
  3967  1F20                     	;# 
  3968  1F21                     	;# 
  3969  1F22                     	;# 
  3970  1F23                     	;# 
  3971  1F24                     	;# 
  3972  1F25                     	;# 
  3973  1F26                     	;# 
  3974  1F27                     	;# 
  3975  1F28                     	;# 
  3976  1F29                     	;# 
  3977  1F2A                     	;# 
  3978  1F2B                     	;# 
  3979  1F2C                     	;# 
  3980  1F2D                     	;# 
  3981  1F2E                     	;# 
  3982  1F2F                     	;# 
  3983  1F30                     	;# 
  3984  1F31                     	;# 
  3985  1F32                     	;# 
  3986  1F38                     	;# 
  3987  1F39                     	;# 
  3988  1F3A                     	;# 
  3989  1F3B                     	;# 
  3990  1F3C                     	;# 
  3991  1F3D                     	;# 
  3992  1F3E                     	;# 
  3993  1F3F                     	;# 
  3994  1F40                     	;# 
  3995  1F41                     	;# 
  3996  1F43                     	;# 
  3997  1F44                     	;# 
  3998  1F45                     	;# 
  3999  1F46                     	;# 
  4000  1F47                     	;# 
  4001  1F48                     	;# 
  4002  1F49                     	;# 
  4003  1F4A                     	;# 
  4004  1F4B                     	;# 
  4005  1F4C                     	;# 
  4006  1F4E                     	;# 
  4007  1F4F                     	;# 
  4008  1F50                     	;# 
  4009  1F51                     	;# 
  4010  1F52                     	;# 
  4011  1F53                     	;# 
  4012  1F54                     	;# 
  4013  1F55                     	;# 
  4014  1F56                     	;# 
  4015  1F57                     	;# 
  4016  1F59                     	;# 
  4017  1F5A                     	;# 
  4018  1F5B                     	;# 
  4019  1F5C                     	;# 
  4020  1F5D                     	;# 
  4021  1F61                     	;# 
  4022  1F62                     	;# 
  4023  1F64                     	;# 
  4024  1F65                     	;# 
  4025  1F66                     	;# 
  4026  1F67                     	;# 
  4027  1F68                     	;# 
  4028  1F69                     	;# 
  4029  1F6A                     	;# 
  4030  1F6B                     	;# 
  4031  1F6C                     	;# 
  4032  1F6D                     	;# 
  4033  1FE4                     	;# 
  4034  1FE5                     	;# 
  4035  1FE6                     	;# 
  4036  1FE7                     	;# 
  4037  1FE8                     	;# 
  4038  1FE9                     	;# 
  4039  1FEA                     	;# 
  4040  1FEB                     	;# 
  4041  1FED                     	;# 
  4042  1FEE                     	;# 
  4043  1FEF                     	;# 
  4044  0000                     	;# 
  4045  0001                     	;# 
  4046  0002                     	;# 
  4047  0003                     	;# 
  4048  0004                     	;# 
  4049  0005                     	;# 
  4050  0006                     	;# 
  4051  0007                     	;# 
  4052  0008                     	;# 
  4053  0009                     	;# 
  4054  000A                     	;# 
  4055  000B                     	;# 
  4056  000C                     	;# 
  4057  000D                     	;# 
  4058  000E                     	;# 
  4059  000F                     	;# 
  4060  0010                     	;# 
  4061  0011                     	;# 
  4062  0012                     	;# 
  4063  0013                     	;# 
  4064  0014                     	;# 
  4065  0015                     	;# 
  4066  0016                     	;# 
  4067  0017                     	;# 
  4068  0018                     	;# 
  4069  0019                     	;# 
  4070  001A                     	;# 
  4071  001C                     	;# 
  4072  001C                     	;# 
  4073  001D                     	;# 
  4074  001D                     	;# 
  4075  001E                     	;# 
  4076  001F                     	;# 
  4077  008C                     	;# 
  4078  008C                     	;# 
  4079  008D                     	;# 
  4080  008E                     	;# 
  4081  008E                     	;# 
  4082  008F                     	;# 
  4083  0090                     	;# 
  4084  0090                     	;# 
  4085  0091                     	;# 
  4086  0093                     	;# 
  4087  0094                     	;# 
  4088  0095                     	;# 
  4089  0096                     	;# 
  4090  0097                     	;# 
  4091  0098                     	;# 
  4092  0099                     	;# 
  4093  009A                     	;# 
  4094  009B                     	;# 
  4095  009C                     	;# 
  4096  009D                     	;# 
  4097  009E                     	;# 
  4098  010C                     	;# 
  4099  010D                     	;# 
  4100  010E                     	;# 
  4101  010E                     	;# 
  4102  010F                     	;# 
  4103  0110                     	;# 
  4104  0110                     	;# 
  4105  0111                     	;# 
  4106  0112                     	;# 
  4107  0112                     	;# 
  4108  0113                     	;# 
  4109  0114                     	;# 
  4110  0114                     	;# 
  4111  0115                     	;# 
  4112  0116                     	;# 
  4113  0116                     	;# 
  4114  0117                     	;# 
  4115  0119                     	;# 
  4116  0119                     	;# 
  4117  0119                     	;# 
  4118  011A                     	;# 
  4119  011A                     	;# 
  4120  011A                     	;# 
  4121  011B                     	;# 
  4122  011B                     	;# 
  4123  011B                     	;# 
  4124  011B                     	;# 
  4125  011B                     	;# 
  4126  011C                     	;# 
  4127  011C                     	;# 
  4128  011C                     	;# 
  4129  011D                     	;# 
  4130  011D                     	;# 
  4131  011D                     	;# 
  4132  011E                     	;# 
  4133  011E                     	;# 
  4134  011E                     	;# 
  4135  011F                     	;# 
  4136  011F                     	;# 
  4137  011F                     	;# 
  4138  011F                     	;# 
  4139  011F                     	;# 
  4140  018C                     	;# 
  4141  018D                     	;# 
  4142  018E                     	;# 
  4143  018F                     	;# 
  4144  0190                     	;# 
  4145  0191                     	;# 
  4146  0192                     	;# 
  4147  0196                     	;# 
  4148  0197                     	;# 
  4149  0198                     	;# 
  4150  0199                     	;# 
  4151  019A                     	;# 
  4152  019B                     	;# 
  4153  019C                     	;# 
  4154  020C                     	;# 
  4155  020C                     	;# 
  4156  020D                     	;# 
  4157  020E                     	;# 
  4158  020F                     	;# 
  4159  020F                     	;# 
  4160  0210                     	;# 
  4161  0210                     	;# 
  4162  0211                     	;# 
  4163  0211                     	;# 
  4164  0212                     	;# 
  4165  0212                     	;# 
  4166  0213                     	;# 
  4167  0214                     	;# 
  4168  0215                     	;# 
  4169  0215                     	;# 
  4170  0216                     	;# 
  4171  0216                     	;# 
  4172  0217                     	;# 
  4173  0217                     	;# 
  4174  0218                     	;# 
  4175  0218                     	;# 
  4176  0219                     	;# 
  4177  021A                     	;# 
  4178  021B                     	;# 
  4179  021B                     	;# 
  4180  021C                     	;# 
  4181  021C                     	;# 
  4182  021D                     	;# 
  4183  021D                     	;# 
  4184  021E                     	;# 
  4185  021F                     	;# 
  4186  028C                     	;# 
  4187  028C                     	;# 
  4188  028D                     	;# 
  4189  028D                     	;# 
  4190  028E                     	;# 
  4191  028F                     	;# 
  4192  0290                     	;# 
  4193  0290                     	;# 
  4194  0291                     	;# 
  4195  0292                     	;# 
  4196  0292                     	;# 
  4197  0293                     	;# 
  4198  0293                     	;# 
  4199  0294                     	;# 
  4200  0295                     	;# 
  4201  0296                     	;# 
  4202  0296                     	;# 
  4203  0297                     	;# 
  4204  0298                     	;# 
  4205  0298                     	;# 
  4206  0299                     	;# 
  4207  0299                     	;# 
  4208  029A                     	;# 
  4209  029B                     	;# 
  4210  029C                     	;# 
  4211  029C                     	;# 
  4212  029D                     	;# 
  4213  030C                     	;# 
  4214  030C                     	;# 
  4215  030D                     	;# 
  4216  030E                     	;# 
  4217  030F                     	;# 
  4218  0310                     	;# 
  4219  0310                     	;# 
  4220  0311                     	;# 
  4221  0312                     	;# 
  4222  0313                     	;# 
  4223  0314                     	;# 
  4224  0314                     	;# 
  4225  0315                     	;# 
  4226  0316                     	;# 
  4227  0317                     	;# 
  4228  0318                     	;# 
  4229  0318                     	;# 
  4230  0319                     	;# 
  4231  031A                     	;# 
  4232  031B                     	;# 
  4233  031C                     	;# 
  4234  031C                     	;# 
  4235  031D                     	;# 
  4236  031E                     	;# 
  4237  031F                     	;# 
  4238  038C                     	;# 
  4239  038C                     	;# 
  4240  038D                     	;# 
  4241  038E                     	;# 
  4242  0390                     	;# 
  4243  0390                     	;# 
  4244  0391                     	;# 
  4245  0392                     	;# 
  4246  040C                     	;# 
  4247  040D                     	;# 
  4248  040E                     	;# 
  4249  040F                     	;# 
  4250  0410                     	;# 
  4251  0411                     	;# 
  4252  0416                     	;# 
  4253  0416                     	;# 
  4254  0417                     	;# 
  4255  0418                     	;# 
  4256  0418                     	;# 
  4257  0419                     	;# 
  4258  041A                     	;# 
  4259  041A                     	;# 
  4260  041B                     	;# 
  4261  041C                     	;# 
  4262  041C                     	;# 
  4263  041D                     	;# 
  4264  041E                     	;# 
  4265  041F                     	;# 
  4266  048C                     	;# 
  4267  048C                     	;# 
  4268  048D                     	;# 
  4269  048E                     	;# 
  4270  048F                     	;# 
  4271  048F                     	;# 
  4272  0490                     	;# 
  4273  0491                     	;# 
  4274  0492                     	;# 
  4275  0492                     	;# 
  4276  0493                     	;# 
  4277  0494                     	;# 
  4278  0495                     	;# 
  4279  0495                     	;# 
  4280  0496                     	;# 
  4281  0497                     	;# 
  4282  0498                     	;# 
  4283  0499                     	;# 
  4284  049A                     	;# 
  4285  049B                     	;# 
  4286  049C                     	;# 
  4287  049D                     	;# 
  4288  050C                     	;# 
  4289  050C                     	;# 
  4290  050D                     	;# 
  4291  050E                     	;# 
  4292  050F                     	;# 
  4293  050F                     	;# 
  4294  0510                     	;# 
  4295  0511                     	;# 
  4296  0512                     	;# 
  4297  0512                     	;# 
  4298  0513                     	;# 
  4299  0514                     	;# 
  4300  0515                     	;# 
  4301  0515                     	;# 
  4302  0516                     	;# 
  4303  0517                     	;# 
  4304  0518                     	;# 
  4305  0519                     	;# 
  4306  051A                     	;# 
  4307  051B                     	;# 
  4308  051C                     	;# 
  4309  051D                     	;# 
  4310  058C                     	;# 
  4311  058C                     	;# 
  4312  058D                     	;# 
  4313  058E                     	;# 
  4314  058F                     	;# 
  4315  058F                     	;# 
  4316  0590                     	;# 
  4317  0591                     	;# 
  4318  0592                     	;# 
  4319  0593                     	;# 
  4320  060C                     	;# 
  4321  060D                     	;# 
  4322  060E                     	;# 
  4323  060F                     	;# 
  4324  0610                     	;# 
  4325  0611                     	;# 
  4326  0612                     	;# 
  4327  0613                     	;# 
  4328  0614                     	;# 
  4329  0616                     	;# 
  4330  0617                     	;# 
  4331  0618                     	;# 
  4332  0619                     	;# 
  4333  061A                     	;# 
  4334  061B                     	;# 
  4335  061C                     	;# 
  4336  061D                     	;# 
  4337  061E                     	;# 
  4338  068C                     	;# 
  4339  068D                     	;# 
  4340  068E                     	;# 
  4341  068F                     	;# 
  4342  0690                     	;# 
  4343  0691                     	;# 
  4344  0692                     	;# 
  4345  0693                     	;# 
  4346  0694                     	;# 
  4347  070C                     	;# 
  4348  070D                     	;# 
  4349  070E                     	;# 
  4350  070F                     	;# 
  4351  0710                     	;# 
  4352  0711                     	;# 
  4353  0712                     	;# 
  4354  0713                     	;# 
  4355  0714                     	;# 
  4356  0716                     	;# 
  4357  0717                     	;# 
  4358  0718                     	;# 
  4359  0719                     	;# 
  4360  071A                     	;# 
  4361  071B                     	;# 
  4362  071C                     	;# 
  4363  071D                     	;# 
  4364  071E                     	;# 
  4365  0796                     	;# 
  4366  0797                     	;# 
  4367  0798                     	;# 
  4368  0799                     	;# 
  4369  079A                     	;# 
  4370  079B                     	;# 
  4371  080C                     	;# 
  4372  080D                     	;# 
  4373  080E                     	;# 
  4374  080F                     	;# 
  4375  0810                     	;# 
  4376  0811                     	;# 
  4377  0812                     	;# 
  4378  0813                     	;# 
  4379  0814                     	;# 
  4380  081A                     	;# 
  4381  081B                     	;# 
  4382  081C                     	;# 
  4383  081D                     	;# 
  4384  081E                     	;# 
  4385  081F                     	;# 
  4386  088C                     	;# 
  4387  088D                     	;# 
  4388  088E                     	;# 
  4389  088F                     	;# 
  4390  0890                     	;# 
  4391  0891                     	;# 
  4392  0892                     	;# 
  4393  0893                     	;# 
  4394  0895                     	;# 
  4395  0896                     	;# 
  4396  0897                     	;# 
  4397  0898                     	;# 
  4398  0899                     	;# 
  4399  089A                     	;# 
  4400  089B                     	;# 
  4401  090C                     	;# 
  4402  090E                     	;# 
  4403  090F                     	;# 
  4404  091F                     	;# 
  4405  098F                     	;# 
  4406  098F                     	;# 
  4407  0990                     	;# 
  4408  0991                     	;# 
  4409  0992                     	;# 
  4410  0993                     	;# 
  4411  0994                     	;# 
  4412  0995                     	;# 
  4413  0996                     	;# 
  4414  0997                     	;# 
  4415  1E0F                     	;# 
  4416  1E10                     	;# 
  4417  1E11                     	;# 
  4418  1E12                     	;# 
  4419  1E13                     	;# 
  4420  1E14                     	;# 
  4421  1E15                     	;# 
  4422  1E16                     	;# 
  4423  1E17                     	;# 
  4424  1E18                     	;# 
  4425  1E19                     	;# 
  4426  1E1A                     	;# 
  4427  1E1B                     	;# 
  4428  1E1C                     	;# 
  4429  1E1D                     	;# 
  4430  1E1E                     	;# 
  4431  1E1F                     	;# 
  4432  1E20                     	;# 
  4433  1E21                     	;# 
  4434  1E22                     	;# 
  4435  1E23                     	;# 
  4436  1E24                     	;# 
  4437  1E25                     	;# 
  4438  1E26                     	;# 
  4439  1E27                     	;# 
  4440  1E28                     	;# 
  4441  1E29                     	;# 
  4442  1E2A                     	;# 
  4443  1E2B                     	;# 
  4444  1E2C                     	;# 
  4445  1E2D                     	;# 
  4446  1E2E                     	;# 
  4447  1E2F                     	;# 
  4448  1E30                     	;# 
  4449  1E31                     	;# 
  4450  1E32                     	;# 
  4451  1E33                     	;# 
  4452  1E34                     	;# 
  4453  1E35                     	;# 
  4454  1E36                     	;# 
  4455  1E37                     	;# 
  4456  1E8F                     	;# 
  4457  1E90                     	;# 
  4458  1E91                     	;# 
  4459  1E92                     	;# 
  4460  1E93                     	;# 
  4461  1E94                     	;# 
  4462  1E95                     	;# 
  4463  1E96                     	;# 
  4464  1E97                     	;# 
  4465  1E9C                     	;# 
  4466  1E9D                     	;# 
  4467  1E9E                     	;# 
  4468  1EA1                     	;# 
  4469  1EA2                     	;# 
  4470  1EA3                     	;# 
  4471  1EA4                     	;# 
  4472  1EA5                     	;# 
  4473  1EA9                     	;# 
  4474  1EAA                     	;# 
  4475  1EAB                     	;# 
  4476  1EAC                     	;# 
  4477  1EB1                     	;# 
  4478  1EB2                     	;# 
  4479  1EB3                     	;# 
  4480  1EB8                     	;# 
  4481  1EB9                     	;# 
  4482  1EBA                     	;# 
  4483  1EBB                     	;# 
  4484  1EBC                     	;# 
  4485  1EBD                     	;# 
  4486  1EBE                     	;# 
  4487  1EC3                     	;# 
  4488  1EC5                     	;# 
  4489  1EC6                     	;# 
  4490  1EC7                     	;# 
  4491  1EC8                     	;# 
  4492  1EC9                     	;# 
  4493  1ECA                     	;# 
  4494  1ECB                     	;# 
  4495  1ECC                     	;# 
  4496  1F10                     	;# 
  4497  1F11                     	;# 
  4498  1F12                     	;# 
  4499  1F13                     	;# 
  4500  1F14                     	;# 
  4501  1F15                     	;# 
  4502  1F16                     	;# 
  4503  1F17                     	;# 
  4504  1F18                     	;# 
  4505  1F19                     	;# 
  4506  1F1A                     	;# 
  4507  1F1B                     	;# 
  4508  1F1C                     	;# 
  4509  1F1D                     	;# 
  4510  1F1E                     	;# 
  4511  1F1F                     	;# 
  4512  1F20                     	;# 
  4513  1F21                     	;# 
  4514  1F22                     	;# 
  4515  1F23                     	;# 
  4516  1F24                     	;# 
  4517  1F25                     	;# 
  4518  1F26                     	;# 
  4519  1F27                     	;# 
  4520  1F28                     	;# 
  4521  1F29                     	;# 
  4522  1F2A                     	;# 
  4523  1F2B                     	;# 
  4524  1F2C                     	;# 
  4525  1F2D                     	;# 
  4526  1F2E                     	;# 
  4527  1F2F                     	;# 
  4528  1F30                     	;# 
  4529  1F31                     	;# 
  4530  1F32                     	;# 
  4531  1F38                     	;# 
  4532  1F39                     	;# 
  4533  1F3A                     	;# 
  4534  1F3B                     	;# 
  4535  1F3C                     	;# 
  4536  1F3D                     	;# 
  4537  1F3E                     	;# 
  4538  1F3F                     	;# 
  4539  1F40                     	;# 
  4540  1F41                     	;# 
  4541  1F43                     	;# 
  4542  1F44                     	;# 
  4543  1F45                     	;# 
  4544  1F46                     	;# 
  4545  1F47                     	;# 
  4546  1F48                     	;# 
  4547  1F49                     	;# 
  4548  1F4A                     	;# 
  4549  1F4B                     	;# 
  4550  1F4C                     	;# 
  4551  1F4E                     	;# 
  4552  1F4F                     	;# 
  4553  1F50                     	;# 
  4554  1F51                     	;# 
  4555  1F52                     	;# 
  4556  1F53                     	;# 
  4557  1F54                     	;# 
  4558  1F55                     	;# 
  4559  1F56                     	;# 
  4560  1F57                     	;# 
  4561  1F59                     	;# 
  4562  1F5A                     	;# 
  4563  1F5B                     	;# 
  4564  1F5C                     	;# 
  4565  1F5D                     	;# 
  4566  1F61                     	;# 
  4567  1F62                     	;# 
  4568  1F64                     	;# 
  4569  1F65                     	;# 
  4570  1F66                     	;# 
  4571  1F67                     	;# 
  4572  1F68                     	;# 
  4573  1F69                     	;# 
  4574  1F6A                     	;# 
  4575  1F6B                     	;# 
  4576  1F6C                     	;# 
  4577  1F6D                     	;# 
  4578  1FE4                     	;# 
  4579  1FE5                     	;# 
  4580  1FE6                     	;# 
  4581  1FE7                     	;# 
  4582  1FE8                     	;# 
  4583  1FE9                     	;# 
  4584  1FEA                     	;# 
  4585  1FEB                     	;# 
  4586  1FED                     	;# 
  4587  1FEE                     	;# 
  4588  1FEF                     	;# 
  4589  0000                     	;# 
  4590  0001                     	;# 
  4591  0002                     	;# 
  4592  0003                     	;# 
  4593  0004                     	;# 
  4594  0005                     	;# 
  4595  0006                     	;# 
  4596  0007                     	;# 
  4597  0008                     	;# 
  4598  0009                     	;# 
  4599  000A                     	;# 
  4600  000B                     	;# 
  4601  000C                     	;# 
  4602  000D                     	;# 
  4603  000E                     	;# 
  4604  000F                     	;# 
  4605  0010                     	;# 
  4606  0011                     	;# 
  4607  0012                     	;# 
  4608  0013                     	;# 
  4609  0014                     	;# 
  4610  0015                     	;# 
  4611  0016                     	;# 
  4612  0017                     	;# 
  4613  0018                     	;# 
  4614  0019                     	;# 
  4615  001A                     	;# 
  4616  001C                     	;# 
  4617  001C                     	;# 
  4618  001D                     	;# 
  4619  001D                     	;# 
  4620  001E                     	;# 
  4621  001F                     	;# 
  4622  008C                     	;# 
  4623  008C                     	;# 
  4624  008D                     	;# 
  4625  008E                     	;# 
  4626  008E                     	;# 
  4627  008F                     	;# 
  4628  0090                     	;# 
  4629  0090                     	;# 
  4630  0091                     	;# 
  4631  0093                     	;# 
  4632  0094                     	;# 
  4633  0095                     	;# 
  4634  0096                     	;# 
  4635  0097                     	;# 
  4636  0098                     	;# 
  4637  0099                     	;# 
  4638  009A                     	;# 
  4639  009B                     	;# 
  4640  009C                     	;# 
  4641  009D                     	;# 
  4642  009E                     	;# 
  4643  010C                     	;# 
  4644  010D                     	;# 
  4645  010E                     	;# 
  4646  010E                     	;# 
  4647  010F                     	;# 
  4648  0110                     	;# 
  4649  0110                     	;# 
  4650  0111                     	;# 
  4651  0112                     	;# 
  4652  0112                     	;# 
  4653  0113                     	;# 
  4654  0114                     	;# 
  4655  0114                     	;# 
  4656  0115                     	;# 
  4657  0116                     	;# 
  4658  0116                     	;# 
  4659  0117                     	;# 
  4660  0119                     	;# 
  4661  0119                     	;# 
  4662  0119                     	;# 
  4663  011A                     	;# 
  4664  011A                     	;# 
  4665  011A                     	;# 
  4666  011B                     	;# 
  4667  011B                     	;# 
  4668  011B                     	;# 
  4669  011B                     	;# 
  4670  011B                     	;# 
  4671  011C                     	;# 
  4672  011C                     	;# 
  4673  011C                     	;# 
  4674  011D                     	;# 
  4675  011D                     	;# 
  4676  011D                     	;# 
  4677  011E                     	;# 
  4678  011E                     	;# 
  4679  011E                     	;# 
  4680  011F                     	;# 
  4681  011F                     	;# 
  4682  011F                     	;# 
  4683  011F                     	;# 
  4684  011F                     	;# 
  4685  018C                     	;# 
  4686  018D                     	;# 
  4687  018E                     	;# 
  4688  018F                     	;# 
  4689  0190                     	;# 
  4690  0191                     	;# 
  4691  0192                     	;# 
  4692  0196                     	;# 
  4693  0197                     	;# 
  4694  0198                     	;# 
  4695  0199                     	;# 
  4696  019A                     	;# 
  4697  019B                     	;# 
  4698  019C                     	;# 
  4699  020C                     	;# 
  4700  020C                     	;# 
  4701  020D                     	;# 
  4702  020E                     	;# 
  4703  020F                     	;# 
  4704  020F                     	;# 
  4705  0210                     	;# 
  4706  0210                     	;# 
  4707  0211                     	;# 
  4708  0211                     	;# 
  4709  0212                     	;# 
  4710  0212                     	;# 
  4711  0213                     	;# 
  4712  0214                     	;# 
  4713  0215                     	;# 
  4714  0215                     	;# 
  4715  0216                     	;# 
  4716  0216                     	;# 
  4717  0217                     	;# 
  4718  0217                     	;# 
  4719  0218                     	;# 
  4720  0218                     	;# 
  4721  0219                     	;# 
  4722  021A                     	;# 
  4723  021B                     	;# 
  4724  021B                     	;# 
  4725  021C                     	;# 
  4726  021C                     	;# 
  4727  021D                     	;# 
  4728  021D                     	;# 
  4729  021E                     	;# 
  4730  021F                     	;# 
  4731  028C                     	;# 
  4732  028C                     	;# 
  4733  028D                     	;# 
  4734  028D                     	;# 
  4735  028E                     	;# 
  4736  028F                     	;# 
  4737  0290                     	;# 
  4738  0290                     	;# 
  4739  0291                     	;# 
  4740  0292                     	;# 
  4741  0292                     	;# 
  4742  0293                     	;# 
  4743  0293                     	;# 
  4744  0294                     	;# 
  4745  0295                     	;# 
  4746  0296                     	;# 
  4747  0296                     	;# 
  4748  0297                     	;# 
  4749  0298                     	;# 
  4750  0298                     	;# 
  4751  0299                     	;# 
  4752  0299                     	;# 
  4753  029A                     	;# 
  4754  029B                     	;# 
  4755  029C                     	;# 
  4756  029C                     	;# 
  4757  029D                     	;# 
  4758  030C                     	;# 
  4759  030C                     	;# 
  4760  030D                     	;# 
  4761  030E                     	;# 
  4762  030F                     	;# 
  4763  0310                     	;# 
  4764  0310                     	;# 
  4765  0311                     	;# 
  4766  0312                     	;# 
  4767  0313                     	;# 
  4768  0314                     	;# 
  4769  0314                     	;# 
  4770  0315                     	;# 
  4771  0316                     	;# 
  4772  0317                     	;# 
  4773  0318                     	;# 
  4774  0318                     	;# 
  4775  0319                     	;# 
  4776  031A                     	;# 
  4777  031B                     	;# 
  4778  031C                     	;# 
  4779  031C                     	;# 
  4780  031D                     	;# 
  4781  031E                     	;# 
  4782  031F                     	;# 
  4783  038C                     	;# 
  4784  038C                     	;# 
  4785  038D                     	;# 
  4786  038E                     	;# 
  4787  0390                     	;# 
  4788  0390                     	;# 
  4789  0391                     	;# 
  4790  0392                     	;# 
  4791  040C                     	;# 
  4792  040D                     	;# 
  4793  040E                     	;# 
  4794  040F                     	;# 
  4795  0410                     	;# 
  4796  0411                     	;# 
  4797  0416                     	;# 
  4798  0416                     	;# 
  4799  0417                     	;# 
  4800  0418                     	;# 
  4801  0418                     	;# 
  4802  0419                     	;# 
  4803  041A                     	;# 
  4804  041A                     	;# 
  4805  041B                     	;# 
  4806  041C                     	;# 
  4807  041C                     	;# 
  4808  041D                     	;# 
  4809  041E                     	;# 
  4810  041F                     	;# 
  4811  048C                     	;# 
  4812  048C                     	;# 
  4813  048D                     	;# 
  4814  048E                     	;# 
  4815  048F                     	;# 
  4816  048F                     	;# 
  4817  0490                     	;# 
  4818  0491                     	;# 
  4819  0492                     	;# 
  4820  0492                     	;# 
  4821  0493                     	;# 
  4822  0494                     	;# 
  4823  0495                     	;# 
  4824  0495                     	;# 
  4825  0496                     	;# 
  4826  0497                     	;# 
  4827  0498                     	;# 
  4828  0499                     	;# 
  4829  049A                     	;# 
  4830  049B                     	;# 
  4831  049C                     	;# 
  4832  049D                     	;# 
  4833  050C                     	;# 
  4834  050C                     	;# 
  4835  050D                     	;# 
  4836  050E                     	;# 
  4837  050F                     	;# 
  4838  050F                     	;# 
  4839  0510                     	;# 
  4840  0511                     	;# 
  4841  0512                     	;# 
  4842  0512                     	;# 
  4843  0513                     	;# 
  4844  0514                     	;# 
  4845  0515                     	;# 
  4846  0515                     	;# 
  4847  0516                     	;# 
  4848  0517                     	;# 
  4849  0518                     	;# 
  4850  0519                     	;# 
  4851  051A                     	;# 
  4852  051B                     	;# 
  4853  051C                     	;# 
  4854  051D                     	;# 
  4855  058C                     	;# 
  4856  058C                     	;# 
  4857  058D                     	;# 
  4858  058E                     	;# 
  4859  058F                     	;# 
  4860  058F                     	;# 
  4861  0590                     	;# 
  4862  0591                     	;# 
  4863  0592                     	;# 
  4864  0593                     	;# 
  4865  060C                     	;# 
  4866  060D                     	;# 
  4867  060E                     	;# 
  4868  060F                     	;# 
  4869  0610                     	;# 
  4870  0611                     	;# 
  4871  0612                     	;# 
  4872  0613                     	;# 
  4873  0614                     	;# 
  4874  0616                     	;# 
  4875  0617                     	;# 
  4876  0618                     	;# 
  4877  0619                     	;# 
  4878  061A                     	;# 
  4879  061B                     	;# 
  4880  061C                     	;# 
  4881  061D                     	;# 
  4882  061E                     	;# 
  4883  068C                     	;# 
  4884  068D                     	;# 
  4885  068E                     	;# 
  4886  068F                     	;# 
  4887  0690                     	;# 
  4888  0691                     	;# 
  4889  0692                     	;# 
  4890  0693                     	;# 
  4891  0694                     	;# 
  4892  070C                     	;# 
  4893  070D                     	;# 
  4894  070E                     	;# 
  4895  070F                     	;# 
  4896  0710                     	;# 
  4897  0711                     	;# 
  4898  0712                     	;# 
  4899  0713                     	;# 
  4900  0714                     	;# 
  4901  0716                     	;# 
  4902  0717                     	;# 
  4903  0718                     	;# 
  4904  0719                     	;# 
  4905  071A                     	;# 
  4906  071B                     	;# 
  4907  071C                     	;# 
  4908  071D                     	;# 
  4909  071E                     	;# 
  4910  0796                     	;# 
  4911  0797                     	;# 
  4912  0798                     	;# 
  4913  0799                     	;# 
  4914  079A                     	;# 
  4915  079B                     	;# 
  4916  080C                     	;# 
  4917  080D                     	;# 
  4918  080E                     	;# 
  4919  080F                     	;# 
  4920  0810                     	;# 
  4921  0811                     	;# 
  4922  0812                     	;# 
  4923  0813                     	;# 
  4924  0814                     	;# 
  4925  081A                     	;# 
  4926  081B                     	;# 
  4927  081C                     	;# 
  4928  081D                     	;# 
  4929  081E                     	;# 
  4930  081F                     	;# 
  4931  088C                     	;# 
  4932  088D                     	;# 
  4933  088E                     	;# 
  4934  088F                     	;# 
  4935  0890                     	;# 
  4936  0891                     	;# 
  4937  0892                     	;# 
  4938  0893                     	;# 
  4939  0895                     	;# 
  4940  0896                     	;# 
  4941  0897                     	;# 
  4942  0898                     	;# 
  4943  0899                     	;# 
  4944  089A                     	;# 
  4945  089B                     	;# 
  4946  090C                     	;# 
  4947  090E                     	;# 
  4948  090F                     	;# 
  4949  091F                     	;# 
  4950  098F                     	;# 
  4951  098F                     	;# 
  4952  0990                     	;# 
  4953  0991                     	;# 
  4954  0992                     	;# 
  4955  0993                     	;# 
  4956  0994                     	;# 
  4957  0995                     	;# 
  4958  0996                     	;# 
  4959  0997                     	;# 
  4960  1E0F                     	;# 
  4961  1E10                     	;# 
  4962  1E11                     	;# 
  4963  1E12                     	;# 
  4964  1E13                     	;# 
  4965  1E14                     	;# 
  4966  1E15                     	;# 
  4967  1E16                     	;# 
  4968  1E17                     	;# 
  4969  1E18                     	;# 
  4970  1E19                     	;# 
  4971  1E1A                     	;# 
  4972  1E1B                     	;# 
  4973  1E1C                     	;# 
  4974  1E1D                     	;# 
  4975  1E1E                     	;# 
  4976  1E1F                     	;# 
  4977  1E20                     	;# 
  4978  1E21                     	;# 
  4979  1E22                     	;# 
  4980  1E23                     	;# 
  4981  1E24                     	;# 
  4982  1E25                     	;# 
  4983  1E26                     	;# 
  4984  1E27                     	;# 
  4985  1E28                     	;# 
  4986  1E29                     	;# 
  4987  1E2A                     	;# 
  4988  1E2B                     	;# 
  4989  1E2C                     	;# 
  4990  1E2D                     	;# 
  4991  1E2E                     	;# 
  4992  1E2F                     	;# 
  4993  1E30                     	;# 
  4994  1E31                     	;# 
  4995  1E32                     	;# 
  4996  1E33                     	;# 
  4997  1E34                     	;# 
  4998  1E35                     	;# 
  4999  1E36                     	;# 
  5000  1E37                     	;# 
  5001  1E8F                     	;# 
  5002  1E90                     	;# 
  5003  1E91                     	;# 
  5004  1E92                     	;# 
  5005  1E93                     	;# 
  5006  1E94                     	;# 
  5007  1E95                     	;# 
  5008  1E96                     	;# 
  5009  1E97                     	;# 
  5010  1E9C                     	;# 
  5011  1E9D                     	;# 
  5012  1E9E                     	;# 
  5013  1EA1                     	;# 
  5014  1EA2                     	;# 
  5015  1EA3                     	;# 
  5016  1EA4                     	;# 
  5017  1EA5                     	;# 
  5018  1EA9                     	;# 
  5019  1EAA                     	;# 
  5020  1EAB                     	;# 
  5021  1EAC                     	;# 
  5022  1EB1                     	;# 
  5023  1EB2                     	;# 
  5024  1EB3                     	;# 
  5025  1EB8                     	;# 
  5026  1EB9                     	;# 
  5027  1EBA                     	;# 
  5028  1EBB                     	;# 
  5029  1EBC                     	;# 
  5030  1EBD                     	;# 
  5031  1EBE                     	;# 
  5032  1EC3                     	;# 
  5033  1EC5                     	;# 
  5034  1EC6                     	;# 
  5035  1EC7                     	;# 
  5036  1EC8                     	;# 
  5037  1EC9                     	;# 
  5038  1ECA                     	;# 
  5039  1ECB                     	;# 
  5040  1ECC                     	;# 
  5041  1F10                     	;# 
  5042  1F11                     	;# 
  5043  1F12                     	;# 
  5044  1F13                     	;# 
  5045  1F14                     	;# 
  5046  1F15                     	;# 
  5047  1F16                     	;# 
  5048  1F17                     	;# 
  5049  1F18                     	;# 
  5050  1F19                     	;# 
  5051  1F1A                     	;# 
  5052  1F1B                     	;# 
  5053  1F1C                     	;# 
  5054  1F1D                     	;# 
  5055  1F1E                     	;# 
  5056  1F1F                     	;# 
  5057  1F20                     	;# 
  5058  1F21                     	;# 
  5059  1F22                     	;# 
  5060  1F23                     	;# 
  5061  1F24                     	;# 
  5062  1F25                     	;# 
  5063  1F26                     	;# 
  5064  1F27                     	;# 
  5065  1F28                     	;# 
  5066  1F29                     	;# 
  5067  1F2A                     	;# 
  5068  1F2B                     	;# 
  5069  1F2C                     	;# 
  5070  1F2D                     	;# 
  5071  1F2E                     	;# 
  5072  1F2F                     	;# 
  5073  1F30                     	;# 
  5074  1F31                     	;# 
  5075  1F32                     	;# 
  5076  1F38                     	;# 
  5077  1F39                     	;# 
  5078  1F3A                     	;# 
  5079  1F3B                     	;# 
  5080  1F3C                     	;# 
  5081  1F3D                     	;# 
  5082  1F3E                     	;# 
  5083  1F3F                     	;# 
  5084  1F40                     	;# 
  5085  1F41                     	;# 
  5086  1F43                     	;# 
  5087  1F44                     	;# 
  5088  1F45                     	;# 
  5089  1F46                     	;# 
  5090  1F47                     	;# 
  5091  1F48                     	;# 
  5092  1F49                     	;# 
  5093  1F4A                     	;# 
  5094  1F4B                     	;# 
  5095  1F4C                     	;# 
  5096  1F4E                     	;# 
  5097  1F4F                     	;# 
  5098  1F50                     	;# 
  5099  1F51                     	;# 
  5100  1F52                     	;# 
  5101  1F53                     	;# 
  5102  1F54                     	;# 
  5103  1F55                     	;# 
  5104  1F56                     	;# 
  5105  1F57                     	;# 
  5106  1F59                     	;# 
  5107  1F5A                     	;# 
  5108  1F5B                     	;# 
  5109  1F5C                     	;# 
  5110  1F5D                     	;# 
  5111  1F61                     	;# 
  5112  1F62                     	;# 
  5113  1F64                     	;# 
  5114  1F65                     	;# 
  5115  1F66                     	;# 
  5116  1F67                     	;# 
  5117  1F68                     	;# 
  5118  1F69                     	;# 
  5119  1F6A                     	;# 
  5120  1F6B                     	;# 
  5121  1F6C                     	;# 
  5122  1F6D                     	;# 
  5123  1FE4                     	;# 
  5124  1FE5                     	;# 
  5125  1FE6                     	;# 
  5126  1FE7                     	;# 
  5127  1FE8                     	;# 
  5128  1FE9                     	;# 
  5129  1FEA                     	;# 
  5130  1FEB                     	;# 
  5131  1FED                     	;# 
  5132  1FEE                     	;# 
  5133  1FEF                     	;# 
  5134  0000                     	;# 
  5135  0001                     	;# 
  5136  0002                     	;# 
  5137  0003                     	;# 
  5138  0004                     	;# 
  5139  0005                     	;# 
  5140  0006                     	;# 
  5141  0007                     	;# 
  5142  0008                     	;# 
  5143  0009                     	;# 
  5144  000A                     	;# 
  5145  000B                     	;# 
  5146  000C                     	;# 
  5147  000D                     	;# 
  5148  000E                     	;# 
  5149  000F                     	;# 
  5150  0010                     	;# 
  5151  0011                     	;# 
  5152  0012                     	;# 
  5153  0013                     	;# 
  5154  0014                     	;# 
  5155  0015                     	;# 
  5156  0016                     	;# 
  5157  0017                     	;# 
  5158  0018                     	;# 
  5159  0019                     	;# 
  5160  001A                     	;# 
  5161  001C                     	;# 
  5162  001C                     	;# 
  5163  001D                     	;# 
  5164  001D                     	;# 
  5165  001E                     	;# 
  5166  001F                     	;# 
  5167  008C                     	;# 
  5168  008C                     	;# 
  5169  008D                     	;# 
  5170  008E                     	;# 
  5171  008E                     	;# 
  5172  008F                     	;# 
  5173  0090                     	;# 
  5174  0090                     	;# 
  5175  0091                     	;# 
  5176  0093                     	;# 
  5177  0094                     	;# 
  5178  0095                     	;# 
  5179  0096                     	;# 
  5180  0097                     	;# 
  5181  0098                     	;# 
  5182  0099                     	;# 
  5183  009A                     	;# 
  5184  009B                     	;# 
  5185  009C                     	;# 
  5186  009D                     	;# 
  5187  009E                     	;# 
  5188  010C                     	;# 
  5189  010D                     	;# 
  5190  010E                     	;# 
  5191  010E                     	;# 
  5192  010F                     	;# 
  5193  0110                     	;# 
  5194  0110                     	;# 
  5195  0111                     	;# 
  5196  0112                     	;# 
  5197  0112                     	;# 
  5198  0113                     	;# 
  5199  0114                     	;# 
  5200  0114                     	;# 
  5201  0115                     	;# 
  5202  0116                     	;# 
  5203  0116                     	;# 
  5204  0117                     	;# 
  5205  0119                     	;# 
  5206  0119                     	;# 
  5207  0119                     	;# 
  5208  011A                     	;# 
  5209  011A                     	;# 
  5210  011A                     	;# 
  5211  011B                     	;# 
  5212  011B                     	;# 
  5213  011B                     	;# 
  5214  011B                     	;# 
  5215  011B                     	;# 
  5216  011C                     	;# 
  5217  011C                     	;# 
  5218  011C                     	;# 
  5219  011D                     	;# 
  5220  011D                     	;# 
  5221  011D                     	;# 
  5222  011E                     	;# 
  5223  011E                     	;# 
  5224  011E                     	;# 
  5225  011F                     	;# 
  5226  011F                     	;# 
  5227  011F                     	;# 
  5228  011F                     	;# 
  5229  011F                     	;# 
  5230  018C                     	;# 
  5231  018D                     	;# 
  5232  018E                     	;# 
  5233  018F                     	;# 
  5234  0190                     	;# 
  5235  0191                     	;# 
  5236  0192                     	;# 
  5237  0196                     	;# 
  5238  0197                     	;# 
  5239  0198                     	;# 
  5240  0199                     	;# 
  5241  019A                     	;# 
  5242  019B                     	;# 
  5243  019C                     	;# 
  5244  020C                     	;# 
  5245  020C                     	;# 
  5246  020D                     	;# 
  5247  020E                     	;# 
  5248  020F                     	;# 
  5249  020F                     	;# 
  5250  0210                     	;# 
  5251  0210                     	;# 
  5252  0211                     	;# 
  5253  0211                     	;# 
  5254  0212                     	;# 
  5255  0212                     	;# 
  5256  0213                     	;# 
  5257  0214                     	;# 
  5258  0215                     	;# 
  5259  0215                     	;# 
  5260  0216                     	;# 
  5261  0216                     	;# 
  5262  0217                     	;# 
  5263  0217                     	;# 
  5264  0218                     	;# 
  5265  0218                     	;# 
  5266  0219                     	;# 
  5267  021A                     	;# 
  5268  021B                     	;# 
  5269  021B                     	;# 
  5270  021C                     	;# 
  5271  021C                     	;# 
  5272  021D                     	;# 
  5273  021D                     	;# 
  5274  021E                     	;# 
  5275  021F                     	;# 
  5276  028C                     	;# 
  5277  028C                     	;# 
  5278  028D                     	;# 
  5279  028D                     	;# 
  5280  028E                     	;# 
  5281  028F                     	;# 
  5282  0290                     	;# 
  5283  0290                     	;# 
  5284  0291                     	;# 
  5285  0292                     	;# 
  5286  0292                     	;# 
  5287  0293                     	;# 
  5288  0293                     	;# 
  5289  0294                     	;# 
  5290  0295                     	;# 
  5291  0296                     	;# 
  5292  0296                     	;# 
  5293  0297                     	;# 
  5294  0298                     	;# 
  5295  0298                     	;# 
  5296  0299                     	;# 
  5297  0299                     	;# 
  5298  029A                     	;# 
  5299  029B                     	;# 
  5300  029C                     	;# 
  5301  029C                     	;# 
  5302  029D                     	;# 
  5303  030C                     	;# 
  5304  030C                     	;# 
  5305  030D                     	;# 
  5306  030E                     	;# 
  5307  030F                     	;# 
  5308  0310                     	;# 
  5309  0310                     	;# 
  5310  0311                     	;# 
  5311  0312                     	;# 
  5312  0313                     	;# 
  5313  0314                     	;# 
  5314  0314                     	;# 
  5315  0315                     	;# 
  5316  0316                     	;# 
  5317  0317                     	;# 
  5318  0318                     	;# 
  5319  0318                     	;# 
  5320  0319                     	;# 
  5321  031A                     	;# 
  5322  031B                     	;# 
  5323  031C                     	;# 
  5324  031C                     	;# 
  5325  031D                     	;# 
  5326  031E                     	;# 
  5327  031F                     	;# 
  5328  038C                     	;# 
  5329  038C                     	;# 
  5330  038D                     	;# 
  5331  038E                     	;# 
  5332  0390                     	;# 
  5333  0390                     	;# 
  5334  0391                     	;# 
  5335  0392                     	;# 
  5336  040C                     	;# 
  5337  040D                     	;# 
  5338  040E                     	;# 
  5339  040F                     	;# 
  5340  0410                     	;# 
  5341  0411                     	;# 
  5342  0416                     	;# 
  5343  0416                     	;# 
  5344  0417                     	;# 
  5345  0418                     	;# 
  5346  0418                     	;# 
  5347  0419                     	;# 
  5348  041A                     	;# 
  5349  041A                     	;# 
  5350  041B                     	;# 
  5351  041C                     	;# 
  5352  041C                     	;# 
  5353  041D                     	;# 
  5354  041E                     	;# 
  5355  041F                     	;# 
  5356  048C                     	;# 
  5357  048C                     	;# 
  5358  048D                     	;# 
  5359  048E                     	;# 
  5360  048F                     	;# 
  5361  048F                     	;# 
  5362  0490                     	;# 
  5363  0491                     	;# 
  5364  0492                     	;# 
  5365  0492                     	;# 
  5366  0493                     	;# 
  5367  0494                     	;# 
  5368  0495                     	;# 
  5369  0495                     	;# 
  5370  0496                     	;# 
  5371  0497                     	;# 
  5372  0498                     	;# 
  5373  0499                     	;# 
  5374  049A                     	;# 
  5375  049B                     	;# 
  5376  049C                     	;# 
  5377  049D                     	;# 
  5378  050C                     	;# 
  5379  050C                     	;# 
  5380  050D                     	;# 
  5381  050E                     	;# 
  5382  050F                     	;# 
  5383  050F                     	;# 
  5384  0510                     	;# 
  5385  0511                     	;# 
  5386  0512                     	;# 
  5387  0512                     	;# 
  5388  0513                     	;# 
  5389  0514                     	;# 
  5390  0515                     	;# 
  5391  0515                     	;# 
  5392  0516                     	;# 
  5393  0517                     	;# 
  5394  0518                     	;# 
  5395  0519                     	;# 
  5396  051A                     	;# 
  5397  051B                     	;# 
  5398  051C                     	;# 
  5399  051D                     	;# 
  5400  058C                     	;# 
  5401  058C                     	;# 
  5402  058D                     	;# 
  5403  058E                     	;# 
  5404  058F                     	;# 
  5405  058F                     	;# 
  5406  0590                     	;# 
  5407  0591                     	;# 
  5408  0592                     	;# 
  5409  0593                     	;# 
  5410  060C                     	;# 
  5411  060D                     	;# 
  5412  060E                     	;# 
  5413  060F                     	;# 
  5414  0610                     	;# 
  5415  0611                     	;# 
  5416  0612                     	;# 
  5417  0613                     	;# 
  5418  0614                     	;# 
  5419  0616                     	;# 
  5420  0617                     	;# 
  5421  0618                     	;# 
  5422  0619                     	;# 
  5423  061A                     	;# 
  5424  061B                     	;# 
  5425  061C                     	;# 
  5426  061D                     	;# 
  5427  061E                     	;# 
  5428  068C                     	;# 
  5429  068D                     	;# 
  5430  068E                     	;# 
  5431  068F                     	;# 
  5432  0690                     	;# 
  5433  0691                     	;# 
  5434  0692                     	;# 
  5435  0693                     	;# 
  5436  0694                     	;# 
  5437  070C                     	;# 
  5438  070D                     	;# 
  5439  070E                     	;# 
  5440  070F                     	;# 
  5441  0710                     	;# 
  5442  0711                     	;# 
  5443  0712                     	;# 
  5444  0713                     	;# 
  5445  0714                     	;# 
  5446  0716                     	;# 
  5447  0717                     	;# 
  5448  0718                     	;# 
  5449  0719                     	;# 
  5450  071A                     	;# 
  5451  071B                     	;# 
  5452  071C                     	;# 
  5453  071D                     	;# 
  5454  071E                     	;# 
  5455  0796                     	;# 
  5456  0797                     	;# 
  5457  0798                     	;# 
  5458  0799                     	;# 
  5459  079A                     	;# 
  5460  079B                     	;# 
  5461  080C                     	;# 
  5462  080D                     	;# 
  5463  080E                     	;# 
  5464  080F                     	;# 
  5465  0810                     	;# 
  5466  0811                     	;# 
  5467  0812                     	;# 
  5468  0813                     	;# 
  5469  0814                     	;# 
  5470  081A                     	;# 
  5471  081B                     	;# 
  5472  081C                     	;# 
  5473  081D                     	;# 
  5474  081E                     	;# 
  5475  081F                     	;# 
  5476  088C                     	;# 
  5477  088D                     	;# 
  5478  088E                     	;# 
  5479  088F                     	;# 
  5480  0890                     	;# 
  5481  0891                     	;# 
  5482  0892                     	;# 
  5483  0893                     	;# 
  5484  0895                     	;# 
  5485  0896                     	;# 
  5486  0897                     	;# 
  5487  0898                     	;# 
  5488  0899                     	;# 
  5489  089A                     	;# 
  5490  089B                     	;# 
  5491  090C                     	;# 
  5492  090E                     	;# 
  5493  090F                     	;# 
  5494  091F                     	;# 
  5495  098F                     	;# 
  5496  098F                     	;# 
  5497  0990                     	;# 
  5498  0991                     	;# 
  5499  0992                     	;# 
  5500  0993                     	;# 
  5501  0994                     	;# 
  5502  0995                     	;# 
  5503  0996                     	;# 
  5504  0997                     	;# 
  5505  1E0F                     	;# 
  5506  1E10                     	;# 
  5507  1E11                     	;# 
  5508  1E12                     	;# 
  5509  1E13                     	;# 
  5510  1E14                     	;# 
  5511  1E15                     	;# 
  5512  1E16                     	;# 
  5513  1E17                     	;# 
  5514  1E18                     	;# 
  5515  1E19                     	;# 
  5516  1E1A                     	;# 
  5517  1E1B                     	;# 
  5518  1E1C                     	;# 
  5519  1E1D                     	;# 
  5520  1E1E                     	;# 
  5521  1E1F                     	;# 
  5522  1E20                     	;# 
  5523  1E21                     	;# 
  5524  1E22                     	;# 
  5525  1E23                     	;# 
  5526  1E24                     	;# 
  5527  1E25                     	;# 
  5528  1E26                     	;# 
  5529  1E27                     	;# 
  5530  1E28                     	;# 
  5531  1E29                     	;# 
  5532  1E2A                     	;# 
  5533  1E2B                     	;# 
  5534  1E2C                     	;# 
  5535  1E2D                     	;# 
  5536  1E2E                     	;# 
  5537  1E2F                     	;# 
  5538  1E30                     	;# 
  5539  1E31                     	;# 
  5540  1E32                     	;# 
  5541  1E33                     	;# 
  5542  1E34                     	;# 
  5543  1E35                     	;# 
  5544  1E36                     	;# 
  5545  1E37                     	;# 
  5546  1E8F                     	;# 
  5547  1E90                     	;# 
  5548  1E91                     	;# 
  5549  1E92                     	;# 
  5550  1E93                     	;# 
  5551  1E94                     	;# 
  5552  1E95                     	;# 
  5553  1E96                     	;# 
  5554  1E97                     	;# 
  5555  1E9C                     	;# 
  5556  1E9D                     	;# 
  5557  1E9E                     	;# 
  5558  1EA1                     	;# 
  5559  1EA2                     	;# 
  5560  1EA3                     	;# 
  5561  1EA4                     	;# 
  5562  1EA5                     	;# 
  5563  1EA9                     	;# 
  5564  1EAA                     	;# 
  5565  1EAB                     	;# 
  5566  1EAC                     	;# 
  5567  1EB1                     	;# 
  5568  1EB2                     	;# 
  5569  1EB3                     	;# 
  5570  1EB8                     	;# 
  5571  1EB9                     	;# 
  5572  1EBA                     	;# 
  5573  1EBB                     	;# 
  5574  1EBC                     	;# 
  5575  1EBD                     	;# 
  5576  1EBE                     	;# 
  5577  1EC3                     	;# 
  5578  1EC5                     	;# 
  5579  1EC6                     	;# 
  5580  1EC7                     	;# 
  5581  1EC8                     	;# 
  5582  1EC9                     	;# 
  5583  1ECA                     	;# 
  5584  1ECB                     	;# 
  5585  1ECC                     	;# 
  5586  1F10                     	;# 
  5587  1F11                     	;# 
  5588  1F12                     	;# 
  5589  1F13                     	;# 
  5590  1F14                     	;# 
  5591  1F15                     	;# 
  5592  1F16                     	;# 
  5593  1F17                     	;# 
  5594  1F18                     	;# 
  5595  1F19                     	;# 
  5596  1F1A                     	;# 
  5597  1F1B                     	;# 
  5598  1F1C                     	;# 
  5599  1F1D                     	;# 
  5600  1F1E                     	;# 
  5601  1F1F                     	;# 
  5602  1F20                     	;# 
  5603  1F21                     	;# 
  5604  1F22                     	;# 
  5605  1F23                     	;# 
  5606  1F24                     	;# 
  5607  1F25                     	;# 
  5608  1F26                     	;# 
  5609  1F27                     	;# 
  5610  1F28                     	;# 
  5611  1F29                     	;# 
  5612  1F2A                     	;# 
  5613  1F2B                     	;# 
  5614  1F2C                     	;# 
  5615  1F2D                     	;# 
  5616  1F2E                     	;# 
  5617  1F2F                     	;# 
  5618  1F30                     	;# 
  5619  1F31                     	;# 
  5620  1F32                     	;# 
  5621  1F38                     	;# 
  5622  1F39                     	;# 
  5623  1F3A                     	;# 
  5624  1F3B                     	;# 
  5625  1F3C                     	;# 
  5626  1F3D                     	;# 
  5627  1F3E                     	;# 
  5628  1F3F                     	;# 
  5629  1F40                     	;# 
  5630  1F41                     	;# 
  5631  1F43                     	;# 
  5632  1F44                     	;# 
  5633  1F45                     	;# 
  5634  1F46                     	;# 
  5635  1F47                     	;# 
  5636  1F48                     	;# 
  5637  1F49                     	;# 
  5638  1F4A                     	;# 
  5639  1F4B                     	;# 
  5640  1F4C                     	;# 
  5641  1F4E                     	;# 
  5642  1F4F                     	;# 
  5643  1F50                     	;# 
  5644  1F51                     	;# 
  5645  1F52                     	;# 
  5646  1F53                     	;# 
  5647  1F54                     	;# 
  5648  1F55                     	;# 
  5649  1F56                     	;# 
  5650  1F57                     	;# 
  5651  1F59                     	;# 
  5652  1F5A                     	;# 
  5653  1F5B                     	;# 
  5654  1F5C                     	;# 
  5655  1F5D                     	;# 
  5656  1F61                     	;# 
  5657  1F62                     	;# 
  5658  1F64                     	;# 
  5659  1F65                     	;# 
  5660  1F66                     	;# 
  5661  1F67                     	;# 
  5662  1F68                     	;# 
  5663  1F69                     	;# 
  5664  1F6A                     	;# 
  5665  1F6B                     	;# 
  5666  1F6C                     	;# 
  5667  1F6D                     	;# 
  5668  1FE4                     	;# 
  5669  1FE5                     	;# 
  5670  1FE6                     	;# 
  5671  1FE7                     	;# 
  5672  1FE8                     	;# 
  5673  1FE9                     	;# 
  5674  1FEA                     	;# 
  5675  1FEB                     	;# 
  5676  1FED                     	;# 
  5677  1FEE                     	;# 
  5678  1FEF                     	;# 
  5679  0000                     	;# 
  5680  0001                     	;# 
  5681  0002                     	;# 
  5682  0003                     	;# 
  5683  0004                     	;# 
  5684  0005                     	;# 
  5685  0006                     	;# 
  5686  0007                     	;# 
  5687  0008                     	;# 
  5688  0009                     	;# 
  5689  000A                     	;# 
  5690  000B                     	;# 
  5691  000C                     	;# 
  5692  000D                     	;# 
  5693  000E                     	;# 
  5694  000F                     	;# 
  5695  0010                     	;# 
  5696  0011                     	;# 
  5697  0012                     	;# 
  5698  0013                     	;# 
  5699  0014                     	;# 
  5700  0015                     	;# 
  5701  0016                     	;# 
  5702  0017                     	;# 
  5703  0018                     	;# 
  5704  0019                     	;# 
  5705  001A                     	;# 
  5706  001C                     	;# 
  5707  001C                     	;# 
  5708  001D                     	;# 
  5709  001D                     	;# 
  5710  001E                     	;# 
  5711  001F                     	;# 
  5712  008C                     	;# 
  5713  008C                     	;# 
  5714  008D                     	;# 
  5715  008E                     	;# 
  5716  008E                     	;# 
  5717  008F                     	;# 
  5718  0090                     	;# 
  5719  0090                     	;# 
  5720  0091                     	;# 
  5721  0093                     	;# 
  5722  0094                     	;# 
  5723  0095                     	;# 
  5724  0096                     	;# 
  5725  0097                     	;# 
  5726  0098                     	;# 
  5727  0099                     	;# 
  5728  009A                     	;# 
  5729  009B                     	;# 
  5730  009C                     	;# 
  5731  009D                     	;# 
  5732  009E                     	;# 
  5733  010C                     	;# 
  5734  010D                     	;# 
  5735  010E                     	;# 
  5736  010E                     	;# 
  5737  010F                     	;# 
  5738  0110                     	;# 
  5739  0110                     	;# 
  5740  0111                     	;# 
  5741  0112                     	;# 
  5742  0112                     	;# 
  5743  0113                     	;# 
  5744  0114                     	;# 
  5745  0114                     	;# 
  5746  0115                     	;# 
  5747  0116                     	;# 
  5748  0116                     	;# 
  5749  0117                     	;# 
  5750  0119                     	;# 
  5751  0119                     	;# 
  5752  0119                     	;# 
  5753  011A                     	;# 
  5754  011A                     	;# 
  5755  011A                     	;# 
  5756  011B                     	;# 
  5757  011B                     	;# 
  5758  011B                     	;# 
  5759  011B                     	;# 
  5760  011B                     	;# 
  5761  011C                     	;# 
  5762  011C                     	;# 
  5763  011C                     	;# 
  5764  011D                     	;# 
  5765  011D                     	;# 
  5766  011D                     	;# 
  5767  011E                     	;# 
  5768  011E                     	;# 
  5769  011E                     	;# 
  5770  011F                     	;# 
  5771  011F                     	;# 
  5772  011F                     	;# 
  5773  011F                     	;# 
  5774  011F                     	;# 
  5775  018C                     	;# 
  5776  018D                     	;# 
  5777  018E                     	;# 
  5778  018F                     	;# 
  5779  0190                     	;# 
  5780  0191                     	;# 
  5781  0192                     	;# 
  5782  0196                     	;# 
  5783  0197                     	;# 
  5784  0198                     	;# 
  5785  0199                     	;# 
  5786  019A                     	;# 
  5787  019B                     	;# 
  5788  019C                     	;# 
  5789  020C                     	;# 
  5790  020C                     	;# 
  5791  020D                     	;# 
  5792  020E                     	;# 
  5793  020F                     	;# 
  5794  020F                     	;# 
  5795  0210                     	;# 
  5796  0210                     	;# 
  5797  0211                     	;# 
  5798  0211                     	;# 
  5799  0212                     	;# 
  5800  0212                     	;# 
  5801  0213                     	;# 
  5802  0214                     	;# 
  5803  0215                     	;# 
  5804  0215                     	;# 
  5805  0216                     	;# 
  5806  0216                     	;# 
  5807  0217                     	;# 
  5808  0217                     	;# 
  5809  0218                     	;# 
  5810  0218                     	;# 
  5811  0219                     	;# 
  5812  021A                     	;# 
  5813  021B                     	;# 
  5814  021B                     	;# 
  5815  021C                     	;# 
  5816  021C                     	;# 
  5817  021D                     	;# 
  5818  021D                     	;# 
  5819  021E                     	;# 
  5820  021F                     	;# 
  5821  028C                     	;# 
  5822  028C                     	;# 
  5823  028D                     	;# 
  5824  028D                     	;# 
  5825  028E                     	;# 
  5826  028F                     	;# 
  5827  0290                     	;# 
  5828  0290                     	;# 
  5829  0291                     	;# 
  5830  0292                     	;# 
  5831  0292                     	;# 
  5832  0293                     	;# 
  5833  0293                     	;# 
  5834  0294                     	;# 
  5835  0295                     	;# 
  5836  0296                     	;# 
  5837  0296                     	;# 
  5838  0297                     	;# 
  5839  0298                     	;# 
  5840  0298                     	;# 
  5841  0299                     	;# 
  5842  0299                     	;# 
  5843  029A                     	;# 
  5844  029B                     	;# 
  5845  029C                     	;# 
  5846  029C                     	;# 
  5847  029D                     	;# 
  5848  030C                     	;# 
  5849  030C                     	;# 
  5850  030D                     	;# 
  5851  030E                     	;# 
  5852  030F                     	;# 
  5853  0310                     	;# 
  5854  0310                     	;# 
  5855  0311                     	;# 
  5856  0312                     	;# 
  5857  0313                     	;# 
  5858  0314                     	;# 
  5859  0314                     	;# 
  5860  0315                     	;# 
  5861  0316                     	;# 
  5862  0317                     	;# 
  5863  0318                     	;# 
  5864  0318                     	;# 
  5865  0319                     	;# 
  5866  031A                     	;# 
  5867  031B                     	;# 
  5868  031C                     	;# 
  5869  031C                     	;# 
  5870  031D                     	;# 
  5871  031E                     	;# 
  5872  031F                     	;# 
  5873  038C                     	;# 
  5874  038C                     	;# 
  5875  038D                     	;# 
  5876  038E                     	;# 
  5877  0390                     	;# 
  5878  0390                     	;# 
  5879  0391                     	;# 
  5880  0392                     	;# 
  5881  040C                     	;# 
  5882  040D                     	;# 
  5883  040E                     	;# 
  5884  040F                     	;# 
  5885  0410                     	;# 
  5886  0411                     	;# 
  5887  0416                     	;# 
  5888  0416                     	;# 
  5889  0417                     	;# 
  5890  0418                     	;# 
  5891  0418                     	;# 
  5892  0419                     	;# 
  5893  041A                     	;# 
  5894  041A                     	;# 
  5895  041B                     	;# 
  5896  041C                     	;# 
  5897  041C                     	;# 
  5898  041D                     	;# 
  5899  041E                     	;# 
  5900  041F                     	;# 
  5901  048C                     	;# 
  5902  048C                     	;# 
  5903  048D                     	;# 
  5904  048E                     	;# 
  5905  048F                     	;# 
  5906  048F                     	;# 
  5907  0490                     	;# 
  5908  0491                     	;# 
  5909  0492                     	;# 
  5910  0492                     	;# 
  5911  0493                     	;# 
  5912  0494                     	;# 
  5913  0495                     	;# 
  5914  0495                     	;# 
  5915  0496                     	;# 
  5916  0497                     	;# 
  5917  0498                     	;# 
  5918  0499                     	;# 
  5919  049A                     	;# 
  5920  049B                     	;# 
  5921  049C                     	;# 
  5922  049D                     	;# 
  5923  050C                     	;# 
  5924  050C                     	;# 
  5925  050D                     	;# 
  5926  050E                     	;# 
  5927  050F                     	;# 
  5928  050F                     	;# 
  5929  0510                     	;# 
  5930  0511                     	;# 
  5931  0512                     	;# 
  5932  0512                     	;# 
  5933  0513                     	;# 
  5934  0514                     	;# 
  5935  0515                     	;# 
  5936  0515                     	;# 
  5937  0516                     	;# 
  5938  0517                     	;# 
  5939  0518                     	;# 
  5940  0519                     	;# 
  5941  051A                     	;# 
  5942  051B                     	;# 
  5943  051C                     	;# 
  5944  051D                     	;# 
  5945  058C                     	;# 
  5946  058C                     	;# 
  5947  058D                     	;# 
  5948  058E                     	;# 
  5949  058F                     	;# 
  5950  058F                     	;# 
  5951  0590                     	;# 
  5952  0591                     	;# 
  5953  0592                     	;# 
  5954  0593                     	;# 
  5955  060C                     	;# 
  5956  060D                     	;# 
  5957  060E                     	;# 
  5958  060F                     	;# 
  5959  0610                     	;# 
  5960  0611                     	;# 
  5961  0612                     	;# 
  5962  0613                     	;# 
  5963  0614                     	;# 
  5964  0616                     	;# 
  5965  0617                     	;# 
  5966  0618                     	;# 
  5967  0619                     	;# 
  5968  061A                     	;# 
  5969  061B                     	;# 
  5970  061C                     	;# 
  5971  061D                     	;# 
  5972  061E                     	;# 
  5973  068C                     	;# 
  5974  068D                     	;# 
  5975  068E                     	;# 
  5976  068F                     	;# 
  5977  0690                     	;# 
  5978  0691                     	;# 
  5979  0692                     	;# 
  5980  0693                     	;# 
  5981  0694                     	;# 
  5982  070C                     	;# 
  5983  070D                     	;# 
  5984  070E                     	;# 
  5985  070F                     	;# 
  5986  0710                     	;# 
  5987  0711                     	;# 
  5988  0712                     	;# 
  5989  0713                     	;# 
  5990  0714                     	;# 
  5991  0716                     	;# 
  5992  0717                     	;# 
  5993  0718                     	;# 
  5994  0719                     	;# 
  5995  071A                     	;# 
  5996  071B                     	;# 
  5997  071C                     	;# 
  5998  071D                     	;# 
  5999  071E                     	;# 
  6000  0796                     	;# 
  6001  0797                     	;# 
  6002  0798                     	;# 
  6003  0799                     	;# 
  6004  079A                     	;# 
  6005  079B                     	;# 
  6006  080C                     	;# 
  6007  080D                     	;# 
  6008  080E                     	;# 
  6009  080F                     	;# 
  6010  0810                     	;# 
  6011  0811                     	;# 
  6012  0812                     	;# 
  6013  0813                     	;# 
  6014  0814                     	;# 
  6015  081A                     	;# 
  6016  081B                     	;# 
  6017  081C                     	;# 
  6018  081D                     	;# 
  6019  081E                     	;# 
  6020  081F                     	;# 
  6021  088C                     	;# 
  6022  088D                     	;# 
  6023  088E                     	;# 
  6024  088F                     	;# 
  6025  0890                     	;# 
  6026  0891                     	;# 
  6027  0892                     	;# 
  6028  0893                     	;# 
  6029  0895                     	;# 
  6030  0896                     	;# 
  6031  0897                     	;# 
  6032  0898                     	;# 
  6033  0899                     	;# 
  6034  089A                     	;# 
  6035  089B                     	;# 
  6036  090C                     	;# 
  6037  090E                     	;# 
  6038  090F                     	;# 
  6039  091F                     	;# 
  6040  098F                     	;# 
  6041  098F                     	;# 
  6042  0990                     	;# 
  6043  0991                     	;# 
  6044  0992                     	;# 
  6045  0993                     	;# 
  6046  0994                     	;# 
  6047  0995                     	;# 
  6048  0996                     	;# 
  6049  0997                     	;# 
  6050  1E0F                     	;# 
  6051  1E10                     	;# 
  6052  1E11                     	;# 
  6053  1E12                     	;# 
  6054  1E13                     	;# 
  6055  1E14                     	;# 
  6056  1E15                     	;# 
  6057  1E16                     	;# 
  6058  1E17                     	;# 
  6059  1E18                     	;# 
  6060  1E19                     	;# 
  6061  1E1A                     	;# 
  6062  1E1B                     	;# 
  6063  1E1C                     	;# 
  6064  1E1D                     	;# 
  6065  1E1E                     	;# 
  6066  1E1F                     	;# 
  6067  1E20                     	;# 
  6068  1E21                     	;# 
  6069  1E22                     	;# 
  6070  1E23                     	;# 
  6071  1E24                     	;# 
  6072  1E25                     	;# 
  6073  1E26                     	;# 
  6074  1E27                     	;# 
  6075  1E28                     	;# 
  6076  1E29                     	;# 
  6077  1E2A                     	;# 
  6078  1E2B                     	;# 
  6079  1E2C                     	;# 
  6080  1E2D                     	;# 
  6081  1E2E                     	;# 
  6082  1E2F                     	;# 
  6083  1E30                     	;# 
  6084  1E31                     	;# 
  6085  1E32                     	;# 
  6086  1E33                     	;# 
  6087  1E34                     	;# 
  6088  1E35                     	;# 
  6089  1E36                     	;# 
  6090  1E37                     	;# 
  6091  1E8F                     	;# 
  6092  1E90                     	;# 
  6093  1E91                     	;# 
  6094  1E92                     	;# 
  6095  1E93                     	;# 
  6096  1E94                     	;# 
  6097  1E95                     	;# 
  6098  1E96                     	;# 
  6099  1E97                     	;# 
  6100  1E9C                     	;# 
  6101  1E9D                     	;# 
  6102  1E9E                     	;# 
  6103  1EA1                     	;# 
  6104  1EA2                     	;# 
  6105  1EA3                     	;# 
  6106  1EA4                     	;# 
  6107  1EA5                     	;# 
  6108  1EA9                     	;# 
  6109  1EAA                     	;# 
  6110  1EAB                     	;# 
  6111  1EAC                     	;# 
  6112  1EB1                     	;# 
  6113  1EB2                     	;# 
  6114  1EB3                     	;# 
  6115  1EB8                     	;# 
  6116  1EB9                     	;# 
  6117  1EBA                     	;# 
  6118  1EBB                     	;# 
  6119  1EBC                     	;# 
  6120  1EBD                     	;# 
  6121  1EBE                     	;# 
  6122  1EC3                     	;# 
  6123  1EC5                     	;# 
  6124  1EC6                     	;# 
  6125  1EC7                     	;# 
  6126  1EC8                     	;# 
  6127  1EC9                     	;# 
  6128  1ECA                     	;# 
  6129  1ECB                     	;# 
  6130  1ECC                     	;# 
  6131  1F10                     	;# 
  6132  1F11                     	;# 
  6133  1F12                     	;# 
  6134  1F13                     	;# 
  6135  1F14                     	;# 
  6136  1F15                     	;# 
  6137  1F16                     	;# 
  6138  1F17                     	;# 
  6139  1F18                     	;# 
  6140  1F19                     	;# 
  6141  1F1A                     	;# 
  6142  1F1B                     	;# 
  6143  1F1C                     	;# 
  6144  1F1D                     	;# 
  6145  1F1E                     	;# 
  6146  1F1F                     	;# 
  6147  1F20                     	;# 
  6148  1F21                     	;# 
  6149  1F22                     	;# 
  6150  1F23                     	;# 
  6151  1F24                     	;# 
  6152  1F25                     	;# 
  6153  1F26                     	;# 
  6154  1F27                     	;# 
  6155  1F28                     	;# 
  6156  1F29                     	;# 
  6157  1F2A                     	;# 
  6158  1F2B                     	;# 
  6159  1F2C                     	;# 
  6160  1F2D                     	;# 
  6161  1F2E                     	;# 
  6162  1F2F                     	;# 
  6163  1F30                     	;# 
  6164  1F31                     	;# 
  6165  1F32                     	;# 
  6166  1F38                     	;# 
  6167  1F39                     	;# 
  6168  1F3A                     	;# 
  6169  1F3B                     	;# 
  6170  1F3C                     	;# 
  6171  1F3D                     	;# 
  6172  1F3E                     	;# 
  6173  1F3F                     	;# 
  6174  1F40                     	;# 
  6175  1F41                     	;# 
  6176  1F43                     	;# 
  6177  1F44                     	;# 
  6178  1F45                     	;# 
  6179  1F46                     	;# 
  6180  1F47                     	;# 
  6181  1F48                     	;# 
  6182  1F49                     	;# 
  6183  1F4A                     	;# 
  6184  1F4B                     	;# 
  6185  1F4C                     	;# 
  6186  1F4E                     	;# 
  6187  1F4F                     	;# 
  6188  1F50                     	;# 
  6189  1F51                     	;# 
  6190  1F52                     	;# 
  6191  1F53                     	;# 
  6192  1F54                     	;# 
  6193  1F55                     	;# 
  6194  1F56                     	;# 
  6195  1F57                     	;# 
  6196  1F59                     	;# 
  6197  1F5A                     	;# 
  6198  1F5B                     	;# 
  6199  1F5C                     	;# 
  6200  1F5D                     	;# 
  6201  1F61                     	;# 
  6202  1F62                     	;# 
  6203  1F64                     	;# 
  6204  1F65                     	;# 
  6205  1F66                     	;# 
  6206  1F67                     	;# 
  6207  1F68                     	;# 
  6208  1F69                     	;# 
  6209  1F6A                     	;# 
  6210  1F6B                     	;# 
  6211  1F6C                     	;# 
  6212  1F6D                     	;# 
  6213  1FE4                     	;# 
  6214  1FE5                     	;# 
  6215  1FE6                     	;# 
  6216  1FE7                     	;# 
  6217  1FE8                     	;# 
  6218  1FE9                     	;# 
  6219  1FEA                     	;# 
  6220  1FEB                     	;# 
  6221  1FED                     	;# 
  6222  1FEE                     	;# 
  6223  1FEF                     	;# 
  6224  0000                     	;# 
  6225  0001                     	;# 
  6226  0002                     	;# 
  6227  0003                     	;# 
  6228  0004                     	;# 
  6229  0005                     	;# 
  6230  0006                     	;# 
  6231  0007                     	;# 
  6232  0008                     	;# 
  6233  0009                     	;# 
  6234  000A                     	;# 
  6235  000B                     	;# 
  6236  000C                     	;# 
  6237  000D                     	;# 
  6238  000E                     	;# 
  6239  000F                     	;# 
  6240  0010                     	;# 
  6241  0011                     	;# 
  6242  0012                     	;# 
  6243  0013                     	;# 
  6244  0014                     	;# 
  6245  0015                     	;# 
  6246  0016                     	;# 
  6247  0017                     	;# 
  6248  0018                     	;# 
  6249  0019                     	;# 
  6250  001A                     	;# 
  6251  001C                     	;# 
  6252  001C                     	;# 
  6253  001D                     	;# 
  6254  001D                     	;# 
  6255  001E                     	;# 
  6256  001F                     	;# 
  6257  008C                     	;# 
  6258  008C                     	;# 
  6259  008D                     	;# 
  6260  008E                     	;# 
  6261  008E                     	;# 
  6262  008F                     	;# 
  6263  0090                     	;# 
  6264  0090                     	;# 
  6265  0091                     	;# 
  6266  0093                     	;# 
  6267  0094                     	;# 
  6268  0095                     	;# 
  6269  0096                     	;# 
  6270  0097                     	;# 
  6271  0098                     	;# 
  6272  0099                     	;# 
  6273  009A                     	;# 
  6274  009B                     	;# 
  6275  009C                     	;# 
  6276  009D                     	;# 
  6277  009E                     	;# 
  6278  010C                     	;# 
  6279  010D                     	;# 
  6280  010E                     	;# 
  6281  010E                     	;# 
  6282  010F                     	;# 
  6283  0110                     	;# 
  6284  0110                     	;# 
  6285  0111                     	;# 
  6286  0112                     	;# 
  6287  0112                     	;# 
  6288  0113                     	;# 
  6289  0114                     	;# 
  6290  0114                     	;# 
  6291  0115                     	;# 
  6292  0116                     	;# 
  6293  0116                     	;# 
  6294  0117                     	;# 
  6295  0119                     	;# 
  6296  0119                     	;# 
  6297  0119                     	;# 
  6298  011A                     	;# 
  6299  011A                     	;# 
  6300  011A                     	;# 
  6301  011B                     	;# 
  6302  011B                     	;# 
  6303  011B                     	;# 
  6304  011B                     	;# 
  6305  011B                     	;# 
  6306  011C                     	;# 
  6307  011C                     	;# 
  6308  011C                     	;# 
  6309  011D                     	;# 
  6310  011D                     	;# 
  6311  011D                     	;# 
  6312  011E                     	;# 
  6313  011E                     	;# 
  6314  011E                     	;# 
  6315  011F                     	;# 
  6316  011F                     	;# 
  6317  011F                     	;# 
  6318  011F                     	;# 
  6319  011F                     	;# 
  6320  018C                     	;# 
  6321  018D                     	;# 
  6322  018E                     	;# 
  6323  018F                     	;# 
  6324  0190                     	;# 
  6325  0191                     	;# 
  6326  0192                     	;# 
  6327  0196                     	;# 
  6328  0197                     	;# 
  6329  0198                     	;# 
  6330  0199                     	;# 
  6331  019A                     	;# 
  6332  019B                     	;# 
  6333  019C                     	;# 
  6334  020C                     	;# 
  6335  020C                     	;# 
  6336  020D                     	;# 
  6337  020E                     	;# 
  6338  020F                     	;# 
  6339  020F                     	;# 
  6340  0210                     	;# 
  6341  0210                     	;# 
  6342  0211                     	;# 
  6343  0211                     	;# 
  6344  0212                     	;# 
  6345  0212                     	;# 
  6346  0213                     	;# 
  6347  0214                     	;# 
  6348  0215                     	;# 
  6349  0215                     	;# 
  6350  0216                     	;# 
  6351  0216                     	;# 
  6352  0217                     	;# 
  6353  0217                     	;# 
  6354  0218                     	;# 
  6355  0218                     	;# 
  6356  0219                     	;# 
  6357  021A                     	;# 
  6358  021B                     	;# 
  6359  021B                     	;# 
  6360  021C                     	;# 
  6361  021C                     	;# 
  6362  021D                     	;# 
  6363  021D                     	;# 
  6364  021E                     	;# 
  6365  021F                     	;# 
  6366  028C                     	;# 
  6367  028C                     	;# 
  6368  028D                     	;# 
  6369  028D                     	;# 
  6370  028E                     	;# 
  6371  028F                     	;# 
  6372  0290                     	;# 
  6373  0290                     	;# 
  6374  0291                     	;# 
  6375  0292                     	;# 
  6376  0292                     	;# 
  6377  0293                     	;# 
  6378  0293                     	;# 
  6379  0294                     	;# 
  6380  0295                     	;# 
  6381  0296                     	;# 
  6382  0296                     	;# 
  6383  0297                     	;# 
  6384  0298                     	;# 
  6385  0298                     	;# 
  6386  0299                     	;# 
  6387  0299                     	;# 
  6388  029A                     	;# 
  6389  029B                     	;# 
  6390  029C                     	;# 
  6391  029C                     	;# 
  6392  029D                     	;# 
  6393  030C                     	;# 
  6394  030C                     	;# 
  6395  030D                     	;# 
  6396  030E                     	;# 
  6397  030F                     	;# 
  6398  0310                     	;# 
  6399  0310                     	;# 
  6400  0311                     	;# 
  6401  0312                     	;# 
  6402  0313                     	;# 
  6403  0314                     	;# 
  6404  0314                     	;# 
  6405  0315                     	;# 
  6406  0316                     	;# 
  6407  0317                     	;# 
  6408  0318                     	;# 
  6409  0318                     	;# 
  6410  0319                     	;# 
  6411  031A                     	;# 
  6412  031B                     	;# 
  6413  031C                     	;# 
  6414  031C                     	;# 
  6415  031D                     	;# 
  6416  031E                     	;# 
  6417  031F                     	;# 
  6418  038C                     	;# 
  6419  038C                     	;# 
  6420  038D                     	;# 
  6421  038E                     	;# 
  6422  0390                     	;# 
  6423  0390                     	;# 
  6424  0391                     	;# 
  6425  0392                     	;# 
  6426  040C                     	;# 
  6427  040D                     	;# 
  6428  040E                     	;# 
  6429  040F                     	;# 
  6430  0410                     	;# 
  6431  0411                     	;# 
  6432  0416                     	;# 
  6433  0416                     	;# 
  6434  0417                     	;# 
  6435  0418                     	;# 
  6436  0418                     	;# 
  6437  0419                     	;# 
  6438  041A                     	;# 
  6439  041A                     	;# 
  6440  041B                     	;# 
  6441  041C                     	;# 
  6442  041C                     	;# 
  6443  041D                     	;# 
  6444  041E                     	;# 
  6445  041F                     	;# 
  6446  048C                     	;# 
  6447  048C                     	;# 
  6448  048D                     	;# 
  6449  048E                     	;# 
  6450  048F                     	;# 
  6451  048F                     	;# 
  6452  0490                     	;# 
  6453  0491                     	;# 
  6454  0492                     	;# 
  6455  0492                     	;# 
  6456  0493                     	;# 
  6457  0494                     	;# 
  6458  0495                     	;# 
  6459  0495                     	;# 
  6460  0496                     	;# 
  6461  0497                     	;# 
  6462  0498                     	;# 
  6463  0499                     	;# 
  6464  049A                     	;# 
  6465  049B                     	;# 
  6466  049C                     	;# 
  6467  049D                     	;# 
  6468  050C                     	;# 
  6469  050C                     	;# 
  6470  050D                     	;# 
  6471  050E                     	;# 
  6472  050F                     	;# 
  6473  050F                     	;# 
  6474  0510                     	;# 
  6475  0511                     	;# 
  6476  0512                     	;# 
  6477  0512                     	;# 
  6478  0513                     	;# 
  6479  0514                     	;# 
  6480  0515                     	;# 
  6481  0515                     	;# 
  6482  0516                     	;# 
  6483  0517                     	;# 
  6484  0518                     	;# 
  6485  0519                     	;# 
  6486  051A                     	;# 
  6487  051B                     	;# 
  6488  051C                     	;# 
  6489  051D                     	;# 
  6490  058C                     	;# 
  6491  058C                     	;# 
  6492  058D                     	;# 
  6493  058E                     	;# 
  6494  058F                     	;# 
  6495  058F                     	;# 
  6496  0590                     	;# 
  6497  0591                     	;# 
  6498  0592                     	;# 
  6499  0593                     	;# 
  6500  060C                     	;# 
  6501  060D                     	;# 
  6502  060E                     	;# 
  6503  060F                     	;# 
  6504  0610                     	;# 
  6505  0611                     	;# 
  6506  0612                     	;# 
  6507  0613                     	;# 
  6508  0614                     	;# 
  6509  0616                     	;# 
  6510  0617                     	;# 
  6511  0618                     	;# 
  6512  0619                     	;# 
  6513  061A                     	;# 
  6514  061B                     	;# 
  6515  061C                     	;# 
  6516  061D                     	;# 
  6517  061E                     	;# 
  6518  068C                     	;# 
  6519  068D                     	;# 
  6520  068E                     	;# 
  6521  068F                     	;# 
  6522  0690                     	;# 
  6523  0691                     	;# 
  6524  0692                     	;# 
  6525  0693                     	;# 
  6526  0694                     	;# 
  6527  070C                     	;# 
  6528  070D                     	;# 
  6529  070E                     	;# 
  6530  070F                     	;# 
  6531  0710                     	;# 
  6532  0711                     	;# 
  6533  0712                     	;# 
  6534  0713                     	;# 
  6535  0714                     	;# 
  6536  0716                     	;# 
  6537  0717                     	;# 
  6538  0718                     	;# 
  6539  0719                     	;# 
  6540  071A                     	;# 
  6541  071B                     	;# 
  6542  071C                     	;# 
  6543  071D                     	;# 
  6544  071E                     	;# 
  6545  0796                     	;# 
  6546  0797                     	;# 
  6547  0798                     	;# 
  6548  0799                     	;# 
  6549  079A                     	;# 
  6550  079B                     	;# 
  6551  080C                     	;# 
  6552  080D                     	;# 
  6553  080E                     	;# 
  6554  080F                     	;# 
  6555  0810                     	;# 
  6556  0811                     	;# 
  6557  0812                     	;# 
  6558  0813                     	;# 
  6559  0814                     	;# 
  6560  081A                     	;# 
  6561  081B                     	;# 
  6562  081C                     	;# 
  6563  081D                     	;# 
  6564  081E                     	;# 
  6565  081F                     	;# 
  6566  088C                     	;# 
  6567  088D                     	;# 
  6568  088E                     	;# 
  6569  088F                     	;# 
  6570  0890                     	;# 
  6571  0891                     	;# 
  6572  0892                     	;# 
  6573  0893                     	;# 
  6574  0895                     	;# 
  6575  0896                     	;# 
  6576  0897                     	;# 
  6577  0898                     	;# 
  6578  0899                     	;# 
  6579  089A                     	;# 
  6580  089B                     	;# 
  6581  090C                     	;# 
  6582  090E                     	;# 
  6583  090F                     	;# 
  6584  091F                     	;# 
  6585  098F                     	;# 
  6586  098F                     	;# 
  6587  0990                     	;# 
  6588  0991                     	;# 
  6589  0992                     	;# 
  6590  0993                     	;# 
  6591  0994                     	;# 
  6592  0995                     	;# 
  6593  0996                     	;# 
  6594  0997                     	;# 
  6595  1E0F                     	;# 
  6596  1E10                     	;# 
  6597  1E11                     	;# 
  6598  1E12                     	;# 
  6599  1E13                     	;# 
  6600  1E14                     	;# 
  6601  1E15                     	;# 
  6602  1E16                     	;# 
  6603  1E17                     	;# 
  6604  1E18                     	;# 
  6605  1E19                     	;# 
  6606  1E1A                     	;# 
  6607  1E1B                     	;# 
  6608  1E1C                     	;# 
  6609  1E1D                     	;# 
  6610  1E1E                     	;# 
  6611  1E1F                     	;# 
  6612  1E20                     	;# 
  6613  1E21                     	;# 
  6614  1E22                     	;# 
  6615  1E23                     	;# 
  6616  1E24                     	;# 
  6617  1E25                     	;# 
  6618  1E26                     	;# 
  6619  1E27                     	;# 
  6620  1E28                     	;# 
  6621  1E29                     	;# 
  6622  1E2A                     	;# 
  6623  1E2B                     	;# 
  6624  1E2C                     	;# 
  6625  1E2D                     	;# 
  6626  1E2E                     	;# 
  6627  1E2F                     	;# 
  6628  1E30                     	;# 
  6629  1E31                     	;# 
  6630  1E32                     	;# 
  6631  1E33                     	;# 
  6632  1E34                     	;# 
  6633  1E35                     	;# 
  6634  1E36                     	;# 
  6635  1E37                     	;# 
  6636  1E8F                     	;# 
  6637  1E90                     	;# 
  6638  1E91                     	;# 
  6639  1E92                     	;# 
  6640  1E93                     	;# 
  6641  1E94                     	;# 
  6642  1E95                     	;# 
  6643  1E96                     	;# 
  6644  1E97                     	;# 
  6645  1E9C                     	;# 
  6646  1E9D                     	;# 
  6647  1E9E                     	;# 
  6648  1EA1                     	;# 
  6649  1EA2                     	;# 
  6650  1EA3                     	;# 
  6651  1EA4                     	;# 
  6652  1EA5                     	;# 
  6653  1EA9                     	;# 
  6654  1EAA                     	;# 
  6655  1EAB                     	;# 
  6656  1EAC                     	;# 
  6657  1EB1                     	;# 
  6658  1EB2                     	;# 
  6659  1EB3                     	;# 
  6660  1EB8                     	;# 
  6661  1EB9                     	;# 
  6662  1EBA                     	;# 
  6663  1EBB                     	;# 
  6664  1EBC                     	;# 
  6665  1EBD                     	;# 
  6666  1EBE                     	;# 
  6667  1EC3                     	;# 
  6668  1EC5                     	;# 
  6669  1EC6                     	;# 
  6670  1EC7                     	;# 
  6671  1EC8                     	;# 
  6672  1EC9                     	;# 
  6673  1ECA                     	;# 
  6674  1ECB                     	;# 
  6675  1ECC                     	;# 
  6676  1F10                     	;# 
  6677  1F11                     	;# 
  6678  1F12                     	;# 
  6679  1F13                     	;# 
  6680  1F14                     	;# 
  6681  1F15                     	;# 
  6682  1F16                     	;# 
  6683  1F17                     	;# 
  6684  1F18                     	;# 
  6685  1F19                     	;# 
  6686  1F1A                     	;# 
  6687  1F1B                     	;# 
  6688  1F1C                     	;# 
  6689  1F1D                     	;# 
  6690  1F1E                     	;# 
  6691  1F1F                     	;# 
  6692  1F20                     	;# 
  6693  1F21                     	;# 
  6694  1F22                     	;# 
  6695  1F23                     	;# 
  6696  1F24                     	;# 
  6697  1F25                     	;# 
  6698  1F26                     	;# 
  6699  1F27                     	;# 
  6700  1F28                     	;# 
  6701  1F29                     	;# 
  6702  1F2A                     	;# 
  6703  1F2B                     	;# 
  6704  1F2C                     	;# 
  6705  1F2D                     	;# 
  6706  1F2E                     	;# 
  6707  1F2F                     	;# 
  6708  1F30                     	;# 
  6709  1F31                     	;# 
  6710  1F32                     	;# 
  6711  1F38                     	;# 
  6712  1F39                     	;# 
  6713  1F3A                     	;# 
  6714  1F3B                     	;# 
  6715  1F3C                     	;# 
  6716  1F3D                     	;# 
  6717  1F3E                     	;# 
  6718  1F3F                     	;# 
  6719  1F40                     	;# 
  6720  1F41                     	;# 
  6721  1F43                     	;# 
  6722  1F44                     	;# 
  6723  1F45                     	;# 
  6724  1F46                     	;# 
  6725  1F47                     	;# 
  6726  1F48                     	;# 
  6727  1F49                     	;# 
  6728  1F4A                     	;# 
  6729  1F4B                     	;# 
  6730  1F4C                     	;# 
  6731  1F4E                     	;# 
  6732  1F4F                     	;# 
  6733  1F50                     	;# 
  6734  1F51                     	;# 
  6735  1F52                     	;# 
  6736  1F53                     	;# 
  6737  1F54                     	;# 
  6738  1F55                     	;# 
  6739  1F56                     	;# 
  6740  1F57                     	;# 
  6741  1F59                     	;# 
  6742  1F5A                     	;# 
  6743  1F5B                     	;# 
  6744  1F5C                     	;# 
  6745  1F5D                     	;# 
  6746  1F61                     	;# 
  6747  1F62                     	;# 
  6748  1F64                     	;# 
  6749  1F65                     	;# 
  6750  1F66                     	;# 
  6751  1F67                     	;# 
  6752  1F68                     	;# 
  6753  1F69                     	;# 
  6754  1F6A                     	;# 
  6755  1F6B                     	;# 
  6756  1F6C                     	;# 
  6757  1F6D                     	;# 
  6758  1FE4                     	;# 
  6759  1FE5                     	;# 
  6760  1FE6                     	;# 
  6761  1FE7                     	;# 
  6762  1FE8                     	;# 
  6763  1FE9                     	;# 
  6764  1FEA                     	;# 
  6765  1FEB                     	;# 
  6766  1FED                     	;# 
  6767  1FEE                     	;# 
  6768  1FEF                     	;# 
  6769  0000                     	;# 
  6770  0001                     	;# 
  6771  0002                     	;# 
  6772  0003                     	;# 
  6773  0004                     	;# 
  6774  0005                     	;# 
  6775  0006                     	;# 
  6776  0007                     	;# 
  6777  0008                     	;# 
  6778  0009                     	;# 
  6779  000A                     	;# 
  6780  000B                     	;# 
  6781  000C                     	;# 
  6782  000D                     	;# 
  6783  000E                     	;# 
  6784  000F                     	;# 
  6785  0010                     	;# 
  6786  0011                     	;# 
  6787  0012                     	;# 
  6788  0013                     	;# 
  6789  0014                     	;# 
  6790  0015                     	;# 
  6791  0016                     	;# 
  6792  0017                     	;# 
  6793  0018                     	;# 
  6794  0019                     	;# 
  6795  001A                     	;# 
  6796  001C                     	;# 
  6797  001C                     	;# 
  6798  001D                     	;# 
  6799  001D                     	;# 
  6800  001E                     	;# 
  6801  001F                     	;# 
  6802  008C                     	;# 
  6803  008C                     	;# 
  6804  008D                     	;# 
  6805  008E                     	;# 
  6806  008E                     	;# 
  6807  008F                     	;# 
  6808  0090                     	;# 
  6809  0090                     	;# 
  6810  0091                     	;# 
  6811  0093                     	;# 
  6812  0094                     	;# 
  6813  0095                     	;# 
  6814  0096                     	;# 
  6815  0097                     	;# 
  6816  0098                     	;# 
  6817  0099                     	;# 
  6818  009A                     	;# 
  6819  009B                     	;# 
  6820  009C                     	;# 
  6821  009D                     	;# 
  6822  009E                     	;# 
  6823  010C                     	;# 
  6824  010D                     	;# 
  6825  010E                     	;# 
  6826  010E                     	;# 
  6827  010F                     	;# 
  6828  0110                     	;# 
  6829  0110                     	;# 
  6830  0111                     	;# 
  6831  0112                     	;# 
  6832  0112                     	;# 
  6833  0113                     	;# 
  6834  0114                     	;# 
  6835  0114                     	;# 
  6836  0115                     	;# 
  6837  0116                     	;# 
  6838  0116                     	;# 
  6839  0117                     	;# 
  6840  0119                     	;# 
  6841  0119                     	;# 
  6842  0119                     	;# 
  6843  011A                     	;# 
  6844  011A                     	;# 
  6845  011A                     	;# 
  6846  011B                     	;# 
  6847  011B                     	;# 
  6848  011B                     	;# 
  6849  011B                     	;# 
  6850  011B                     	;# 
  6851  011C                     	;# 
  6852  011C                     	;# 
  6853  011C                     	;# 
  6854  011D                     	;# 
  6855  011D                     	;# 
  6856  011D                     	;# 
  6857  011E                     	;# 
  6858  011E                     	;# 
  6859  011E                     	;# 
  6860  011F                     	;# 
  6861  011F                     	;# 
  6862  011F                     	;# 
  6863  011F                     	;# 
  6864  011F                     	;# 
  6865  018C                     	;# 
  6866  018D                     	;# 
  6867  018E                     	;# 
  6868  018F                     	;# 
  6869  0190                     	;# 
  6870  0191                     	;# 
  6871  0192                     	;# 
  6872  0196                     	;# 
  6873  0197                     	;# 
  6874  0198                     	;# 
  6875  0199                     	;# 
  6876  019A                     	;# 
  6877  019B                     	;# 
  6878  019C                     	;# 
  6879  020C                     	;# 
  6880  020C                     	;# 
  6881  020D                     	;# 
  6882  020E                     	;# 
  6883  020F                     	;# 
  6884  020F                     	;# 
  6885  0210                     	;# 
  6886  0210                     	;# 
  6887  0211                     	;# 
  6888  0211                     	;# 
  6889  0212                     	;# 
  6890  0212                     	;# 
  6891  0213                     	;# 
  6892  0214                     	;# 
  6893  0215                     	;# 
  6894  0215                     	;# 
  6895  0216                     	;# 
  6896  0216                     	;# 
  6897  0217                     	;# 
  6898  0217                     	;# 
  6899  0218                     	;# 
  6900  0218                     	;# 
  6901  0219                     	;# 
  6902  021A                     	;# 
  6903  021B                     	;# 
  6904  021B                     	;# 
  6905  021C                     	;# 
  6906  021C                     	;# 
  6907  021D                     	;# 
  6908  021D                     	;# 
  6909  021E                     	;# 
  6910  021F                     	;# 
  6911  028C                     	;# 
  6912  028C                     	;# 
  6913  028D                     	;# 
  6914  028D                     	;# 
  6915  028E                     	;# 
  6916  028F                     	;# 
  6917  0290                     	;# 
  6918  0290                     	;# 
  6919  0291                     	;# 
  6920  0292                     	;# 
  6921  0292                     	;# 
  6922  0293                     	;# 
  6923  0293                     	;# 
  6924  0294                     	;# 
  6925  0295                     	;# 
  6926  0296                     	;# 
  6927  0296                     	;# 
  6928  0297                     	;# 
  6929  0298                     	;# 
  6930  0298                     	;# 
  6931  0299                     	;# 
  6932  0299                     	;# 
  6933  029A                     	;# 
  6934  029B                     	;# 
  6935  029C                     	;# 
  6936  029C                     	;# 
  6937  029D                     	;# 
  6938  030C                     	;# 
  6939  030C                     	;# 
  6940  030D                     	;# 
  6941  030E                     	;# 
  6942  030F                     	;# 
  6943  0310                     	;# 
  6944  0310                     	;# 
  6945  0311                     	;# 
  6946  0312                     	;# 
  6947  0313                     	;# 
  6948  0314                     	;# 
  6949  0314                     	;# 
  6950  0315                     	;# 
  6951  0316                     	;# 
  6952  0317                     	;# 
  6953  0318                     	;# 
  6954  0318                     	;# 
  6955  0319                     	;# 
  6956  031A                     	;# 
  6957  031B                     	;# 
  6958  031C                     	;# 
  6959  031C                     	;# 
  6960  031D                     	;# 
  6961  031E                     	;# 
  6962  031F                     	;# 
  6963  038C                     	;# 
  6964  038C                     	;# 
  6965  038D                     	;# 
  6966  038E                     	;# 
  6967  0390                     	;# 
  6968  0390                     	;# 
  6969  0391                     	;# 
  6970  0392                     	;# 
  6971  040C                     	;# 
  6972  040D                     	;# 
  6973  040E                     	;# 
  6974  040F                     	;# 
  6975  0410                     	;# 
  6976  0411                     	;# 
  6977  0416                     	;# 
  6978  0416                     	;# 
  6979  0417                     	;# 
  6980  0418                     	;# 
  6981  0418                     	;# 
  6982  0419                     	;# 
  6983  041A                     	;# 
  6984  041A                     	;# 
  6985  041B                     	;# 
  6986  041C                     	;# 
  6987  041C                     	;# 
  6988  041D                     	;# 
  6989  041E                     	;# 
  6990  041F                     	;# 
  6991  048C                     	;# 
  6992  048C                     	;# 
  6993  048D                     	;# 
  6994  048E                     	;# 
  6995  048F                     	;# 
  6996  048F                     	;# 
  6997  0490                     	;# 
  6998  0491                     	;# 
  6999  0492                     	;# 
  7000  0492                     	;# 
  7001  0493                     	;# 
  7002  0494                     	;# 
  7003  0495                     	;# 
  7004  0495                     	;# 
  7005  0496                     	;# 
  7006  0497                     	;# 
  7007  0498                     	;# 
  7008  0499                     	;# 
  7009  049A                     	;# 
  7010  049B                     	;# 
  7011  049C                     	;# 
  7012  049D                     	;# 
  7013  050C                     	;# 
  7014  050C                     	;# 
  7015  050D                     	;# 
  7016  050E                     	;# 
  7017  050F                     	;# 
  7018  050F                     	;# 
  7019  0510                     	;# 
  7020  0511                     	;# 
  7021  0512                     	;# 
  7022  0512                     	;# 
  7023  0513                     	;# 
  7024  0514                     	;# 
  7025  0515                     	;# 
  7026  0515                     	;# 
  7027  0516                     	;# 
  7028  0517                     	;# 
  7029  0518                     	;# 
  7030  0519                     	;# 
  7031  051A                     	;# 
  7032  051B                     	;# 
  7033  051C                     	;# 
  7034  051D                     	;# 
  7035  058C                     	;# 
  7036  058C                     	;# 
  7037  058D                     	;# 
  7038  058E                     	;# 
  7039  058F                     	;# 
  7040  058F                     	;# 
  7041  0590                     	;# 
  7042  0591                     	;# 
  7043  0592                     	;# 
  7044  0593                     	;# 
  7045  060C                     	;# 
  7046  060D                     	;# 
  7047  060E                     	;# 
  7048  060F                     	;# 
  7049  0610                     	;# 
  7050  0611                     	;# 
  7051  0612                     	;# 
  7052  0613                     	;# 
  7053  0614                     	;# 
  7054  0616                     	;# 
  7055  0617                     	;# 
  7056  0618                     	;# 
  7057  0619                     	;# 
  7058  061A                     	;# 
  7059  061B                     	;# 
  7060  061C                     	;# 
  7061  061D                     	;# 
  7062  061E                     	;# 
  7063  068C                     	;# 
  7064  068D                     	;# 
  7065  068E                     	;# 
  7066  068F                     	;# 
  7067  0690                     	;# 
  7068  0691                     	;# 
  7069  0692                     	;# 
  7070  0693                     	;# 
  7071  0694                     	;# 
  7072  070C                     	;# 
  7073  070D                     	;# 
  7074  070E                     	;# 
  7075  070F                     	;# 
  7076  0710                     	;# 
  7077  0711                     	;# 
  7078  0712                     	;# 
  7079  0713                     	;# 
  7080  0714                     	;# 
  7081  0716                     	;# 
  7082  0717                     	;# 
  7083  0718                     	;# 
  7084  0719                     	;# 
  7085  071A                     	;# 
  7086  071B                     	;# 
  7087  071C                     	;# 
  7088  071D                     	;# 
  7089  071E                     	;# 
  7090  0796                     	;# 
  7091  0797                     	;# 
  7092  0798                     	;# 
  7093  0799                     	;# 
  7094  079A                     	;# 
  7095  079B                     	;# 
  7096  080C                     	;# 
  7097  080D                     	;# 
  7098  080E                     	;# 
  7099  080F                     	;# 
  7100  0810                     	;# 
  7101  0811                     	;# 
  7102  0812                     	;# 
  7103  0813                     	;# 
  7104  0814                     	;# 
  7105  081A                     	;# 
  7106  081B                     	;# 
  7107  081C                     	;# 
  7108  081D                     	;# 
  7109  081E                     	;# 
  7110  081F                     	;# 
  7111  088C                     	;# 
  7112  088D                     	;# 
  7113  088E                     	;# 
  7114  088F                     	;# 
  7115  0890                     	;# 
  7116  0891                     	;# 
  7117  0892                     	;# 
  7118  0893                     	;# 
  7119  0895                     	;# 
  7120  0896                     	;# 
  7121  0897                     	;# 
  7122  0898                     	;# 
  7123  0899                     	;# 
  7124  089A                     	;# 
  7125  089B                     	;# 
  7126  090C                     	;# 
  7127  090E                     	;# 
  7128  090F                     	;# 
  7129  091F                     	;# 
  7130  098F                     	;# 
  7131  098F                     	;# 
  7132  0990                     	;# 
  7133  0991                     	;# 
  7134  0992                     	;# 
  7135  0993                     	;# 
  7136  0994                     	;# 
  7137  0995                     	;# 
  7138  0996                     	;# 
  7139  0997                     	;# 
  7140  1E0F                     	;# 
  7141  1E10                     	;# 
  7142  1E11                     	;# 
  7143  1E12                     	;# 
  7144  1E13                     	;# 
  7145  1E14                     	;# 
  7146  1E15                     	;# 
  7147  1E16                     	;# 
  7148  1E17                     	;# 
  7149  1E18                     	;# 
  7150  1E19                     	;# 
  7151  1E1A                     	;# 
  7152  1E1B                     	;# 
  7153  1E1C                     	;# 
  7154  1E1D                     	;# 
  7155  1E1E                     	;# 
  7156  1E1F                     	;# 
  7157  1E20                     	;# 
  7158  1E21                     	;# 
  7159  1E22                     	;# 
  7160  1E23                     	;# 
  7161  1E24                     	;# 
  7162  1E25                     	;# 
  7163  1E26                     	;# 
  7164  1E27                     	;# 
  7165  1E28                     	;# 
  7166  1E29                     	;# 
  7167  1E2A                     	;# 
  7168  1E2B                     	;# 
  7169  1E2C                     	;# 
  7170  1E2D                     	;# 
  7171  1E2E                     	;# 
  7172  1E2F                     	;# 
  7173  1E30                     	;# 
  7174  1E31                     	;# 
  7175  1E32                     	;# 
  7176  1E33                     	;# 
  7177  1E34                     	;# 
  7178  1E35                     	;# 
  7179  1E36                     	;# 
  7180  1E37                     	;# 
  7181  1E8F                     	;# 
  7182  1E90                     	;# 
  7183  1E91                     	;# 
  7184  1E92                     	;# 
  7185  1E93                     	;# 
  7186  1E94                     	;# 
  7187  1E95                     	;# 
  7188  1E96                     	;# 
  7189  1E97                     	;# 
  7190  1E9C                     	;# 
  7191  1E9D                     	;# 
  7192  1E9E                     	;# 
  7193  1EA1                     	;# 
  7194  1EA2                     	;# 
  7195  1EA3                     	;# 
  7196  1EA4                     	;# 
  7197  1EA5                     	;# 
  7198  1EA9                     	;# 
  7199  1EAA                     	;# 
  7200  1EAB                     	;# 
  7201  1EAC                     	;# 
  7202  1EB1                     	;# 
  7203  1EB2                     	;# 
  7204  1EB3                     	;# 
  7205  1EB8                     	;# 
  7206  1EB9                     	;# 
  7207  1EBA                     	;# 
  7208  1EBB                     	;# 
  7209  1EBC                     	;# 
  7210  1EBD                     	;# 
  7211  1EBE                     	;# 
  7212  1EC3                     	;# 
  7213  1EC5                     	;# 
  7214  1EC6                     	;# 
  7215  1EC7                     	;# 
  7216  1EC8                     	;# 
  7217  1EC9                     	;# 
  7218  1ECA                     	;# 
  7219  1ECB                     	;# 
  7220  1ECC                     	;# 
  7221  1F10                     	;# 
  7222  1F11                     	;# 
  7223  1F12                     	;# 
  7224  1F13                     	;# 
  7225  1F14                     	;# 
  7226  1F15                     	;# 
  7227  1F16                     	;# 
  7228  1F17                     	;# 
  7229  1F18                     	;# 
  7230  1F19                     	;# 
  7231  1F1A                     	;# 
  7232  1F1B                     	;# 
  7233  1F1C                     	;# 
  7234  1F1D                     	;# 
  7235  1F1E                     	;# 
  7236  1F1F                     	;# 
  7237  1F20                     	;# 
  7238  1F21                     	;# 
  7239  1F22                     	;# 
  7240  1F23                     	;# 
  7241  1F24                     	;# 
  7242  1F25                     	;# 
  7243  1F26                     	;# 
  7244  1F27                     	;# 
  7245  1F28                     	;# 
  7246  1F29                     	;# 
  7247  1F2A                     	;# 
  7248  1F2B                     	;# 
  7249  1F2C                     	;# 
  7250  1F2D                     	;# 
  7251  1F2E                     	;# 
  7252  1F2F                     	;# 
  7253  1F30                     	;# 
  7254  1F31                     	;# 
  7255  1F32                     	;# 
  7256  1F38                     	;# 
  7257  1F39                     	;# 
  7258  1F3A                     	;# 
  7259  1F3B                     	;# 
  7260  1F3C                     	;# 
  7261  1F3D                     	;# 
  7262  1F3E                     	;# 
  7263  1F3F                     	;# 
  7264  1F40                     	;# 
  7265  1F41                     	;# 
  7266  1F43                     	;# 
  7267  1F44                     	;# 
  7268  1F45                     	;# 
  7269  1F46                     	;# 
  7270  1F47                     	;# 
  7271  1F48                     	;# 
  7272  1F49                     	;# 
  7273  1F4A                     	;# 
  7274  1F4B                     	;# 
  7275  1F4C                     	;# 
  7276  1F4E                     	;# 
  7277  1F4F                     	;# 
  7278  1F50                     	;# 
  7279  1F51                     	;# 
  7280  1F52                     	;# 
  7281  1F53                     	;# 
  7282  1F54                     	;# 
  7283  1F55                     	;# 
  7284  1F56                     	;# 
  7285  1F57                     	;# 
  7286  1F59                     	;# 
  7287  1F5A                     	;# 
  7288  1F5B                     	;# 
  7289  1F5C                     	;# 
  7290  1F5D                     	;# 
  7291  1F61                     	;# 
  7292  1F62                     	;# 
  7293  1F64                     	;# 
  7294  1F65                     	;# 
  7295  1F66                     	;# 
  7296  1F67                     	;# 
  7297  1F68                     	;# 
  7298  1F69                     	;# 
  7299  1F6A                     	;# 
  7300  1F6B                     	;# 
  7301  1F6C                     	;# 
  7302  1F6D                     	;# 
  7303  1FE4                     	;# 
  7304  1FE5                     	;# 
  7305  1FE6                     	;# 
  7306  1FE7                     	;# 
  7307  1FE8                     	;# 
  7308  1FE9                     	;# 
  7309  1FEA                     	;# 
  7310  1FEB                     	;# 
  7311  1FED                     	;# 
  7312  1FEE                     	;# 
  7313  1FEF                     	;# 
  7314  0000                     	;# 
  7315  0001                     	;# 
  7316  0002                     	;# 
  7317  0003                     	;# 
  7318  0004                     	;# 
  7319  0005                     	;# 
  7320  0006                     	;# 
  7321  0007                     	;# 
  7322  0008                     	;# 
  7323  0009                     	;# 
  7324  000A                     	;# 
  7325  000B                     	;# 
  7326  000C                     	;# 
  7327  000D                     	;# 
  7328  000E                     	;# 
  7329  000F                     	;# 
  7330  0010                     	;# 
  7331  0011                     	;# 
  7332  0012                     	;# 
  7333  0013                     	;# 
  7334  0014                     	;# 
  7335  0015                     	;# 
  7336  0016                     	;# 
  7337  0017                     	;# 
  7338  0018                     	;# 
  7339  0019                     	;# 
  7340  001A                     	;# 
  7341  001C                     	;# 
  7342  001C                     	;# 
  7343  001D                     	;# 
  7344  001D                     	;# 
  7345  001E                     	;# 
  7346  001F                     	;# 
  7347  008C                     	;# 
  7348  008C                     	;# 
  7349  008D                     	;# 
  7350  008E                     	;# 
  7351  008E                     	;# 
  7352  008F                     	;# 
  7353  0090                     	;# 
  7354  0090                     	;# 
  7355  0091                     	;# 
  7356  0093                     	;# 
  7357  0094                     	;# 
  7358  0095                     	;# 
  7359  0096                     	;# 
  7360  0097                     	;# 
  7361  0098                     	;# 
  7362  0099                     	;# 
  7363  009A                     	;# 
  7364  009B                     	;# 
  7365  009C                     	;# 
  7366  009D                     	;# 
  7367  009E                     	;# 
  7368  010C                     	;# 
  7369  010D                     	;# 
  7370  010E                     	;# 
  7371  010E                     	;# 
  7372  010F                     	;# 
  7373  0110                     	;# 
  7374  0110                     	;# 
  7375  0111                     	;# 
  7376  0112                     	;# 
  7377  0112                     	;# 
  7378  0113                     	;# 
  7379  0114                     	;# 
  7380  0114                     	;# 
  7381  0115                     	;# 
  7382  0116                     	;# 
  7383  0116                     	;# 
  7384  0117                     	;# 
  7385  0119                     	;# 
  7386  0119                     	;# 
  7387  0119                     	;# 
  7388  011A                     	;# 
  7389  011A                     	;# 
  7390  011A                     	;# 
  7391  011B                     	;# 
  7392  011B                     	;# 
  7393  011B                     	;# 
  7394  011B                     	;# 
  7395  011B                     	;# 
  7396  011C                     	;# 
  7397  011C                     	;# 
  7398  011C                     	;# 
  7399  011D                     	;# 
  7400  011D                     	;# 
  7401  011D                     	;# 
  7402  011E                     	;# 
  7403  011E                     	;# 
  7404  011E                     	;# 
  7405  011F                     	;# 
  7406  011F                     	;# 
  7407  011F                     	;# 
  7408  011F                     	;# 
  7409  011F                     	;# 
  7410  018C                     	;# 
  7411  018D                     	;# 
  7412  018E                     	;# 
  7413  018F                     	;# 
  7414  0190                     	;# 
  7415  0191                     	;# 
  7416  0192                     	;# 
  7417  0196                     	;# 
  7418  0197                     	;# 
  7419  0198                     	;# 
  7420  0199                     	;# 
  7421  019A                     	;# 
  7422  019B                     	;# 
  7423  019C                     	;# 
  7424  020C                     	;# 
  7425  020C                     	;# 
  7426  020D                     	;# 
  7427  020E                     	;# 
  7428  020F                     	;# 
  7429  020F                     	;# 
  7430  0210                     	;# 
  7431  0210                     	;# 
  7432  0211                     	;# 
  7433  0211                     	;# 
  7434  0212                     	;# 
  7435  0212                     	;# 
  7436  0213                     	;# 
  7437  0214                     	;# 
  7438  0215                     	;# 
  7439  0215                     	;# 
  7440  0216                     	;# 
  7441  0216                     	;# 
  7442  0217                     	;# 
  7443  0217                     	;# 
  7444  0218                     	;# 
  7445  0218                     	;# 
  7446  0219                     	;# 
  7447  021A                     	;# 
  7448  021B                     	;# 
  7449  021B                     	;# 
  7450  021C                     	;# 
  7451  021C                     	;# 
  7452  021D                     	;# 
  7453  021D                     	;# 
  7454  021E                     	;# 
  7455  021F                     	;# 
  7456  028C                     	;# 
  7457  028C                     	;# 
  7458  028D                     	;# 
  7459  028D                     	;# 
  7460  028E                     	;# 
  7461  028F                     	;# 
  7462  0290                     	;# 
  7463  0290                     	;# 
  7464  0291                     	;# 
  7465  0292                     	;# 
  7466  0292                     	;# 
  7467  0293                     	;# 
  7468  0293                     	;# 
  7469  0294                     	;# 
  7470  0295                     	;# 
  7471  0296                     	;# 
  7472  0296                     	;# 
  7473  0297                     	;# 
  7474  0298                     	;# 
  7475  0298                     	;# 
  7476  0299                     	;# 
  7477  0299                     	;# 
  7478  029A                     	;# 
  7479  029B                     	;# 
  7480  029C                     	;# 
  7481  029C                     	;# 
  7482  029D                     	;# 
  7483  030C                     	;# 
  7484  030C                     	;# 
  7485  030D                     	;# 
  7486  030E                     	;# 
  7487  030F                     	;# 
  7488  0310                     	;# 
  7489  0310                     	;# 
  7490  0311                     	;# 
  7491  0312                     	;# 
  7492  0313                     	;# 
  7493  0314                     	;# 
  7494  0314                     	;# 
  7495  0315                     	;# 
  7496  0316                     	;# 
  7497  0317                     	;# 
  7498  0318                     	;# 
  7499  0318                     	;# 
  7500  0319                     	;# 
  7501  031A                     	;# 
  7502  031B                     	;# 
  7503  031C                     	;# 
  7504  031C                     	;# 
  7505  031D                     	;# 
  7506  031E                     	;# 
  7507  031F                     	;# 
  7508  038C                     	;# 
  7509  038C                     	;# 
  7510  038D                     	;# 
  7511  038E                     	;# 
  7512  0390                     	;# 
  7513  0390                     	;# 
  7514  0391                     	;# 
  7515  0392                     	;# 
  7516  040C                     	;# 
  7517  040D                     	;# 
  7518  040E                     	;# 
  7519  040F                     	;# 
  7520  0410                     	;# 
  7521  0411                     	;# 
  7522  0416                     	;# 
  7523  0416                     	;# 
  7524  0417                     	;# 
  7525  0418                     	;# 
  7526  0418                     	;# 
  7527  0419                     	;# 
  7528  041A                     	;# 
  7529  041A                     	;# 
  7530  041B                     	;# 
  7531  041C                     	;# 
  7532  041C                     	;# 
  7533  041D                     	;# 
  7534  041E                     	;# 
  7535  041F                     	;# 
  7536  048C                     	;# 
  7537  048C                     	;# 
  7538  048D                     	;# 
  7539  048E                     	;# 
  7540  048F                     	;# 
  7541  048F                     	;# 
  7542  0490                     	;# 
  7543  0491                     	;# 
  7544  0492                     	;# 
  7545  0492                     	;# 
  7546  0493                     	;# 
  7547  0494                     	;# 
  7548  0495                     	;# 
  7549  0495                     	;# 
  7550  0496                     	;# 
  7551  0497                     	;# 
  7552  0498                     	;# 
  7553  0499                     	;# 
  7554  049A                     	;# 
  7555  049B                     	;# 
  7556  049C                     	;# 
  7557  049D                     	;# 
  7558  050C                     	;# 
  7559  050C                     	;# 
  7560  050D                     	;# 
  7561  050E                     	;# 
  7562  050F                     	;# 
  7563  050F                     	;# 
  7564  0510                     	;# 
  7565  0511                     	;# 
  7566  0512                     	;# 
  7567  0512                     	;# 
  7568  0513                     	;# 
  7569  0514                     	;# 
  7570  0515                     	;# 
  7571  0515                     	;# 
  7572  0516                     	;# 
  7573  0517                     	;# 
  7574  0518                     	;# 
  7575  0519                     	;# 
  7576  051A                     	;# 
  7577  051B                     	;# 
  7578  051C                     	;# 
  7579  051D                     	;# 
  7580  058C                     	;# 
  7581  058C                     	;# 
  7582  058D                     	;# 
  7583  058E                     	;# 
  7584  058F                     	;# 
  7585  058F                     	;# 
  7586  0590                     	;# 
  7587  0591                     	;# 
  7588  0592                     	;# 
  7589  0593                     	;# 
  7590  060C                     	;# 
  7591  060D                     	;# 
  7592  060E                     	;# 
  7593  060F                     	;# 
  7594  0610                     	;# 
  7595  0611                     	;# 
  7596  0612                     	;# 
  7597  0613                     	;# 
  7598  0614                     	;# 
  7599  0616                     	;# 
  7600  0617                     	;# 
  7601  0618                     	;# 
  7602  0619                     	;# 
  7603  061A                     	;# 
  7604  061B                     	;# 
  7605  061C                     	;# 
  7606  061D                     	;# 
  7607  061E                     	;# 
  7608  068C                     	;# 
  7609  068D                     	;# 
  7610  068E                     	;# 
  7611  068F                     	;# 
  7612  0690                     	;# 
  7613  0691                     	;# 
  7614  0692                     	;# 
  7615  0693                     	;# 
  7616  0694                     	;# 
  7617  070C                     	;# 
  7618  070D                     	;# 
  7619  070E                     	;# 
  7620  070F                     	;# 
  7621  0710                     	;# 
  7622  0711                     	;# 
  7623  0712                     	;# 
  7624  0713                     	;# 
  7625  0714                     	;# 
  7626  0716                     	;# 
  7627  0717                     	;# 
  7628  0718                     	;# 
  7629  0719                     	;# 
  7630  071A                     	;# 
  7631  071B                     	;# 
  7632  071C                     	;# 
  7633  071D                     	;# 
  7634  071E                     	;# 
  7635  0796                     	;# 
  7636  0797                     	;# 
  7637  0798                     	;# 
  7638  0799                     	;# 
  7639  079A                     	;# 
  7640  079B                     	;# 
  7641  080C                     	;# 
  7642  080D                     	;# 
  7643  080E                     	;# 
  7644  080F                     	;# 
  7645  0810                     	;# 
  7646  0811                     	;# 
  7647  0812                     	;# 
  7648  0813                     	;# 
  7649  0814                     	;# 
  7650  081A                     	;# 
  7651  081B                     	;# 
  7652  081C                     	;# 
  7653  081D                     	;# 
  7654  081E                     	;# 
  7655  081F                     	;# 
  7656  088C                     	;# 
  7657  088D                     	;# 
  7658  088E                     	;# 
  7659  088F                     	;# 
  7660  0890                     	;# 
  7661  0891                     	;# 
  7662  0892                     	;# 
  7663  0893                     	;# 
  7664  0895                     	;# 
  7665  0896                     	;# 
  7666  0897                     	;# 
  7667  0898                     	;# 
  7668  0899                     	;# 
  7669  089A                     	;# 
  7670  089B                     	;# 
  7671  090C                     	;# 
  7672  090E                     	;# 
  7673  090F                     	;# 
  7674  091F                     	;# 
  7675  098F                     	;# 
  7676  098F                     	;# 
  7677  0990                     	;# 
  7678  0991                     	;# 
  7679  0992                     	;# 
  7680  0993                     	;# 
  7681  0994                     	;# 
  7682  0995                     	;# 
  7683  0996                     	;# 
  7684  0997                     	;# 
  7685  1E0F                     	;# 
  7686  1E10                     	;# 
  7687  1E11                     	;# 
  7688  1E12                     	;# 
  7689  1E13                     	;# 
  7690  1E14                     	;# 
  7691  1E15                     	;# 
  7692  1E16                     	;# 
  7693  1E17                     	;# 
  7694  1E18                     	;# 
  7695  1E19                     	;# 
  7696  1E1A                     	;# 
  7697  1E1B                     	;# 
  7698  1E1C                     	;# 
  7699  1E1D                     	;# 
  7700  1E1E                     	;# 
  7701  1E1F                     	;# 
  7702  1E20                     	;# 
  7703  1E21                     	;# 
  7704  1E22                     	;# 
  7705  1E23                     	;# 
  7706  1E24                     	;# 
  7707  1E25                     	;# 
  7708  1E26                     	;# 
  7709  1E27                     	;# 
  7710  1E28                     	;# 
  7711  1E29                     	;# 
  7712  1E2A                     	;# 
  7713  1E2B                     	;# 
  7714  1E2C                     	;# 
  7715  1E2D                     	;# 
  7716  1E2E                     	;# 
  7717  1E2F                     	;# 
  7718  1E30                     	;# 
  7719  1E31                     	;# 
  7720  1E32                     	;# 
  7721  1E33                     	;# 
  7722  1E34                     	;# 
  7723  1E35                     	;# 
  7724  1E36                     	;# 
  7725  1E37                     	;# 
  7726  1E8F                     	;# 
  7727  1E90                     	;# 
  7728  1E91                     	;# 
  7729  1E92                     	;# 
  7730  1E93                     	;# 
  7731  1E94                     	;# 
  7732  1E95                     	;# 
  7733  1E96                     	;# 
  7734  1E97                     	;# 
  7735  1E9C                     	;# 
  7736  1E9D                     	;# 
  7737  1E9E                     	;# 
  7738  1EA1                     	;# 
  7739  1EA2                     	;# 
  7740  1EA3                     	;# 
  7741  1EA4                     	;# 
  7742  1EA5                     	;# 
  7743  1EA9                     	;# 
  7744  1EAA                     	;# 
  7745  1EAB                     	;# 
  7746  1EAC                     	;# 
  7747  1EB1                     	;# 
  7748  1EB2                     	;# 
  7749  1EB3                     	;# 
  7750  1EB8                     	;# 
  7751  1EB9                     	;# 
  7752  1EBA                     	;# 
  7753  1EBB                     	;# 
  7754  1EBC                     	;# 
  7755  1EBD                     	;# 
  7756  1EBE                     	;# 
  7757  1EC3                     	;# 
  7758  1EC5                     	;# 
  7759  1EC6                     	;# 
  7760  1EC7                     	;# 
  7761  1EC8                     	;# 
  7762  1EC9                     	;# 
  7763  1ECA                     	;# 
  7764  1ECB                     	;# 
  7765  1ECC                     	;# 
  7766  1F10                     	;# 
  7767  1F11                     	;# 
  7768  1F12                     	;# 
  7769  1F13                     	;# 
  7770  1F14                     	;# 
  7771  1F15                     	;# 
  7772  1F16                     	;# 
  7773  1F17                     	;# 
  7774  1F18                     	;# 
  7775  1F19                     	;# 
  7776  1F1A                     	;# 
  7777  1F1B                     	;# 
  7778  1F1C                     	;# 
  7779  1F1D                     	;# 
  7780  1F1E                     	;# 
  7781  1F1F                     	;# 
  7782  1F20                     	;# 
  7783  1F21                     	;# 
  7784  1F22                     	;# 
  7785  1F23                     	;# 
  7786  1F24                     	;# 
  7787  1F25                     	;# 
  7788  1F26                     	;# 
  7789  1F27                     	;# 
  7790  1F28                     	;# 
  7791  1F29                     	;# 
  7792  1F2A                     	;# 
  7793  1F2B                     	;# 
  7794  1F2C                     	;# 
  7795  1F2D                     	;# 
  7796  1F2E                     	;# 
  7797  1F2F                     	;# 
  7798  1F30                     	;# 
  7799  1F31                     	;# 
  7800  1F32                     	;# 
  7801  1F38                     	;# 
  7802  1F39                     	;# 
  7803  1F3A                     	;# 
  7804  1F3B                     	;# 
  7805  1F3C                     	;# 
  7806  1F3D                     	;# 
  7807  1F3E                     	;# 
  7808  1F3F                     	;# 
  7809  1F40                     	;# 
  7810  1F41                     	;# 
  7811  1F43                     	;# 
  7812  1F44                     	;# 
  7813  1F45                     	;# 
  7814  1F46                     	;# 
  7815  1F47                     	;# 
  7816  1F48                     	;# 
  7817  1F49                     	;# 
  7818  1F4A                     	;# 
  7819  1F4B                     	;# 
  7820  1F4C                     	;# 
  7821  1F4E                     	;# 
  7822  1F4F                     	;# 
  7823  1F50                     	;# 
  7824  1F51                     	;# 
  7825  1F52                     	;# 
  7826  1F53                     	;# 
  7827  1F54                     	;# 
  7828  1F55                     	;# 
  7829  1F56                     	;# 
  7830  1F57                     	;# 
  7831  1F59                     	;# 
  7832  1F5A                     	;# 
  7833  1F5B                     	;# 
  7834  1F5C                     	;# 
  7835  1F5D                     	;# 
  7836  1F61                     	;# 
  7837  1F62                     	;# 
  7838  1F64                     	;# 
  7839  1F65                     	;# 
  7840  1F66                     	;# 
  7841  1F67                     	;# 
  7842  1F68                     	;# 
  7843  1F69                     	;# 
  7844  1F6A                     	;# 
  7845  1F6B                     	;# 
  7846  1F6C                     	;# 
  7847  1F6D                     	;# 
  7848  1FE4                     	;# 
  7849  1FE5                     	;# 
  7850  1FE6                     	;# 
  7851  1FE7                     	;# 
  7852  1FE8                     	;# 
  7853  1FE9                     	;# 
  7854  1FEA                     	;# 
  7855  1FEB                     	;# 
  7856  1FED                     	;# 
  7857  1FEE                     	;# 
  7858  1FEF                     	;# 
  7859  0000                     	;# 
  7860  0001                     	;# 
  7861  0002                     	;# 
  7862  0003                     	;# 
  7863  0004                     	;# 
  7864  0005                     	;# 
  7865  0006                     	;# 
  7866  0007                     	;# 
  7867  0008                     	;# 
  7868  0009                     	;# 
  7869  000A                     	;# 
  7870  000B                     	;# 
  7871  000C                     	;# 
  7872  000D                     	;# 
  7873  000E                     	;# 
  7874  000F                     	;# 
  7875  0010                     	;# 
  7876  0011                     	;# 
  7877  0012                     	;# 
  7878  0013                     	;# 
  7879  0014                     	;# 
  7880  0015                     	;# 
  7881  0016                     	;# 
  7882  0017                     	;# 
  7883  0018                     	;# 
  7884  0019                     	;# 
  7885  001A                     	;# 
  7886  001C                     	;# 
  7887  001C                     	;# 
  7888  001D                     	;# 
  7889  001D                     	;# 
  7890  001E                     	;# 
  7891  001F                     	;# 
  7892  008C                     	;# 
  7893  008C                     	;# 
  7894  008D                     	;# 
  7895  008E                     	;# 
  7896  008E                     	;# 
  7897  008F                     	;# 
  7898  0090                     	;# 
  7899  0090                     	;# 
  7900  0091                     	;# 
  7901  0093                     	;# 
  7902  0094                     	;# 
  7903  0095                     	;# 
  7904  0096                     	;# 
  7905  0097                     	;# 
  7906  0098                     	;# 
  7907  0099                     	;# 
  7908  009A                     	;# 
  7909  009B                     	;# 
  7910  009C                     	;# 
  7911  009D                     	;# 
  7912  009E                     	;# 
  7913  010C                     	;# 
  7914  010D                     	;# 
  7915  010E                     	;# 
  7916  010E                     	;# 
  7917  010F                     	;# 
  7918  0110                     	;# 
  7919  0110                     	;# 
  7920  0111                     	;# 
  7921  0112                     	;# 
  7922  0112                     	;# 
  7923  0113                     	;# 
  7924  0114                     	;# 
  7925  0114                     	;# 
  7926  0115                     	;# 
  7927  0116                     	;# 
  7928  0116                     	;# 
  7929  0117                     	;# 
  7930  0119                     	;# 
  7931  0119                     	;# 
  7932  0119                     	;# 
  7933  011A                     	;# 
  7934  011A                     	;# 
  7935  011A                     	;# 
  7936  011B                     	;# 
  7937  011B                     	;# 
  7938  011B                     	;# 
  7939  011B                     	;# 
  7940  011B                     	;# 
  7941  011C                     	;# 
  7942  011C                     	;# 
  7943  011C                     	;# 
  7944  011D                     	;# 
  7945  011D                     	;# 
  7946  011D                     	;# 
  7947  011E                     	;# 
  7948  011E                     	;# 
  7949  011E                     	;# 
  7950  011F                     	;# 
  7951  011F                     	;# 
  7952  011F                     	;# 
  7953  011F                     	;# 
  7954  011F                     	;# 
  7955  018C                     	;# 
  7956  018D                     	;# 
  7957  018E                     	;# 
  7958  018F                     	;# 
  7959  0190                     	;# 
  7960  0191                     	;# 
  7961  0192                     	;# 
  7962  0196                     	;# 
  7963  0197                     	;# 
  7964  0198                     	;# 
  7965  0199                     	;# 
  7966  019A                     	;# 
  7967  019B                     	;# 
  7968  019C                     	;# 
  7969  020C                     	;# 
  7970  020C                     	;# 
  7971  020D                     	;# 
  7972  020E                     	;# 
  7973  020F                     	;# 
  7974  020F                     	;# 
  7975  0210                     	;# 
  7976  0210                     	;# 
  7977  0211                     	;# 
  7978  0211                     	;# 
  7979  0212                     	;# 
  7980  0212                     	;# 
  7981  0213                     	;# 
  7982  0214                     	;# 
  7983  0215                     	;# 
  7984  0215                     	;# 
  7985  0216                     	;# 
  7986  0216                     	;# 
  7987  0217                     	;# 
  7988  0217                     	;# 
  7989  0218                     	;# 
  7990  0218                     	;# 
  7991  0219                     	;# 
  7992  021A                     	;# 
  7993  021B                     	;# 
  7994  021B                     	;# 
  7995  021C                     	;# 
  7996  021C                     	;# 
  7997  021D                     	;# 
  7998  021D                     	;# 
  7999  021E                     	;# 
  8000  021F                     	;# 
  8001  028C                     	;# 
  8002  028C                     	;# 
  8003  028D                     	;# 
  8004  028D                     	;# 
  8005  028E                     	;# 
  8006  028F                     	;# 
  8007  0290                     	;# 
  8008  0290                     	;# 
  8009  0291                     	;# 
  8010  0292                     	;# 
  8011  0292                     	;# 
  8012  0293                     	;# 
  8013  0293                     	;# 
  8014  0294                     	;# 
  8015  0295                     	;# 
  8016  0296                     	;# 
  8017  0296                     	;# 
  8018  0297                     	;# 
  8019  0298                     	;# 
  8020  0298                     	;# 
  8021  0299                     	;# 
  8022  0299                     	;# 
  8023  029A                     	;# 
  8024  029B                     	;# 
  8025  029C                     	;# 
  8026  029C                     	;# 
  8027  029D                     	;# 
  8028  030C                     	;# 
  8029  030C                     	;# 
  8030  030D                     	;# 
  8031  030E                     	;# 
  8032  030F                     	;# 
  8033  0310                     	;# 
  8034  0310                     	;# 
  8035  0311                     	;# 
  8036  0312                     	;# 
  8037  0313                     	;# 
  8038  0314                     	;# 
  8039  0314                     	;# 
  8040  0315                     	;# 
  8041  0316                     	;# 
  8042  0317                     	;# 
  8043  0318                     	;# 
  8044  0318                     	;# 
  8045  0319                     	;# 
  8046  031A                     	;# 
  8047  031B                     	;# 
  8048  031C                     	;# 
  8049  031C                     	;# 
  8050  031D                     	;# 
  8051  031E                     	;# 
  8052  031F                     	;# 
  8053  038C                     	;# 
  8054  038C                     	;# 
  8055  038D                     	;# 
  8056  038E                     	;# 
  8057  0390                     	;# 
  8058  0390                     	;# 
  8059  0391                     	;# 
  8060  0392                     	;# 
  8061  040C                     	;# 
  8062  040D                     	;# 
  8063  040E                     	;# 
  8064  040F                     	;# 
  8065  0410                     	;# 
  8066  0411                     	;# 
  8067  0416                     	;# 
  8068  0416                     	;# 
  8069  0417                     	;# 
  8070  0418                     	;# 
  8071  0418                     	;# 
  8072  0419                     	;# 
  8073  041A                     	;# 
  8074  041A                     	;# 
  8075  041B                     	;# 
  8076  041C                     	;# 
  8077  041C                     	;# 
  8078  041D                     	;# 
  8079  041E                     	;# 
  8080  041F                     	;# 
  8081  048C                     	;# 
  8082  048C                     	;# 
  8083  048D                     	;# 
  8084  048E                     	;# 
  8085  048F                     	;# 
  8086  048F                     	;# 
  8087  0490                     	;# 
  8088  0491                     	;# 
  8089  0492                     	;# 
  8090  0492                     	;# 
  8091  0493                     	;# 
  8092  0494                     	;# 
  8093  0495                     	;# 
  8094  0495                     	;# 
  8095  0496                     	;# 
  8096  0497                     	;# 
  8097  0498                     	;# 
  8098  0499                     	;# 
  8099  049A                     	;# 
  8100  049B                     	;# 
  8101  049C                     	;# 
  8102  049D                     	;# 
  8103  050C                     	;# 
  8104  050C                     	;# 
  8105  050D                     	;# 
  8106  050E                     	;# 
  8107  050F                     	;# 
  8108  050F                     	;# 
  8109  0510                     	;# 
  8110  0511                     	;# 
  8111  0512                     	;# 
  8112  0512                     	;# 
  8113  0513                     	;# 
  8114  0514                     	;# 
  8115  0515                     	;# 
  8116  0515                     	;# 
  8117  0516                     	;# 
  8118  0517                     	;# 
  8119  0518                     	;# 
  8120  0519                     	;# 
  8121  051A                     	;# 
  8122  051B                     	;# 
  8123  051C                     	;# 
  8124  051D                     	;# 
  8125  058C                     	;# 
  8126  058C                     	;# 
  8127  058D                     	;# 
  8128  058E                     	;# 
  8129  058F                     	;# 
  8130  058F                     	;# 
  8131  0590                     	;# 
  8132  0591                     	;# 
  8133  0592                     	;# 
  8134  0593                     	;# 
  8135  060C                     	;# 
  8136  060D                     	;# 
  8137  060E                     	;# 
  8138  060F                     	;# 
  8139  0610                     	;# 
  8140  0611                     	;# 
  8141  0612                     	;# 
  8142  0613                     	;# 
  8143  0614                     	;# 
  8144  0616                     	;# 
  8145  0617                     	;# 
  8146  0618                     	;# 
  8147  0619                     	;# 
  8148  061A                     	;# 
  8149  061B                     	;# 
  8150  061C                     	;# 
  8151  061D                     	;# 
  8152  061E                     	;# 
  8153  068C                     	;# 
  8154  068D                     	;# 
  8155  068E                     	;# 
  8156  068F                     	;# 
  8157  0690                     	;# 
  8158  0691                     	;# 
  8159  0692                     	;# 
  8160  0693                     	;# 
  8161  0694                     	;# 
  8162  070C                     	;# 
  8163  070D                     	;# 
  8164  070E                     	;# 
  8165  070F                     	;# 
  8166  0710                     	;# 
  8167  0711                     	;# 
  8168  0712                     	;# 
  8169  0713                     	;# 
  8170  0714                     	;# 
  8171  0716                     	;# 
  8172  0717                     	;# 
  8173  0718                     	;# 
  8174  0719                     	;# 
  8175  071A                     	;# 
  8176  071B                     	;# 
  8177  071C                     	;# 
  8178  071D                     	;# 
  8179  071E                     	;# 
  8180  0796                     	;# 
  8181  0797                     	;# 
  8182  0798                     	;# 
  8183  0799                     	;# 
  8184  079A                     	;# 
  8185  079B                     	;# 
  8186  080C                     	;# 
  8187  080D                     	;# 
  8188  080E                     	;# 
  8189  080F                     	;# 
  8190  0810                     	;# 
  8191  0811                     	;# 
  8192  0812                     	;# 
  8193  0813                     	;# 
  8194  0814                     	;# 
  8195  081A                     	;# 
  8196  081B                     	;# 
  8197  081C                     	;# 
  8198  081D                     	;# 
  8199  081E                     	;# 
  8200  081F                     	;# 
  8201  088C                     	;# 
  8202  088D                     	;# 
  8203  088E                     	;# 
  8204  088F                     	;# 
  8205  0890                     	;# 
  8206  0891                     	;# 
  8207  0892                     	;# 
  8208  0893                     	;# 
  8209  0895                     	;# 
  8210  0896                     	;# 
  8211  0897                     	;# 
  8212  0898                     	;# 
  8213  0899                     	;# 
  8214  089A                     	;# 
  8215  089B                     	;# 
  8216  090C                     	;# 
  8217  090E                     	;# 
  8218  090F                     	;# 
  8219  091F                     	;# 
  8220  098F                     	;# 
  8221  098F                     	;# 
  8222  0990                     	;# 
  8223  0991                     	;# 
  8224  0992                     	;# 
  8225  0993                     	;# 
  8226  0994                     	;# 
  8227  0995                     	;# 
  8228  0996                     	;# 
  8229  0997                     	;# 
  8230  1E0F                     	;# 
  8231  1E10                     	;# 
  8232  1E11                     	;# 
  8233  1E12                     	;# 
  8234  1E13                     	;# 
  8235  1E14                     	;# 
  8236  1E15                     	;# 
  8237  1E16                     	;# 
  8238  1E17                     	;# 
  8239  1E18                     	;# 
  8240  1E19                     	;# 
  8241  1E1A                     	;# 
  8242  1E1B                     	;# 
  8243  1E1C                     	;# 
  8244  1E1D                     	;# 
  8245  1E1E                     	;# 
  8246  1E1F                     	;# 
  8247  1E20                     	;# 
  8248  1E21                     	;# 
  8249  1E22                     	;# 
  8250  1E23                     	;# 
  8251  1E24                     	;# 
  8252  1E25                     	;# 
  8253  1E26                     	;# 
  8254  1E27                     	;# 
  8255  1E28                     	;# 
  8256  1E29                     	;# 
  8257  1E2A                     	;# 
  8258  1E2B                     	;# 
  8259  1E2C                     	;# 
  8260  1E2D                     	;# 
  8261  1E2E                     	;# 
  8262  1E2F                     	;# 
  8263  1E30                     	;# 
  8264  1E31                     	;# 
  8265  1E32                     	;# 
  8266  1E33                     	;# 
  8267  1E34                     	;# 
  8268  1E35                     	;# 
  8269  1E36                     	;# 
  8270  1E37                     	;# 
  8271  1E8F                     	;# 
  8272  1E90                     	;# 
  8273  1E91                     	;# 
  8274  1E92                     	;# 
  8275  1E93                     	;# 
  8276  1E94                     	;# 
  8277  1E95                     	;# 
  8278  1E96                     	;# 
  8279  1E97                     	;# 
  8280  1E9C                     	;# 
  8281  1E9D                     	;# 
  8282  1E9E                     	;# 
  8283  1EA1                     	;# 
  8284  1EA2                     	;# 
  8285  1EA3                     	;# 
  8286  1EA4                     	;# 
  8287  1EA5                     	;# 
  8288  1EA9                     	;# 
  8289  1EAA                     	;# 
  8290  1EAB                     	;# 
  8291  1EAC                     	;# 
  8292  1EB1                     	;# 
  8293  1EB2                     	;# 
  8294  1EB3                     	;# 
  8295  1EB8                     	;# 
  8296  1EB9                     	;# 
  8297  1EBA                     	;# 
  8298  1EBB                     	;# 
  8299  1EBC                     	;# 
  8300  1EBD                     	;# 
  8301  1EBE                     	;# 
  8302  1EC3                     	;# 
  8303  1EC5                     	;# 
  8304  1EC6                     	;# 
  8305  1EC7                     	;# 
  8306  1EC8                     	;# 
  8307  1EC9                     	;# 
  8308  1ECA                     	;# 
  8309  1ECB                     	;# 
  8310  1ECC                     	;# 
  8311  1F10                     	;# 
  8312  1F11                     	;# 
  8313  1F12                     	;# 
  8314  1F13                     	;# 
  8315  1F14                     	;# 
  8316  1F15                     	;# 
  8317  1F16                     	;# 
  8318  1F17                     	;# 
  8319  1F18                     	;# 
  8320  1F19                     	;# 
  8321  1F1A                     	;# 
  8322  1F1B                     	;# 
  8323  1F1C                     	;# 
  8324  1F1D                     	;# 
  8325  1F1E                     	;# 
  8326  1F1F                     	;# 
  8327  1F20                     	;# 
  8328  1F21                     	;# 
  8329  1F22                     	;# 
  8330  1F23                     	;# 
  8331  1F24                     	;# 
  8332  1F25                     	;# 
  8333  1F26                     	;# 
  8334  1F27                     	;# 
  8335  1F28                     	;# 
  8336  1F29                     	;# 
  8337  1F2A                     	;# 
  8338  1F2B                     	;# 
  8339  1F2C                     	;# 
  8340  1F2D                     	;# 
  8341  1F2E                     	;# 
  8342  1F2F                     	;# 
  8343  1F30                     	;# 
  8344  1F31                     	;# 
  8345  1F32                     	;# 
  8346  1F38                     	;# 
  8347  1F39                     	;# 
  8348  1F3A                     	;# 
  8349  1F3B                     	;# 
  8350  1F3C                     	;# 
  8351  1F3D                     	;# 
  8352  1F3E                     	;# 
  8353  1F3F                     	;# 
  8354  1F40                     	;# 
  8355  1F41                     	;# 
  8356  1F43                     	;# 
  8357  1F44                     	;# 
  8358  1F45                     	;# 
  8359  1F46                     	;# 
  8360  1F47                     	;# 
  8361  1F48                     	;# 
  8362  1F49                     	;# 
  8363  1F4A                     	;# 
  8364  1F4B                     	;# 
  8365  1F4C                     	;# 
  8366  1F4E                     	;# 
  8367  1F4F                     	;# 
  8368  1F50                     	;# 
  8369  1F51                     	;# 
  8370  1F52                     	;# 
  8371  1F53                     	;# 
  8372  1F54                     	;# 
  8373  1F55                     	;# 
  8374  1F56                     	;# 
  8375  1F57                     	;# 
  8376  1F59                     	;# 
  8377  1F5A                     	;# 
  8378  1F5B                     	;# 
  8379  1F5C                     	;# 
  8380  1F5D                     	;# 
  8381  1F61                     	;# 
  8382  1F62                     	;# 
  8383  1F64                     	;# 
  8384  1F65                     	;# 
  8385  1F66                     	;# 
  8386  1F67                     	;# 
  8387  1F68                     	;# 
  8388  1F69                     	;# 
  8389  1F6A                     	;# 
  8390  1F6B                     	;# 
  8391  1F6C                     	;# 
  8392  1F6D                     	;# 
  8393  1FE4                     	;# 
  8394  1FE5                     	;# 
  8395  1FE6                     	;# 
  8396  1FE7                     	;# 
  8397  1FE8                     	;# 
  8398  1FE9                     	;# 
  8399  1FEA                     	;# 
  8400  1FEB                     	;# 
  8401  1FED                     	;# 
  8402  1FEE                     	;# 
  8403  1FEF                     	;# 
  8404  0000                     	;# 
  8405  0001                     	;# 
  8406  0002                     	;# 
  8407  0003                     	;# 
  8408  0004                     	;# 
  8409  0005                     	;# 
  8410  0006                     	;# 
  8411  0007                     	;# 
  8412  0008                     	;# 
  8413  0009                     	;# 
  8414  000A                     	;# 
  8415  000B                     	;# 
  8416  000C                     	;# 
  8417  000D                     	;# 
  8418  000E                     	;# 
  8419  000F                     	;# 
  8420  0010                     	;# 
  8421  0011                     	;# 
  8422  0012                     	;# 
  8423  0013                     	;# 
  8424  0014                     	;# 
  8425  0015                     	;# 
  8426  0016                     	;# 
  8427  0017                     	;# 
  8428  0018                     	;# 
  8429  0019                     	;# 
  8430  001A                     	;# 
  8431  001C                     	;# 
  8432  001C                     	;# 
  8433  001D                     	;# 
  8434  001D                     	;# 
  8435  001E                     	;# 
  8436  001F                     	;# 
  8437  008C                     	;# 
  8438  008C                     	;# 
  8439  008D                     	;# 
  8440  008E                     	;# 
  8441  008E                     	;# 
  8442  008F                     	;# 
  8443  0090                     	;# 
  8444  0090                     	;# 
  8445  0091                     	;# 
  8446  0093                     	;# 
  8447  0094                     	;# 
  8448  0095                     	;# 
  8449  0096                     	;# 
  8450  0097                     	;# 
  8451  0098                     	;# 
  8452  0099                     	;# 
  8453  009A                     	;# 
  8454  009B                     	;# 
  8455  009C                     	;# 
  8456  009D                     	;# 
  8457  009E                     	;# 
  8458  010C                     	;# 
  8459  010D                     	;# 
  8460  010E                     	;# 
  8461  010E                     	;# 
  8462  010F                     	;# 
  8463  0110                     	;# 
  8464  0110                     	;# 
  8465  0111                     	;# 
  8466  0112                     	;# 
  8467  0112                     	;# 
  8468  0113                     	;# 
  8469  0114                     	;# 
  8470  0114                     	;# 
  8471  0115                     	;# 
  8472  0116                     	;# 
  8473  0116                     	;# 
  8474  0117                     	;# 
  8475  0119                     	;# 
  8476  0119                     	;# 
  8477  0119                     	;# 
  8478  011A                     	;# 
  8479  011A                     	;# 
  8480  011A                     	;# 
  8481  011B                     	;# 
  8482  011B                     	;# 
  8483  011B                     	;# 
  8484  011B                     	;# 
  8485  011B                     	;# 
  8486  011C                     	;# 
  8487  011C                     	;# 
  8488  011C                     	;# 
  8489  011D                     	;# 
  8490  011D                     	;# 
  8491  011D                     	;# 
  8492  011E                     	;# 
  8493  011E                     	;# 
  8494  011E                     	;# 
  8495  011F                     	;# 
  8496  011F                     	;# 
  8497  011F                     	;# 
  8498  011F                     	;# 
  8499  011F                     	;# 
  8500  018C                     	;# 
  8501  018D                     	;# 
  8502  018E                     	;# 
  8503  018F                     	;# 
  8504  0190                     	;# 
  8505  0191                     	;# 
  8506  0192                     	;# 
  8507  0196                     	;# 
  8508  0197                     	;# 
  8509  0198                     	;# 
  8510  0199                     	;# 
  8511  019A                     	;# 
  8512  019B                     	;# 
  8513  019C                     	;# 
  8514  020C                     	;# 
  8515  020C                     	;# 
  8516  020D                     	;# 
  8517  020E                     	;# 
  8518  020F                     	;# 
  8519  020F                     	;# 
  8520  0210                     	;# 
  8521  0210                     	;# 
  8522  0211                     	;# 
  8523  0211                     	;# 
  8524  0212                     	;# 
  8525  0212                     	;# 
  8526  0213                     	;# 
  8527  0214                     	;# 
  8528  0215                     	;# 
  8529  0215                     	;# 
  8530  0216                     	;# 
  8531  0216                     	;# 
  8532  0217                     	;# 
  8533  0217                     	;# 
  8534  0218                     	;# 
  8535  0218                     	;# 
  8536  0219                     	;# 
  8537  021A                     	;# 
  8538  021B                     	;# 
  8539  021B                     	;# 
  8540  021C                     	;# 
  8541  021C                     	;# 
  8542  021D                     	;# 
  8543  021D                     	;# 
  8544  021E                     	;# 
  8545  021F                     	;# 
  8546  028C                     	;# 
  8547  028C                     	;# 
  8548  028D                     	;# 
  8549  028D                     	;# 
  8550  028E                     	;# 
  8551  028F                     	;# 
  8552  0290                     	;# 
  8553  0290                     	;# 
  8554  0291                     	;# 
  8555  0292                     	;# 
  8556  0292                     	;# 
  8557  0293                     	;# 
  8558  0293                     	;# 
  8559  0294                     	;# 
  8560  0295                     	;# 
  8561  0296                     	;# 
  8562  0296                     	;# 
  8563  0297                     	;# 
  8564  0298                     	;# 
  8565  0298                     	;# 
  8566  0299                     	;# 
  8567  0299                     	;# 
  8568  029A                     	;# 
  8569  029B                     	;# 
  8570  029C                     	;# 
  8571  029C                     	;# 
  8572  029D                     	;# 
  8573  030C                     	;# 
  8574  030C                     	;# 
  8575  030D                     	;# 
  8576  030E                     	;# 
  8577  030F                     	;# 
  8578  0310                     	;# 
  8579  0310                     	;# 
  8580  0311                     	;# 
  8581  0312                     	;# 
  8582  0313                     	;# 
  8583  0314                     	;# 
  8584  0314                     	;# 
  8585  0315                     	;# 
  8586  0316                     	;# 
  8587  0317                     	;# 
  8588  0318                     	;# 
  8589  0318                     	;# 
  8590  0319                     	;# 
  8591  031A                     	;# 
  8592  031B                     	;# 
  8593  031C                     	;# 
  8594  031C                     	;# 
  8595  031D                     	;# 
  8596  031E                     	;# 
  8597  031F                     	;# 
  8598  038C                     	;# 
  8599  038C                     	;# 
  8600  038D                     	;# 
  8601  038E                     	;# 
  8602  0390                     	;# 
  8603  0390                     	;# 
  8604  0391                     	;# 
  8605  0392                     	;# 
  8606  040C                     	;# 
  8607  040D                     	;# 
  8608  040E                     	;# 
  8609  040F                     	;# 
  8610  0410                     	;# 
  8611  0411                     	;# 
  8612  0416                     	;# 
  8613  0416                     	;# 
  8614  0417                     	;# 
  8615  0418                     	;# 
  8616  0418                     	;# 
  8617  0419                     	;# 
  8618  041A                     	;# 
  8619  041A                     	;# 
  8620  041B                     	;# 
  8621  041C                     	;# 
  8622  041C                     	;# 
  8623  041D                     	;# 
  8624  041E                     	;# 
  8625  041F                     	;# 
  8626  048C                     	;# 
  8627  048C                     	;# 
  8628  048D                     	;# 
  8629  048E                     	;# 
  8630  048F                     	;# 
  8631  048F                     	;# 
  8632  0490                     	;# 
  8633  0491                     	;# 
  8634  0492                     	;# 
  8635  0492                     	;# 
  8636  0493                     	;# 
  8637  0494                     	;# 
  8638  0495                     	;# 
  8639  0495                     	;# 
  8640  0496                     	;# 
  8641  0497                     	;# 
  8642  0498                     	;# 
  8643  0499                     	;# 
  8644  049A                     	;# 
  8645  049B                     	;# 
  8646  049C                     	;# 
  8647  049D                     	;# 
  8648  050C                     	;# 
  8649  050C                     	;# 
  8650  050D                     	;# 
  8651  050E                     	;# 
  8652  050F                     	;# 
  8653  050F                     	;# 
  8654  0510                     	;# 
  8655  0511                     	;# 
  8656  0512                     	;# 
  8657  0512                     	;# 
  8658  0513                     	;# 
  8659  0514                     	;# 
  8660  0515                     	;# 
  8661  0515                     	;# 
  8662  0516                     	;# 
  8663  0517                     	;# 
  8664  0518                     	;# 
  8665  0519                     	;# 
  8666  051A                     	;# 
  8667  051B                     	;# 
  8668  051C                     	;# 
  8669  051D                     	;# 
  8670  058C                     	;# 
  8671  058C                     	;# 
  8672  058D                     	;# 
  8673  058E                     	;# 
  8674  058F                     	;# 
  8675  058F                     	;# 
  8676  0590                     	;# 
  8677  0591                     	;# 
  8678  0592                     	;# 
  8679  0593                     	;# 
  8680  060C                     	;# 
  8681  060D                     	;# 
  8682  060E                     	;# 
  8683  060F                     	;# 
  8684  0610                     	;# 
  8685  0611                     	;# 
  8686  0612                     	;# 
  8687  0613                     	;# 
  8688  0614                     	;# 
  8689  0616                     	;# 
  8690  0617                     	;# 
  8691  0618                     	;# 
  8692  0619                     	;# 
  8693  061A                     	;# 
  8694  061B                     	;# 
  8695  061C                     	;# 
  8696  061D                     	;# 
  8697  061E                     	;# 
  8698  068C                     	;# 
  8699  068D                     	;# 
  8700  068E                     	;# 
  8701  068F                     	;# 
  8702  0690                     	;# 
  8703  0691                     	;# 
  8704  0692                     	;# 
  8705  0693                     	;# 
  8706  0694                     	;# 
  8707  070C                     	;# 
  8708  070D                     	;# 
  8709  070E                     	;# 
  8710  070F                     	;# 
  8711  0710                     	;# 
  8712  0711                     	;# 
  8713  0712                     	;# 
  8714  0713                     	;# 
  8715  0714                     	;# 
  8716  0716                     	;# 
  8717  0717                     	;# 
  8718  0718                     	;# 
  8719  0719                     	;# 
  8720  071A                     	;# 
  8721  071B                     	;# 
  8722  071C                     	;# 
  8723  071D                     	;# 
  8724  071E                     	;# 
  8725  0796                     	;# 
  8726  0797                     	;# 
  8727  0798                     	;# 
  8728  0799                     	;# 
  8729  079A                     	;# 
  8730  079B                     	;# 
  8731  080C                     	;# 
  8732  080D                     	;# 
  8733  080E                     	;# 
  8734  080F                     	;# 
  8735  0810                     	;# 
  8736  0811                     	;# 
  8737  0812                     	;# 
  8738  0813                     	;# 
  8739  0814                     	;# 
  8740  081A                     	;# 
  8741  081B                     	;# 
  8742  081C                     	;# 
  8743  081D                     	;# 
  8744  081E                     	;# 
  8745  081F                     	;# 
  8746  088C                     	;# 
  8747  088D                     	;# 
  8748  088E                     	;# 
  8749  088F                     	;# 
  8750  0890                     	;# 
  8751  0891                     	;# 
  8752  0892                     	;# 
  8753  0893                     	;# 
  8754  0895                     	;# 
  8755  0896                     	;# 
  8756  0897                     	;# 
  8757  0898                     	;# 
  8758  0899                     	;# 
  8759  089A                     	;# 
  8760  089B                     	;# 
  8761  090C                     	;# 
  8762  090E                     	;# 
  8763  090F                     	;# 
  8764  091F                     	;# 
  8765  098F                     	;# 
  8766  098F                     	;# 
  8767  0990                     	;# 
  8768  0991                     	;# 
  8769  0992                     	;# 
  8770  0993                     	;# 
  8771  0994                     	;# 
  8772  0995                     	;# 
  8773  0996                     	;# 
  8774  0997                     	;# 
  8775  1E0F                     	;# 
  8776  1E10                     	;# 
  8777  1E11                     	;# 
  8778  1E12                     	;# 
  8779  1E13                     	;# 
  8780  1E14                     	;# 
  8781  1E15                     	;# 
  8782  1E16                     	;# 
  8783  1E17                     	;# 
  8784  1E18                     	;# 
  8785  1E19                     	;# 
  8786  1E1A                     	;# 
  8787  1E1B                     	;# 
  8788  1E1C                     	;# 
  8789  1E1D                     	;# 
  8790  1E1E                     	;# 
  8791  1E1F                     	;# 
  8792  1E20                     	;# 
  8793  1E21                     	;# 
  8794  1E22                     	;# 
  8795  1E23                     	;# 
  8796  1E24                     	;# 
  8797  1E25                     	;# 
  8798  1E26                     	;# 
  8799  1E27                     	;# 
  8800  1E28                     	;# 
  8801  1E29                     	;# 
  8802  1E2A                     	;# 
  8803  1E2B                     	;# 
  8804  1E2C                     	;# 
  8805  1E2D                     	;# 
  8806  1E2E                     	;# 
  8807  1E2F                     	;# 
  8808  1E30                     	;# 
  8809  1E31                     	;# 
  8810  1E32                     	;# 
  8811  1E33                     	;# 
  8812  1E34                     	;# 
  8813  1E35                     	;# 
  8814  1E36                     	;# 
  8815  1E37                     	;# 
  8816  1E8F                     	;# 
  8817  1E90                     	;# 
  8818  1E91                     	;# 
  8819  1E92                     	;# 
  8820  1E93                     	;# 
  8821  1E94                     	;# 
  8822  1E95                     	;# 
  8823  1E96                     	;# 
  8824  1E97                     	;# 
  8825  1E9C                     	;# 
  8826  1E9D                     	;# 
  8827  1E9E                     	;# 
  8828  1EA1                     	;# 
  8829  1EA2                     	;# 
  8830  1EA3                     	;# 
  8831  1EA4                     	;# 
  8832  1EA5                     	;# 
  8833  1EA9                     	;# 
  8834  1EAA                     	;# 
  8835  1EAB                     	;# 
  8836  1EAC                     	;# 
  8837  1EB1                     	;# 
  8838  1EB2                     	;# 
  8839  1EB3                     	;# 
  8840  1EB8                     	;# 
  8841  1EB9                     	;# 
  8842  1EBA                     	;# 
  8843  1EBB                     	;# 
  8844  1EBC                     	;# 
  8845  1EBD                     	;# 
  8846  1EBE                     	;# 
  8847  1EC3                     	;# 
  8848  1EC5                     	;# 
  8849  1EC6                     	;# 
  8850  1EC7                     	;# 
  8851  1EC8                     	;# 
  8852  1EC9                     	;# 
  8853  1ECA                     	;# 
  8854  1ECB                     	;# 
  8855  1ECC                     	;# 
  8856  1F10                     	;# 
  8857  1F11                     	;# 
  8858  1F12                     	;# 
  8859  1F13                     	;# 
  8860  1F14                     	;# 
  8861  1F15                     	;# 
  8862  1F16                     	;# 
  8863  1F17                     	;# 
  8864  1F18                     	;# 
  8865  1F19                     	;# 
  8866  1F1A                     	;# 
  8867  1F1B                     	;# 
  8868  1F1C                     	;# 
  8869  1F1D                     	;# 
  8870  1F1E                     	;# 
  8871  1F1F                     	;# 
  8872  1F20                     	;# 
  8873  1F21                     	;# 
  8874  1F22                     	;# 
  8875  1F23                     	;# 
  8876  1F24                     	;# 
  8877  1F25                     	;# 
  8878  1F26                     	;# 
  8879  1F27                     	;# 
  8880  1F28                     	;# 
  8881  1F29                     	;# 
  8882  1F2A                     	;# 
  8883  1F2B                     	;# 
  8884  1F2C                     	;# 
  8885  1F2D                     	;# 
  8886  1F2E                     	;# 
  8887  1F2F                     	;# 
  8888  1F30                     	;# 
  8889  1F31                     	;# 
  8890  1F32                     	;# 
  8891  1F38                     	;# 
  8892  1F39                     	;# 
  8893  1F3A                     	;# 
  8894  1F3B                     	;# 
  8895  1F3C                     	;# 
  8896  1F3D                     	;# 
  8897  1F3E                     	;# 
  8898  1F3F                     	;# 
  8899  1F40                     	;# 
  8900  1F41                     	;# 
  8901  1F43                     	;# 
  8902  1F44                     	;# 
  8903  1F45                     	;# 
  8904  1F46                     	;# 
  8905  1F47                     	;# 
  8906  1F48                     	;# 
  8907  1F49                     	;# 
  8908  1F4A                     	;# 
  8909  1F4B                     	;# 
  8910  1F4C                     	;# 
  8911  1F4E                     	;# 
  8912  1F4F                     	;# 
  8913  1F50                     	;# 
  8914  1F51                     	;# 
  8915  1F52                     	;# 
  8916  1F53                     	;# 
  8917  1F54                     	;# 
  8918  1F55                     	;# 
  8919  1F56                     	;# 
  8920  1F57                     	;# 
  8921  1F59                     	;# 
  8922  1F5A                     	;# 
  8923  1F5B                     	;# 
  8924  1F5C                     	;# 
  8925  1F5D                     	;# 
  8926  1F61                     	;# 
  8927  1F62                     	;# 
  8928  1F64                     	;# 
  8929  1F65                     	;# 
  8930  1F66                     	;# 
  8931  1F67                     	;# 
  8932  1F68                     	;# 
  8933  1F69                     	;# 
  8934  1F6A                     	;# 
  8935  1F6B                     	;# 
  8936  1F6C                     	;# 
  8937  1F6D                     	;# 
  8938  1FE4                     	;# 
  8939  1FE5                     	;# 
  8940  1FE6                     	;# 
  8941  1FE7                     	;# 
  8942  1FE8                     	;# 
  8943  1FE9                     	;# 
  8944  1FEA                     	;# 
  8945  1FEB                     	;# 
  8946  1FED                     	;# 
  8947  1FEE                     	;# 
  8948  1FEF                     	;# 
  8949  0000                     	;# 
  8950  0001                     	;# 
  8951  0002                     	;# 
  8952  0003                     	;# 
  8953  0004                     	;# 
  8954  0005                     	;# 
  8955  0006                     	;# 
  8956  0007                     	;# 
  8957  0008                     	;# 
  8958  0009                     	;# 
  8959  000A                     	;# 
  8960  000B                     	;# 
  8961  000C                     	;# 
  8962  000D                     	;# 
  8963  000E                     	;# 
  8964  000F                     	;# 
  8965  0010                     	;# 
  8966  0011                     	;# 
  8967  0012                     	;# 
  8968  0013                     	;# 
  8969  0014                     	;# 
  8970  0015                     	;# 
  8971  0016                     	;# 
  8972  0017                     	;# 
  8973  0018                     	;# 
  8974  0019                     	;# 
  8975  001A                     	;# 
  8976  001C                     	;# 
  8977  001C                     	;# 
  8978  001D                     	;# 
  8979  001D                     	;# 
  8980  001E                     	;# 
  8981  001F                     	;# 
  8982  008C                     	;# 
  8983  008C                     	;# 
  8984  008D                     	;# 
  8985  008E                     	;# 
  8986  008E                     	;# 
  8987  008F                     	;# 
  8988  0090                     	;# 
  8989  0090                     	;# 
  8990  0091                     	;# 
  8991  0093                     	;# 
  8992  0094                     	;# 
  8993  0095                     	;# 
  8994  0096                     	;# 
  8995  0097                     	;# 
  8996  0098                     	;# 
  8997  0099                     	;# 
  8998  009A                     	;# 
  8999  009B                     	;# 
  9000  009C                     	;# 
  9001  009D                     	;# 
  9002  009E                     	;# 
  9003  010C                     	;# 
  9004  010D                     	;# 
  9005  010E                     	;# 
  9006  010E                     	;# 
  9007  010F                     	;# 
  9008  0110                     	;# 
  9009  0110                     	;# 
  9010  0111                     	;# 
  9011  0112                     	;# 
  9012  0112                     	;# 
  9013  0113                     	;# 
  9014  0114                     	;# 
  9015  0114                     	;# 
  9016  0115                     	;# 
  9017  0116                     	;# 
  9018  0116                     	;# 
  9019  0117                     	;# 
  9020  0119                     	;# 
  9021  0119                     	;# 
  9022  0119                     	;# 
  9023  011A                     	;# 
  9024  011A                     	;# 
  9025  011A                     	;# 
  9026  011B                     	;# 
  9027  011B                     	;# 
  9028  011B                     	;# 
  9029  011B                     	;# 
  9030  011B                     	;# 
  9031  011C                     	;# 
  9032  011C                     	;# 
  9033  011C                     	;# 
  9034  011D                     	;# 
  9035  011D                     	;# 
  9036  011D                     	;# 
  9037  011E                     	;# 
  9038  011E                     	;# 
  9039  011E                     	;# 
  9040  011F                     	;# 
  9041  011F                     	;# 
  9042  011F                     	;# 
  9043  011F                     	;# 
  9044  011F                     	;# 
  9045  018C                     	;# 
  9046  018D                     	;# 
  9047  018E                     	;# 
  9048  018F                     	;# 
  9049  0190                     	;# 
  9050  0191                     	;# 
  9051  0192                     	;# 
  9052  0196                     	;# 
  9053  0197                     	;# 
  9054  0198                     	;# 
  9055  0199                     	;# 
  9056  019A                     	;# 
  9057  019B                     	;# 
  9058  019C                     	;# 
  9059  020C                     	;# 
  9060  020C                     	;# 
  9061  020D                     	;# 
  9062  020E                     	;# 
  9063  020F                     	;# 
  9064  020F                     	;# 
  9065  0210                     	;# 
  9066  0210                     	;# 
  9067  0211                     	;# 
  9068  0211                     	;# 
  9069  0212                     	;# 
  9070  0212                     	;# 
  9071  0213                     	;# 
  9072  0214                     	;# 
  9073  0215                     	;# 
  9074  0215                     	;# 
  9075  0216                     	;# 
  9076  0216                     	;# 
  9077  0217                     	;# 
  9078  0217                     	;# 
  9079  0218                     	;# 
  9080  0218                     	;# 
  9081  0219                     	;# 
  9082  021A                     	;# 
  9083  021B                     	;# 
  9084  021B                     	;# 
  9085  021C                     	;# 
  9086  021C                     	;# 
  9087  021D                     	;# 
  9088  021D                     	;# 
  9089  021E                     	;# 
  9090  021F                     	;# 
  9091  028C                     	;# 
  9092  028C                     	;# 
  9093  028D                     	;# 
  9094  028D                     	;# 
  9095  028E                     	;# 
  9096  028F                     	;# 
  9097  0290                     	;# 
  9098  0290                     	;# 
  9099  0291                     	;# 
  9100  0292                     	;# 
  9101  0292                     	;# 
  9102  0293                     	;# 
  9103  0293                     	;# 
  9104  0294                     	;# 
  9105  0295                     	;# 
  9106  0296                     	;# 
  9107  0296                     	;# 
  9108  0297                     	;# 
  9109  0298                     	;# 
  9110  0298                     	;# 
  9111  0299                     	;# 
  9112  0299                     	;# 
  9113  029A                     	;# 
  9114  029B                     	;# 
  9115  029C                     	;# 
  9116  029C                     	;# 
  9117  029D                     	;# 
  9118  030C                     	;# 
  9119  030C                     	;# 
  9120  030D                     	;# 
  9121  030E                     	;# 
  9122  030F                     	;# 
  9123  0310                     	;# 
  9124  0310                     	;# 
  9125  0311                     	;# 
  9126  0312                     	;# 
  9127  0313                     	;# 
  9128  0314                     	;# 
  9129  0314                     	;# 
  9130  0315                     	;# 
  9131  0316                     	;# 
  9132  0317                     	;# 
  9133  0318                     	;# 
  9134  0318                     	;# 
  9135  0319                     	;# 
  9136  031A                     	;# 
  9137  031B                     	;# 
  9138  031C                     	;# 
  9139  031C                     	;# 
  9140  031D                     	;# 
  9141  031E                     	;# 
  9142  031F                     	;# 
  9143  038C                     	;# 
  9144  038C                     	;# 
  9145  038D                     	;# 
  9146  038E                     	;# 
  9147  0390                     	;# 
  9148  0390                     	;# 
  9149  0391                     	;# 
  9150  0392                     	;# 
  9151  040C                     	;# 
  9152  040D                     	;# 
  9153  040E                     	;# 
  9154  040F                     	;# 
  9155  0410                     	;# 
  9156  0411                     	;# 
  9157  0416                     	;# 
  9158  0416                     	;# 
  9159  0417                     	;# 
  9160  0418                     	;# 
  9161  0418                     	;# 
  9162  0419                     	;# 
  9163  041A                     	;# 
  9164  041A                     	;# 
  9165  041B                     	;# 
  9166  041C                     	;# 
  9167  041C                     	;# 
  9168  041D                     	;# 
  9169  041E                     	;# 
  9170  041F                     	;# 
  9171  048C                     	;# 
  9172  048C                     	;# 
  9173  048D                     	;# 
  9174  048E                     	;# 
  9175  048F                     	;# 
  9176  048F                     	;# 
  9177  0490                     	;# 
  9178  0491                     	;# 
  9179  0492                     	;# 
  9180  0492                     	;# 
  9181  0493                     	;# 
  9182  0494                     	;# 
  9183  0495                     	;# 
  9184  0495                     	;# 
  9185  0496                     	;# 
  9186  0497                     	;# 
  9187  0498                     	;# 
  9188  0499                     	;# 
  9189  049A                     	;# 
  9190  049B                     	;# 
  9191  049C                     	;# 
  9192  049D                     	;# 
  9193  050C                     	;# 
  9194  050C                     	;# 
  9195  050D                     	;# 
  9196  050E                     	;# 
  9197  050F                     	;# 
  9198  050F                     	;# 
  9199  0510                     	;# 
  9200  0511                     	;# 
  9201  0512                     	;# 
  9202  0512                     	;# 
  9203  0513                     	;# 
  9204  0514                     	;# 
  9205  0515                     	;# 
  9206  0515                     	;# 
  9207  0516                     	;# 
  9208  0517                     	;# 
  9209  0518                     	;# 
  9210  0519                     	;# 
  9211  051A                     	;# 
  9212  051B                     	;# 
  9213  051C                     	;# 
  9214  051D                     	;# 
  9215  058C                     	;# 
  9216  058C                     	;# 
  9217  058D                     	;# 
  9218  058E                     	;# 
  9219  058F                     	;# 
  9220  058F                     	;# 
  9221  0590                     	;# 
  9222  0591                     	;# 
  9223  0592                     	;# 
  9224  0593                     	;# 
  9225  060C                     	;# 
  9226  060D                     	;# 
  9227  060E                     	;# 
  9228  060F                     	;# 
  9229  0610                     	;# 
  9230  0611                     	;# 
  9231  0612                     	;# 
  9232  0613                     	;# 
  9233  0614                     	;# 
  9234  0616                     	;# 
  9235  0617                     	;# 
  9236  0618                     	;# 
  9237  0619                     	;# 
  9238  061A                     	;# 
  9239  061B                     	;# 
  9240  061C                     	;# 
  9241  061D                     	;# 
  9242  061E                     	;# 
  9243  068C                     	;# 
  9244  068D                     	;# 
  9245  068E                     	;# 
  9246  068F                     	;# 
  9247  0690                     	;# 
  9248  0691                     	;# 
  9249  0692                     	;# 
  9250  0693                     	;# 
  9251  0694                     	;# 
  9252  070C                     	;# 
  9253  070D                     	;# 
  9254  070E                     	;# 
  9255  070F                     	;# 
  9256  0710                     	;# 
  9257  0711                     	;# 
  9258  0712                     	;# 
  9259  0713                     	;# 
  9260  0714                     	;# 
  9261  0716                     	;# 
  9262  0717                     	;# 
  9263  0718                     	;# 
  9264  0719                     	;# 
  9265  071A                     	;# 
  9266  071B                     	;# 
  9267  071C                     	;# 
  9268  071D                     	;# 
  9269  071E                     	;# 
  9270  0796                     	;# 
  9271  0797                     	;# 
  9272  0798                     	;# 
  9273  0799                     	;# 
  9274  079A                     	;# 
  9275  079B                     	;# 
  9276  080C                     	;# 
  9277  080D                     	;# 
  9278  080E                     	;# 
  9279  080F                     	;# 
  9280  0810                     	;# 
  9281  0811                     	;# 
  9282  0812                     	;# 
  9283  0813                     	;# 
  9284  0814                     	;# 
  9285  081A                     	;# 
  9286  081B                     	;# 
  9287  081C                     	;# 
  9288  081D                     	;# 
  9289  081E                     	;# 
  9290  081F                     	;# 
  9291  088C                     	;# 
  9292  088D                     	;# 
  9293  088E                     	;# 
  9294  088F                     	;# 
  9295  0890                     	;# 
  9296  0891                     	;# 
  9297  0892                     	;# 
  9298  0893                     	;# 
  9299  0895                     	;# 
  9300  0896                     	;# 
  9301  0897                     	;# 
  9302  0898                     	;# 
  9303  0899                     	;# 
  9304  089A                     	;# 
  9305  089B                     	;# 
  9306  090C                     	;# 
  9307  090E                     	;# 
  9308  090F                     	;# 
  9309  091F                     	;# 
  9310  098F                     	;# 
  9311  098F                     	;# 
  9312  0990                     	;# 
  9313  0991                     	;# 
  9314  0992                     	;# 
  9315  0993                     	;# 
  9316  0994                     	;# 
  9317  0995                     	;# 
  9318  0996                     	;# 
  9319  0997                     	;# 
  9320  1E0F                     	;# 
  9321  1E10                     	;# 
  9322  1E11                     	;# 
  9323  1E12                     	;# 
  9324  1E13                     	;# 
  9325  1E14                     	;# 
  9326  1E15                     	;# 
  9327  1E16                     	;# 
  9328  1E17                     	;# 
  9329  1E18                     	;# 
  9330  1E19                     	;# 
  9331  1E1A                     	;# 
  9332  1E1B                     	;# 
  9333  1E1C                     	;# 
  9334  1E1D                     	;# 
  9335  1E1E                     	;# 
  9336  1E1F                     	;# 
  9337  1E20                     	;# 
  9338  1E21                     	;# 
  9339  1E22                     	;# 
  9340  1E23                     	;# 
  9341  1E24                     	;# 
  9342  1E25                     	;# 
  9343  1E26                     	;# 
  9344  1E27                     	;# 
  9345  1E28                     	;# 
  9346  1E29                     	;# 
  9347  1E2A                     	;# 
  9348  1E2B                     	;# 
  9349  1E2C                     	;# 
  9350  1E2D                     	;# 
  9351  1E2E                     	;# 
  9352  1E2F                     	;# 
  9353  1E30                     	;# 
  9354  1E31                     	;# 
  9355  1E32                     	;# 
  9356  1E33                     	;# 
  9357  1E34                     	;# 
  9358  1E35                     	;# 
  9359  1E36                     	;# 
  9360  1E37                     	;# 
  9361  1E8F                     	;# 
  9362  1E90                     	;# 
  9363  1E91                     	;# 
  9364  1E92                     	;# 
  9365  1E93                     	;# 
  9366  1E94                     	;# 
  9367  1E95                     	;# 
  9368  1E96                     	;# 
  9369  1E97                     	;# 
  9370  1E9C                     	;# 
  9371  1E9D                     	;# 
  9372  1E9E                     	;# 
  9373  1EA1                     	;# 
  9374  1EA2                     	;# 
  9375  1EA3                     	;# 
  9376  1EA4                     	;# 
  9377  1EA5                     	;# 
  9378  1EA9                     	;# 
  9379  1EAA                     	;# 
  9380  1EAB                     	;# 
  9381  1EAC                     	;# 
  9382  1EB1                     	;# 
  9383  1EB2                     	;# 
  9384  1EB3                     	;# 
  9385  1EB8                     	;# 
  9386  1EB9                     	;# 
  9387  1EBA                     	;# 
  9388  1EBB                     	;# 
  9389  1EBC                     	;# 
  9390  1EBD                     	;# 
  9391  1EBE                     	;# 
  9392  1EC3                     	;# 
  9393  1EC5                     	;# 
  9394  1EC6                     	;# 
  9395  1EC7                     	;# 
  9396  1EC8                     	;# 
  9397  1EC9                     	;# 
  9398  1ECA                     	;# 
  9399  1ECB                     	;# 
  9400  1ECC                     	;# 
  9401  1F10                     	;# 
  9402  1F11                     	;# 
  9403  1F12                     	;# 
  9404  1F13                     	;# 
  9405  1F14                     	;# 
  9406  1F15                     	;# 
  9407  1F16                     	;# 
  9408  1F17                     	;# 
  9409  1F18                     	;# 
  9410  1F19                     	;# 
  9411  1F1A                     	;# 
  9412  1F1B                     	;# 
  9413  1F1C                     	;# 
  9414  1F1D                     	;# 
  9415  1F1E                     	;# 
  9416  1F1F                     	;# 
  9417  1F20                     	;# 
  9418  1F21                     	;# 
  9419  1F22                     	;# 
  9420  1F23                     	;# 
  9421  1F24                     	;# 
  9422  1F25                     	;# 
  9423  1F26                     	;# 
  9424  1F27                     	;# 
  9425  1F28                     	;# 
  9426  1F29                     	;# 
  9427  1F2A                     	;# 
  9428  1F2B                     	;# 
  9429  1F2C                     	;# 
  9430  1F2D                     	;# 
  9431  1F2E                     	;# 
  9432  1F2F                     	;# 
  9433  1F30                     	;# 
  9434  1F31                     	;# 
  9435  1F32                     	;# 
  9436  1F38                     	;# 
  9437  1F39                     	;# 
  9438  1F3A                     	;# 
  9439  1F3B                     	;# 
  9440  1F3C                     	;# 
  9441  1F3D                     	;# 
  9442  1F3E                     	;# 
  9443  1F3F                     	;# 
  9444  1F40                     	;# 
  9445  1F41                     	;# 
  9446  1F43                     	;# 
  9447  1F44                     	;# 
  9448  1F45                     	;# 
  9449  1F46                     	;# 
  9450  1F47                     	;# 
  9451  1F48                     	;# 
  9452  1F49                     	;# 
  9453  1F4A                     	;# 
  9454  1F4B                     	;# 
  9455  1F4C                     	;# 
  9456  1F4E                     	;# 
  9457  1F4F                     	;# 
  9458  1F50                     	;# 
  9459  1F51                     	;# 
  9460  1F52                     	;# 
  9461  1F53                     	;# 
  9462  1F54                     	;# 
  9463  1F55                     	;# 
  9464  1F56                     	;# 
  9465  1F57                     	;# 
  9466  1F59                     	;# 
  9467  1F5A                     	;# 
  9468  1F5B                     	;# 
  9469  1F5C                     	;# 
  9470  1F5D                     	;# 
  9471  1F61                     	;# 
  9472  1F62                     	;# 
  9473  1F64                     	;# 
  9474  1F65                     	;# 
  9475  1F66                     	;# 
  9476  1F67                     	;# 
  9477  1F68                     	;# 
  9478  1F69                     	;# 
  9479  1F6A                     	;# 
  9480  1F6B                     	;# 
  9481  1F6C                     	;# 
  9482  1F6D                     	;# 
  9483  1FE4                     	;# 
  9484  1FE5                     	;# 
  9485  1FE6                     	;# 
  9486  1FE7                     	;# 
  9487  1FE8                     	;# 
  9488  1FE9                     	;# 
  9489  1FEA                     	;# 
  9490  1FEB                     	;# 
  9491  1FED                     	;# 
  9492  1FEE                     	;# 
  9493  1FEF                     	;# 
  9494  0000                     	;# 
  9495  0001                     	;# 
  9496  0002                     	;# 
  9497  0003                     	;# 
  9498  0004                     	;# 
  9499  0005                     	;# 
  9500  0006                     	;# 
  9501  0007                     	;# 
  9502  0008                     	;# 
  9503  0009                     	;# 
  9504  000A                     	;# 
  9505  000B                     	;# 
  9506  000C                     	;# 
  9507  000D                     	;# 
  9508  000E                     	;# 
  9509  000F                     	;# 
  9510  0010                     	;# 
  9511  0011                     	;# 
  9512  0012                     	;# 
  9513  0013                     	;# 
  9514  0014                     	;# 
  9515  0015                     	;# 
  9516  0016                     	;# 
  9517  0017                     	;# 
  9518  0018                     	;# 
  9519  0019                     	;# 
  9520  001A                     	;# 
  9521  001C                     	;# 
  9522  001C                     	;# 
  9523  001D                     	;# 
  9524  001D                     	;# 
  9525  001E                     	;# 
  9526  001F                     	;# 
  9527  008C                     	;# 
  9528  008C                     	;# 
  9529  008D                     	;# 
  9530  008E                     	;# 
  9531  008E                     	;# 
  9532  008F                     	;# 
  9533  0090                     	;# 
  9534  0090                     	;# 
  9535  0091                     	;# 
  9536  0093                     	;# 
  9537  0094                     	;# 
  9538  0095                     	;# 
  9539  0096                     	;# 
  9540  0097                     	;# 
  9541  0098                     	;# 
  9542  0099                     	;# 
  9543  009A                     	;# 
  9544  009B                     	;# 
  9545  009C                     	;# 
  9546  009D                     	;# 
  9547  009E                     	;# 
  9548  010C                     	;# 
  9549  010D                     	;# 
  9550  010E                     	;# 
  9551  010E                     	;# 
  9552  010F                     	;# 
  9553  0110                     	;# 
  9554  0110                     	;# 
  9555  0111                     	;# 
  9556  0112                     	;# 
  9557  0112                     	;# 
  9558  0113                     	;# 
  9559  0114                     	;# 
  9560  0114                     	;# 
  9561  0115                     	;# 
  9562  0116                     	;# 
  9563  0116                     	;# 
  9564  0117                     	;# 
  9565  0119                     	;# 
  9566  0119                     	;# 
  9567  0119                     	;# 
  9568  011A                     	;# 
  9569  011A                     	;# 
  9570  011A                     	;# 
  9571  011B                     	;# 
  9572  011B                     	;# 
  9573  011B                     	;# 
  9574  011B                     	;# 
  9575  011B                     	;# 
  9576  011C                     	;# 
  9577  011C                     	;# 
  9578  011C                     	;# 
  9579  011D                     	;# 
  9580  011D                     	;# 
  9581  011D                     	;# 
  9582  011E                     	;# 
  9583  011E                     	;# 
  9584  011E                     	;# 
  9585  011F                     	;# 
  9586  011F                     	;# 
  9587  011F                     	;# 
  9588  011F                     	;# 
  9589  011F                     	;# 
  9590  018C                     	;# 
  9591  018D                     	;# 
  9592  018E                     	;# 
  9593  018F                     	;# 
  9594  0190                     	;# 
  9595  0191                     	;# 
  9596  0192                     	;# 
  9597  0196                     	;# 
  9598  0197                     	;# 
  9599  0198                     	;# 
  9600  0199                     	;# 
  9601  019A                     	;# 
  9602  019B                     	;# 
  9603  019C                     	;# 
  9604  020C                     	;# 
  9605  020C                     	;# 
  9606  020D                     	;# 
  9607  020E                     	;# 
  9608  020F                     	;# 
  9609  020F                     	;# 
  9610  0210                     	;# 
  9611  0210                     	;# 
  9612  0211                     	;# 
  9613  0211                     	;# 
  9614  0212                     	;# 
  9615  0212                     	;# 
  9616  0213                     	;# 
  9617  0214                     	;# 
  9618  0215                     	;# 
  9619  0215                     	;# 
  9620  0216                     	;# 
  9621  0216                     	;# 
  9622  0217                     	;# 
  9623  0217                     	;# 
  9624  0218                     	;# 
  9625  0218                     	;# 
  9626  0219                     	;# 
  9627  021A                     	;# 
  9628  021B                     	;# 
  9629  021B                     	;# 
  9630  021C                     	;# 
  9631  021C                     	;# 
  9632  021D                     	;# 
  9633  021D                     	;# 
  9634  021E                     	;# 
  9635  021F                     	;# 
  9636  028C                     	;# 
  9637  028C                     	;# 
  9638  028D                     	;# 
  9639  028D                     	;# 
  9640  028E                     	;# 
  9641  028F                     	;# 
  9642  0290                     	;# 
  9643  0290                     	;# 
  9644  0291                     	;# 
  9645  0292                     	;# 
  9646  0292                     	;# 
  9647  0293                     	;# 
  9648  0293                     	;# 
  9649  0294                     	;# 
  9650  0295                     	;# 
  9651  0296                     	;# 
  9652  0296                     	;# 
  9653  0297                     	;# 
  9654  0298                     	;# 
  9655  0298                     	;# 
  9656  0299                     	;# 
  9657  0299                     	;# 
  9658  029A                     	;# 
  9659  029B                     	;# 
  9660  029C                     	;# 
  9661  029C                     	;# 
  9662  029D                     	;# 
  9663  030C                     	;# 
  9664  030C                     	;# 
  9665  030D                     	;# 
  9666  030E                     	;# 
  9667  030F                     	;# 
  9668  0310                     	;# 
  9669  0310                     	;# 
  9670  0311                     	;# 
  9671  0312                     	;# 
  9672  0313                     	;# 
  9673  0314                     	;# 
  9674  0314                     	;# 
  9675  0315                     	;# 
  9676  0316                     	;# 
  9677  0317                     	;# 
  9678  0318                     	;# 
  9679  0318                     	;# 
  9680  0319                     	;# 
  9681  031A                     	;# 
  9682  031B                     	;# 
  9683  031C                     	;# 
  9684  031C                     	;# 
  9685  031D                     	;# 
  9686  031E                     	;# 
  9687  031F                     	;# 
  9688  038C                     	;# 
  9689  038C                     	;# 
  9690  038D                     	;# 
  9691  038E                     	;# 
  9692  0390                     	;# 
  9693  0390                     	;# 
  9694  0391                     	;# 
  9695  0392                     	;# 
  9696  040C                     	;# 
  9697  040D                     	;# 
  9698  040E                     	;# 
  9699  040F                     	;# 
  9700  0410                     	;# 
  9701  0411                     	;# 
  9702  0416                     	;# 
  9703  0416                     	;# 
  9704  0417                     	;# 
  9705  0418                     	;# 
  9706  0418                     	;# 
  9707  0419                     	;# 
  9708  041A                     	;# 
  9709  041A                     	;# 
  9710  041B                     	;# 
  9711  041C                     	;# 
  9712  041C                     	;# 
  9713  041D                     	;# 
  9714  041E                     	;# 
  9715  041F                     	;# 
  9716  048C                     	;# 
  9717  048C                     	;# 
  9718  048D                     	;# 
  9719  048E                     	;# 
  9720  048F                     	;# 
  9721  048F                     	;# 
  9722  0490                     	;# 
  9723  0491                     	;# 
  9724  0492                     	;# 
  9725  0492                     	;# 
  9726  0493                     	;# 
  9727  0494                     	;# 
  9728  0495                     	;# 
  9729  0495                     	;# 
  9730  0496                     	;# 
  9731  0497                     	;# 
  9732  0498                     	;# 
  9733  0499                     	;# 
  9734  049A                     	;# 
  9735  049B                     	;# 
  9736  049C                     	;# 
  9737  049D                     	;# 
  9738  050C                     	;# 
  9739  050C                     	;# 
  9740  050D                     	;# 
  9741  050E                     	;# 
  9742  050F                     	;# 
  9743  050F                     	;# 
  9744  0510                     	;# 
  9745  0511                     	;# 
  9746  0512                     	;# 
  9747  0512                     	;# 
  9748  0513                     	;# 
  9749  0514                     	;# 
  9750  0515                     	;# 
  9751  0515                     	;# 
  9752  0516                     	;# 
  9753  0517                     	;# 
  9754  0518                     	;# 
  9755  0519                     	;# 
  9756  051A                     	;# 
  9757  051B                     	;# 
  9758  051C                     	;# 
  9759  051D                     	;# 
  9760  058C                     	;# 
  9761  058C                     	;# 
  9762  058D                     	;# 
  9763  058E                     	;# 
  9764  058F                     	;# 
  9765  058F                     	;# 
  9766  0590                     	;# 
  9767  0591                     	;# 
  9768  0592                     	;# 
  9769  0593                     	;# 
  9770  060C                     	;# 
  9771  060D                     	;# 
  9772  060E                     	;# 
  9773  060F                     	;# 
  9774  0610                     	;# 
  9775  0611                     	;# 
  9776  0612                     	;# 
  9777  0613                     	;# 
  9778  0614                     	;# 
  9779  0616                     	;# 
  9780  0617                     	;# 
  9781  0618                     	;# 
  9782  0619                     	;# 
  9783  061A                     	;# 
  9784  061B                     	;# 
  9785  061C                     	;# 
  9786  061D                     	;# 
  9787  061E                     	;# 
  9788  068C                     	;# 
  9789  068D                     	;# 
  9790  068E                     	;# 
  9791  068F                     	;# 
  9792  0690                     	;# 
  9793  0691                     	;# 
  9794  0692                     	;# 
  9795  0693                     	;# 
  9796  0694                     	;# 
  9797  070C                     	;# 
  9798  070D                     	;# 
  9799  070E                     	;# 
  9800  070F                     	;# 
  9801  0710                     	;# 
  9802  0711                     	;# 
  9803  0712                     	;# 
  9804  0713                     	;# 
  9805  0714                     	;# 
  9806  0716                     	;# 
  9807  0717                     	;# 
  9808  0718                     	;# 
  9809  0719                     	;# 
  9810  071A                     	;# 
  9811  071B                     	;# 
  9812  071C                     	;# 
  9813  071D                     	;# 
  9814  071E                     	;# 
  9815  0796                     	;# 
  9816  0797                     	;# 
  9817  0798                     	;# 
  9818  0799                     	;# 
  9819  079A                     	;# 
  9820  079B                     	;# 
  9821  080C                     	;# 
  9822  080D                     	;# 
  9823  080E                     	;# 
  9824  080F                     	;# 
  9825  0810                     	;# 
  9826  0811                     	;# 
  9827  0812                     	;# 
  9828  0813                     	;# 
  9829  0814                     	;# 
  9830  081A                     	;# 
  9831  081B                     	;# 
  9832  081C                     	;# 
  9833  081D                     	;# 
  9834  081E                     	;# 
  9835  081F                     	;# 
  9836  088C                     	;# 
  9837  088D                     	;# 
  9838  088E                     	;# 
  9839  088F                     	;# 
  9840  0890                     	;# 
  9841  0891                     	;# 
  9842  0892                     	;# 
  9843  0893                     	;# 
  9844  0895                     	;# 
  9845  0896                     	;# 
  9846  0897                     	;# 
  9847  0898                     	;# 
  9848  0899                     	;# 
  9849  089A                     	;# 
  9850  089B                     	;# 
  9851  090C                     	;# 
  9852  090E                     	;# 
  9853  090F                     	;# 
  9854  091F                     	;# 
  9855  098F                     	;# 
  9856  098F                     	;# 
  9857  0990                     	;# 
  9858  0991                     	;# 
  9859  0992                     	;# 
  9860  0993                     	;# 
  9861  0994                     	;# 
  9862  0995                     	;# 
  9863  0996                     	;# 
  9864  0997                     	;# 
  9865  1E0F                     	;# 
  9866  1E10                     	;# 
  9867  1E11                     	;# 
  9868  1E12                     	;# 
  9869  1E13                     	;# 
  9870  1E14                     	;# 
  9871  1E15                     	;# 
  9872  1E16                     	;# 
  9873  1E17                     	;# 
  9874  1E18                     	;# 
  9875  1E19                     	;# 
  9876  1E1A                     	;# 
  9877  1E1B                     	;# 
  9878  1E1C                     	;# 
  9879  1E1D                     	;# 
  9880  1E1E                     	;# 
  9881  1E1F                     	;# 
  9882  1E20                     	;# 
  9883  1E21                     	;# 
  9884  1E22                     	;# 
  9885  1E23                     	;# 
  9886  1E24                     	;# 
  9887  1E25                     	;# 
  9888  1E26                     	;# 
  9889  1E27                     	;# 
  9890  1E28                     	;# 
  9891  1E29                     	;# 
  9892  1E2A                     	;# 
  9893  1E2B                     	;# 
  9894  1E2C                     	;# 
  9895  1E2D                     	;# 
  9896  1E2E                     	;# 
  9897  1E2F                     	;# 
  9898  1E30                     	;# 
  9899  1E31                     	;# 
  9900  1E32                     	;# 
  9901  1E33                     	;# 
  9902  1E34                     	;# 
  9903  1E35                     	;# 
  9904  1E36                     	;# 
  9905  1E37                     	;# 
  9906  1E8F                     	;# 
  9907  1E90                     	;# 
  9908  1E91                     	;# 
  9909  1E92                     	;# 
  9910  1E93                     	;# 
  9911  1E94                     	;# 
  9912  1E95                     	;# 
  9913  1E96                     	;# 
  9914  1E97                     	;# 
  9915  1E9C                     	;# 
  9916  1E9D                     	;# 
  9917  1E9E                     	;# 
  9918  1EA1                     	;# 
  9919  1EA2                     	;# 
  9920  1EA3                     	;# 
  9921  1EA4                     	;# 
  9922  1EA5                     	;# 
  9923  1EA9                     	;# 
  9924  1EAA                     	;# 
  9925  1EAB                     	;# 
  9926  1EAC                     	;# 
  9927  1EB1                     	;# 
  9928  1EB2                     	;# 
  9929  1EB3                     	;# 
  9930  1EB8                     	;# 
  9931  1EB9                     	;# 
  9932  1EBA                     	;# 
  9933  1EBB                     	;# 
  9934  1EBC                     	;# 
  9935  1EBD                     	;# 
  9936  1EBE                     	;# 
  9937  1EC3                     	;# 
  9938  1EC5                     	;# 
  9939  1EC6                     	;# 
  9940  1EC7                     	;# 
  9941  1EC8                     	;# 
  9942  1EC9                     	;# 
  9943  1ECA                     	;# 
  9944  1ECB                     	;# 
  9945  1ECC                     	;# 
  9946  1F10                     	;# 
  9947  1F11                     	;# 
  9948  1F12                     	;# 
  9949  1F13                     	;# 
  9950  1F14                     	;# 
  9951  1F15                     	;# 
  9952  1F16                     	;# 
  9953  1F17                     	;# 
  9954  1F18                     	;# 
  9955  1F19                     	;# 
  9956  1F1A                     	;# 
  9957  1F1B                     	;# 
  9958  1F1C                     	;# 
  9959  1F1D                     	;# 
  9960  1F1E                     	;# 
  9961  1F1F                     	;# 
  9962  1F20                     	;# 
  9963  1F21                     	;# 
  9964  1F22                     	;# 
  9965  1F23                     	;# 
  9966  1F24                     	;# 
  9967  1F25                     	;# 
  9968  1F26                     	;# 
  9969  1F27                     	;# 
  9970  1F28                     	;# 
  9971  1F29                     	;# 
  9972  1F2A                     	;# 
  9973  1F2B                     	;# 
  9974  1F2C                     	;# 
  9975  1F2D                     	;# 
  9976  1F2E                     	;# 
  9977  1F2F                     	;# 
  9978  1F30                     	;# 
  9979  1F31                     	;# 
  9980  1F32                     	;# 
  9981  1F38                     	;# 
  9982  1F39                     	;# 
  9983  1F3A                     	;# 
  9984  1F3B                     	;# 
  9985  1F3C                     	;# 
  9986  1F3D                     	;# 
  9987  1F3E                     	;# 
  9988  1F3F                     	;# 
  9989  1F40                     	;# 
  9990  1F41                     	;# 
  9991  1F43                     	;# 
  9992  1F44                     	;# 
  9993  1F45                     	;# 
  9994  1F46                     	;# 
  9995  1F47                     	;# 
  9996  1F48                     	;# 
  9997  1F49                     	;# 
  9998  1F4A                     	;# 
  9999  1F4B                     	;# 
 10000  1F4C                     	;# 
 10001  1F4E                     	;# 
 10002  1F4F                     	;# 
 10003  1F50                     	;# 
 10004  1F51                     	;# 
 10005  1F52                     	;# 
 10006  1F53                     	;# 
 10007  1F54                     	;# 
 10008  1F55                     	;# 
 10009  1F56                     	;# 
 10010  1F57                     	;# 
 10011  1F59                     	;# 
 10012  1F5A                     	;# 
 10013  1F5B                     	;# 
 10014  1F5C                     	;# 
 10015  1F5D                     	;# 
 10016  1F61                     	;# 
 10017  1F62                     	;# 
 10018  1F64                     	;# 
 10019  1F65                     	;# 
 10020  1F66                     	;# 
 10021  1F67                     	;# 
 10022  1F68                     	;# 
 10023  1F69                     	;# 
 10024  1F6A                     	;# 
 10025  1F6B                     	;# 
 10026  1F6C                     	;# 
 10027  1F6D                     	;# 
 10028  1FE4                     	;# 
 10029  1FE5                     	;# 
 10030  1FE6                     	;# 
 10031  1FE7                     	;# 
 10032  1FE8                     	;# 
 10033  1FE9                     	;# 
 10034  1FEA                     	;# 
 10035  1FEB                     	;# 
 10036  1FED                     	;# 
 10037  1FEE                     	;# 
 10038  1FEF                     	;# 
 10039  0000                     	;# 
 10040  0001                     	;# 
 10041  0002                     	;# 
 10042  0003                     	;# 
 10043  0004                     	;# 
 10044  0005                     	;# 
 10045  0006                     	;# 
 10046  0007                     	;# 
 10047  0008                     	;# 
 10048  0009                     	;# 
 10049  000A                     	;# 
 10050  000B                     	;# 
 10051  000C                     	;# 
 10052  000D                     	;# 
 10053  000E                     	;# 
 10054  000F                     	;# 
 10055  0010                     	;# 
 10056  0011                     	;# 
 10057  0012                     	;# 
 10058  0013                     	;# 
 10059  0014                     	;# 
 10060  0015                     	;# 
 10061  0016                     	;# 
 10062  0017                     	;# 
 10063  0018                     	;# 
 10064  0019                     	;# 
 10065  001A                     	;# 
 10066  001C                     	;# 
 10067  001C                     	;# 
 10068  001D                     	;# 
 10069  001D                     	;# 
 10070  001E                     	;# 
 10071  001F                     	;# 
 10072  008C                     	;# 
 10073  008C                     	;# 
 10074  008D                     	;# 
 10075  008E                     	;# 
 10076  008E                     	;# 
 10077  008F                     	;# 
 10078  0090                     	;# 
 10079  0090                     	;# 
 10080  0091                     	;# 
 10081  0093                     	;# 
 10082  0094                     	;# 
 10083  0095                     	;# 
 10084  0096                     	;# 
 10085  0097                     	;# 
 10086  0098                     	;# 
 10087  0099                     	;# 
 10088  009A                     	;# 
 10089  009B                     	;# 
 10090  009C                     	;# 
 10091  009D                     	;# 
 10092  009E                     	;# 
 10093  010C                     	;# 
 10094  010D                     	;# 
 10095  010E                     	;# 
 10096  010E                     	;# 
 10097  010F                     	;# 
 10098  0110                     	;# 
 10099  0110                     	;# 
 10100  0111                     	;# 
 10101  0112                     	;# 
 10102  0112                     	;# 
 10103  0113                     	;# 
 10104  0114                     	;# 
 10105  0114                     	;# 
 10106  0115                     	;# 
 10107  0116                     	;# 
 10108  0116                     	;# 
 10109  0117                     	;# 
 10110  0119                     	;# 
 10111  0119                     	;# 
 10112  0119                     	;# 
 10113  011A                     	;# 
 10114  011A                     	;# 
 10115  011A                     	;# 
 10116  011B                     	;# 
 10117  011B                     	;# 
 10118  011B                     	;# 
 10119  011B                     	;# 
 10120  011B                     	;# 
 10121  011C                     	;# 
 10122  011C                     	;# 
 10123  011C                     	;# 
 10124  011D                     	;# 
 10125  011D                     	;# 
 10126  011D                     	;# 
 10127  011E                     	;# 
 10128  011E                     	;# 
 10129  011E                     	;# 
 10130  011F                     	;# 
 10131  011F                     	;# 
 10132  011F                     	;# 
 10133  011F                     	;# 
 10134  011F                     	;# 
 10135  018C                     	;# 
 10136  018D                     	;# 
 10137  018E                     	;# 
 10138  018F                     	;# 
 10139  0190                     	;# 
 10140  0191                     	;# 
 10141  0192                     	;# 
 10142  0196                     	;# 
 10143  0197                     	;# 
 10144  0198                     	;# 
 10145  0199                     	;# 
 10146  019A                     	;# 
 10147  019B                     	;# 
 10148  019C                     	;# 
 10149  020C                     	;# 
 10150  020C                     	;# 
 10151  020D                     	;# 
 10152  020E                     	;# 
 10153  020F                     	;# 
 10154  020F                     	;# 
 10155  0210                     	;# 
 10156  0210                     	;# 
 10157  0211                     	;# 
 10158  0211                     	;# 
 10159  0212                     	;# 
 10160  0212                     	;# 
 10161  0213                     	;# 
 10162  0214                     	;# 
 10163  0215                     	;# 
 10164  0215                     	;# 
 10165  0216                     	;# 
 10166  0216                     	;# 
 10167  0217                     	;# 
 10168  0217                     	;# 
 10169  0218                     	;# 
 10170  0218                     	;# 
 10171  0219                     	;# 
 10172  021A                     	;# 
 10173  021B                     	;# 
 10174  021B                     	;# 
 10175  021C                     	;# 
 10176  021C                     	;# 
 10177  021D                     	;# 
 10178  021D                     	;# 
 10179  021E                     	;# 
 10180  021F                     	;# 
 10181  028C                     	;# 
 10182  028C                     	;# 
 10183  028D                     	;# 
 10184  028D                     	;# 
 10185  028E                     	;# 
 10186  028F                     	;# 
 10187  0290                     	;# 
 10188  0290                     	;# 
 10189  0291                     	;# 
 10190  0292                     	;# 
 10191  0292                     	;# 
 10192  0293                     	;# 
 10193  0293                     	;# 
 10194  0294                     	;# 
 10195  0295                     	;# 
 10196  0296                     	;# 
 10197  0296                     	;# 
 10198  0297                     	;# 
 10199  0298                     	;# 
 10200  0298                     	;# 
 10201  0299                     	;# 
 10202  0299                     	;# 
 10203  029A                     	;# 
 10204  029B                     	;# 
 10205  029C                     	;# 
 10206  029C                     	;# 
 10207  029D                     	;# 
 10208  030C                     	;# 
 10209  030C                     	;# 
 10210  030D                     	;# 
 10211  030E                     	;# 
 10212  030F                     	;# 
 10213  0310                     	;# 
 10214  0310                     	;# 
 10215  0311                     	;# 
 10216  0312                     	;# 
 10217  0313                     	;# 
 10218  0314                     	;# 
 10219  0314                     	;# 
 10220  0315                     	;# 
 10221  0316                     	;# 
 10222  0317                     	;# 
 10223  0318                     	;# 
 10224  0318                     	;# 
 10225  0319                     	;# 
 10226  031A                     	;# 
 10227  031B                     	;# 
 10228  031C                     	;# 
 10229  031C                     	;# 
 10230  031D                     	;# 
 10231  031E                     	;# 
 10232  031F                     	;# 
 10233  038C                     	;# 
 10234  038C                     	;# 
 10235  038D                     	;# 
 10236  038E                     	;# 
 10237  0390                     	;# 
 10238  0390                     	;# 
 10239  0391                     	;# 
 10240  0392                     	;# 
 10241  040C                     	;# 
 10242  040D                     	;# 
 10243  040E                     	;# 
 10244  040F                     	;# 
 10245  0410                     	;# 
 10246  0411                     	;# 
 10247  0416                     	;# 
 10248  0416                     	;# 
 10249  0417                     	;# 
 10250  0418                     	;# 
 10251  0418                     	;# 
 10252  0419                     	;# 
 10253  041A                     	;# 
 10254  041A                     	;# 
 10255  041B                     	;# 
 10256  041C                     	;# 
 10257  041C                     	;# 
 10258  041D                     	;# 
 10259  041E                     	;# 
 10260  041F                     	;# 
 10261  048C                     	;# 
 10262  048C                     	;# 
 10263  048D                     	;# 
 10264  048E                     	;# 
 10265  048F                     	;# 
 10266  048F                     	;# 
 10267  0490                     	;# 
 10268  0491                     	;# 
 10269  0492                     	;# 
 10270  0492                     	;# 
 10271  0493                     	;# 
 10272  0494                     	;# 
 10273  0495                     	;# 
 10274  0495                     	;# 
 10275  0496                     	;# 
 10276  0497                     	;# 
 10277  0498                     	;# 
 10278  0499                     	;# 
 10279  049A                     	;# 
 10280  049B                     	;# 
 10281  049C                     	;# 
 10282  049D                     	;# 
 10283  050C                     	;# 
 10284  050C                     	;# 
 10285  050D                     	;# 
 10286  050E                     	;# 
 10287  050F                     	;# 
 10288  050F                     	;# 
 10289  0510                     	;# 
 10290  0511                     	;# 
 10291  0512                     	;# 
 10292  0512                     	;# 
 10293  0513                     	;# 
 10294  0514                     	;# 
 10295  0515                     	;# 
 10296  0515                     	;# 
 10297  0516                     	;# 
 10298  0517                     	;# 
 10299  0518                     	;# 
 10300  0519                     	;# 
 10301  051A                     	;# 
 10302  051B                     	;# 
 10303  051C                     	;# 
 10304  051D                     	;# 
 10305  058C                     	;# 
 10306  058C                     	;# 
 10307  058D                     	;# 
 10308  058E                     	;# 
 10309  058F                     	;# 
 10310  058F                     	;# 
 10311  0590                     	;# 
 10312  0591                     	;# 
 10313  0592                     	;# 
 10314  0593                     	;# 
 10315  060C                     	;# 
 10316  060D                     	;# 
 10317  060E                     	;# 
 10318  060F                     	;# 
 10319  0610                     	;# 
 10320  0611                     	;# 
 10321  0612                     	;# 
 10322  0613                     	;# 
 10323  0614                     	;# 
 10324  0616                     	;# 
 10325  0617                     	;# 
 10326  0618                     	;# 
 10327  0619                     	;# 
 10328  061A                     	;# 
 10329  061B                     	;# 
 10330  061C                     	;# 
 10331  061D                     	;# 
 10332  061E                     	;# 
 10333  068C                     	;# 
 10334  068D                     	;# 
 10335  068E                     	;# 
 10336  068F                     	;# 
 10337  0690                     	;# 
 10338  0691                     	;# 
 10339  0692                     	;# 
 10340  0693                     	;# 
 10341  0694                     	;# 
 10342  070C                     	;# 
 10343  070D                     	;# 
 10344  070E                     	;# 
 10345  070F                     	;# 
 10346  0710                     	;# 
 10347  0711                     	;# 
 10348  0712                     	;# 
 10349  0713                     	;# 
 10350  0714                     	;# 
 10351  0716                     	;# 
 10352  0717                     	;# 
 10353  0718                     	;# 
 10354  0719                     	;# 
 10355  071A                     	;# 
 10356  071B                     	;# 
 10357  071C                     	;# 
 10358  071D                     	;# 
 10359  071E                     	;# 
 10360  0796                     	;# 
 10361  0797                     	;# 
 10362  0798                     	;# 
 10363  0799                     	;# 
 10364  079A                     	;# 
 10365  079B                     	;# 
 10366  080C                     	;# 
 10367  080D                     	;# 
 10368  080E                     	;# 
 10369  080F                     	;# 
 10370  0810                     	;# 
 10371  0811                     	;# 
 10372  0812                     	;# 
 10373  0813                     	;# 
 10374  0814                     	;# 
 10375  081A                     	;# 
 10376  081B                     	;# 
 10377  081C                     	;# 
 10378  081D                     	;# 
 10379  081E                     	;# 
 10380  081F                     	;# 
 10381  088C                     	;# 
 10382  088D                     	;# 
 10383  088E                     	;# 
 10384  088F                     	;# 
 10385  0890                     	;# 
 10386  0891                     	;# 
 10387  0892                     	;# 
 10388  0893                     	;# 
 10389  0895                     	;# 
 10390  0896                     	;# 
 10391  0897                     	;# 
 10392  0898                     	;# 
 10393  0899                     	;# 
 10394  089A                     	;# 
 10395  089B                     	;# 
 10396  090C                     	;# 
 10397  090E                     	;# 
 10398  090F                     	;# 
 10399  091F                     	;# 
 10400  098F                     	;# 
 10401  098F                     	;# 
 10402  0990                     	;# 
 10403  0991                     	;# 
 10404  0992                     	;# 
 10405  0993                     	;# 
 10406  0994                     	;# 
 10407  0995                     	;# 
 10408  0996                     	;# 
 10409  0997                     	;# 
 10410  1E0F                     	;# 
 10411  1E10                     	;# 
 10412  1E11                     	;# 
 10413  1E12                     	;# 
 10414  1E13                     	;# 
 10415  1E14                     	;# 
 10416  1E15                     	;# 
 10417  1E16                     	;# 
 10418  1E17                     	;# 
 10419  1E18                     	;# 
 10420  1E19                     	;# 
 10421  1E1A                     	;# 
 10422  1E1B                     	;# 
 10423  1E1C                     	;# 
 10424  1E1D                     	;# 
 10425  1E1E                     	;# 
 10426  1E1F                     	;# 
 10427  1E20                     	;# 
 10428  1E21                     	;# 
 10429  1E22                     	;# 
 10430  1E23                     	;# 
 10431  1E24                     	;# 
 10432  1E25                     	;# 
 10433  1E26                     	;# 
 10434  1E27                     	;# 
 10435  1E28                     	;# 
 10436  1E29                     	;# 
 10437  1E2A                     	;# 
 10438  1E2B                     	;# 
 10439  1E2C                     	;# 
 10440  1E2D                     	;# 
 10441  1E2E                     	;# 
 10442  1E2F                     	;# 
 10443  1E30                     	;# 
 10444  1E31                     	;# 
 10445  1E32                     	;# 
 10446  1E33                     	;# 
 10447  1E34                     	;# 
 10448  1E35                     	;# 
 10449  1E36                     	;# 
 10450  1E37                     	;# 
 10451  1E8F                     	;# 
 10452  1E90                     	;# 
 10453  1E91                     	;# 
 10454  1E92                     	;# 
 10455  1E93                     	;# 
 10456  1E94                     	;# 
 10457  1E95                     	;# 
 10458  1E96                     	;# 
 10459  1E97                     	;# 
 10460  1E9C                     	;# 
 10461  1E9D                     	;# 
 10462  1E9E                     	;# 
 10463  1EA1                     	;# 
 10464  1EA2                     	;# 
 10465  1EA3                     	;# 
 10466  1EA4                     	;# 
 10467  1EA5                     	;# 
 10468  1EA9                     	;# 
 10469  1EAA                     	;# 
 10470  1EAB                     	;# 
 10471  1EAC                     	;# 
 10472  1EB1                     	;# 
 10473  1EB2                     	;# 
 10474  1EB3                     	;# 
 10475  1EB8                     	;# 
 10476  1EB9                     	;# 
 10477  1EBA                     	;# 
 10478  1EBB                     	;# 
 10479  1EBC                     	;# 
 10480  1EBD                     	;# 
 10481  1EBE                     	;# 
 10482  1EC3                     	;# 
 10483  1EC5                     	;# 
 10484  1EC6                     	;# 
 10485  1EC7                     	;# 
 10486  1EC8                     	;# 
 10487  1EC9                     	;# 
 10488  1ECA                     	;# 
 10489  1ECB                     	;# 
 10490  1ECC                     	;# 
 10491  1F10                     	;# 
 10492  1F11                     	;# 
 10493  1F12                     	;# 
 10494  1F13                     	;# 
 10495  1F14                     	;# 
 10496  1F15                     	;# 
 10497  1F16                     	;# 
 10498  1F17                     	;# 
 10499  1F18                     	;# 
 10500  1F19                     	;# 
 10501  1F1A                     	;# 
 10502  1F1B                     	;# 
 10503  1F1C                     	;# 
 10504  1F1D                     	;# 
 10505  1F1E                     	;# 
 10506  1F1F                     	;# 
 10507  1F20                     	;# 
 10508  1F21                     	;# 
 10509  1F22                     	;# 
 10510  1F23                     	;# 
 10511  1F24                     	;# 
 10512  1F25                     	;# 
 10513  1F26                     	;# 
 10514  1F27                     	;# 
 10515  1F28                     	;# 
 10516  1F29                     	;# 
 10517  1F2A                     	;# 
 10518  1F2B                     	;# 
 10519  1F2C                     	;# 
 10520  1F2D                     	;# 
 10521  1F2E                     	;# 
 10522  1F2F                     	;# 
 10523  1F30                     	;# 
 10524  1F31                     	;# 
 10525  1F32                     	;# 
 10526  1F38                     	;# 
 10527  1F39                     	;# 
 10528  1F3A                     	;# 
 10529  1F3B                     	;# 
 10530  1F3C                     	;# 
 10531  1F3D                     	;# 
 10532  1F3E                     	;# 
 10533  1F3F                     	;# 
 10534  1F40                     	;# 
 10535  1F41                     	;# 
 10536  1F43                     	;# 
 10537  1F44                     	;# 
 10538  1F45                     	;# 
 10539  1F46                     	;# 
 10540  1F47                     	;# 
 10541  1F48                     	;# 
 10542  1F49                     	;# 
 10543  1F4A                     	;# 
 10544  1F4B                     	;# 
 10545  1F4C                     	;# 
 10546  1F4E                     	;# 
 10547  1F4F                     	;# 
 10548  1F50                     	;# 
 10549  1F51                     	;# 
 10550  1F52                     	;# 
 10551  1F53                     	;# 
 10552  1F54                     	;# 
 10553  1F55                     	;# 
 10554  1F56                     	;# 
 10555  1F57                     	;# 
 10556  1F59                     	;# 
 10557  1F5A                     	;# 
 10558  1F5B                     	;# 
 10559  1F5C                     	;# 
 10560  1F5D                     	;# 
 10561  1F61                     	;# 
 10562  1F62                     	;# 
 10563  1F64                     	;# 
 10564  1F65                     	;# 
 10565  1F66                     	;# 
 10566  1F67                     	;# 
 10567  1F68                     	;# 
 10568  1F69                     	;# 
 10569  1F6A                     	;# 
 10570  1F6B                     	;# 
 10571  1F6C                     	;# 
 10572  1F6D                     	;# 
 10573  1FE4                     	;# 
 10574  1FE5                     	;# 
 10575  1FE6                     	;# 
 10576  1FE7                     	;# 
 10577  1FE8                     	;# 
 10578  1FE9                     	;# 
 10579  1FEA                     	;# 
 10580  1FEB                     	;# 
 10581  1FED                     	;# 
 10582  1FEE                     	;# 
 10583  1FEF                     	;# 
 10584  0000                     	;# 
 10585  0001                     	;# 
 10586  0002                     	;# 
 10587  0003                     	;# 
 10588  0004                     	;# 
 10589  0005                     	;# 
 10590  0006                     	;# 
 10591  0007                     	;# 
 10592  0008                     	;# 
 10593  0009                     	;# 
 10594  000A                     	;# 
 10595  000B                     	;# 
 10596  000C                     	;# 
 10597  000D                     	;# 
 10598  000E                     	;# 
 10599  000F                     	;# 
 10600  0010                     	;# 
 10601  0011                     	;# 
 10602  0012                     	;# 
 10603  0013                     	;# 
 10604  0014                     	;# 
 10605  0015                     	;# 
 10606  0016                     	;# 
 10607  0017                     	;# 
 10608  0018                     	;# 
 10609  0019                     	;# 
 10610  001A                     	;# 
 10611  001C                     	;# 
 10612  001C                     	;# 
 10613  001D                     	;# 
 10614  001D                     	;# 
 10615  001E                     	;# 
 10616  001F                     	;# 
 10617  008C                     	;# 
 10618  008C                     	;# 
 10619  008D                     	;# 
 10620  008E                     	;# 
 10621  008E                     	;# 
 10622  008F                     	;# 
 10623  0090                     	;# 
 10624  0090                     	;# 
 10625  0091                     	;# 
 10626  0093                     	;# 
 10627  0094                     	;# 
 10628  0095                     	;# 
 10629  0096                     	;# 
 10630  0097                     	;# 
 10631  0098                     	;# 
 10632  0099                     	;# 
 10633  009A                     	;# 
 10634  009B                     	;# 
 10635  009C                     	;# 
 10636  009D                     	;# 
 10637  009E                     	;# 
 10638  010C                     	;# 
 10639  010D                     	;# 
 10640  010E                     	;# 
 10641  010E                     	;# 
 10642  010F                     	;# 
 10643  0110                     	;# 
 10644  0110                     	;# 
 10645  0111                     	;# 
 10646  0112                     	;# 
 10647  0112                     	;# 
 10648  0113                     	;# 
 10649  0114                     	;# 
 10650  0114                     	;# 
 10651  0115                     	;# 
 10652  0116                     	;# 
 10653  0116                     	;# 
 10654  0117                     	;# 
 10655  0119                     	;# 
 10656  0119                     	;# 
 10657  0119                     	;# 
 10658  011A                     	;# 
 10659  011A                     	;# 
 10660  011A                     	;# 
 10661  011B                     	;# 
 10662  011B                     	;# 
 10663  011B                     	;# 
 10664  011B                     	;# 
 10665  011B                     	;# 
 10666  011C                     	;# 
 10667  011C                     	;# 
 10668  011C                     	;# 
 10669  011D                     	;# 
 10670  011D                     	;# 
 10671  011D                     	;# 
 10672  011E                     	;# 
 10673  011E                     	;# 
 10674  011E                     	;# 
 10675  011F                     	;# 
 10676  011F                     	;# 
 10677  011F                     	;# 
 10678  011F                     	;# 
 10679  011F                     	;# 
 10680  018C                     	;# 
 10681  018D                     	;# 
 10682  018E                     	;# 
 10683  018F                     	;# 
 10684  0190                     	;# 
 10685  0191                     	;# 
 10686  0192                     	;# 
 10687  0196                     	;# 
 10688  0197                     	;# 
 10689  0198                     	;# 
 10690  0199                     	;# 
 10691  019A                     	;# 
 10692  019B                     	;# 
 10693  019C                     	;# 
 10694  020C                     	;# 
 10695  020C                     	;# 
 10696  020D                     	;# 
 10697  020E                     	;# 
 10698  020F                     	;# 
 10699  020F                     	;# 
 10700  0210                     	;# 
 10701  0210                     	;# 
 10702  0211                     	;# 
 10703  0211                     	;# 
 10704  0212                     	;# 
 10705  0212                     	;# 
 10706  0213                     	;# 
 10707  0214                     	;# 
 10708  0215                     	;# 
 10709  0215                     	;# 
 10710  0216                     	;# 
 10711  0216                     	;# 
 10712  0217                     	;# 
 10713  0217                     	;# 
 10714  0218                     	;# 
 10715  0218                     	;# 
 10716  0219                     	;# 
 10717  021A                     	;# 
 10718  021B                     	;# 
 10719  021B                     	;# 
 10720  021C                     	;# 
 10721  021C                     	;# 
 10722  021D                     	;# 
 10723  021D                     	;# 
 10724  021E                     	;# 
 10725  021F                     	;# 
 10726  028C                     	;# 
 10727  028C                     	;# 
 10728  028D                     	;# 
 10729  028D                     	;# 
 10730  028E                     	;# 
 10731  028F                     	;# 
 10732  0290                     	;# 
 10733  0290                     	;# 
 10734  0291                     	;# 
 10735  0292                     	;# 
 10736  0292                     	;# 
 10737  0293                     	;# 
 10738  0293                     	;# 
 10739  0294                     	;# 
 10740  0295                     	;# 
 10741  0296                     	;# 
 10742  0296                     	;# 
 10743  0297                     	;# 
 10744  0298                     	;# 
 10745  0298                     	;# 
 10746  0299                     	;# 
 10747  0299                     	;# 
 10748  029A                     	;# 
 10749  029B                     	;# 
 10750  029C                     	;# 
 10751  029C                     	;# 
 10752  029D                     	;# 
 10753  030C                     	;# 
 10754  030C                     	;# 
 10755  030D                     	;# 
 10756  030E                     	;# 
 10757  030F                     	;# 
 10758  0310                     	;# 
 10759  0310                     	;# 
 10760  0311                     	;# 
 10761  0312                     	;# 
 10762  0313                     	;# 
 10763  0314                     	;# 
 10764  0314                     	;# 
 10765  0315                     	;# 
 10766  0316                     	;# 
 10767  0317                     	;# 
 10768  0318                     	;# 
 10769  0318                     	;# 
 10770  0319                     	;# 
 10771  031A                     	;# 
 10772  031B                     	;# 
 10773  031C                     	;# 
 10774  031C                     	;# 
 10775  031D                     	;# 
 10776  031E                     	;# 
 10777  031F                     	;# 
 10778  038C                     	;# 
 10779  038C                     	;# 
 10780  038D                     	;# 
 10781  038E                     	;# 
 10782  0390                     	;# 
 10783  0390                     	;# 
 10784  0391                     	;# 
 10785  0392                     	;# 
 10786  040C                     	;# 
 10787  040D                     	;# 
 10788  040E                     	;# 
 10789  040F                     	;# 
 10790  0410                     	;# 
 10791  0411                     	;# 
 10792  0416                     	;# 
 10793  0416                     	;# 
 10794  0417                     	;# 
 10795  0418                     	;# 
 10796  0418                     	;# 
 10797  0419                     	;# 
 10798  041A                     	;# 
 10799  041A                     	;# 
 10800  041B                     	;# 
 10801  041C                     	;# 
 10802  041C                     	;# 
 10803  041D                     	;# 
 10804  041E                     	;# 
 10805  041F                     	;# 
 10806  048C                     	;# 
 10807  048C                     	;# 
 10808  048D                     	;# 
 10809  048E                     	;# 
 10810  048F                     	;# 
 10811  048F                     	;# 
 10812  0490                     	;# 
 10813  0491                     	;# 
 10814  0492                     	;# 
 10815  0492                     	;# 
 10816  0493                     	;# 
 10817  0494                     	;# 
 10818  0495                     	;# 
 10819  0495                     	;# 
 10820  0496                     	;# 
 10821  0497                     	;# 
 10822  0498                     	;# 
 10823  0499                     	;# 
 10824  049A                     	;# 
 10825  049B                     	;# 
 10826  049C                     	;# 
 10827  049D                     	;# 
 10828  050C                     	;# 
 10829  050C                     	;# 
 10830  050D                     	;# 
 10831  050E                     	;# 
 10832  050F                     	;# 
 10833  050F                     	;# 
 10834  0510                     	;# 
 10835  0511                     	;# 
 10836  0512                     	;# 
 10837  0512                     	;# 
 10838  0513                     	;# 
 10839  0514                     	;# 
 10840  0515                     	;# 
 10841  0515                     	;# 
 10842  0516                     	;# 
 10843  0517                     	;# 
 10844  0518                     	;# 
 10845  0519                     	;# 
 10846  051A                     	;# 
 10847  051B                     	;# 
 10848  051C                     	;# 
 10849  051D                     	;# 
 10850  058C                     	;# 
 10851  058C                     	;# 
 10852  058D                     	;# 
 10853  058E                     	;# 
 10854  058F                     	;# 
 10855  058F                     	;# 
 10856  0590                     	;# 
 10857  0591                     	;# 
 10858  0592                     	;# 
 10859  0593                     	;# 
 10860  060C                     	;# 
 10861  060D                     	;# 
 10862  060E                     	;# 
 10863  060F                     	;# 
 10864  0610                     	;# 
 10865  0611                     	;# 
 10866  0612                     	;# 
 10867  0613                     	;# 
 10868  0614                     	;# 
 10869  0616                     	;# 
 10870  0617                     	;# 
 10871  0618                     	;# 
 10872  0619                     	;# 
 10873  061A                     	;# 
 10874  061B                     	;# 
 10875  061C                     	;# 
 10876  061D                     	;# 
 10877  061E                     	;# 
 10878  068C                     	;# 
 10879  068D                     	;# 
 10880  068E                     	;# 
 10881  068F                     	;# 
 10882  0690                     	;# 
 10883  0691                     	;# 
 10884  0692                     	;# 
 10885  0693                     	;# 
 10886  0694                     	;# 
 10887  070C                     	;# 
 10888  070D                     	;# 
 10889  070E                     	;# 
 10890  070F                     	;# 
 10891  0710                     	;# 
 10892  0711                     	;# 
 10893  0712                     	;# 
 10894  0713                     	;# 
 10895  0714                     	;# 
 10896  0716                     	;# 
 10897  0717                     	;# 
 10898  0718                     	;# 
 10899  0719                     	;# 
 10900  071A                     	;# 
 10901  071B                     	;# 
 10902  071C                     	;# 
 10903  071D                     	;# 
 10904  071E                     	;# 
 10905  0796                     	;# 
 10906  0797                     	;# 
 10907  0798                     	;# 
 10908  0799                     	;# 
 10909  079A                     	;# 
 10910  079B                     	;# 
 10911  080C                     	;# 
 10912  080D                     	;# 
 10913  080E                     	;# 
 10914  080F                     	;# 
 10915  0810                     	;# 
 10916  0811                     	;# 
 10917  0812                     	;# 
 10918  0813                     	;# 
 10919  0814                     	;# 
 10920  081A                     	;# 
 10921  081B                     	;# 
 10922  081C                     	;# 
 10923  081D                     	;# 
 10924  081E                     	;# 
 10925  081F                     	;# 
 10926  088C                     	;# 
 10927  088D                     	;# 
 10928  088E                     	;# 
 10929  088F                     	;# 
 10930  0890                     	;# 
 10931  0891                     	;# 
 10932  0892                     	;# 
 10933  0893                     	;# 
 10934  0895                     	;# 
 10935  0896                     	;# 
 10936  0897                     	;# 
 10937  0898                     	;# 
 10938  0899                     	;# 
 10939  089A                     	;# 
 10940  089B                     	;# 
 10941  090C                     	;# 
 10942  090E                     	;# 
 10943  090F                     	;# 
 10944  091F                     	;# 
 10945  098F                     	;# 
 10946  098F                     	;# 
 10947  0990                     	;# 
 10948  0991                     	;# 
 10949  0992                     	;# 
 10950  0993                     	;# 
 10951  0994                     	;# 
 10952  0995                     	;# 
 10953  0996                     	;# 
 10954  0997                     	;# 
 10955  1E0F                     	;# 
 10956  1E10                     	;# 
 10957  1E11                     	;# 
 10958  1E12                     	;# 
 10959  1E13                     	;# 
 10960  1E14                     	;# 
 10961  1E15                     	;# 
 10962  1E16                     	;# 
 10963  1E17                     	;# 
 10964  1E18                     	;# 
 10965  1E19                     	;# 
 10966  1E1A                     	;# 
 10967  1E1B                     	;# 
 10968  1E1C                     	;# 
 10969  1E1D                     	;# 
 10970  1E1E                     	;# 
 10971  1E1F                     	;# 
 10972  1E20                     	;# 
 10973  1E21                     	;# 
 10974  1E22                     	;# 
 10975  1E23                     	;# 
 10976  1E24                     	;# 
 10977  1E25                     	;# 
 10978  1E26                     	;# 
 10979  1E27                     	;# 
 10980  1E28                     	;# 
 10981  1E29                     	;# 
 10982  1E2A                     	;# 
 10983  1E2B                     	;# 
 10984  1E2C                     	;# 
 10985  1E2D                     	;# 
 10986  1E2E                     	;# 
 10987  1E2F                     	;# 
 10988  1E30                     	;# 
 10989  1E31                     	;# 
 10990  1E32                     	;# 
 10991  1E33                     	;# 
 10992  1E34                     	;# 
 10993  1E35                     	;# 
 10994  1E36                     	;# 
 10995  1E37                     	;# 
 10996  1E8F                     	;# 
 10997  1E90                     	;# 
 10998  1E91                     	;# 
 10999  1E92                     	;# 
 11000  1E93                     	;# 
 11001  1E94                     	;# 
 11002  1E95                     	;# 
 11003  1E96                     	;# 
 11004  1E97                     	;# 
 11005  1E9C                     	;# 
 11006  1E9D                     	;# 
 11007  1E9E                     	;# 
 11008  1EA1                     	;# 
 11009  1EA2                     	;# 
 11010  1EA3                     	;# 
 11011  1EA4                     	;# 
 11012  1EA5                     	;# 
 11013  1EA9                     	;# 
 11014  1EAA                     	;# 
 11015  1EAB                     	;# 
 11016  1EAC                     	;# 
 11017  1EB1                     	;# 
 11018  1EB2                     	;# 
 11019  1EB3                     	;# 
 11020  1EB8                     	;# 
 11021  1EB9                     	;# 
 11022  1EBA                     	;# 
 11023  1EBB                     	;# 
 11024  1EBC                     	;# 
 11025  1EBD                     	;# 
 11026  1EBE                     	;# 
 11027  1EC3                     	;# 
 11028  1EC5                     	;# 
 11029  1EC6                     	;# 
 11030  1EC7                     	;# 
 11031  1EC8                     	;# 
 11032  1EC9                     	;# 
 11033  1ECA                     	;# 
 11034  1ECB                     	;# 
 11035  1ECC                     	;# 
 11036  1F10                     	;# 
 11037  1F11                     	;# 
 11038  1F12                     	;# 
 11039  1F13                     	;# 
 11040  1F14                     	;# 
 11041  1F15                     	;# 
 11042  1F16                     	;# 
 11043  1F17                     	;# 
 11044  1F18                     	;# 
 11045  1F19                     	;# 
 11046  1F1A                     	;# 
 11047  1F1B                     	;# 
 11048  1F1C                     	;# 
 11049  1F1D                     	;# 
 11050  1F1E                     	;# 
 11051  1F1F                     	;# 
 11052  1F20                     	;# 
 11053  1F21                     	;# 
 11054  1F22                     	;# 
 11055  1F23                     	;# 
 11056  1F24                     	;# 
 11057  1F25                     	;# 
 11058  1F26                     	;# 
 11059  1F27                     	;# 
 11060  1F28                     	;# 
 11061  1F29                     	;# 
 11062  1F2A                     	;# 
 11063  1F2B                     	;# 
 11064  1F2C                     	;# 
 11065  1F2D                     	;# 
 11066  1F2E                     	;# 
 11067  1F2F                     	;# 
 11068  1F30                     	;# 
 11069  1F31                     	;# 
 11070  1F32                     	;# 
 11071  1F38                     	;# 
 11072  1F39                     	;# 
 11073  1F3A                     	;# 
 11074  1F3B                     	;# 
 11075  1F3C                     	;# 
 11076  1F3D                     	;# 
 11077  1F3E                     	;# 
 11078  1F3F                     	;# 
 11079  1F40                     	;# 
 11080  1F41                     	;# 
 11081  1F43                     	;# 
 11082  1F44                     	;# 
 11083  1F45                     	;# 
 11084  1F46                     	;# 
 11085  1F47                     	;# 
 11086  1F48                     	;# 
 11087  1F49                     	;# 
 11088  1F4A                     	;# 
 11089  1F4B                     	;# 
 11090  1F4C                     	;# 
 11091  1F4E                     	;# 
 11092  1F4F                     	;# 
 11093  1F50                     	;# 
 11094  1F51                     	;# 
 11095  1F52                     	;# 
 11096  1F53                     	;# 
 11097  1F54                     	;# 
 11098  1F55                     	;# 
 11099  1F56                     	;# 
 11100  1F57                     	;# 
 11101  1F59                     	;# 
 11102  1F5A                     	;# 
 11103  1F5B                     	;# 
 11104  1F5C                     	;# 
 11105  1F5D                     	;# 
 11106  1F61                     	;# 
 11107  1F62                     	;# 
 11108  1F64                     	;# 
 11109  1F65                     	;# 
 11110  1F66                     	;# 
 11111  1F67                     	;# 
 11112  1F68                     	;# 
 11113  1F69                     	;# 
 11114  1F6A                     	;# 
 11115  1F6B                     	;# 
 11116  1F6C                     	;# 
 11117  1F6D                     	;# 
 11118  1FE4                     	;# 
 11119  1FE5                     	;# 
 11120  1FE6                     	;# 
 11121  1FE7                     	;# 
 11122  1FE8                     	;# 
 11123  1FE9                     	;# 
 11124  1FEA                     	;# 
 11125  1FEB                     	;# 
 11126  1FED                     	;# 
 11127  1FEE                     	;# 
 11128  1FEF                     	;# 
 11129  0000                     	;# 
 11130  0001                     	;# 
 11131  0002                     	;# 
 11132  0003                     	;# 
 11133  0004                     	;# 
 11134  0005                     	;# 
 11135  0006                     	;# 
 11136  0007                     	;# 
 11137  0008                     	;# 
 11138  0009                     	;# 
 11139  000A                     	;# 
 11140  000B                     	;# 
 11141  000C                     	;# 
 11142  000D                     	;# 
 11143  000E                     	;# 
 11144  000F                     	;# 
 11145  0010                     	;# 
 11146  0011                     	;# 
 11147  0012                     	;# 
 11148  0013                     	;# 
 11149  0014                     	;# 
 11150  0015                     	;# 
 11151  0016                     	;# 
 11152  0017                     	;# 
 11153  0018                     	;# 
 11154  0019                     	;# 
 11155  001A                     	;# 
 11156  001C                     	;# 
 11157  001C                     	;# 
 11158  001D                     	;# 
 11159  001D                     	;# 
 11160  001E                     	;# 
 11161  001F                     	;# 
 11162  008C                     	;# 
 11163  008C                     	;# 
 11164  008D                     	;# 
 11165  008E                     	;# 
 11166  008E                     	;# 
 11167  008F                     	;# 
 11168  0090                     	;# 
 11169  0090                     	;# 
 11170  0091                     	;# 
 11171  0093                     	;# 
 11172  0094                     	;# 
 11173  0095                     	;# 
 11174  0096                     	;# 
 11175  0097                     	;# 
 11176  0098                     	;# 
 11177  0099                     	;# 
 11178  009A                     	;# 
 11179  009B                     	;# 
 11180  009C                     	;# 
 11181  009D                     	;# 
 11182  009E                     	;# 
 11183  010C                     	;# 
 11184  010D                     	;# 
 11185  010E                     	;# 
 11186  010E                     	;# 
 11187  010F                     	;# 
 11188  0110                     	;# 
 11189  0110                     	;# 
 11190  0111                     	;# 
 11191  0112                     	;# 
 11192  0112                     	;# 
 11193  0113                     	;# 
 11194  0114                     	;# 
 11195  0114                     	;# 
 11196  0115                     	;# 
 11197  0116                     	;# 
 11198  0116                     	;# 
 11199  0117                     	;# 
 11200  0119                     	;# 
 11201  0119                     	;# 
 11202  0119                     	;# 
 11203  011A                     	;# 
 11204  011A                     	;# 
 11205  011A                     	;# 
 11206  011B                     	;# 
 11207  011B                     	;# 
 11208  011B                     	;# 
 11209  011B                     	;# 
 11210  011B                     	;# 
 11211  011C                     	;# 
 11212  011C                     	;# 
 11213  011C                     	;# 
 11214  011D                     	;# 
 11215  011D                     	;# 
 11216  011D                     	;# 
 11217  011E                     	;# 
 11218  011E                     	;# 
 11219  011E                     	;# 
 11220  011F                     	;# 
 11221  011F                     	;# 
 11222  011F                     	;# 
 11223  011F                     	;# 
 11224  011F                     	;# 
 11225  018C                     	;# 
 11226  018D                     	;# 
 11227  018E                     	;# 
 11228  018F                     	;# 
 11229  0190                     	;# 
 11230  0191                     	;# 
 11231  0192                     	;# 
 11232  0196                     	;# 
 11233  0197                     	;# 
 11234  0198                     	;# 
 11235  0199                     	;# 
 11236  019A                     	;# 
 11237  019B                     	;# 
 11238  019C                     	;# 
 11239  020C                     	;# 
 11240  020C                     	;# 
 11241  020D                     	;# 
 11242  020E                     	;# 
 11243  020F                     	;# 
 11244  020F                     	;# 
 11245  0210                     	;# 
 11246  0210                     	;# 
 11247  0211                     	;# 
 11248  0211                     	;# 
 11249  0212                     	;# 
 11250  0212                     	;# 
 11251  0213                     	;# 
 11252  0214                     	;# 
 11253  0215                     	;# 
 11254  0215                     	;# 
 11255  0216                     	;# 
 11256  0216                     	;# 
 11257  0217                     	;# 
 11258  0217                     	;# 
 11259  0218                     	;# 
 11260  0218                     	;# 
 11261  0219                     	;# 
 11262  021A                     	;# 
 11263  021B                     	;# 
 11264  021B                     	;# 
 11265  021C                     	;# 
 11266  021C                     	;# 
 11267  021D                     	;# 
 11268  021D                     	;# 
 11269  021E                     	;# 
 11270  021F                     	;# 
 11271  028C                     	;# 
 11272  028C                     	;# 
 11273  028D                     	;# 
 11274  028D                     	;# 
 11275  028E                     	;# 
 11276  028F                     	;# 
 11277  0290                     	;# 
 11278  0290                     	;# 
 11279  0291                     	;# 
 11280  0292                     	;# 
 11281  0292                     	;# 
 11282  0293                     	;# 
 11283  0293                     	;# 
 11284  0294                     	;# 
 11285  0295                     	;# 
 11286  0296                     	;# 
 11287  0296                     	;# 
 11288  0297                     	;# 
 11289  0298                     	;# 
 11290  0298                     	;# 
 11291  0299                     	;# 
 11292  0299                     	;# 
 11293  029A                     	;# 
 11294  029B                     	;# 
 11295  029C                     	;# 
 11296  029C                     	;# 
 11297  029D                     	;# 
 11298  030C                     	;# 
 11299  030C                     	;# 
 11300  030D                     	;# 
 11301  030E                     	;# 
 11302  030F                     	;# 
 11303  0310                     	;# 
 11304  0310                     	;# 
 11305  0311                     	;# 
 11306  0312                     	;# 
 11307  0313                     	;# 
 11308  0314                     	;# 
 11309  0314                     	;# 
 11310  0315                     	;# 
 11311  0316                     	;# 
 11312  0317                     	;# 
 11313  0318                     	;# 
 11314  0318                     	;# 
 11315  0319                     	;# 
 11316  031A                     	;# 
 11317  031B                     	;# 
 11318  031C                     	;# 
 11319  031C                     	;# 
 11320  031D                     	;# 
 11321  031E                     	;# 
 11322  031F                     	;# 
 11323  038C                     	;# 
 11324  038C                     	;# 
 11325  038D                     	;# 
 11326  038E                     	;# 
 11327  0390                     	;# 
 11328  0390                     	;# 
 11329  0391                     	;# 
 11330  0392                     	;# 
 11331  040C                     	;# 
 11332  040D                     	;# 
 11333  040E                     	;# 
 11334  040F                     	;# 
 11335  0410                     	;# 
 11336  0411                     	;# 
 11337  0416                     	;# 
 11338  0416                     	;# 
 11339  0417                     	;# 
 11340  0418                     	;# 
 11341  0418                     	;# 
 11342  0419                     	;# 
 11343  041A                     	;# 
 11344  041A                     	;# 
 11345  041B                     	;# 
 11346  041C                     	;# 
 11347  041C                     	;# 
 11348  041D                     	;# 
 11349  041E                     	;# 
 11350  041F                     	;# 
 11351  048C                     	;# 
 11352  048C                     	;# 
 11353  048D                     	;# 
 11354  048E                     	;# 
 11355  048F                     	;# 
 11356  048F                     	;# 
 11357  0490                     	;# 
 11358  0491                     	;# 
 11359  0492                     	;# 
 11360  0492                     	;# 
 11361  0493                     	;# 
 11362  0494                     	;# 
 11363  0495                     	;# 
 11364  0495                     	;# 
 11365  0496                     	;# 
 11366  0497                     	;# 
 11367  0498                     	;# 
 11368  0499                     	;# 
 11369  049A                     	;# 
 11370  049B                     	;# 
 11371  049C                     	;# 
 11372  049D                     	;# 
 11373  050C                     	;# 
 11374  050C                     	;# 
 11375  050D                     	;# 
 11376  050E                     	;# 
 11377  050F                     	;# 
 11378  050F                     	;# 
 11379  0510                     	;# 
 11380  0511                     	;# 
 11381  0512                     	;# 
 11382  0512                     	;# 
 11383  0513                     	;# 
 11384  0514                     	;# 
 11385  0515                     	;# 
 11386  0515                     	;# 
 11387  0516                     	;# 
 11388  0517                     	;# 
 11389  0518                     	;# 
 11390  0519                     	;# 
 11391  051A                     	;# 
 11392  051B                     	;# 
 11393  051C                     	;# 
 11394  051D                     	;# 
 11395  058C                     	;# 
 11396  058C                     	;# 
 11397  058D                     	;# 
 11398  058E                     	;# 
 11399  058F                     	;# 
 11400  058F                     	;# 
 11401  0590                     	;# 
 11402  0591                     	;# 
 11403  0592                     	;# 
 11404  0593                     	;# 
 11405  060C                     	;# 
 11406  060D                     	;# 
 11407  060E                     	;# 
 11408  060F                     	;# 
 11409  0610                     	;# 
 11410  0611                     	;# 
 11411  0612                     	;# 
 11412  0613                     	;# 
 11413  0614                     	;# 
 11414  0616                     	;# 
 11415  0617                     	;# 
 11416  0618                     	;# 
 11417  0619                     	;# 
 11418  061A                     	;# 
 11419  061B                     	;# 
 11420  061C                     	;# 
 11421  061D                     	;# 
 11422  061E                     	;# 
 11423  068C                     	;# 
 11424  068D                     	;# 
 11425  068E                     	;# 
 11426  068F                     	;# 
 11427  0690                     	;# 
 11428  0691                     	;# 
 11429  0692                     	;# 
 11430  0693                     	;# 
 11431  0694                     	;# 
 11432  070C                     	;# 
 11433  070D                     	;# 
 11434  070E                     	;# 
 11435  070F                     	;# 
 11436  0710                     	;# 
 11437  0711                     	;# 
 11438  0712                     	;# 
 11439  0713                     	;# 
 11440  0714                     	;# 
 11441  0716                     	;# 
 11442  0717                     	;# 
 11443  0718                     	;# 
 11444  0719                     	;# 
 11445  071A                     	;# 
 11446  071B                     	;# 
 11447  071C                     	;# 
 11448  071D                     	;# 
 11449  071E                     	;# 
 11450  0796                     	;# 
 11451  0797                     	;# 
 11452  0798                     	;# 
 11453  0799                     	;# 
 11454  079A                     	;# 
 11455  079B                     	;# 
 11456  080C                     	;# 
 11457  080D                     	;# 
 11458  080E                     	;# 
 11459  080F                     	;# 
 11460  0810                     	;# 
 11461  0811                     	;# 
 11462  0812                     	;# 
 11463  0813                     	;# 
 11464  0814                     	;# 
 11465  081A                     	;# 
 11466  081B                     	;# 
 11467  081C                     	;# 
 11468  081D                     	;# 
 11469  081E                     	;# 
 11470  081F                     	;# 
 11471  088C                     	;# 
 11472  088D                     	;# 
 11473  088E                     	;# 
 11474  088F                     	;# 
 11475  0890                     	;# 
 11476  0891                     	;# 
 11477  0892                     	;# 
 11478  0893                     	;# 
 11479  0895                     	;# 
 11480  0896                     	;# 
 11481  0897                     	;# 
 11482  0898                     	;# 
 11483  0899                     	;# 
 11484  089A                     	;# 
 11485  089B                     	;# 
 11486  090C                     	;# 
 11487  090E                     	;# 
 11488  090F                     	;# 
 11489  091F                     	;# 
 11490  098F                     	;# 
 11491  098F                     	;# 
 11492  0990                     	;# 
 11493  0991                     	;# 
 11494  0992                     	;# 
 11495  0993                     	;# 
 11496  0994                     	;# 
 11497  0995                     	;# 
 11498  0996                     	;# 
 11499  0997                     	;# 
 11500  1E0F                     	;# 
 11501  1E10                     	;# 
 11502  1E11                     	;# 
 11503  1E12                     	;# 
 11504  1E13                     	;# 
 11505  1E14                     	;# 
 11506  1E15                     	;# 
 11507  1E16                     	;# 
 11508  1E17                     	;# 
 11509  1E18                     	;# 
 11510  1E19                     	;# 
 11511  1E1A                     	;# 
 11512  1E1B                     	;# 
 11513  1E1C                     	;# 
 11514  1E1D                     	;# 
 11515  1E1E                     	;# 
 11516  1E1F                     	;# 
 11517  1E20                     	;# 
 11518  1E21                     	;# 
 11519  1E22                     	;# 
 11520  1E23                     	;# 
 11521  1E24                     	;# 
 11522  1E25                     	;# 
 11523  1E26                     	;# 
 11524  1E27                     	;# 
 11525  1E28                     	;# 
 11526  1E29                     	;# 
 11527  1E2A                     	;# 
 11528  1E2B                     	;# 
 11529  1E2C                     	;# 
 11530  1E2D                     	;# 
 11531  1E2E                     	;# 
 11532  1E2F                     	;# 
 11533  1E30                     	;# 
 11534  1E31                     	;# 
 11535  1E32                     	;# 
 11536  1E33                     	;# 
 11537  1E34                     	;# 
 11538  1E35                     	;# 
 11539  1E36                     	;# 
 11540  1E37                     	;# 
 11541  1E8F                     	;# 
 11542  1E90                     	;# 
 11543  1E91                     	;# 
 11544  1E92                     	;# 
 11545  1E93                     	;# 
 11546  1E94                     	;# 
 11547  1E95                     	;# 
 11548  1E96                     	;# 
 11549  1E97                     	;# 
 11550  1E9C                     	;# 
 11551  1E9D                     	;# 
 11552  1E9E                     	;# 
 11553  1EA1                     	;# 
 11554  1EA2                     	;# 
 11555  1EA3                     	;# 
 11556  1EA4                     	;# 
 11557  1EA5                     	;# 
 11558  1EA9                     	;# 
 11559  1EAA                     	;# 
 11560  1EAB                     	;# 
 11561  1EAC                     	;# 
 11562  1EB1                     	;# 
 11563  1EB2                     	;# 
 11564  1EB3                     	;# 
 11565  1EB8                     	;# 
 11566  1EB9                     	;# 
 11567  1EBA                     	;# 
 11568  1EBB                     	;# 
 11569  1EBC                     	;# 
 11570  1EBD                     	;# 
 11571  1EBE                     	;# 
 11572  1EC3                     	;# 
 11573  1EC5                     	;# 
 11574  1EC6                     	;# 
 11575  1EC7                     	;# 
 11576  1EC8                     	;# 
 11577  1EC9                     	;# 
 11578  1ECA                     	;# 
 11579  1ECB                     	;# 
 11580  1ECC                     	;# 
 11581  1F10                     	;# 
 11582  1F11                     	;# 
 11583  1F12                     	;# 
 11584  1F13                     	;# 
 11585  1F14                     	;# 
 11586  1F15                     	;# 
 11587  1F16                     	;# 
 11588  1F17                     	;# 
 11589  1F18                     	;# 
 11590  1F19                     	;# 
 11591  1F1A                     	;# 
 11592  1F1B                     	;# 
 11593  1F1C                     	;# 
 11594  1F1D                     	;# 
 11595  1F1E                     	;# 
 11596  1F1F                     	;# 
 11597  1F20                     	;# 
 11598  1F21                     	;# 
 11599  1F22                     	;# 
 11600  1F23                     	;# 
 11601  1F24                     	;# 
 11602  1F25                     	;# 
 11603  1F26                     	;# 
 11604  1F27                     	;# 
 11605  1F28                     	;# 
 11606  1F29                     	;# 
 11607  1F2A                     	;# 
 11608  1F2B                     	;# 
 11609  1F2C                     	;# 
 11610  1F2D                     	;# 
 11611  1F2E                     	;# 
 11612  1F2F                     	;# 
 11613  1F30                     	;# 
 11614  1F31                     	;# 
 11615  1F32                     	;# 
 11616  1F38                     	;# 
 11617  1F39                     	;# 
 11618  1F3A                     	;# 
 11619  1F3B                     	;# 
 11620  1F3C                     	;# 
 11621  1F3D                     	;# 
 11622  1F3E                     	;# 
 11623  1F3F                     	;# 
 11624  1F40                     	;# 
 11625  1F41                     	;# 
 11626  1F43                     	;# 
 11627  1F44                     	;# 
 11628  1F45                     	;# 
 11629  1F46                     	;# 
 11630  1F47                     	;# 
 11631  1F48                     	;# 
 11632  1F49                     	;# 
 11633  1F4A                     	;# 
 11634  1F4B                     	;# 
 11635  1F4C                     	;# 
 11636  1F4E                     	;# 
 11637  1F4F                     	;# 
 11638  1F50                     	;# 
 11639  1F51                     	;# 
 11640  1F52                     	;# 
 11641  1F53                     	;# 
 11642  1F54                     	;# 
 11643  1F55                     	;# 
 11644  1F56                     	;# 
 11645  1F57                     	;# 
 11646  1F59                     	;# 
 11647  1F5A                     	;# 
 11648  1F5B                     	;# 
 11649  1F5C                     	;# 
 11650  1F5D                     	;# 
 11651  1F61                     	;# 
 11652  1F62                     	;# 
 11653  1F64                     	;# 
 11654  1F65                     	;# 
 11655  1F66                     	;# 
 11656  1F67                     	;# 
 11657  1F68                     	;# 
 11658  1F69                     	;# 
 11659  1F6A                     	;# 
 11660  1F6B                     	;# 
 11661  1F6C                     	;# 
 11662  1F6D                     	;# 
 11663  1FE4                     	;# 
 11664  1FE5                     	;# 
 11665  1FE6                     	;# 
 11666  1FE7                     	;# 
 11667  1FE8                     	;# 
 11668  1FE9                     	;# 
 11669  1FEA                     	;# 
 11670  1FEB                     	;# 
 11671  1FED                     	;# 
 11672  1FEE                     	;# 
 11673  1FEF                     	;# 
 11674  0000                     	;# 
 11675  0001                     	;# 
 11676  0002                     	;# 
 11677  0003                     	;# 
 11678  0004                     	;# 
 11679  0005                     	;# 
 11680  0006                     	;# 
 11681  0007                     	;# 
 11682  0008                     	;# 
 11683  0009                     	;# 
 11684  000A                     	;# 
 11685  000B                     	;# 
 11686  000C                     	;# 
 11687  000D                     	;# 
 11688  000E                     	;# 
 11689  000F                     	;# 
 11690  0010                     	;# 
 11691  0011                     	;# 
 11692  0012                     	;# 
 11693  0013                     	;# 
 11694  0014                     	;# 
 11695  0015                     	;# 
 11696  0016                     	;# 
 11697  0017                     	;# 
 11698  0018                     	;# 
 11699  0019                     	;# 
 11700  001A                     	;# 
 11701  001C                     	;# 
 11702  001C                     	;# 
 11703  001D                     	;# 
 11704  001D                     	;# 
 11705  001E                     	;# 
 11706  001F                     	;# 
 11707  008C                     	;# 
 11708  008C                     	;# 
 11709  008D                     	;# 
 11710  008E                     	;# 
 11711  008E                     	;# 
 11712  008F                     	;# 
 11713  0090                     	;# 
 11714  0090                     	;# 
 11715  0091                     	;# 
 11716  0093                     	;# 
 11717  0094                     	;# 
 11718  0095                     	;# 
 11719  0096                     	;# 
 11720  0097                     	;# 
 11721  0098                     	;# 
 11722  0099                     	;# 
 11723  009A                     	;# 
 11724  009B                     	;# 
 11725  009C                     	;# 
 11726  009D                     	;# 
 11727  009E                     	;# 
 11728  010C                     	;# 
 11729  010D                     	;# 
 11730  010E                     	;# 
 11731  010E                     	;# 
 11732  010F                     	;# 
 11733  0110                     	;# 
 11734  0110                     	;# 
 11735  0111                     	;# 
 11736  0112                     	;# 
 11737  0112                     	;# 
 11738  0113                     	;# 
 11739  0114                     	;# 
 11740  0114                     	;# 
 11741  0115                     	;# 
 11742  0116                     	;# 
 11743  0116                     	;# 
 11744  0117                     	;# 
 11745  0119                     	;# 
 11746  0119                     	;# 
 11747  0119                     	;# 
 11748  011A                     	;# 
 11749  011A                     	;# 
 11750  011A                     	;# 
 11751  011B                     	;# 
 11752  011B                     	;# 
 11753  011B                     	;# 
 11754  011B                     	;# 
 11755  011B                     	;# 
 11756  011C                     	;# 
 11757  011C                     	;# 
 11758  011C                     	;# 
 11759  011D                     	;# 
 11760  011D                     	;# 
 11761  011D                     	;# 
 11762  011E                     	;# 
 11763  011E                     	;# 
 11764  011E                     	;# 
 11765  011F                     	;# 
 11766  011F                     	;# 
 11767  011F                     	;# 
 11768  011F                     	;# 
 11769  011F                     	;# 
 11770  018C                     	;# 
 11771  018D                     	;# 
 11772  018E                     	;# 
 11773  018F                     	;# 
 11774  0190                     	;# 
 11775  0191                     	;# 
 11776  0192                     	;# 
 11777  0196                     	;# 
 11778  0197                     	;# 
 11779  0198                     	;# 
 11780  0199                     	;# 
 11781  019A                     	;# 
 11782  019B                     	;# 
 11783  019C                     	;# 
 11784  020C                     	;# 
 11785  020C                     	;# 
 11786  020D                     	;# 
 11787  020E                     	;# 
 11788  020F                     	;# 
 11789  020F                     	;# 
 11790  0210                     	;# 
 11791  0210                     	;# 
 11792  0211                     	;# 
 11793  0211                     	;# 
 11794  0212                     	;# 
 11795  0212                     	;# 
 11796  0213                     	;# 
 11797  0214                     	;# 
 11798  0215                     	;# 
 11799  0215                     	;# 
 11800  0216                     	;# 
 11801  0216                     	;# 
 11802  0217                     	;# 
 11803  0217                     	;# 
 11804  0218                     	;# 
 11805  0218                     	;# 
 11806  0219                     	;# 
 11807  021A                     	;# 
 11808  021B                     	;# 
 11809  021B                     	;# 
 11810  021C                     	;# 
 11811  021C                     	;# 
 11812  021D                     	;# 
 11813  021D                     	;# 
 11814  021E                     	;# 
 11815  021F                     	;# 
 11816  028C                     	;# 
 11817  028C                     	;# 
 11818  028D                     	;# 
 11819  028D                     	;# 
 11820  028E                     	;# 
 11821  028F                     	;# 
 11822  0290                     	;# 
 11823  0290                     	;# 
 11824  0291                     	;# 
 11825  0292                     	;# 
 11826  0292                     	;# 
 11827  0293                     	;# 
 11828  0293                     	;# 
 11829  0294                     	;# 
 11830  0295                     	;# 
 11831  0296                     	;# 
 11832  0296                     	;# 
 11833  0297                     	;# 
 11834  0298                     	;# 
 11835  0298                     	;# 
 11836  0299                     	;# 
 11837  0299                     	;# 
 11838  029A                     	;# 
 11839  029B                     	;# 
 11840  029C                     	;# 
 11841  029C                     	;# 
 11842  029D                     	;# 
 11843  030C                     	;# 
 11844  030C                     	;# 
 11845  030D                     	;# 
 11846  030E                     	;# 
 11847  030F                     	;# 
 11848  0310                     	;# 
 11849  0310                     	;# 
 11850  0311                     	;# 
 11851  0312                     	;# 
 11852  0313                     	;# 
 11853  0314                     	;# 
 11854  0314                     	;# 
 11855  0315                     	;# 
 11856  0316                     	;# 
 11857  0317                     	;# 
 11858  0318                     	;# 
 11859  0318                     	;# 
 11860  0319                     	;# 
 11861  031A                     	;# 
 11862  031B                     	;# 
 11863  031C                     	;# 
 11864  031C                     	;# 
 11865  031D                     	;# 
 11866  031E                     	;# 
 11867  031F                     	;# 
 11868  038C                     	;# 
 11869  038C                     	;# 
 11870  038D                     	;# 
 11871  038E                     	;# 
 11872  0390                     	;# 
 11873  0390                     	;# 
 11874  0391                     	;# 
 11875  0392                     	;# 
 11876  040C                     	;# 
 11877  040D                     	;# 
 11878  040E                     	;# 
 11879  040F                     	;# 
 11880  0410                     	;# 
 11881  0411                     	;# 
 11882  0416                     	;# 
 11883  0416                     	;# 
 11884  0417                     	;# 
 11885  0418                     	;# 
 11886  0418                     	;# 
 11887  0419                     	;# 
 11888  041A                     	;# 
 11889  041A                     	;# 
 11890  041B                     	;# 
 11891  041C                     	;# 
 11892  041C                     	;# 
 11893  041D                     	;# 
 11894  041E                     	;# 
 11895  041F                     	;# 
 11896  048C                     	;# 
 11897  048C                     	;# 
 11898  048D                     	;# 
 11899  048E                     	;# 
 11900  048F                     	;# 
 11901  048F                     	;# 
 11902  0490                     	;# 
 11903  0491                     	;# 
 11904  0492                     	;# 
 11905  0492                     	;# 
 11906  0493                     	;# 
 11907  0494                     	;# 
 11908  0495                     	;# 
 11909  0495                     	;# 
 11910  0496                     	;# 
 11911  0497                     	;# 
 11912  0498                     	;# 
 11913  0499                     	;# 
 11914  049A                     	;# 
 11915  049B                     	;# 
 11916  049C                     	;# 
 11917  049D                     	;# 
 11918  050C                     	;# 
 11919  050C                     	;# 
 11920  050D                     	;# 
 11921  050E                     	;# 
 11922  050F                     	;# 
 11923  050F                     	;# 
 11924  0510                     	;# 
 11925  0511                     	;# 
 11926  0512                     	;# 
 11927  0512                     	;# 
 11928  0513                     	;# 
 11929  0514                     	;# 
 11930  0515                     	;# 
 11931  0515                     	;# 
 11932  0516                     	;# 
 11933  0517                     	;# 
 11934  0518                     	;# 
 11935  0519                     	;# 
 11936  051A                     	;# 
 11937  051B                     	;# 
 11938  051C                     	;# 
 11939  051D                     	;# 
 11940  058C                     	;# 
 11941  058C                     	;# 
 11942  058D                     	;# 
 11943  058E                     	;# 
 11944  058F                     	;# 
 11945  058F                     	;# 
 11946  0590                     	;# 
 11947  0591                     	;# 
 11948  0592                     	;# 
 11949  0593                     	;# 
 11950  060C                     	;# 
 11951  060D                     	;# 
 11952  060E                     	;# 
 11953  060F                     	;# 
 11954  0610                     	;# 
 11955  0611                     	;# 
 11956  0612                     	;# 
 11957  0613                     	;# 
 11958  0614                     	;# 
 11959  0616                     	;# 
 11960  0617                     	;# 
 11961  0618                     	;# 
 11962  0619                     	;# 
 11963  061A                     	;# 
 11964  061B                     	;# 
 11965  061C                     	;# 
 11966  061D                     	;# 
 11967  061E                     	;# 
 11968  068C                     	;# 
 11969  068D                     	;# 
 11970  068E                     	;# 
 11971  068F                     	;# 
 11972  0690                     	;# 
 11973  0691                     	;# 
 11974  0692                     	;# 
 11975  0693                     	;# 
 11976  0694                     	;# 
 11977  070C                     	;# 
 11978  070D                     	;# 
 11979  070E                     	;# 
 11980  070F                     	;# 
 11981  0710                     	;# 
 11982  0711                     	;# 
 11983  0712                     	;# 
 11984  0713                     	;# 
 11985  0714                     	;# 
 11986  0716                     	;# 
 11987  0717                     	;# 
 11988  0718                     	;# 
 11989  0719                     	;# 
 11990  071A                     	;# 
 11991  071B                     	;# 
 11992  071C                     	;# 
 11993  071D                     	;# 
 11994  071E                     	;# 
 11995  0796                     	;# 
 11996  0797                     	;# 
 11997  0798                     	;# 
 11998  0799                     	;# 
 11999  079A                     	;# 
 12000  079B                     	;# 
 12001  080C                     	;# 
 12002  080D                     	;# 
 12003  080E                     	;# 
 12004  080F                     	;# 
 12005  0810                     	;# 
 12006  0811                     	;# 
 12007  0812                     	;# 
 12008  0813                     	;# 
 12009  0814                     	;# 
 12010  081A                     	;# 
 12011  081B                     	;# 
 12012  081C                     	;# 
 12013  081D                     	;# 
 12014  081E                     	;# 
 12015  081F                     	;# 
 12016  088C                     	;# 
 12017  088D                     	;# 
 12018  088E                     	;# 
 12019  088F                     	;# 
 12020  0890                     	;# 
 12021  0891                     	;# 
 12022  0892                     	;# 
 12023  0893                     	;# 
 12024  0895                     	;# 
 12025  0896                     	;# 
 12026  0897                     	;# 
 12027  0898                     	;# 
 12028  0899                     	;# 
 12029  089A                     	;# 
 12030  089B                     	;# 
 12031  090C                     	;# 
 12032  090E                     	;# 
 12033  090F                     	;# 
 12034  091F                     	;# 
 12035  098F                     	;# 
 12036  098F                     	;# 
 12037  0990                     	;# 
 12038  0991                     	;# 
 12039  0992                     	;# 
 12040  0993                     	;# 
 12041  0994                     	;# 
 12042  0995                     	;# 
 12043  0996                     	;# 
 12044  0997                     	;# 
 12045  1E0F                     	;# 
 12046  1E10                     	;# 
 12047  1E11                     	;# 
 12048  1E12                     	;# 
 12049  1E13                     	;# 
 12050  1E14                     	;# 
 12051  1E15                     	;# 
 12052  1E16                     	;# 
 12053  1E17                     	;# 
 12054  1E18                     	;# 
 12055  1E19                     	;# 
 12056  1E1A                     	;# 
 12057  1E1B                     	;# 
 12058  1E1C                     	;# 
 12059  1E1D                     	;# 
 12060  1E1E                     	;# 
 12061  1E1F                     	;# 
 12062  1E20                     	;# 
 12063  1E21                     	;# 
 12064  1E22                     	;# 
 12065  1E23                     	;# 
 12066  1E24                     	;# 
 12067  1E25                     	;# 
 12068  1E26                     	;# 
 12069  1E27                     	;# 
 12070  1E28                     	;# 
 12071  1E29                     	;# 
 12072  1E2A                     	;# 
 12073  1E2B                     	;# 
 12074  1E2C                     	;# 
 12075  1E2D                     	;# 
 12076  1E2E                     	;# 
 12077  1E2F                     	;# 
 12078  1E30                     	;# 
 12079  1E31                     	;# 
 12080  1E32                     	;# 
 12081  1E33                     	;# 
 12082  1E34                     	;# 
 12083  1E35                     	;# 
 12084  1E36                     	;# 
 12085  1E37                     	;# 
 12086  1E8F                     	;# 
 12087  1E90                     	;# 
 12088  1E91                     	;# 
 12089  1E92                     	;# 
 12090  1E93                     	;# 
 12091  1E94                     	;# 
 12092  1E95                     	;# 
 12093  1E96                     	;# 
 12094  1E97                     	;# 
 12095  1E9C                     	;# 
 12096  1E9D                     	;# 
 12097  1E9E                     	;# 
 12098  1EA1                     	;# 
 12099  1EA2                     	;# 
 12100  1EA3                     	;# 
 12101  1EA4                     	;# 
 12102  1EA5                     	;# 
 12103  1EA9                     	;# 
 12104  1EAA                     	;# 
 12105  1EAB                     	;# 
 12106  1EAC                     	;# 
 12107  1EB1                     	;# 
 12108  1EB2                     	;# 
 12109  1EB3                     	;# 
 12110  1EB8                     	;# 
 12111  1EB9                     	;# 
 12112  1EBA                     	;# 
 12113  1EBB                     	;# 
 12114  1EBC                     	;# 
 12115  1EBD                     	;# 
 12116  1EBE                     	;# 
 12117  1EC3                     	;# 
 12118  1EC5                     	;# 
 12119  1EC6                     	;# 
 12120  1EC7                     	;# 
 12121  1EC8                     	;# 
 12122  1EC9                     	;# 
 12123  1ECA                     	;# 
 12124  1ECB                     	;# 
 12125  1ECC                     	;# 
 12126  1F10                     	;# 
 12127  1F11                     	;# 
 12128  1F12                     	;# 
 12129  1F13                     	;# 
 12130  1F14                     	;# 
 12131  1F15                     	;# 
 12132  1F16                     	;# 
 12133  1F17                     	;# 
 12134  1F18                     	;# 
 12135  1F19                     	;# 
 12136  1F1A                     	;# 
 12137  1F1B                     	;# 
 12138  1F1C                     	;# 
 12139  1F1D                     	;# 
 12140  1F1E                     	;# 
 12141  1F1F                     	;# 
 12142  1F20                     	;# 
 12143  1F21                     	;# 
 12144  1F22                     	;# 
 12145  1F23                     	;# 
 12146  1F24                     	;# 
 12147  1F25                     	;# 
 12148  1F26                     	;# 
 12149  1F27                     	;# 
 12150  1F28                     	;# 
 12151  1F29                     	;# 
 12152  1F2A                     	;# 
 12153  1F2B                     	;# 
 12154  1F2C                     	;# 
 12155  1F2D                     	;# 
 12156  1F2E                     	;# 
 12157  1F2F                     	;# 
 12158  1F30                     	;# 
 12159  1F31                     	;# 
 12160  1F32                     	;# 
 12161  1F38                     	;# 
 12162  1F39                     	;# 
 12163  1F3A                     	;# 
 12164  1F3B                     	;# 
 12165  1F3C                     	;# 
 12166  1F3D                     	;# 
 12167  1F3E                     	;# 
 12168  1F3F                     	;# 
 12169  1F40                     	;# 
 12170  1F41                     	;# 
 12171  1F43                     	;# 
 12172  1F44                     	;# 
 12173  1F45                     	;# 
 12174  1F46                     	;# 
 12175  1F47                     	;# 
 12176  1F48                     	;# 
 12177  1F49                     	;# 
 12178  1F4A                     	;# 
 12179  1F4B                     	;# 
 12180  1F4C                     	;# 
 12181  1F4E                     	;# 
 12182  1F4F                     	;# 
 12183  1F50                     	;# 
 12184  1F51                     	;# 
 12185  1F52                     	;# 
 12186  1F53                     	;# 
 12187  1F54                     	;# 
 12188  1F55                     	;# 
 12189  1F56                     	;# 
 12190  1F57                     	;# 
 12191  1F59                     	;# 
 12192  1F5A                     	;# 
 12193  1F5B                     	;# 
 12194  1F5C                     	;# 
 12195  1F5D                     	;# 
 12196  1F61                     	;# 
 12197  1F62                     	;# 
 12198  1F64                     	;# 
 12199  1F65                     	;# 
 12200  1F66                     	;# 
 12201  1F67                     	;# 
 12202  1F68                     	;# 
 12203  1F69                     	;# 
 12204  1F6A                     	;# 
 12205  1F6B                     	;# 
 12206  1F6C                     	;# 
 12207  1F6D                     	;# 
 12208  1FE4                     	;# 
 12209  1FE5                     	;# 
 12210  1FE6                     	;# 
 12211  1FE7                     	;# 
 12212  1FE8                     	;# 
 12213  1FE9                     	;# 
 12214  1FEA                     	;# 
 12215  1FEB                     	;# 
 12216  1FED                     	;# 
 12217  1FEE                     	;# 
 12218  1FEF                     	;_step
 12219                           
 12220                           	psect	idataBANK2
 12221  5E5D                     __pidataBANK2:
 12222                           
 12223                           ;initializer for navCfgMove@soma
 12224  5E5D  34CD               	retlw	205
 12225  5E5E  34CC               	retlw	204
 12226  5E5F  34CC               	retlw	204
 12227  5E60  343D               	retlw	61
 12228                           
 12229                           	psect	stringtext1
 12230  00AC                     __pstringtext1:
 12231  00AC                     _acce200:
 12232  00AC  34C7               	retlw	199
 12233  00AD  3412               	retlw	18
 12234  00AE  34D6               	retlw	214
 12235  00AF  340B               	retlw	11
 12236  00B0  340A               	retlw	10
 12237  00B1  3409               	retlw	9
 12238  00B2  3474               	retlw	116
 12239  00B3  3407               	retlw	7
 12240  00B4  346C               	retlw	108
 12241  00B5  3406               	retlw	6
 12242  00B6  342D               	retlw	45
 12243  00B7  3406               	retlw	6
 12244  00B8  345E               	retlw	94
 12245  00B9  3404               	retlw	4
 12246  00BA  3491               	retlw	145
 12247  00BB  3403               	retlw	3
 12248  00BC  3417               	retlw	23
 12249  00BD  3403               	retlw	3
 12250  00BE  34C3               	retlw	195
 12251  00BF  3402               	retlw	2
 12252  00C0  3485               	retlw	133
 12253  00C1  3402               	retlw	2
 12254  00C2  3456               	retlw	86
 12255  00C3  3402               	retlw	2
 12256  00C4  342F               	retlw	47
 12257  00C5  3402               	retlw	2
 12258  00C6  340F               	retlw	15
 12259  00C7  3402               	retlw	2
 12260  00C8  34F4               	retlw	244
 12261  00C9  3401               	retlw	1
 12262  00CA  34DD               	retlw	221
 12263  00CB  3401               	retlw	1
 12264  00CC  34C8               	retlw	200
 12265  00CD  3401               	retlw	1
 12266  00CE  34B7               	retlw	183
 12267  00CF  3401               	retlw	1
 12268  00D0  34A7               	retlw	167
 12269  00D1  3401               	retlw	1
 12270  00D2  3498               	retlw	152
 12271  00D3  3401               	retlw	1
 12272  00D4  348B               	retlw	139
 12273  00D5  3401               	retlw	1
 12274  00D6  347F               	retlw	127
 12275  00D7  3401               	retlw	1
 12276  00D8  3475               	retlw	117
 12277  00D9  3401               	retlw	1
 12278  00DA  346B               	retlw	107
 12279  00DB  3401               	retlw	1
 12280  00DC  3462               	retlw	98
 12281  00DD  3401               	retlw	1
 12282  00DE  3459               	retlw	89
 12283  00DF  3401               	retlw	1
 12284  00E0  3451               	retlw	81
 12285  00E1  3401               	retlw	1
 12286  00E2  344A               	retlw	74
 12287  00E3  3401               	retlw	1
 12288  00E4  3443               	retlw	67
 12289  00E5  3401               	retlw	1
 12290  00E6  343C               	retlw	60
 12291  00E7  3401               	retlw	1
 12292  00E8  3436               	retlw	54
 12293  00E9  3401               	retlw	1
 12294  00EA  3430               	retlw	48
 12295  00EB  3401               	retlw	1
 12296  00EC  342B               	retlw	43
 12297  00ED  3401               	retlw	1
 12298  00EE  3426               	retlw	38
 12299  00EF  3401               	retlw	1
 12300  00F0  3421               	retlw	33
 12301  00F1  3401               	retlw	1
 12302  00F2  341C               	retlw	28
 12303  00F3  3401               	retlw	1
 12304  00F4  3418               	retlw	24
 12305  00F5  3401               	retlw	1
 12306  00F6  3413               	retlw	19
 12307  00F7  3401               	retlw	1
 12308  00F8  340F               	retlw	15
 12309  00F9  3401               	retlw	1
 12310  00FA  340B               	retlw	11
 12311  00FB  3401               	retlw	1
 12312  00FC  3408               	retlw	8
 12313  00FD  3401               	retlw	1
 12314  00FE  3404               	retlw	4
 12315  00FF  3401               	retlw	1
 12316  0100  3400               	retlw	0
 12317  0101  3401               	retlw	1
 12318  0102  34FD               	retlw	253
 12319  0103  3400               	retlw	0
 12320  0104  34FA               	retlw	250
 12321  0105  3400               	retlw	0
 12322  0106  34F7               	retlw	247
 12323  0107  3400               	retlw	0
 12324  0108  34F4               	retlw	244
 12325  0109  3400               	retlw	0
 12326  010A  34F1               	retlw	241
 12327  010B  3400               	retlw	0
 12328  010C  34EE               	retlw	238
 12329  010D  3400               	retlw	0
 12330  010E  34EC               	retlw	236
 12331  010F  3400               	retlw	0
 12332  0110  34E9               	retlw	233
 12333  0111  3400               	retlw	0
 12334  0112  34E7               	retlw	231
 12335  0113  3400               	retlw	0
 12336  0114  34E4               	retlw	228
 12337  0115  3400               	retlw	0
 12338  0116  34E2               	retlw	226
 12339  0117  3400               	retlw	0
 12340  0118  34E0               	retlw	224
 12341  0119  3400               	retlw	0
 12342  011A  34DD               	retlw	221
 12343  011B  3400               	retlw	0
 12344  011C  34DB               	retlw	219
 12345  011D  3400               	retlw	0
 12346  011E  34D9               	retlw	217
 12347  011F  3400               	retlw	0
 12348  0120  34D7               	retlw	215
 12349  0121  3400               	retlw	0
 12350  0122  34D5               	retlw	213
 12351  0123  3400               	retlw	0
 12352  0124  34D3               	retlw	211
 12353  0125  3400               	retlw	0
 12354  0126  34D1               	retlw	209
 12355  0127  3400               	retlw	0
 12356  0128  34D0               	retlw	208
 12357  0129  3400               	retlw	0
 12358  012A  34CE               	retlw	206
 12359  012B  3400               	retlw	0
 12360  012C  34CC               	retlw	204
 12361  012D  3400               	retlw	0
 12362  012E  34CA               	retlw	202
 12363  012F  3400               	retlw	0
 12364  0130  34C9               	retlw	201
 12365  0131  3400               	retlw	0
 12366  0132  34C7               	retlw	199
 12367  0133  3400               	retlw	0
 12368  0134  34C6               	retlw	198
 12369  0135  3400               	retlw	0
 12370  0136  34C4               	retlw	196
 12371  0137  3400               	retlw	0
 12372  0138  34C3               	retlw	195
 12373  0139  3400               	retlw	0
 12374  013A  34C1               	retlw	193
 12375  013B  3400               	retlw	0
 12376  013C  34C0               	retlw	192
 12377  013D  3400               	retlw	0
 12378  013E  34BE               	retlw	190
 12379  013F  3400               	retlw	0
 12380  0140  34BD               	retlw	189
 12381  0141  3400               	retlw	0
 12382  0142  34BC               	retlw	188
 12383  0143  3400               	retlw	0
 12384  0144  34BA               	retlw	186
 12385  0145  3400               	retlw	0
 12386  0146  34B9               	retlw	185
 12387  0147  3400               	retlw	0
 12388  0148  34B8               	retlw	184
 12389  0149  3400               	retlw	0
 12390  014A  34B7               	retlw	183
 12391  014B  3400               	retlw	0
 12392  014C  34B5               	retlw	181
 12393  014D  3400               	retlw	0
 12394  014E  34B4               	retlw	180
 12395  014F  3400               	retlw	0
 12396  0150  34B3               	retlw	179
 12397  0151  3400               	retlw	0
 12398  0152  34B2               	retlw	178
 12399  0153  3400               	retlw	0
 12400  0154  34B1               	retlw	177
 12401  0155  3400               	retlw	0
 12402  0156  34B0               	retlw	176
 12403  0157  3400               	retlw	0
 12404  0158  34AF               	retlw	175
 12405  0159  3400               	retlw	0
 12406  015A  34AE               	retlw	174
 12407  015B  3400               	retlw	0
 12408  015C  34AD               	retlw	173
 12409  015D  3400               	retlw	0
 12410  015E  34AB               	retlw	171
 12411  015F  3400               	retlw	0
 12412  0160  34AA               	retlw	170
 12413  0161  3400               	retlw	0
 12414  0162  34AA               	retlw	170
 12415  0163  3400               	retlw	0
 12416  0164  34A9               	retlw	169
 12417  0165  3400               	retlw	0
 12418  0166  34A8               	retlw	168
 12419  0167  3400               	retlw	0
 12420  0168  34A7               	retlw	167
 12421  0169  3400               	retlw	0
 12422  016A  34A6               	retlw	166
 12423  016B  3400               	retlw	0
 12424  016C  34A5               	retlw	165
 12425  016D  3400               	retlw	0
 12426  016E  34A4               	retlw	164
 12427  016F  3400               	retlw	0
 12428  0170  34A3               	retlw	163
 12429  0171  3400               	retlw	0
 12430  0172  34A2               	retlw	162
 12431  0173  3400               	retlw	0
 12432  0174  34A1               	retlw	161
 12433  0175  3400               	retlw	0
 12434  0176  34A1               	retlw	161
 12435  0177  3400               	retlw	0
 12436  0178  34A0               	retlw	160
 12437  0179  3400               	retlw	0
 12438  017A  349F               	retlw	159
 12439  017B  3400               	retlw	0
 12440  017C  349E               	retlw	158
 12441  017D  3400               	retlw	0
 12442  017E  349D               	retlw	157
 12443  017F  3400               	retlw	0
 12444  0180  349D               	retlw	157
 12445  0181  3400               	retlw	0
 12446  0182  349C               	retlw	156
 12447  0183  3400               	retlw	0
 12448  0184  349B               	retlw	155
 12449  0185  3400               	retlw	0
 12450  0186  349A               	retlw	154
 12451  0187  3400               	retlw	0
 12452  0188  349A               	retlw	154
 12453  0189  3400               	retlw	0
 12454  018A  3499               	retlw	153
 12455  018B  3400               	retlw	0
 12456  018C  3498               	retlw	152
 12457  018D  3400               	retlw	0
 12458  018E  3497               	retlw	151
 12459  018F  3400               	retlw	0
 12460  0190  3497               	retlw	151
 12461  0191  3400               	retlw	0
 12462  0192  3496               	retlw	150
 12463  0193  3400               	retlw	0
 12464  0194  3495               	retlw	149
 12465  0195  3400               	retlw	0
 12466  0196  3495               	retlw	149
 12467  0197  3400               	retlw	0
 12468  0198  3494               	retlw	148
 12469  0199  3400               	retlw	0
 12470  019A  3493               	retlw	147
 12471  019B  3400               	retlw	0
 12472  019C  3493               	retlw	147
 12473  019D  3400               	retlw	0
 12474  019E  3492               	retlw	146
 12475  019F  3400               	retlw	0
 12476  01A0  3492               	retlw	146
 12477  01A1  3400               	retlw	0
 12478  01A2  3491               	retlw	145
 12479  01A3  3400               	retlw	0
 12480  01A4  3490               	retlw	144
 12481  01A5  3400               	retlw	0
 12482  01A6  3490               	retlw	144
 12483  01A7  3400               	retlw	0
 12484  01A8  348F               	retlw	143
 12485  01A9  3400               	retlw	0
 12486  01AA  348F               	retlw	143
 12487  01AB  3400               	retlw	0
 12488  01AC  348E               	retlw	142
 12489  01AD  3400               	retlw	0
 12490  01AE  348D               	retlw	141
 12491  01AF  3400               	retlw	0
 12492  01B0  348D               	retlw	141
 12493  01B1  3400               	retlw	0
 12494  01B2  348C               	retlw	140
 12495  01B3  3400               	retlw	0
 12496  01B4  348C               	retlw	140
 12497  01B5  3400               	retlw	0
 12498  01B6  348B               	retlw	139
 12499  01B7  3400               	retlw	0
 12500  01B8  348B               	retlw	139
 12501  01B9  3400               	retlw	0
 12502  01BA  348A               	retlw	138
 12503  01BB  3400               	retlw	0
 12504  01BC  348A               	retlw	138
 12505  01BD  3400               	retlw	0
 12506  01BE  3489               	retlw	137
 12507  01BF  3400               	retlw	0
 12508  01C0  3489               	retlw	137
 12509  01C1  3400               	retlw	0
 12510  01C2  3488               	retlw	136
 12511  01C3  3400               	retlw	0
 12512  01C4  3488               	retlw	136
 12513  01C5  3400               	retlw	0
 12514  01C6  3487               	retlw	135
 12515  01C7  3400               	retlw	0
 12516  01C8  3487               	retlw	135
 12517  01C9  3400               	retlw	0
 12518  01CA  3486               	retlw	134
 12519  01CB  3400               	retlw	0
 12520  01CC  3486               	retlw	134
 12521  01CD  3400               	retlw	0
 12522  01CE  3485               	retlw	133
 12523  01CF  3400               	retlw	0
 12524  01D0  3485               	retlw	133
 12525  01D1  3400               	retlw	0
 12526  01D2  3484               	retlw	132
 12527  01D3  3400               	retlw	0
 12528  01D4  3484               	retlw	132
 12529  01D5  3400               	retlw	0
 12530  01D6  3483               	retlw	131
 12531  01D7  3400               	retlw	0
 12532  01D8  3483               	retlw	131
 12533  01D9  3400               	retlw	0
 12534  01DA  3482               	retlw	130
 12535  01DB  3400               	retlw	0
 12536  01DC  3482               	retlw	130
 12537  01DD  3400               	retlw	0
 12538  01DE  3482               	retlw	130
 12539  01DF  3400               	retlw	0
 12540  01E0  3481               	retlw	129
 12541  01E1  3400               	retlw	0
 12542  01E2  3481               	retlw	129
 12543  01E3  3400               	retlw	0
 12544  01E4  3480               	retlw	128
 12545  01E5  3400               	retlw	0
 12546  01E6  3480               	retlw	128
 12547  01E7  3400               	retlw	0
 12548  01E8  347F               	retlw	127
 12549  01E9  3400               	retlw	0
 12550  01EA  347F               	retlw	127
 12551  01EB  3400               	retlw	0
 12552  01EC  347F               	retlw	127
 12553  01ED  3400               	retlw	0
 12554  01EE  347E               	retlw	126
 12555  01EF  3400               	retlw	0
 12556  01F0  347E               	retlw	126
 12557  01F1  3400               	retlw	0
 12558  01F2  347D               	retlw	125
 12559  01F3  3400               	retlw	0
 12560  01F4  347D               	retlw	125
 12561  01F5  3400               	retlw	0
 12562  01F6  347D               	retlw	125
 12563  01F7  3400               	retlw	0
 12564  01F8  347C               	retlw	124
 12565  01F9  3400               	retlw	0
 12566  01FA  347C               	retlw	124
 12567  01FB  3400               	retlw	0
 12568  01FC  347B               	retlw	123
 12569  01FD  3400               	retlw	0
 12570  01FE  347B               	retlw	123
 12571  01FF  3400               	retlw	0
 12572  0200  347B               	retlw	123
 12573  0201  3400               	retlw	0
 12574  0202  347A               	retlw	122
 12575  0203  3400               	retlw	0
 12576  0204  347A               	retlw	122
 12577  0205  3400               	retlw	0
 12578  0206  347A               	retlw	122
 12579  0207  3400               	retlw	0
 12580  0208  3479               	retlw	121
 12581  0209  3400               	retlw	0
 12582  020A  3479               	retlw	121
 12583  020B  3400               	retlw	0
 12584  020C  3479               	retlw	121
 12585  020D  3400               	retlw	0
 12586  020E  3478               	retlw	120
 12587  020F  3400               	retlw	0
 12588  0210  3478               	retlw	120
 12589  0211  3400               	retlw	0
 12590  0212  3478               	retlw	120
 12591  0213  3400               	retlw	0
 12592  0214  3477               	retlw	119
 12593  0215  3400               	retlw	0
 12594  0216  3477               	retlw	119
 12595  0217  3400               	retlw	0
 12596  0218  3477               	retlw	119
 12597  0219  3400               	retlw	0
 12598  021A  3476               	retlw	118
 12599  021B  3400               	retlw	0
 12600  021C  3476               	retlw	118
 12601  021D  3400               	retlw	0
 12602  021E  3476               	retlw	118
 12603  021F  3400               	retlw	0
 12604  0220  3475               	retlw	117
 12605  0221  3400               	retlw	0
 12606  0222  3475               	retlw	117
 12607  0223  3400               	retlw	0
 12608  0224  3475               	retlw	117
 12609  0225  3400               	retlw	0
 12610  0226  3474               	retlw	116
 12611  0227  3400               	retlw	0
 12612  0228  3474               	retlw	116
 12613  0229  3400               	retlw	0
 12614  022A  3474               	retlw	116
 12615  022B  3400               	retlw	0
 12616  022C  3473               	retlw	115
 12617  022D  3400               	retlw	0
 12618  022E  3473               	retlw	115
 12619  022F  3400               	retlw	0
 12620  0230  3473               	retlw	115
 12621  0231  3400               	retlw	0
 12622  0232  3472               	retlw	114
 12623  0233  3400               	retlw	0
 12624  0234  3472               	retlw	114
 12625  0235  3400               	retlw	0
 12626  0236  3472               	retlw	114
 12627  0237  3400               	retlw	0
 12628  0238  3472               	retlw	114
 12629  0239  3400               	retlw	0
 12630  023A  3471               	retlw	113
 12631  023B  3400               	retlw	0
 12632  023C  3471               	retlw	113
 12633  023D  3400               	retlw	0
 12634  023E  3471               	retlw	113
 12635  023F  3400               	retlw	0
 12636  0240  3470               	retlw	112
 12637  0241  3400               	retlw	0
 12638  0242  3470               	retlw	112
 12639  0243  3400               	retlw	0
 12640  0244  3470               	retlw	112
 12641  0245  3400               	retlw	0
 12642  0246  3470               	retlw	112
 12643  0247  3400               	retlw	0
 12644  0248  346F               	retlw	111
 12645  0249  3400               	retlw	0
 12646  024A  346F               	retlw	111
 12647  024B  3400               	retlw	0
 12648  024C  346F               	retlw	111
 12649  024D  3400               	retlw	0
 12650  024E  346E               	retlw	110
 12651  024F  3400               	retlw	0
 12652  0250  346E               	retlw	110
 12653  0251  3400               	retlw	0
 12654  0252  346E               	retlw	110
 12655  0253  3400               	retlw	0
 12656  0254  346E               	retlw	110
 12657  0255  3400               	retlw	0
 12658  0256  346D               	retlw	109
 12659  0257  3400               	retlw	0
 12660  0258  346D               	retlw	109
 12661  0259  3400               	retlw	0
 12662  025A  346D               	retlw	109
 12663  025B  3400               	retlw	0
 12664  025C  346D               	retlw	109
 12665  025D  3400               	retlw	0
 12666  025E  346C               	retlw	108
 12667  025F  3400               	retlw	0
 12668  0260  346C               	retlw	108
 12669  0261  3400               	retlw	0
 12670  0262  346C               	retlw	108
 12671  0263  3400               	retlw	0
 12672  0264  346C               	retlw	108
 12673  0265  3400               	retlw	0
 12674  0266  346B               	retlw	107
 12675  0267  3400               	retlw	0
 12676  0268  346B               	retlw	107
 12677  0269  3400               	retlw	0
 12678  026A  346B               	retlw	107
 12679  026B  3400               	retlw	0
 12680  026C  346B               	retlw	107
 12681  026D  3400               	retlw	0
 12682  026E  346A               	retlw	106
 12683  026F  3400               	retlw	0
 12684  0270  346A               	retlw	106
 12685  0271  3400               	retlw	0
 12686  0272  346A               	retlw	106
 12687  0273  3400               	retlw	0
 12688  0274  346A               	retlw	106
 12689  0275  3400               	retlw	0
 12690  0276  3469               	retlw	105
 12691  0277  3400               	retlw	0
 12692  0278  3469               	retlw	105
 12693  0279  3400               	retlw	0
 12694  027A  3469               	retlw	105
 12695  027B  3400               	retlw	0
 12696  027C  3469               	retlw	105
 12697  027D  3400               	retlw	0
 12698  027E  3468               	retlw	104
 12699  027F  3400               	retlw	0
 12700  0280  3468               	retlw	104
 12701  0281  3400               	retlw	0
 12702  0282  3468               	retlw	104
 12703  0283  3400               	retlw	0
 12704  0284  3468               	retlw	104
 12705  0285  3400               	retlw	0
 12706  0286  3468               	retlw	104
 12707  0287  3400               	retlw	0
 12708  0288  3467               	retlw	103
 12709  0289  3400               	retlw	0
 12710  028A  3467               	retlw	103
 12711  028B  3400               	retlw	0
 12712  028C  3467               	retlw	103
 12713  028D  3400               	retlw	0
 12714  028E  3467               	retlw	103
 12715  028F  3400               	retlw	0
 12716  0290  3466               	retlw	102
 12717  0291  3400               	retlw	0
 12718  0292  3466               	retlw	102
 12719  0293  3400               	retlw	0
 12720  0294  3466               	retlw	102
 12721  0295  3400               	retlw	0
 12722  0296  3466               	retlw	102
 12723  0297  3400               	retlw	0
 12724  0298  3466               	retlw	102
 12725  0299  3400               	retlw	0
 12726  029A  3465               	retlw	101
 12727  029B  3400               	retlw	0
 12728  029C  3465               	retlw	101
 12729  029D  3400               	retlw	0
 12730  029E  3465               	retlw	101
 12731  029F  3400               	retlw	0
 12732  02A0  3465               	retlw	101
 12733  02A1  3400               	retlw	0
 12734  02A2  3465               	retlw	101
 12735  02A3  3400               	retlw	0
 12736  02A4  3464               	retlw	100
 12737  02A5  3400               	retlw	0
 12738  02A6  3464               	retlw	100
 12739  02A7  3400               	retlw	0
 12740  02A8  3464               	retlw	100
 12741  02A9  3400               	retlw	0
 12742  02AA  3464               	retlw	100
 12743  02AB  3400               	retlw	0
 12744  02AC  3464               	retlw	100
 12745  02AD  3400               	retlw	0
 12746  02AE  3463               	retlw	99
 12747  02AF  3400               	retlw	0
 12748  02B0  3463               	retlw	99
 12749  02B1  3400               	retlw	0
 12750  02B2  3463               	retlw	99
 12751  02B3  3400               	retlw	0
 12752  02B4  3463               	retlw	99
 12753  02B5  3400               	retlw	0
 12754  02B6  3463               	retlw	99
 12755  02B7  3400               	retlw	0
 12756  02B8  3462               	retlw	98
 12757  02B9  3400               	retlw	0
 12758  02BA  3462               	retlw	98
 12759  02BB  3400               	retlw	0
 12760  02BC  3462               	retlw	98
 12761  02BD  3400               	retlw	0
 12762  02BE  3462               	retlw	98
 12763  02BF  3400               	retlw	0
 12764  02C0  3462               	retlw	98
 12765  02C1  3400               	retlw	0
 12766  02C2  3461               	retlw	97
 12767  02C3  3400               	retlw	0
 12768  02C4  3461               	retlw	97
 12769  02C5  3400               	retlw	0
 12770  02C6  3461               	retlw	97
 12771  02C7  3400               	retlw	0
 12772  02C8  3461               	retlw	97
 12773  02C9  3400               	retlw	0
 12774  02CA  3461               	retlw	97
 12775  02CB  3400               	retlw	0
 12776  02CC  3461               	retlw	97
 12777  02CD  3400               	retlw	0
 12778  02CE  3460               	retlw	96
 12779  02CF  3400               	retlw	0
 12780  02D0  3460               	retlw	96
 12781  02D1  3400               	retlw	0
 12782  02D2  3460               	retlw	96
 12783  02D3  3400               	retlw	0
 12784  02D4  3460               	retlw	96
 12785  02D5  3400               	retlw	0
 12786  02D6  3460               	retlw	96
 12787  02D7  3400               	retlw	0
 12788  02D8  3460               	retlw	96
 12789  02D9  3400               	retlw	0
 12790  02DA  345F               	retlw	95
 12791  02DB  3400               	retlw	0
 12792  02DC  345F               	retlw	95
 12793  02DD  3400               	retlw	0
 12794  02DE  345F               	retlw	95
 12795  02DF  3400               	retlw	0
 12796  02E0  345F               	retlw	95
 12797  02E1  3400               	retlw	0
 12798  02E2  345F               	retlw	95
 12799  02E3  3400               	retlw	0
 12800  02E4  345E               	retlw	94
 12801  02E5  3400               	retlw	0
 12802  02E6  345E               	retlw	94
 12803  02E7  3400               	retlw	0
 12804  02E8  345E               	retlw	94
 12805  02E9  3400               	retlw	0
 12806  02EA  345E               	retlw	94
 12807  02EB  3400               	retlw	0
 12808  02EC  345E               	retlw	94
 12809  02ED  3400               	retlw	0
 12810  02EE  345E               	retlw	94
 12811  02EF  3400               	retlw	0
 12812  02F0  345D               	retlw	93
 12813  02F1  3400               	retlw	0
 12814  02F2  345D               	retlw	93
 12815  02F3  3400               	retlw	0
 12816  02F4  345D               	retlw	93
 12817  02F5  3400               	retlw	0
 12818  02F6  345D               	retlw	93
 12819  02F7  3400               	retlw	0
 12820  02F8  345D               	retlw	93
 12821  02F9  3400               	retlw	0
 12822  02FA  345D               	retlw	93
 12823  02FB  3400               	retlw	0
 12824  02FC  345D               	retlw	93
 12825  02FD  3400               	retlw	0
 12826  02FE  345C               	retlw	92
 12827  02FF  3400               	retlw	0
 12828  0300  345C               	retlw	92
 12829  0301  3400               	retlw	0
 12830  0302  345C               	retlw	92
 12831  0303  3400               	retlw	0
 12832  0304  345C               	retlw	92
 12833  0305  3400               	retlw	0
 12834  0306  345C               	retlw	92
 12835  0307  3400               	retlw	0
 12836  0308  345C               	retlw	92
 12837  0309  3400               	retlw	0
 12838  030A  345B               	retlw	91
 12839  030B  3400               	retlw	0
 12840  030C  345B               	retlw	91
 12841  030D  3400               	retlw	0
 12842  030E  345B               	retlw	91
 12843  030F  3400               	retlw	0
 12844  0310  345B               	retlw	91
 12845  0311  3400               	retlw	0
 12846  0312  345B               	retlw	91
 12847  0313  3400               	retlw	0
 12848  0314  345B               	retlw	91
 12849  0315  3400               	retlw	0
 12850  0316  345B               	retlw	91
 12851  0317  3400               	retlw	0
 12852  0318  345A               	retlw	90
 12853  0319  3400               	retlw	0
 12854  031A  345A               	retlw	90
 12855  031B  3400               	retlw	0
 12856  031C  345A               	retlw	90
 12857  031D  3400               	retlw	0
 12858  031E  345A               	retlw	90
 12859  031F  3400               	retlw	0
 12860  0320  345A               	retlw	90
 12861  0321  3400               	retlw	0
 12862  0322  345A               	retlw	90
 12863  0323  3400               	retlw	0
 12864  0324  345A               	retlw	90
 12865  0325  3400               	retlw	0
 12866  0326  3459               	retlw	89
 12867  0327  3400               	retlw	0
 12868  0328  3459               	retlw	89
 12869  0329  3400               	retlw	0
 12870  032A  3459               	retlw	89
 12871  032B  3400               	retlw	0
 12872  032C  3459               	retlw	89
 12873  032D  3400               	retlw	0
 12874  032E  3459               	retlw	89
 12875  032F  3400               	retlw	0
 12876  0330  3459               	retlw	89
 12877  0331  3400               	retlw	0
 12878  0332  3459               	retlw	89
 12879  0333  3400               	retlw	0
 12880  0334  3458               	retlw	88
 12881  0335  3400               	retlw	0
 12882  0336  3458               	retlw	88
 12883  0337  3400               	retlw	0
 12884  0338  3458               	retlw	88
 12885  0339  3400               	retlw	0
 12886  033A  3458               	retlw	88
 12887  033B  3400               	retlw	0
 12888  033C  3458               	retlw	88
 12889  033D  3400               	retlw	0
 12890  033E  3458               	retlw	88
 12891  033F  3400               	retlw	0
 12892  0340  3458               	retlw	88
 12893  0341  3400               	retlw	0
 12894  0342  3457               	retlw	87
 12895  0343  3400               	retlw	0
 12896  0344  3457               	retlw	87
 12897  0345  3400               	retlw	0
 12898  0346  3457               	retlw	87
 12899  0347  3400               	retlw	0
 12900  0348  3457               	retlw	87
 12901  0349  3400               	retlw	0
 12902  034A  3457               	retlw	87
 12903  034B  3400               	retlw	0
 12904  034C  3457               	retlw	87
 12905  034D  3400               	retlw	0
 12906  034E  3457               	retlw	87
 12907  034F  3400               	retlw	0
 12908  0350  3457               	retlw	87
 12909  0351  3400               	retlw	0
 12910  0352  3456               	retlw	86
 12911  0353  3400               	retlw	0
 12912  0354  3456               	retlw	86
 12913  0355  3400               	retlw	0
 12914  0356  3456               	retlw	86
 12915  0357  3400               	retlw	0
 12916  0358  3456               	retlw	86
 12917  0359  3400               	retlw	0
 12918  035A  3456               	retlw	86
 12919  035B  3400               	retlw	0
 12920  035C  3456               	retlw	86
 12921  035D  3400               	retlw	0
 12922  035E  3456               	retlw	86
 12923  035F  3400               	retlw	0
 12924  0360  3455               	retlw	85
 12925  0361  3400               	retlw	0
 12926  0362  3455               	retlw	85
 12927  0363  3400               	retlw	0
 12928  0364  3455               	retlw	85
 12929  0365  3400               	retlw	0
 12930  0366  3455               	retlw	85
 12931  0367  3400               	retlw	0
 12932  0368  3455               	retlw	85
 12933  0369  3400               	retlw	0
 12934  036A  3455               	retlw	85
 12935  036B  3400               	retlw	0
 12936  036C  3455               	retlw	85
 12937  036D  3400               	retlw	0
 12938  036E  3455               	retlw	85
 12939  036F  3400               	retlw	0
 12940  0370  3455               	retlw	85
 12941  0371  3400               	retlw	0
 12942  0372  3454               	retlw	84
 12943  0373  3400               	retlw	0
 12944  0374  3454               	retlw	84
 12945  0375  3400               	retlw	0
 12946  0376  3454               	retlw	84
 12947  0377  3400               	retlw	0
 12948  0378  3454               	retlw	84
 12949  0379  3400               	retlw	0
 12950  037A  3454               	retlw	84
 12951  037B  3400               	retlw	0
 12952  037C  3454               	retlw	84
 12953  037D  3400               	retlw	0
 12954  037E  3454               	retlw	84
 12955  037F  3400               	retlw	0
 12956  0380  3454               	retlw	84
 12957  0381  3400               	retlw	0
 12958  0382  3453               	retlw	83
 12959  0383  3400               	retlw	0
 12960  0384  3453               	retlw	83
 12961  0385  3400               	retlw	0
 12962  0386  3453               	retlw	83
 12963  0387  3400               	retlw	0
 12964  0388  3453               	retlw	83
 12965  0389  3400               	retlw	0
 12966  038A  3453               	retlw	83
 12967  038B  3400               	retlw	0
 12968  038C  3453               	retlw	83
 12969  038D  3400               	retlw	0
 12970  038E  3453               	retlw	83
 12971  038F  3400               	retlw	0
 12972  0390  3453               	retlw	83
 12973  0391  3400               	retlw	0
 12974  0392  3453               	retlw	83
 12975  0393  3400               	retlw	0
 12976  0394  3452               	retlw	82
 12977  0395  3400               	retlw	0
 12978  0396  3452               	retlw	82
 12979  0397  3400               	retlw	0
 12980  0398  3452               	retlw	82
 12981  0399  3400               	retlw	0
 12982  039A  3452               	retlw	82
 12983  039B  3400               	retlw	0
 12984  039C  3452               	retlw	82
 12985  039D  3400               	retlw	0
 12986  039E  3452               	retlw	82
 12987  039F  3400               	retlw	0
 12988  03A0  3452               	retlw	82
 12989  03A1  3400               	retlw	0
 12990  03A2  3452               	retlw	82
 12991  03A3  3400               	retlw	0
 12992  03A4  3452               	retlw	82
 12993  03A5  3400               	retlw	0
 12994  03A6  3451               	retlw	81
 12995  03A7  3400               	retlw	0
 12996  03A8  3451               	retlw	81
 12997  03A9  3400               	retlw	0
 12998  03AA  3451               	retlw	81
 12999  03AB  3400               	retlw	0
 13000  03AC  3451               	retlw	81
 13001  03AD  3400               	retlw	0
 13002  03AE  3451               	retlw	81
 13003  03AF  3400               	retlw	0
 13004  03B0  3451               	retlw	81
 13005  03B1  3400               	retlw	0
 13006  03B2  3451               	retlw	81
 13007  03B3  3400               	retlw	0
 13008  03B4  3451               	retlw	81
 13009  03B5  3400               	retlw	0
 13010  03B6  3451               	retlw	81
 13011  03B7  3400               	retlw	0
 13012  03B8  3450               	retlw	80
 13013  03B9  3400               	retlw	0
 13014  03BA  3450               	retlw	80
 13015  03BB  3400               	retlw	0
 13016  03BC  3450               	retlw	80
 13017  03BD  3400               	retlw	0
 13018  03BE  3450               	retlw	80
 13019  03BF  3400               	retlw	0
 13020  03C0  3450               	retlw	80
 13021  03C1  3400               	retlw	0
 13022  03C2  3450               	retlw	80
 13023  03C3  3400               	retlw	0
 13024  03C4  3450               	retlw	80
 13025  03C5  3400               	retlw	0
 13026  03C6  3450               	retlw	80
 13027  03C7  3400               	retlw	0
 13028  03C8  3450               	retlw	80
 13029  03C9  3400               	retlw	0
 13030  03CA  3450               	retlw	80
 13031  03CB  3400               	retlw	0
 13032  03CC  344F               	retlw	79
 13033  03CD  3400               	retlw	0
 13034  03CE  344F               	retlw	79
 13035  03CF  3400               	retlw	0
 13036  03D0  344F               	retlw	79
 13037  03D1  3400               	retlw	0
 13038  03D2  344F               	retlw	79
 13039  03D3  3400               	retlw	0
 13040  03D4  344F               	retlw	79
 13041  03D5  3400               	retlw	0
 13042  03D6  344F               	retlw	79
 13043  03D7  3400               	retlw	0
 13044  03D8  344F               	retlw	79
 13045  03D9  3400               	retlw	0
 13046  03DA  344F               	retlw	79
 13047  03DB  3400               	retlw	0
 13048  03DC  344F               	retlw	79
 13049  03DD  3400               	retlw	0
 13050  03DE  344F               	retlw	79
 13051  03DF  3400               	retlw	0
 13052  03E0  344E               	retlw	78
 13053  03E1  3400               	retlw	0
 13054  03E2  344E               	retlw	78
 13055  03E3  3400               	retlw	0
 13056  03E4  344E               	retlw	78
 13057  03E5  3400               	retlw	0
 13058  03E6  344E               	retlw	78
 13059  03E7  3400               	retlw	0
 13060  03E8  344E               	retlw	78
 13061  03E9  3400               	retlw	0
 13062  03EA  344E               	retlw	78
 13063  03EB  3400               	retlw	0
 13064  03EC  344E               	retlw	78
 13065  03ED  3400               	retlw	0
 13066  03EE  344E               	retlw	78
 13067  03EF  3400               	retlw	0
 13068  03F0  344E               	retlw	78
 13069  03F1  3400               	retlw	0
 13070  03F2  344E               	retlw	78
 13071  03F3  3400               	retlw	0
 13072  03F4  344E               	retlw	78
 13073  03F5  3400               	retlw	0
 13074  03F6  344D               	retlw	77
 13075  03F7  3400               	retlw	0
 13076  03F8  344D               	retlw	77
 13077  03F9  3400               	retlw	0
 13078  03FA  344D               	retlw	77
 13079  03FB  3400               	retlw	0
 13080  03FC  344D               	retlw	77
 13081  03FD  3400               	retlw	0
 13082  03FE  344D               	retlw	77
 13083  03FF  3400               	retlw	0
 13084  0400  344D               	retlw	77
 13085  0401  3400               	retlw	0
 13086  0402  344D               	retlw	77
 13087  0403  3400               	retlw	0
 13088  0404  344D               	retlw	77
 13089  0405  3400               	retlw	0
 13090  0406  344D               	retlw	77
 13091  0407  3400               	retlw	0
 13092  0408  344D               	retlw	77
 13093  0409  3400               	retlw	0
 13094  040A  344D               	retlw	77
 13095  040B  3400               	retlw	0
 13096  040C  344C               	retlw	76
 13097  040D  3400               	retlw	0
 13098  040E  344C               	retlw	76
 13099  040F  3400               	retlw	0
 13100  0410  344C               	retlw	76
 13101  0411  3400               	retlw	0
 13102  0412  344C               	retlw	76
 13103  0413  3400               	retlw	0
 13104  0414  344C               	retlw	76
 13105  0415  3400               	retlw	0
 13106  0416  344C               	retlw	76
 13107  0417  3400               	retlw	0
 13108  0418  344C               	retlw	76
 13109  0419  3400               	retlw	0
 13110  041A  344C               	retlw	76
 13111  041B  3400               	retlw	0
 13112  041C  344C               	retlw	76
 13113  041D  3400               	retlw	0
 13114  041E  344C               	retlw	76
 13115  041F  3400               	retlw	0
 13116  0420  344C               	retlw	76
 13117  0421  3400               	retlw	0
 13118  0422  344B               	retlw	75
 13119  0423  3400               	retlw	0
 13120  0424  344B               	retlw	75
 13121  0425  3400               	retlw	0
 13122  0426  344B               	retlw	75
 13123  0427  3400               	retlw	0
 13124  0428  344B               	retlw	75
 13125  0429  3400               	retlw	0
 13126  042A  344B               	retlw	75
 13127  042B  3400               	retlw	0
 13128  042C  344B               	retlw	75
 13129  042D  3400               	retlw	0
 13130  042E  344B               	retlw	75
 13131  042F  3400               	retlw	0
 13132  0430  344B               	retlw	75
 13133  0431  3400               	retlw	0
 13134  0432  344B               	retlw	75
 13135  0433  3400               	retlw	0
 13136  0434  344B               	retlw	75
 13137  0435  3400               	retlw	0
 13138  0436  344B               	retlw	75
 13139  0437  3400               	retlw	0
 13140  0438  344B               	retlw	75
 13141  0439  3400               	retlw	0
 13142  043A  344A               	retlw	74
 13143  043B  3400               	retlw	0
 13144  043C  344A               	retlw	74
 13145  043D  3400               	retlw	0
 13146  043E  344A               	retlw	74
 13147  043F  3400               	retlw	0
 13148  0440  344A               	retlw	74
 13149  0441  3400               	retlw	0
 13150  0442  344A               	retlw	74
 13151  0443  3400               	retlw	0
 13152  0444  344A               	retlw	74
 13153  0445  3400               	retlw	0
 13154  0446  344A               	retlw	74
 13155  0447  3400               	retlw	0
 13156  0448  344A               	retlw	74
 13157  0449  3400               	retlw	0
 13158  044A  344A               	retlw	74
 13159  044B  3400               	retlw	0
 13160  044C  344A               	retlw	74
 13161  044D  3400               	retlw	0
 13162  044E  344A               	retlw	74
 13163  044F  3400               	retlw	0
 13164  0450  344A               	retlw	74
 13165  0451  3400               	retlw	0
 13166  0452  3449               	retlw	73
 13167  0453  3400               	retlw	0
 13168  0454  3449               	retlw	73
 13169  0455  3400               	retlw	0
 13170  0456  3449               	retlw	73
 13171  0457  3400               	retlw	0
 13172  0458  3449               	retlw	73
 13173  0459  3400               	retlw	0
 13174  045A  3449               	retlw	73
 13175  045B  3400               	retlw	0
 13176  045C  3449               	retlw	73
 13177  045D  3400               	retlw	0
 13178  045E  3449               	retlw	73
 13179  045F  3400               	retlw	0
 13180  0460  3449               	retlw	73
 13181  0461  3400               	retlw	0
 13182  0462  3449               	retlw	73
 13183  0463  3400               	retlw	0
 13184  0464  3449               	retlw	73
 13185  0465  3400               	retlw	0
 13186  0466  3449               	retlw	73
 13187  0467  3400               	retlw	0
 13188  0468  3449               	retlw	73
 13189  0469  3400               	retlw	0
 13190  046A  3449               	retlw	73
 13191  046B  3400               	retlw	0
 13192  046C  3448               	retlw	72
 13193  046D  3400               	retlw	0
 13194  046E  3448               	retlw	72
 13195  046F  3400               	retlw	0
 13196  0470  3448               	retlw	72
 13197  0471  3400               	retlw	0
 13198  0472  3448               	retlw	72
 13199  0473  3400               	retlw	0
 13200  0474  3448               	retlw	72
 13201  0475  3400               	retlw	0
 13202  0476  3448               	retlw	72
 13203  0477  3400               	retlw	0
 13204  0478  3448               	retlw	72
 13205  0479  3400               	retlw	0
 13206  047A  3448               	retlw	72
 13207  047B  3400               	retlw	0
 13208  047C  3448               	retlw	72
 13209  047D  3400               	retlw	0
 13210  047E  3448               	retlw	72
 13211  047F  3400               	retlw	0
 13212  0480  3448               	retlw	72
 13213  0481  3400               	retlw	0
 13214  0482  3448               	retlw	72
 13215  0483  3400               	retlw	0
 13216  0484  3448               	retlw	72
 13217  0485  3400               	retlw	0
 13218  0486  3448               	retlw	72
 13219  0487  3400               	retlw	0
 13220  0488  3447               	retlw	71
 13221  0489  3400               	retlw	0
 13222  048A  3447               	retlw	71
 13223  048B  3400               	retlw	0
 13224  048C  3447               	retlw	71
 13225  048D  3400               	retlw	0
 13226  048E  3447               	retlw	71
 13227  048F  3400               	retlw	0
 13228  0490  3447               	retlw	71
 13229  0491  3400               	retlw	0
 13230  0492  3447               	retlw	71
 13231  0493  3400               	retlw	0
 13232  0494  3447               	retlw	71
 13233  0495  3400               	retlw	0
 13234  0496  3447               	retlw	71
 13235  0497  3400               	retlw	0
 13236  0498  3447               	retlw	71
 13237  0499  3400               	retlw	0
 13238  049A  3447               	retlw	71
 13239  049B  3400               	retlw	0
 13240  049C  3447               	retlw	71
 13241  049D  3400               	retlw	0
 13242  049E  3447               	retlw	71
 13243  049F  3400               	retlw	0
 13244  04A0  3447               	retlw	71
 13245  04A1  3400               	retlw	0
 13246  04A2  3446               	retlw	70
 13247  04A3  3400               	retlw	0
 13248  04A4  3446               	retlw	70
 13249  04A5  3400               	retlw	0
 13250  04A6  3446               	retlw	70
 13251  04A7  3400               	retlw	0
 13252  04A8  3446               	retlw	70
 13253  04A9  3400               	retlw	0
 13254  04AA  3446               	retlw	70
 13255  04AB  3400               	retlw	0
 13256  04AC  3446               	retlw	70
 13257  04AD  3400               	retlw	0
 13258  04AE  3446               	retlw	70
 13259  04AF  3400               	retlw	0
 13260  04B0  3446               	retlw	70
 13261  04B1  3400               	retlw	0
 13262  04B2  3446               	retlw	70
 13263  04B3  3400               	retlw	0
 13264  04B4  3446               	retlw	70
 13265  04B5  3400               	retlw	0
 13266  04B6  3446               	retlw	70
 13267  04B7  3400               	retlw	0
 13268  04B8  3446               	retlw	70
 13269  04B9  3400               	retlw	0
 13270  04BA  3446               	retlw	70
 13271  04BB  3400               	retlw	0
 13272  04BC  3446               	retlw	70
 13273  04BD  3400               	retlw	0
 13274  04BE  3446               	retlw	70
 13275  04BF  3400               	retlw	0
 13276  04C0  3445               	retlw	69
 13277  04C1  3400               	retlw	0
 13278  04C2  3445               	retlw	69
 13279  04C3  3400               	retlw	0
 13280  04C4  3445               	retlw	69
 13281  04C5  3400               	retlw	0
 13282  04C6  3445               	retlw	69
 13283  04C7  3400               	retlw	0
 13284  04C8  3445               	retlw	69
 13285  04C9  3400               	retlw	0
 13286  04CA  3445               	retlw	69
 13287  04CB  3400               	retlw	0
 13288  04CC  3445               	retlw	69
 13289  04CD  3400               	retlw	0
 13290  04CE  3445               	retlw	69
 13291  04CF  3400               	retlw	0
 13292  04D0  3445               	retlw	69
 13293  04D1  3400               	retlw	0
 13294  04D2  3445               	retlw	69
 13295  04D3  3400               	retlw	0
 13296  04D4  3445               	retlw	69
 13297  04D5  3400               	retlw	0
 13298  04D6  3445               	retlw	69
 13299  04D7  3400               	retlw	0
 13300  04D8  3445               	retlw	69
 13301  04D9  3400               	retlw	0
 13302  04DA  3445               	retlw	69
 13303  04DB  3400               	retlw	0
 13304  04DC  3445               	retlw	69
 13305  04DD  3400               	retlw	0
 13306  04DE  3444               	retlw	68
 13307  04DF  3400               	retlw	0
 13308  04E0  3444               	retlw	68
 13309  04E1  3400               	retlw	0
 13310  04E2  3444               	retlw	68
 13311  04E3  3400               	retlw	0
 13312  04E4  3444               	retlw	68
 13313  04E5  3400               	retlw	0
 13314  04E6  3444               	retlw	68
 13315  04E7  3400               	retlw	0
 13316  04E8  3444               	retlw	68
 13317  04E9  3400               	retlw	0
 13318  04EA  3444               	retlw	68
 13319  04EB  3400               	retlw	0
 13320  04EC  3444               	retlw	68
 13321  04ED  3400               	retlw	0
 13322  04EE  3444               	retlw	68
 13323  04EF  3400               	retlw	0
 13324  04F0  3444               	retlw	68
 13325  04F1  3400               	retlw	0
 13326  04F2  3444               	retlw	68
 13327  04F3  3400               	retlw	0
 13328  04F4  3444               	retlw	68
 13329  04F5  3400               	retlw	0
 13330  04F6  3444               	retlw	68
 13331  04F7  3400               	retlw	0
 13332  04F8  3444               	retlw	68
 13333  04F9  3400               	retlw	0
 13334  04FA  3444               	retlw	68
 13335  04FB  3400               	retlw	0
 13336  04FC  3444               	retlw	68
 13337  04FD  3400               	retlw	0
 13338  04FE  3443               	retlw	67
 13339  04FF  3400               	retlw	0
 13340  0500  3443               	retlw	67
 13341  0501  3400               	retlw	0
 13342  0502  3443               	retlw	67
 13343  0503  3400               	retlw	0
 13344  0504  3443               	retlw	67
 13345  0505  3400               	retlw	0
 13346  0506  3443               	retlw	67
 13347  0507  3400               	retlw	0
 13348  0508  3443               	retlw	67
 13349  0509  3400               	retlw	0
 13350  050A  3443               	retlw	67
 13351  050B  3400               	retlw	0
 13352  050C  3443               	retlw	67
 13353  050D  3400               	retlw	0
 13354  050E  3443               	retlw	67
 13355  050F  3400               	retlw	0
 13356  0510  3443               	retlw	67
 13357  0511  3400               	retlw	0
 13358  0512  3443               	retlw	67
 13359  0513  3400               	retlw	0
 13360  0514  3443               	retlw	67
 13361  0515  3400               	retlw	0
 13362  0516  3443               	retlw	67
 13363  0517  3400               	retlw	0
 13364  0518  3443               	retlw	67
 13365  0519  3400               	retlw	0
 13366  051A  3443               	retlw	67
 13367  051B  3400               	retlw	0
 13368  051C  3443               	retlw	67
 13369  051D  3400               	retlw	0
 13370  051E  3443               	retlw	67
 13371  051F  3400               	retlw	0
 13372  0520  3442               	retlw	66
 13373  0521  3400               	retlw	0
 13374  0522  3442               	retlw	66
 13375  0523  3400               	retlw	0
 13376  0524  3442               	retlw	66
 13377  0525  3400               	retlw	0
 13378  0526  3442               	retlw	66
 13379  0527  3400               	retlw	0
 13380  0528  3442               	retlw	66
 13381  0529  3400               	retlw	0
 13382  052A  3442               	retlw	66
 13383  052B  3400               	retlw	0
 13384  052C  3442               	retlw	66
 13385  052D  3400               	retlw	0
 13386  052E  3442               	retlw	66
 13387  052F  3400               	retlw	0
 13388  0530  3442               	retlw	66
 13389  0531  3400               	retlw	0
 13390  0532  3442               	retlw	66
 13391  0533  3400               	retlw	0
 13392  0534  3442               	retlw	66
 13393  0535  3400               	retlw	0
 13394  0536  3442               	retlw	66
 13395  0537  3400               	retlw	0
 13396  0538  3442               	retlw	66
 13397  0539  3400               	retlw	0
 13398  053A  3442               	retlw	66
 13399  053B  3400               	retlw	0
 13400  053C  3442               	retlw	66
 13401  053D  3400               	retlw	0
 13402  053E  3442               	retlw	66
 13403  053F  3400               	retlw	0
 13404  0540  3442               	retlw	66
 13405  0541  3400               	retlw	0
 13406  0542  3441               	retlw	65
 13407  0543  3400               	retlw	0
 13408  0544  3441               	retlw	65
 13409  0545  3400               	retlw	0
 13410  0546  3441               	retlw	65
 13411  0547  3400               	retlw	0
 13412  0548  3441               	retlw	65
 13413  0549  3400               	retlw	0
 13414  054A  3441               	retlw	65
 13415  054B  3400               	retlw	0
 13416  054C  3441               	retlw	65
 13417  054D  3400               	retlw	0
 13418  054E  3441               	retlw	65
 13419  054F  3400               	retlw	0
 13420  0550  3441               	retlw	65
 13421  0551  3400               	retlw	0
 13422  0552  3441               	retlw	65
 13423  0553  3400               	retlw	0
 13424  0554  3441               	retlw	65
 13425  0555  3400               	retlw	0
 13426  0556  3441               	retlw	65
 13427  0557  3400               	retlw	0
 13428  0558  3441               	retlw	65
 13429  0559  3400               	retlw	0
 13430  055A  3441               	retlw	65
 13431  055B  3400               	retlw	0
 13432  055C  3441               	retlw	65
 13433  055D  3400               	retlw	0
 13434  055E  3441               	retlw	65
 13435  055F  3400               	retlw	0
 13436  0560  3441               	retlw	65
 13437  0561  3400               	retlw	0
 13438  0562  3441               	retlw	65
 13439  0563  3400               	retlw	0
 13440  0564  3441               	retlw	65
 13441  0565  3400               	retlw	0
 13442  0566  3440               	retlw	64
 13443  0567  3400               	retlw	0
 13444  0568  3440               	retlw	64
 13445  0569  3400               	retlw	0
 13446  056A  3440               	retlw	64
 13447  056B  3400               	retlw	0
 13448  056C  3440               	retlw	64
 13449  056D  3400               	retlw	0
 13450  056E  3440               	retlw	64
 13451  056F  3400               	retlw	0
 13452  0570  3440               	retlw	64
 13453  0571  3400               	retlw	0
 13454  0572  3440               	retlw	64
 13455  0573  3400               	retlw	0
 13456  0574  3440               	retlw	64
 13457  0575  3400               	retlw	0
 13458  0576  3440               	retlw	64
 13459  0577  3400               	retlw	0
 13460  0578  3440               	retlw	64
 13461  0579  3400               	retlw	0
 13462  057A  3440               	retlw	64
 13463  057B  3400               	retlw	0
 13464  057C  3440               	retlw	64
 13465  057D  3400               	retlw	0
 13466  057E  3440               	retlw	64
 13467  057F  3400               	retlw	0
 13468  0580  3440               	retlw	64
 13469  0581  3400               	retlw	0
 13470  0582  3440               	retlw	64
 13471  0583  3400               	retlw	0
 13472  0584  3440               	retlw	64
 13473  0585  3400               	retlw	0
 13474  0586  3440               	retlw	64
 13475  0587  3400               	retlw	0
 13476  0588  3440               	retlw	64
 13477  0589  3400               	retlw	0
 13478  058A  3440               	retlw	64
 13479  058B  3400               	retlw	0
 13480  058C  3440               	retlw	64
 13481  058D  3400               	retlw	0
 13482  058E  343F               	retlw	63
 13483  058F  3400               	retlw	0
 13484  0590  343F               	retlw	63
 13485  0591  3400               	retlw	0
 13486  0592  343F               	retlw	63
 13487  0593  3400               	retlw	0
 13488  0594  343F               	retlw	63
 13489  0595  3400               	retlw	0
 13490  0596  343F               	retlw	63
 13491  0597  3400               	retlw	0
 13492  0598  343F               	retlw	63
 13493  0599  3400               	retlw	0
 13494  059A  343F               	retlw	63
 13495  059B  3400               	retlw	0
 13496  059C  343F               	retlw	63
 13497  059D  3400               	retlw	0
 13498  059E  343F               	retlw	63
 13499  059F  3400               	retlw	0
 13500  05A0  343F               	retlw	63
 13501  05A1  3400               	retlw	0
 13502  05A2  343F               	retlw	63
 13503  05A3  3400               	retlw	0
 13504  05A4  343F               	retlw	63
 13505  05A5  3400               	retlw	0
 13506  05A6  343F               	retlw	63
 13507  05A7  3400               	retlw	0
 13508  05A8  343F               	retlw	63
 13509  05A9  3400               	retlw	0
 13510  05AA  343F               	retlw	63
 13511  05AB  3400               	retlw	0
 13512  05AC  343F               	retlw	63
 13513  05AD  3400               	retlw	0
 13514  05AE  343F               	retlw	63
 13515  05AF  3400               	retlw	0
 13516  05B0  343F               	retlw	63
 13517  05B1  3400               	retlw	0
 13518  05B2  343F               	retlw	63
 13519  05B3  3400               	retlw	0
 13520  05B4  343F               	retlw	63
 13521  05B5  3400               	retlw	0
 13522  05B6  343E               	retlw	62
 13523  05B7  3400               	retlw	0
 13524  05B8  343E               	retlw	62
 13525  05B9  3400               	retlw	0
 13526  05BA  343E               	retlw	62
 13527  05BB  3400               	retlw	0
 13528  05BC  343E               	retlw	62
 13529  05BD  3400               	retlw	0
 13530  05BE  343E               	retlw	62
 13531  05BF  3400               	retlw	0
 13532  05C0  343E               	retlw	62
 13533  05C1  3400               	retlw	0
 13534  05C2  343E               	retlw	62
 13535  05C3  3400               	retlw	0
 13536  05C4  343E               	retlw	62
 13537  05C5  3400               	retlw	0
 13538  05C6  343E               	retlw	62
 13539  05C7  3400               	retlw	0
 13540  05C8  343E               	retlw	62
 13541  05C9  3400               	retlw	0
 13542  05CA  343E               	retlw	62
 13543  05CB  3400               	retlw	0
 13544  05CC  343E               	retlw	62
 13545  05CD  3400               	retlw	0
 13546  05CE  343E               	retlw	62
 13547  05CF  3400               	retlw	0
 13548  05D0  343E               	retlw	62
 13549  05D1  3400               	retlw	0
 13550  05D2  343E               	retlw	62
 13551  05D3  3400               	retlw	0
 13552  05D4  343E               	retlw	62
 13553  05D5  3400               	retlw	0
 13554  05D6  343E               	retlw	62
 13555  05D7  3400               	retlw	0
 13556  05D8  343E               	retlw	62
 13557  05D9  3400               	retlw	0
 13558  05DA  343E               	retlw	62
 13559  05DB  3400               	retlw	0
 13560  05DC  343E               	retlw	62
 13561  05DD  3400               	retlw	0
 13562  05DE  343D               	retlw	61
 13563  05DF  3400               	retlw	0
 13564  05E0  343D               	retlw	61
 13565  05E1  3400               	retlw	0
 13566  05E2  343D               	retlw	61
 13567  05E3  3400               	retlw	0
 13568  05E4  343D               	retlw	61
 13569  05E5  3400               	retlw	0
 13570  05E6  343D               	retlw	61
 13571  05E7  3400               	retlw	0
 13572  05E8  343D               	retlw	61
 13573  05E9  3400               	retlw	0
 13574  05EA  343D               	retlw	61
 13575  05EB  3400               	retlw	0
 13576  05EC  343D               	retlw	61
 13577  05ED  3400               	retlw	0
 13578  05EE  343D               	retlw	61
 13579  05EF  3400               	retlw	0
 13580  05F0  343D               	retlw	61
 13581  05F1  3400               	retlw	0
 13582  05F2  343D               	retlw	61
 13583  05F3  3400               	retlw	0
 13584  05F4  343D               	retlw	61
 13585  05F5  3400               	retlw	0
 13586  05F6  343D               	retlw	61
 13587  05F7  3400               	retlw	0
 13588  05F8  343D               	retlw	61
 13589  05F9  3400               	retlw	0
 13590  05FA  343D               	retlw	61
 13591  05FB  3400               	retlw	0
 13592  05FC  343D               	retlw	61
 13593  05FD  3400               	retlw	0
 13594  05FE  343D               	retlw	61
 13595  05FF  3400               	retlw	0
 13596  0600  343D               	retlw	61
 13597  0601  3400               	retlw	0
 13598  0602  343D               	retlw	61
 13599  0603  3400               	retlw	0
 13600  0604  343D               	retlw	61
 13601  0605  3400               	retlw	0
 13602  0606  343D               	retlw	61
 13603  0607  3400               	retlw	0
 13604  0608  343D               	retlw	61
 13605  0609  3400               	retlw	0
 13606  060A  343D               	retlw	61
 13607  060B  3400               	retlw	0
 13608  060C  343C               	retlw	60
 13609  060D  3400               	retlw	0
 13610  060E  343C               	retlw	60
 13611  060F  3400               	retlw	0
 13612  0610  343C               	retlw	60
 13613  0611  3400               	retlw	0
 13614  0612  343C               	retlw	60
 13615  0613  3400               	retlw	0
 13616  0614  343C               	retlw	60
 13617  0615  3400               	retlw	0
 13618  0616  343C               	retlw	60
 13619  0617  3400               	retlw	0
 13620  0618  343C               	retlw	60
 13621  0619  3400               	retlw	0
 13622  061A  343C               	retlw	60
 13623  061B  3400               	retlw	0
 13624  061C  343C               	retlw	60
 13625  061D  3400               	retlw	0
 13626  061E  343C               	retlw	60
 13627  061F  3400               	retlw	0
 13628  0620  343C               	retlw	60
 13629  0621  3400               	retlw	0
 13630  0622  343C               	retlw	60
 13631  0623  3400               	retlw	0
 13632  0624  343C               	retlw	60
 13633  0625  3400               	retlw	0
 13634  0626  343C               	retlw	60
 13635  0627  3400               	retlw	0
 13636  0628  343C               	retlw	60
 13637  0629  3400               	retlw	0
 13638  062A  343C               	retlw	60
 13639  062B  3400               	retlw	0
 13640  062C  343C               	retlw	60
 13641  062D  3400               	retlw	0
 13642  062E  343C               	retlw	60
 13643  062F  3400               	retlw	0
 13644  0630  343C               	retlw	60
 13645  0631  3400               	retlw	0
 13646  0632  343C               	retlw	60
 13647  0633  3400               	retlw	0
 13648  0634  343C               	retlw	60
 13649  0635  3400               	retlw	0
 13650  0636  343C               	retlw	60
 13651  0637  3400               	retlw	0
 13652  0638  343C               	retlw	60
 13653  0639  3400               	retlw	0
 13654  063A  343B               	retlw	59
 13655  063B  3400               	retlw	0
 13656  063C  343B               	retlw	59
 13657  063D  3400               	retlw	0
 13658  063E  343B               	retlw	59
 13659  063F  3400               	retlw	0
 13660  0640  343B               	retlw	59
 13661  0641  3400               	retlw	0
 13662  0642  343B               	retlw	59
 13663  0643  3400               	retlw	0
 13664  0644  343B               	retlw	59
 13665  0645  3400               	retlw	0
 13666  0646  343B               	retlw	59
 13667  0647  3400               	retlw	0
 13668  0648  343B               	retlw	59
 13669  0649  3400               	retlw	0
 13670  064A  343B               	retlw	59
 13671  064B  3400               	retlw	0
 13672  064C  343B               	retlw	59
 13673  064D  3400               	retlw	0
 13674  064E  343B               	retlw	59
 13675  064F  3400               	retlw	0
 13676  0650  343B               	retlw	59
 13677  0651  3400               	retlw	0
 13678  0652  343B               	retlw	59
 13679  0653  3400               	retlw	0
 13680  0654  343B               	retlw	59
 13681  0655  3400               	retlw	0
 13682  0656  343B               	retlw	59
 13683  0657  3400               	retlw	0
 13684  0658  343B               	retlw	59
 13685  0659  3400               	retlw	0
 13686  065A  343B               	retlw	59
 13687  065B  3400               	retlw	0
 13688  065C  343B               	retlw	59
 13689  065D  3400               	retlw	0
 13690  065E  343B               	retlw	59
 13691  065F  3400               	retlw	0
 13692  0660  343B               	retlw	59
 13693  0661  3400               	retlw	0
 13694  0662  343B               	retlw	59
 13695  0663  3400               	retlw	0
 13696  0664  343B               	retlw	59
 13697  0665  3400               	retlw	0
 13698  0666  343B               	retlw	59
 13699  0667  3400               	retlw	0
 13700  0668  343B               	retlw	59
 13701  0669  3400               	retlw	0
 13702  066A  343A               	retlw	58
 13703  066B  3400               	retlw	0
 13704  066C  343A               	retlw	58
 13705  066D  3400               	retlw	0
 13706  066E  343A               	retlw	58
 13707  066F  3400               	retlw	0
 13708  0670  343A               	retlw	58
 13709  0671  3400               	retlw	0
 13710  0672  343A               	retlw	58
 13711  0673  3400               	retlw	0
 13712  0674  343A               	retlw	58
 13713  0675  3400               	retlw	0
 13714  0676  343A               	retlw	58
 13715  0677  3400               	retlw	0
 13716  0678  343A               	retlw	58
 13717  0679  3400               	retlw	0
 13718  067A  343A               	retlw	58
 13719  067B  3400               	retlw	0
 13720  067C  343A               	retlw	58
 13721  067D  3400               	retlw	0
 13722  067E  343A               	retlw	58
 13723  067F  3400               	retlw	0
 13724  0680  343A               	retlw	58
 13725  0681  3400               	retlw	0
 13726  0682  343A               	retlw	58
 13727  0683  3400               	retlw	0
 13728  0684  343A               	retlw	58
 13729  0685  3400               	retlw	0
 13730  0686  343A               	retlw	58
 13731  0687  3400               	retlw	0
 13732  0688  343A               	retlw	58
 13733  0689  3400               	retlw	0
 13734  068A  343A               	retlw	58
 13735  068B  3400               	retlw	0
 13736  068C  343A               	retlw	58
 13737  068D  3400               	retlw	0
 13738  068E  343A               	retlw	58
 13739  068F  3400               	retlw	0
 13740  0690  343A               	retlw	58
 13741  0691  3400               	retlw	0
 13742  0692  343A               	retlw	58
 13743  0693  3400               	retlw	0
 13744  0694  343A               	retlw	58
 13745  0695  3400               	retlw	0
 13746  0696  343A               	retlw	58
 13747  0697  3400               	retlw	0
 13748  0698  343A               	retlw	58
 13749  0699  3400               	retlw	0
 13750  069A  343A               	retlw	58
 13751  069B  3400               	retlw	0
 13752  069C  343A               	retlw	58
 13753  069D  3400               	retlw	0
 13754  069E  3439               	retlw	57
 13755  069F  3400               	retlw	0
 13756  06A0  3439               	retlw	57
 13757  06A1  3400               	retlw	0
 13758  06A2  3439               	retlw	57
 13759  06A3  3400               	retlw	0
 13760  06A4  3439               	retlw	57
 13761  06A5  3400               	retlw	0
 13762  06A6  3439               	retlw	57
 13763  06A7  3400               	retlw	0
 13764  06A8  3439               	retlw	57
 13765  06A9  3400               	retlw	0
 13766  06AA  3439               	retlw	57
 13767  06AB  3400               	retlw	0
 13768  06AC  3439               	retlw	57
 13769  06AD  3400               	retlw	0
 13770  06AE  3439               	retlw	57
 13771  06AF  3400               	retlw	0
 13772  06B0  3439               	retlw	57
 13773  06B1  3400               	retlw	0
 13774  06B2  3439               	retlw	57
 13775  06B3  3400               	retlw	0
 13776  06B4  3439               	retlw	57
 13777  06B5  3400               	retlw	0
 13778  06B6  3439               	retlw	57
 13779  06B7  3400               	retlw	0
 13780  06B8  3439               	retlw	57
 13781  06B9  3400               	retlw	0
 13782  06BA  3439               	retlw	57
 13783  06BB  3400               	retlw	0
 13784  06BC  3439               	retlw	57
 13785  06BD  3400               	retlw	0
 13786  06BE  3439               	retlw	57
 13787  06BF  3400               	retlw	0
 13788  06C0  3439               	retlw	57
 13789  06C1  3400               	retlw	0
 13790  06C2  3439               	retlw	57
 13791  06C3  3400               	retlw	0
 13792  06C4  3439               	retlw	57
 13793  06C5  3400               	retlw	0
 13794  06C6  3439               	retlw	57
 13795  06C7  3400               	retlw	0
 13796  06C8  3439               	retlw	57
 13797  06C9  3400               	retlw	0
 13798  06CA  3439               	retlw	57
 13799  06CB  3400               	retlw	0
 13800  06CC  3439               	retlw	57
 13801  06CD  3400               	retlw	0
 13802  06CE  3439               	retlw	57
 13803  06CF  3400               	retlw	0
 13804  06D0  3439               	retlw	57
 13805  06D1  3400               	retlw	0
 13806  06D2  3439               	retlw	57
 13807  06D3  3400               	retlw	0
 13808  06D4  3438               	retlw	56
 13809  06D5  3400               	retlw	0
 13810  06D6  3438               	retlw	56
 13811  06D7  3400               	retlw	0
 13812  06D8  3438               	retlw	56
 13813  06D9  3400               	retlw	0
 13814  06DA  3438               	retlw	56
 13815  06DB  3400               	retlw	0
 13816  06DC  3438               	retlw	56
 13817  06DD  3400               	retlw	0
 13818  06DE  3438               	retlw	56
 13819  06DF  3400               	retlw	0
 13820  06E0  3438               	retlw	56
 13821  06E1  3400               	retlw	0
 13822  06E2  3438               	retlw	56
 13823  06E3  3400               	retlw	0
 13824  06E4  3438               	retlw	56
 13825  06E5  3400               	retlw	0
 13826  06E6  3438               	retlw	56
 13827  06E7  3400               	retlw	0
 13828  06E8  3438               	retlw	56
 13829  06E9  3400               	retlw	0
 13830  06EA  3438               	retlw	56
 13831  06EB  3400               	retlw	0
 13832  06EC  3438               	retlw	56
 13833  06ED  3400               	retlw	0
 13834  06EE  3438               	retlw	56
 13835  06EF  3400               	retlw	0
 13836  06F0  3438               	retlw	56
 13837  06F1  3400               	retlw	0
 13838  06F2  3438               	retlw	56
 13839  06F3  3400               	retlw	0
 13840  06F4  3438               	retlw	56
 13841  06F5  3400               	retlw	0
 13842  06F6  3438               	retlw	56
 13843  06F7  3400               	retlw	0
 13844  06F8  3438               	retlw	56
 13845  06F9  3400               	retlw	0
 13846  06FA  3438               	retlw	56
 13847  06FB  3400               	retlw	0
 13848  06FC  3438               	retlw	56
 13849  06FD  3400               	retlw	0
 13850  06FE  3438               	retlw	56
 13851  06FF  3400               	retlw	0
 13852  0700  3438               	retlw	56
 13853  0701  3400               	retlw	0
 13854  0702  3438               	retlw	56
 13855  0703  3400               	retlw	0
 13856  0704  3438               	retlw	56
 13857  0705  3400               	retlw	0
 13858  0706  3438               	retlw	56
 13859  0707  3400               	retlw	0
 13860  0708  3438               	retlw	56
 13861  0709  3400               	retlw	0
 13862  070A  3438               	retlw	56
 13863  070B  3400               	retlw	0
 13864  070C  3437               	retlw	55
 13865  070D  3400               	retlw	0
 13866  070E  3437               	retlw	55
 13867  070F  3400               	retlw	0
 13868  0710  3437               	retlw	55
 13869  0711  3400               	retlw	0
 13870  0712  3437               	retlw	55
 13871  0713  3400               	retlw	0
 13872  0714  3437               	retlw	55
 13873  0715  3400               	retlw	0
 13874  0716  3437               	retlw	55
 13875  0717  3400               	retlw	0
 13876  0718  3437               	retlw	55
 13877  0719  3400               	retlw	0
 13878  071A  3437               	retlw	55
 13879  071B  3400               	retlw	0
 13880  071C  3437               	retlw	55
 13881  071D  3400               	retlw	0
 13882  071E  3437               	retlw	55
 13883  071F  3400               	retlw	0
 13884  0720  3437               	retlw	55
 13885  0721  3400               	retlw	0
 13886  0722  3437               	retlw	55
 13887  0723  3400               	retlw	0
 13888  0724  3437               	retlw	55
 13889  0725  3400               	retlw	0
 13890  0726  3437               	retlw	55
 13891  0727  3400               	retlw	0
 13892  0728  3437               	retlw	55
 13893  0729  3400               	retlw	0
 13894  072A  3437               	retlw	55
 13895  072B  3400               	retlw	0
 13896  072C  3437               	retlw	55
 13897  072D  3400               	retlw	0
 13898  072E  3437               	retlw	55
 13899  072F  3400               	retlw	0
 13900  0730  3437               	retlw	55
 13901  0731  3400               	retlw	0
 13902  0732  3437               	retlw	55
 13903  0733  3400               	retlw	0
 13904  0734  3437               	retlw	55
 13905  0735  3400               	retlw	0
 13906  0736  3437               	retlw	55
 13907  0737  3400               	retlw	0
 13908  0738  3437               	retlw	55
 13909  0739  3400               	retlw	0
 13910  073A  3437               	retlw	55
 13911  073B  3400               	retlw	0
 13912  073C  3437               	retlw	55
 13913  073D  3400               	retlw	0
 13914  073E  3437               	retlw	55
 13915  073F  3400               	retlw	0
 13916  0740  3437               	retlw	55
 13917  0741  3400               	retlw	0
 13918  0742  3437               	retlw	55
 13919  0743  3400               	retlw	0
 13920  0744  3437               	retlw	55
 13921  0745  3400               	retlw	0
 13922  0746  3437               	retlw	55
 13923  0747  3400               	retlw	0
 13924  0748  3436               	retlw	54
 13925  0749  3400               	retlw	0
 13926  074A  3436               	retlw	54
 13927  074B  3400               	retlw	0
 13928  074C  3436               	retlw	54
 13929  074D  3400               	retlw	0
 13930  074E  3436               	retlw	54
 13931  074F  3400               	retlw	0
 13932  0750  3436               	retlw	54
 13933  0751  3400               	retlw	0
 13934  0752  3436               	retlw	54
 13935  0753  3400               	retlw	0
 13936  0754  3436               	retlw	54
 13937  0755  3400               	retlw	0
 13938  0756  3436               	retlw	54
 13939  0757  3400               	retlw	0
 13940  0758  3436               	retlw	54
 13941  0759  3400               	retlw	0
 13942  075A  3436               	retlw	54
 13943  075B  3400               	retlw	0
 13944  075C  3436               	retlw	54
 13945  075D  3400               	retlw	0
 13946  075E  3436               	retlw	54
 13947  075F  3400               	retlw	0
 13948  0760  3436               	retlw	54
 13949  0761  3400               	retlw	0
 13950  0762  3436               	retlw	54
 13951  0763  3400               	retlw	0
 13952  0764  3436               	retlw	54
 13953  0765  3400               	retlw	0
 13954  0766  3436               	retlw	54
 13955  0767  3400               	retlw	0
 13956  0768  3436               	retlw	54
 13957  0769  3400               	retlw	0
 13958  076A  3436               	retlw	54
 13959  076B  3400               	retlw	0
 13960  076C  3436               	retlw	54
 13961  076D  3400               	retlw	0
 13962  076E  3436               	retlw	54
 13963  076F  3400               	retlw	0
 13964  0770  3436               	retlw	54
 13965  0771  3400               	retlw	0
 13966  0772  3436               	retlw	54
 13967  0773  3400               	retlw	0
 13968  0774  3436               	retlw	54
 13969  0775  3400               	retlw	0
 13970  0776  3436               	retlw	54
 13971  0777  3400               	retlw	0
 13972  0778  3436               	retlw	54
 13973  0779  3400               	retlw	0
 13974  077A  3436               	retlw	54
 13975  077B  3400               	retlw	0
 13976  077C  3436               	retlw	54
 13977  077D  3400               	retlw	0
 13978  077E  3436               	retlw	54
 13979  077F  3400               	retlw	0
 13980  0780  3436               	retlw	54
 13981  0781  3400               	retlw	0
 13982  0782  3436               	retlw	54
 13983  0783  3400               	retlw	0
 13984  0784  3436               	retlw	54
 13985  0785  3400               	retlw	0
 13986  0786  3436               	retlw	54
 13987  0787  3400               	retlw	0
 13988  0788  3435               	retlw	53
 13989  0789  3400               	retlw	0
 13990  078A  3435               	retlw	53
 13991  078B  3400               	retlw	0
 13992  078C  3435               	retlw	53
 13993  078D  3400               	retlw	0
 13994  078E  3435               	retlw	53
 13995  078F  3400               	retlw	0
 13996  0790  3435               	retlw	53
 13997  0791  3400               	retlw	0
 13998  0792  3435               	retlw	53
 13999  0793  3400               	retlw	0
 14000  0794  3435               	retlw	53
 14001  0795  3400               	retlw	0
 14002  0796  3435               	retlw	53
 14003  0797  3400               	retlw	0
 14004  0798  3435               	retlw	53
 14005  0799  3400               	retlw	0
 14006  079A  3435               	retlw	53
 14007  079B  3400               	retlw	0
 14008  079C  3435               	retlw	53
 14009  079D  3400               	retlw	0
 14010  079E  3435               	retlw	53
 14011  079F  3400               	retlw	0
 14012  07A0  3435               	retlw	53
 14013  07A1  3400               	retlw	0
 14014  07A2  3435               	retlw	53
 14015  07A3  3400               	retlw	0
 14016  07A4  3435               	retlw	53
 14017  07A5  3400               	retlw	0
 14018  07A6  3435               	retlw	53
 14019  07A7  3400               	retlw	0
 14020  07A8  3435               	retlw	53
 14021  07A9  3400               	retlw	0
 14022  07AA  3435               	retlw	53
 14023  07AB  3400               	retlw	0
 14024  07AC  3435               	retlw	53
 14025  07AD  3400               	retlw	0
 14026  07AE  3435               	retlw	53
 14027  07AF  3400               	retlw	0
 14028  07B0  3435               	retlw	53
 14029  07B1  3400               	retlw	0
 14030  07B2  3435               	retlw	53
 14031  07B3  3400               	retlw	0
 14032  07B4  3435               	retlw	53
 14033  07B5  3400               	retlw	0
 14034  07B6  3435               	retlw	53
 14035  07B7  3400               	retlw	0
 14036  07B8  3435               	retlw	53
 14037  07B9  3400               	retlw	0
 14038  07BA  3435               	retlw	53
 14039  07BB  3400               	retlw	0
 14040  07BC  3435               	retlw	53
 14041  07BD  3400               	retlw	0
 14042  07BE  3435               	retlw	53
 14043  07BF  3400               	retlw	0
 14044  07C0  3435               	retlw	53
 14045  07C1  3400               	retlw	0
 14046  07C2  3435               	retlw	53
 14047  07C3  3400               	retlw	0
 14048  07C4  3435               	retlw	53
 14049  07C5  3400               	retlw	0
 14050  07C6  3435               	retlw	53
 14051  07C7  3400               	retlw	0
 14052  07C8  3435               	retlw	53
 14053  07C9  3400               	retlw	0
 14054  07CA  3435               	retlw	53
 14055  07CB  3400               	retlw	0
 14056  07CC  3434               	retlw	52
 14057  07CD  3400               	retlw	0
 14058  07CE  3434               	retlw	52
 14059  07CF  3400               	retlw	0
 14060  07D0  3434               	retlw	52
 14061  07D1  3400               	retlw	0
 14062  07D2  3434               	retlw	52
 14063  07D3  3400               	retlw	0
 14064  07D4  3434               	retlw	52
 14065  07D5  3400               	retlw	0
 14066  07D6  3434               	retlw	52
 14067  07D7  3400               	retlw	0
 14068  07D8  3434               	retlw	52
 14069  07D9  3400               	retlw	0
 14070  07DA  3434               	retlw	52
 14071  07DB  3400               	retlw	0
 14072  07DC  3434               	retlw	52
 14073  07DD  3400               	retlw	0
 14074  07DE  3434               	retlw	52
 14075  07DF  3400               	retlw	0
 14076  07E0  3434               	retlw	52
 14077  07E1  3400               	retlw	0
 14078  07E2  3434               	retlw	52
 14079  07E3  3400               	retlw	0
 14080  07E4  3434               	retlw	52
 14081  07E5  3400               	retlw	0
 14082  07E6  3434               	retlw	52
 14083  07E7  3400               	retlw	0
 14084  07E8  3434               	retlw	52
 14085  07E9  3400               	retlw	0
 14086  07EA  3434               	retlw	52
 14087  07EB  3400               	retlw	0
 14088  07EC  3434               	retlw	52
 14089  07ED  3400               	retlw	0
 14090  07EE  3434               	retlw	52
 14091  07EF  3400               	retlw	0
 14092  07F0  3434               	retlw	52
 14093  07F1  3400               	retlw	0
 14094  07F2  3434               	retlw	52
 14095  07F3  3400               	retlw	0
 14096  07F4  3434               	retlw	52
 14097  07F5  3400               	retlw	0
 14098  07F6  3434               	retlw	52
 14099  07F7  3400               	retlw	0
 14100  07F8  3434               	retlw	52
 14101  07F9  3400               	retlw	0
 14102  07FA  3434               	retlw	52
 14103  07FB  3400               	retlw	0
 14104  07FC  3434               	retlw	52
 14105  07FD  3400               	retlw	0
 14106  07FE  3434               	retlw	52
 14107  07FF  3400               	retlw	0
 14108  0800  3434               	retlw	52
 14109  0801  3400               	retlw	0
 14110  0802  3434               	retlw	52
 14111  0803  3400               	retlw	0
 14112  0804  3434               	retlw	52
 14113  0805  3400               	retlw	0
 14114  0806  3434               	retlw	52
 14115  0807  3400               	retlw	0
 14116  0808  3434               	retlw	52
 14117  0809  3400               	retlw	0
 14118  080A  3434               	retlw	52
 14119  080B  3400               	retlw	0
 14120  080C  3434               	retlw	52
 14121  080D  3400               	retlw	0
 14122  080E  3434               	retlw	52
 14123  080F  3400               	retlw	0
 14124  0810  3434               	retlw	52
 14125  0811  3400               	retlw	0
 14126  0812  3433               	retlw	51
 14127  0813  3400               	retlw	0
 14128  0814  3433               	retlw	51
 14129  0815  3400               	retlw	0
 14130  0816  3433               	retlw	51
 14131  0817  3400               	retlw	0
 14132  0818  3433               	retlw	51
 14133  0819  3400               	retlw	0
 14134  081A  3433               	retlw	51
 14135  081B  3400               	retlw	0
 14136  081C  3433               	retlw	51
 14137  081D  3400               	retlw	0
 14138  081E  3433               	retlw	51
 14139  081F  3400               	retlw	0
 14140  0820  3433               	retlw	51
 14141  0821  3400               	retlw	0
 14142  0822  3433               	retlw	51
 14143  0823  3400               	retlw	0
 14144  0824  3433               	retlw	51
 14145  0825  3400               	retlw	0
 14146  0826  3433               	retlw	51
 14147  0827  3400               	retlw	0
 14148  0828  3433               	retlw	51
 14149  0829  3400               	retlw	0
 14150  082A  3433               	retlw	51
 14151  082B  3400               	retlw	0
 14152  082C  3433               	retlw	51
 14153  082D  3400               	retlw	0
 14154  082E  3433               	retlw	51
 14155  082F  3400               	retlw	0
 14156  0830  3433               	retlw	51
 14157  0831  3400               	retlw	0
 14158  0832  3433               	retlw	51
 14159  0833  3400               	retlw	0
 14160  0834  3433               	retlw	51
 14161  0835  3400               	retlw	0
 14162  0836  3433               	retlw	51
 14163  0837  3400               	retlw	0
 14164  0838  3433               	retlw	51
 14165  0839  3400               	retlw	0
 14166  083A  3433               	retlw	51
 14167  083B  3400               	retlw	0
 14168  083C  3433               	retlw	51
 14169  083D  3400               	retlw	0
 14170  083E  3433               	retlw	51
 14171  083F  3400               	retlw	0
 14172  0840  3433               	retlw	51
 14173  0841  3400               	retlw	0
 14174  0842  3433               	retlw	51
 14175  0843  3400               	retlw	0
 14176  0844  3433               	retlw	51
 14177  0845  3400               	retlw	0
 14178  0846  3433               	retlw	51
 14179  0847  3400               	retlw	0
 14180  0848  3433               	retlw	51
 14181  0849  3400               	retlw	0
 14182  084A  3433               	retlw	51
 14183  084B  3400               	retlw	0
 14184  084C  3433               	retlw	51
 14185  084D  3400               	retlw	0
 14186  084E  3433               	retlw	51
 14187  084F  3400               	retlw	0
 14188  0850  3433               	retlw	51
 14189  0851  3400               	retlw	0
 14190  0852  3433               	retlw	51
 14191  0853  3400               	retlw	0
 14192  0854  3433               	retlw	51
 14193  0855  3400               	retlw	0
 14194  0856  3433               	retlw	51
 14195  0857  3400               	retlw	0
 14196  0858  3433               	retlw	51
 14197  0859  3400               	retlw	0
 14198  085A  3433               	retlw	51
 14199  085B  3400               	retlw	0
 14200  085C  3433               	retlw	51
 14201  085D  3400               	retlw	0
 14202  085E  3432               	retlw	50
 14203  085F  3400               	retlw	0
 14204  0860  3432               	retlw	50
 14205  0861  3400               	retlw	0
 14206  0862  3432               	retlw	50
 14207  0863  3400               	retlw	0
 14208  0864  3432               	retlw	50
 14209  0865  3400               	retlw	0
 14210  0866  3432               	retlw	50
 14211  0867  3400               	retlw	0
 14212  0868  3432               	retlw	50
 14213  0869  3400               	retlw	0
 14214  086A  3432               	retlw	50
 14215  086B  3400               	retlw	0
 14216  086C  3432               	retlw	50
 14217  086D  3400               	retlw	0
 14218  086E  3432               	retlw	50
 14219  086F  3400               	retlw	0
 14220  0870  3432               	retlw	50
 14221  0871  3400               	retlw	0
 14222  0872  3432               	retlw	50
 14223  0873  3400               	retlw	0
 14224  0874  3432               	retlw	50
 14225  0875  3400               	retlw	0
 14226  0876  3432               	retlw	50
 14227  0877  3400               	retlw	0
 14228  0878  3432               	retlw	50
 14229  0879  3400               	retlw	0
 14230  087A  3432               	retlw	50
 14231  087B  3400               	retlw	0
 14232  087C  3432               	retlw	50
 14233  087D  3400               	retlw	0
 14234  087E  3432               	retlw	50
 14235  087F  3400               	retlw	0
 14236  0880  3432               	retlw	50
 14237  0881  3400               	retlw	0
 14238  0882  3432               	retlw	50
 14239  0883  3400               	retlw	0
 14240  0884  3432               	retlw	50
 14241  0885  3400               	retlw	0
 14242  0886  3432               	retlw	50
 14243  0887  3400               	retlw	0
 14244  0888  3432               	retlw	50
 14245  0889  3400               	retlw	0
 14246  088A  3432               	retlw	50
 14247  088B  3400               	retlw	0
 14248  088C  3432               	retlw	50
 14249  088D  3400               	retlw	0
 14250  088E  3432               	retlw	50
 14251  088F  3400               	retlw	0
 14252  0890  3432               	retlw	50
 14253  0891  3400               	retlw	0
 14254  0892  3432               	retlw	50
 14255  0893  3400               	retlw	0
 14256  0894  3432               	retlw	50
 14257  0895  3400               	retlw	0
 14258  0896  3432               	retlw	50
 14259  0897  3400               	retlw	0
 14260  0898  3432               	retlw	50
 14261  0899  3400               	retlw	0
 14262  089A  3432               	retlw	50
 14263  089B  3400               	retlw	0
 14264  089C  3432               	retlw	50
 14265  089D  3400               	retlw	0
 14266  089E  3432               	retlw	50
 14267  089F  3400               	retlw	0
 14268  08A0  3432               	retlw	50
 14269  08A1  3400               	retlw	0
 14270  08A2  3432               	retlw	50
 14271  08A3  3400               	retlw	0
 14272  08A4  3432               	retlw	50
 14273  08A5  3400               	retlw	0
 14274  08A6  3432               	retlw	50
 14275  08A7  3400               	retlw	0
 14276  08A8  3432               	retlw	50
 14277  08A9  3400               	retlw	0
 14278  08AA  3432               	retlw	50
 14279  08AB  3400               	retlw	0
 14280  08AC  3432               	retlw	50
 14281  08AD  3400               	retlw	0
 14282  08AE  3431               	retlw	49
 14283  08AF  3400               	retlw	0
 14284  08B0  3431               	retlw	49
 14285  08B1  3400               	retlw	0
 14286  08B2  3431               	retlw	49
 14287  08B3  3400               	retlw	0
 14288  08B4  3431               	retlw	49
 14289  08B5  3400               	retlw	0
 14290  08B6  3431               	retlw	49
 14291  08B7  3400               	retlw	0
 14292  08B8  3431               	retlw	49
 14293  08B9  3400               	retlw	0
 14294  08BA  3431               	retlw	49
 14295  08BB  3400               	retlw	0
 14296  08BC  3431               	retlw	49
 14297  08BD  3400               	retlw	0
 14298  08BE  3431               	retlw	49
 14299  08BF  3400               	retlw	0
 14300  08C0  3431               	retlw	49
 14301  08C1  3400               	retlw	0
 14302  08C2  3431               	retlw	49
 14303  08C3  3400               	retlw	0
 14304  08C4  3431               	retlw	49
 14305  08C5  3400               	retlw	0
 14306  08C6  3431               	retlw	49
 14307  08C7  3400               	retlw	0
 14308  08C8  3431               	retlw	49
 14309  08C9  3400               	retlw	0
 14310  08CA  3431               	retlw	49
 14311  08CB  3400               	retlw	0
 14312  08CC  3431               	retlw	49
 14313  08CD  3400               	retlw	0
 14314  08CE  3431               	retlw	49
 14315  08CF  3400               	retlw	0
 14316  08D0  3431               	retlw	49
 14317  08D1  3400               	retlw	0
 14318  08D2  3431               	retlw	49
 14319  08D3  3400               	retlw	0
 14320  08D4  3431               	retlw	49
 14321  08D5  3400               	retlw	0
 14322  08D6  3431               	retlw	49
 14323  08D7  3400               	retlw	0
 14324  08D8  3431               	retlw	49
 14325  08D9  3400               	retlw	0
 14326  08DA  3431               	retlw	49
 14327  08DB  3400               	retlw	0
 14328  08DC  3431               	retlw	49
 14329  08DD  3400               	retlw	0
 14330  08DE  3431               	retlw	49
 14331  08DF  3400               	retlw	0
 14332  08E0  3431               	retlw	49
 14333  08E1  3400               	retlw	0
 14334  08E2  3431               	retlw	49
 14335  08E3  3400               	retlw	0
 14336  08E4  3431               	retlw	49
 14337  08E5  3400               	retlw	0
 14338  08E6  3431               	retlw	49
 14339  08E7  3400               	retlw	0
 14340  08E8  3431               	retlw	49
 14341  08E9  3400               	retlw	0
 14342  08EA  3431               	retlw	49
 14343  08EB  3400               	retlw	0
 14344  08EC  3431               	retlw	49
 14345  08ED  3400               	retlw	0
 14346  08EE  3431               	retlw	49
 14347  08EF  3400               	retlw	0
 14348  08F0  3431               	retlw	49
 14349  08F1  3400               	retlw	0
 14350  08F2  3431               	retlw	49
 14351  08F3  3400               	retlw	0
 14352  08F4  3431               	retlw	49
 14353  08F5  3400               	retlw	0
 14354  08F6  3431               	retlw	49
 14355  08F7  3400               	retlw	0
 14356  08F8  3431               	retlw	49
 14357  08F9  3400               	retlw	0
 14358  08FA  3431               	retlw	49
 14359  08FB  3400               	retlw	0
 14360  08FC  3431               	retlw	49
 14361  08FD  3400               	retlw	0
 14362  08FE  3431               	retlw	49
 14363  08FF  3400               	retlw	0
 14364  0900  3431               	retlw	49
 14365  0901  3400               	retlw	0
 14366  0902  3430               	retlw	48
 14367  0903  3400               	retlw	0
 14368  0904  3430               	retlw	48
 14369  0905  3400               	retlw	0
 14370  0906  3430               	retlw	48
 14371  0907  3400               	retlw	0
 14372  0908  3430               	retlw	48
 14373  0909  3400               	retlw	0
 14374  090A  3430               	retlw	48
 14375  090B  3400               	retlw	0
 14376  090C  3430               	retlw	48
 14377  090D  3400               	retlw	0
 14378  090E  3430               	retlw	48
 14379  090F  3400               	retlw	0
 14380  0910  3430               	retlw	48
 14381  0911  3400               	retlw	0
 14382  0912  3430               	retlw	48
 14383  0913  3400               	retlw	0
 14384  0914  3430               	retlw	48
 14385  0915  3400               	retlw	0
 14386  0916  3430               	retlw	48
 14387  0917  3400               	retlw	0
 14388  0918  3430               	retlw	48
 14389  0919  3400               	retlw	0
 14390  091A  3430               	retlw	48
 14391  091B  3400               	retlw	0
 14392  091C  3430               	retlw	48
 14393  091D  3400               	retlw	0
 14394  091E  3430               	retlw	48
 14395  091F  3400               	retlw	0
 14396  0920  3430               	retlw	48
 14397  0921  3400               	retlw	0
 14398  0922  3430               	retlw	48
 14399  0923  3400               	retlw	0
 14400  0924  3430               	retlw	48
 14401  0925  3400               	retlw	0
 14402  0926  3430               	retlw	48
 14403  0927  3400               	retlw	0
 14404  0928  3430               	retlw	48
 14405  0929  3400               	retlw	0
 14406  092A  3430               	retlw	48
 14407  092B  3400               	retlw	0
 14408  092C  3430               	retlw	48
 14409  092D  3400               	retlw	0
 14410  092E  3430               	retlw	48
 14411  092F  3400               	retlw	0
 14412  0930  3430               	retlw	48
 14413  0931  3400               	retlw	0
 14414  0932  3430               	retlw	48
 14415  0933  3400               	retlw	0
 14416  0934  3430               	retlw	48
 14417  0935  3400               	retlw	0
 14418  0936  3430               	retlw	48
 14419  0937  3400               	retlw	0
 14420  0938  3430               	retlw	48
 14421  0939  3400               	retlw	0
 14422  093A  3430               	retlw	48
 14423  093B  3400               	retlw	0
 14424  093C  3430               	retlw	48
 14425  093D  3400               	retlw	0
 14426  093E  3430               	retlw	48
 14427  093F  3400               	retlw	0
 14428  0940  3430               	retlw	48
 14429  0941  3400               	retlw	0
 14430  0942  3430               	retlw	48
 14431  0943  3400               	retlw	0
 14432  0944  3430               	retlw	48
 14433  0945  3400               	retlw	0
 14434  0946  3430               	retlw	48
 14435  0947  3400               	retlw	0
 14436  0948  3430               	retlw	48
 14437  0949  3400               	retlw	0
 14438  094A  3430               	retlw	48
 14439  094B  3400               	retlw	0
 14440  094C  3430               	retlw	48
 14441  094D  3400               	retlw	0
 14442  094E  3430               	retlw	48
 14443  094F  3400               	retlw	0
 14444  0950  3430               	retlw	48
 14445  0951  3400               	retlw	0
 14446  0952  3430               	retlw	48
 14447  0953  3400               	retlw	0
 14448  0954  3430               	retlw	48
 14449  0955  3400               	retlw	0
 14450  0956  3430               	retlw	48
 14451  0957  3400               	retlw	0
 14452  0958  3430               	retlw	48
 14453  0959  3400               	retlw	0
 14454  095A  3430               	retlw	48
 14455  095B  3400               	retlw	0
 14456  095C  3430               	retlw	48
 14457  095D  3400               	retlw	0
 14458  095E  342F               	retlw	47
 14459  095F  3400               	retlw	0
 14460  0960  342F               	retlw	47
 14461  0961  3400               	retlw	0
 14462  0962  342F               	retlw	47
 14463  0963  3400               	retlw	0
 14464  0964  342F               	retlw	47
 14465  0965  3400               	retlw	0
 14466  0966  342F               	retlw	47
 14467  0967  3400               	retlw	0
 14468  0968  342F               	retlw	47
 14469  0969  3400               	retlw	0
 14470  096A  342F               	retlw	47
 14471  096B  3400               	retlw	0
 14472  096C  342F               	retlw	47
 14473  096D  3400               	retlw	0
 14474  096E  342F               	retlw	47
 14475  096F  3400               	retlw	0
 14476  0970  342F               	retlw	47
 14477  0971  3400               	retlw	0
 14478  0972  342F               	retlw	47
 14479  0973  3400               	retlw	0
 14480  0974  342F               	retlw	47
 14481  0975  3400               	retlw	0
 14482  0976  342F               	retlw	47
 14483  0977  3400               	retlw	0
 14484  0978  342F               	retlw	47
 14485  0979  3400               	retlw	0
 14486  097A  342F               	retlw	47
 14487  097B  3400               	retlw	0
 14488  097C  342F               	retlw	47
 14489  097D  3400               	retlw	0
 14490  097E  342F               	retlw	47
 14491  097F  3400               	retlw	0
 14492  0980  342F               	retlw	47
 14493  0981  3400               	retlw	0
 14494  0982  342F               	retlw	47
 14495  0983  3400               	retlw	0
 14496  0984  342F               	retlw	47
 14497  0985  3400               	retlw	0
 14498  0986  342F               	retlw	47
 14499  0987  3400               	retlw	0
 14500  0988  342F               	retlw	47
 14501  0989  3400               	retlw	0
 14502  098A  342F               	retlw	47
 14503  098B  3400               	retlw	0
 14504  098C  342F               	retlw	47
 14505  098D  3400               	retlw	0
 14506  098E  342F               	retlw	47
 14507  098F  3400               	retlw	0
 14508  0990  342F               	retlw	47
 14509  0991  3400               	retlw	0
 14510  0992  342F               	retlw	47
 14511  0993  3400               	retlw	0
 14512  0994  342F               	retlw	47
 14513  0995  3400               	retlw	0
 14514  0996  342F               	retlw	47
 14515  0997  3400               	retlw	0
 14516  0998  342F               	retlw	47
 14517  0999  3400               	retlw	0
 14518  099A  342F               	retlw	47
 14519  099B  3400               	retlw	0
 14520  099C  342F               	retlw	47
 14521  099D  3400               	retlw	0
 14522  099E  342F               	retlw	47
 14523  099F  3400               	retlw	0
 14524  09A0  342F               	retlw	47
 14525  09A1  3400               	retlw	0
 14526  09A2  342F               	retlw	47
 14527  09A3  3400               	retlw	0
 14528  09A4  342F               	retlw	47
 14529  09A5  3400               	retlw	0
 14530  09A6  342F               	retlw	47
 14531  09A7  3400               	retlw	0
 14532  09A8  342F               	retlw	47
 14533  09A9  3400               	retlw	0
 14534  09AA  342F               	retlw	47
 14535  09AB  3400               	retlw	0
 14536  09AC  342F               	retlw	47
 14537  09AD  3400               	retlw	0
 14538  09AE  342F               	retlw	47
 14539  09AF  3400               	retlw	0
 14540  09B0  342F               	retlw	47
 14541  09B1  3400               	retlw	0
 14542  09B2  342F               	retlw	47
 14543  09B3  3400               	retlw	0
 14544  09B4  342F               	retlw	47
 14545  09B5  3400               	retlw	0
 14546  09B6  342F               	retlw	47
 14547  09B7  3400               	retlw	0
 14548  09B8  342F               	retlw	47
 14549  09B9  3400               	retlw	0
 14550  09BA  342F               	retlw	47
 14551  09BB  3400               	retlw	0
 14552  09BC  342F               	retlw	47
 14553  09BD  3400               	retlw	0
 14554  09BE  342E               	retlw	46
 14555  09BF  3400               	retlw	0
 14556  09C0  342E               	retlw	46
 14557  09C1  3400               	retlw	0
 14558  09C2  342E               	retlw	46
 14559  09C3  3400               	retlw	0
 14560  09C4  342E               	retlw	46
 14561  09C5  3400               	retlw	0
 14562  09C6  342E               	retlw	46
 14563  09C7  3400               	retlw	0
 14564  09C8  342E               	retlw	46
 14565  09C9  3400               	retlw	0
 14566  09CA  342E               	retlw	46
 14567  09CB  3400               	retlw	0
 14568  09CC  342E               	retlw	46
 14569  09CD  3400               	retlw	0
 14570  09CE  342E               	retlw	46
 14571  09CF  3400               	retlw	0
 14572  09D0  342E               	retlw	46
 14573  09D1  3400               	retlw	0
 14574  09D2  342E               	retlw	46
 14575  09D3  3400               	retlw	0
 14576  09D4  342E               	retlw	46
 14577  09D5  3400               	retlw	0
 14578  09D6  342E               	retlw	46
 14579  09D7  3400               	retlw	0
 14580  09D8  342E               	retlw	46
 14581  09D9  3400               	retlw	0
 14582  09DA  342E               	retlw	46
 14583  09DB  3400               	retlw	0
 14584  09DC  342E               	retlw	46
 14585  09DD  3400               	retlw	0
 14586  09DE  342E               	retlw	46
 14587  09DF  3400               	retlw	0
 14588  09E0  342E               	retlw	46
 14589  09E1  3400               	retlw	0
 14590  09E2  342E               	retlw	46
 14591  09E3  3400               	retlw	0
 14592  09E4  342E               	retlw	46
 14593  09E5  3400               	retlw	0
 14594  09E6  342E               	retlw	46
 14595  09E7  3400               	retlw	0
 14596  09E8  342E               	retlw	46
 14597  09E9  3400               	retlw	0
 14598  09EA  342E               	retlw	46
 14599  09EB  3400               	retlw	0
 14600  09EC  342E               	retlw	46
 14601  09ED  3400               	retlw	0
 14602  09EE  342E               	retlw	46
 14603  09EF  3400               	retlw	0
 14604  09F0  342E               	retlw	46
 14605  09F1  3400               	retlw	0
 14606  09F2  342E               	retlw	46
 14607  09F3  3400               	retlw	0
 14608  09F4  342E               	retlw	46
 14609  09F5  3400               	retlw	0
 14610  09F6  342E               	retlw	46
 14611  09F7  3400               	retlw	0
 14612  09F8  342E               	retlw	46
 14613  09F9  3400               	retlw	0
 14614  09FA  342E               	retlw	46
 14615  09FB  3400               	retlw	0
 14616  09FC  342E               	retlw	46
 14617  09FD  3400               	retlw	0
 14618  09FE  342E               	retlw	46
 14619  09FF  3400               	retlw	0
 14620  0A00  342E               	retlw	46
 14621  0A01  3400               	retlw	0
 14622  0A02  342E               	retlw	46
 14623  0A03  3400               	retlw	0
 14624  0A04  342E               	retlw	46
 14625  0A05  3400               	retlw	0
 14626  0A06  342E               	retlw	46
 14627  0A07  3400               	retlw	0
 14628  0A08  342E               	retlw	46
 14629  0A09  3400               	retlw	0
 14630  0A0A  342E               	retlw	46
 14631  0A0B  3400               	retlw	0
 14632  0A0C  342E               	retlw	46
 14633  0A0D  3400               	retlw	0
 14634  0A0E  342E               	retlw	46
 14635  0A0F  3400               	retlw	0
 14636  0A10  342E               	retlw	46
 14637  0A11  3400               	retlw	0
 14638  0A12  342E               	retlw	46
 14639  0A13  3400               	retlw	0
 14640  0A14  342E               	retlw	46
 14641  0A15  3400               	retlw	0
 14642  0A16  342E               	retlw	46
 14643  0A17  3400               	retlw	0
 14644  0A18  342E               	retlw	46
 14645  0A19  3400               	retlw	0
 14646  0A1A  342E               	retlw	46
 14647  0A1B  3400               	retlw	0
 14648  0A1C  342E               	retlw	46
 14649  0A1D  3400               	retlw	0
 14650  0A1E  342E               	retlw	46
 14651  0A1F  3400               	retlw	0
 14652  0A20  342E               	retlw	46
 14653  0A21  3400               	retlw	0
 14654  0A22  342E               	retlw	46
 14655  0A23  3400               	retlw	0
 14656  0A24  342D               	retlw	45
 14657  0A25  3400               	retlw	0
 14658  0A26  342D               	retlw	45
 14659  0A27  3400               	retlw	0
 14660  0A28  342D               	retlw	45
 14661  0A29  3400               	retlw	0
 14662  0A2A  342D               	retlw	45
 14663  0A2B  3400               	retlw	0
 14664  0A2C  342D               	retlw	45
 14665  0A2D  3400               	retlw	0
 14666  0A2E  342D               	retlw	45
 14667  0A2F  3400               	retlw	0
 14668  0A30  342D               	retlw	45
 14669  0A31  3400               	retlw	0
 14670  0A32  342D               	retlw	45
 14671  0A33  3400               	retlw	0
 14672  0A34  342D               	retlw	45
 14673  0A35  3400               	retlw	0
 14674  0A36  342D               	retlw	45
 14675  0A37  3400               	retlw	0
 14676  0A38  342D               	retlw	45
 14677  0A39  3400               	retlw	0
 14678  0A3A  342D               	retlw	45
 14679  0A3B  3400               	retlw	0
 14680  0A3C  342D               	retlw	45
 14681  0A3D  3400               	retlw	0
 14682  0A3E  342D               	retlw	45
 14683  0A3F  3400               	retlw	0
 14684  0A40  342D               	retlw	45
 14685  0A41  3400               	retlw	0
 14686  0A42  342D               	retlw	45
 14687  0A43  3400               	retlw	0
 14688  0A44  342D               	retlw	45
 14689  0A45  3400               	retlw	0
 14690  0A46  342D               	retlw	45
 14691  0A47  3400               	retlw	0
 14692  0A48  342D               	retlw	45
 14693  0A49  3400               	retlw	0
 14694  0A4A  342D               	retlw	45
 14695  0A4B  3400               	retlw	0
 14696  0A4C  342D               	retlw	45
 14697  0A4D  3400               	retlw	0
 14698  0A4E  342D               	retlw	45
 14699  0A4F  3400               	retlw	0
 14700  0A50  342D               	retlw	45
 14701  0A51  3400               	retlw	0
 14702  0A52  342D               	retlw	45
 14703  0A53  3400               	retlw	0
 14704  0A54  342D               	retlw	45
 14705  0A55  3400               	retlw	0
 14706  0A56  342D               	retlw	45
 14707  0A57  3400               	retlw	0
 14708  0A58  342D               	retlw	45
 14709  0A59  3400               	retlw	0
 14710  0A5A  342D               	retlw	45
 14711  0A5B  3400               	retlw	0
 14712  0A5C  342D               	retlw	45
 14713  0A5D  3400               	retlw	0
 14714  0A5E  342D               	retlw	45
 14715  0A5F  3400               	retlw	0
 14716  0A60  342D               	retlw	45
 14717  0A61  3400               	retlw	0
 14718  0A62  342D               	retlw	45
 14719  0A63  3400               	retlw	0
 14720  0A64  342D               	retlw	45
 14721  0A65  3400               	retlw	0
 14722  0A66  342D               	retlw	45
 14723  0A67  3400               	retlw	0
 14724  0A68  342D               	retlw	45
 14725  0A69  3400               	retlw	0
 14726  0A6A  342D               	retlw	45
 14727  0A6B  3400               	retlw	0
 14728  0A6C  342D               	retlw	45
 14729  0A6D  3400               	retlw	0
 14730  0A6E  342D               	retlw	45
 14731  0A6F  3400               	retlw	0
 14732  0A70  342D               	retlw	45
 14733  0A71  3400               	retlw	0
 14734  0A72  342D               	retlw	45
 14735  0A73  3400               	retlw	0
 14736  0A74  342D               	retlw	45
 14737  0A75  3400               	retlw	0
 14738  0A76  342D               	retlw	45
 14739  0A77  3400               	retlw	0
 14740  0A78  342D               	retlw	45
 14741  0A79  3400               	retlw	0
 14742  0A7A  342D               	retlw	45
 14743  0A7B  3400               	retlw	0
 14744  0A7C  342D               	retlw	45
 14745  0A7D  3400               	retlw	0
 14746  0A7E  342D               	retlw	45
 14747  0A7F  3400               	retlw	0
 14748  0A80  342D               	retlw	45
 14749  0A81  3400               	retlw	0
 14750  0A82  342D               	retlw	45
 14751  0A83  3400               	retlw	0
 14752  0A84  342D               	retlw	45
 14753  0A85  3400               	retlw	0
 14754  0A86  342D               	retlw	45
 14755  0A87  3400               	retlw	0
 14756  0A88  342D               	retlw	45
 14757  0A89  3400               	retlw	0
 14758  0A8A  342D               	retlw	45
 14759  0A8B  3400               	retlw	0
 14760  0A8C  342D               	retlw	45
 14761  0A8D  3400               	retlw	0
 14762  0A8E  342D               	retlw	45
 14763  0A8F  3400               	retlw	0
 14764  0A90  342D               	retlw	45
 14765  0A91  3400               	retlw	0
 14766  0A92  342C               	retlw	44
 14767  0A93  3400               	retlw	0
 14768  0A94  342C               	retlw	44
 14769  0A95  3400               	retlw	0
 14770  0A96  342C               	retlw	44
 14771  0A97  3400               	retlw	0
 14772  0A98  342C               	retlw	44
 14773  0A99  3400               	retlw	0
 14774  0A9A  342C               	retlw	44
 14775  0A9B  3400               	retlw	0
 14776  0A9C  342C               	retlw	44
 14777  0A9D  3400               	retlw	0
 14778  0A9E  342C               	retlw	44
 14779  0A9F  3400               	retlw	0
 14780  0AA0  342C               	retlw	44
 14781  0AA1  3400               	retlw	0
 14782  0AA2  342C               	retlw	44
 14783  0AA3  3400               	retlw	0
 14784  0AA4  342C               	retlw	44
 14785  0AA5  3400               	retlw	0
 14786  0AA6  342C               	retlw	44
 14787  0AA7  3400               	retlw	0
 14788  0AA8  342C               	retlw	44
 14789  0AA9  3400               	retlw	0
 14790  0AAA  342C               	retlw	44
 14791  0AAB  3400               	retlw	0
 14792  0AAC  342C               	retlw	44
 14793  0AAD  3400               	retlw	0
 14794  0AAE  342C               	retlw	44
 14795  0AAF  3400               	retlw	0
 14796  0AB0  342C               	retlw	44
 14797  0AB1  3400               	retlw	0
 14798  0AB2  342C               	retlw	44
 14799  0AB3  3400               	retlw	0
 14800  0AB4  342C               	retlw	44
 14801  0AB5  3400               	retlw	0
 14802  0AB6  342C               	retlw	44
 14803  0AB7  3400               	retlw	0
 14804  0AB8  342C               	retlw	44
 14805  0AB9  3400               	retlw	0
 14806  0ABA  342C               	retlw	44
 14807  0ABB  3400               	retlw	0
 14808  0ABC  342C               	retlw	44
 14809  0ABD  3400               	retlw	0
 14810  0ABE  342C               	retlw	44
 14811  0ABF  3400               	retlw	0
 14812  0AC0  342C               	retlw	44
 14813  0AC1  3400               	retlw	0
 14814  0AC2  342C               	retlw	44
 14815  0AC3  3400               	retlw	0
 14816  0AC4  342C               	retlw	44
 14817  0AC5  3400               	retlw	0
 14818  0AC6  342C               	retlw	44
 14819  0AC7  3400               	retlw	0
 14820  0AC8  342C               	retlw	44
 14821  0AC9  3400               	retlw	0
 14822  0ACA  342C               	retlw	44
 14823  0ACB  3400               	retlw	0
 14824  0ACC  342C               	retlw	44
 14825  0ACD  3400               	retlw	0
 14826  0ACE  342C               	retlw	44
 14827  0ACF  3400               	retlw	0
 14828  0AD0  342C               	retlw	44
 14829  0AD1  3400               	retlw	0
 14830  0AD2  342C               	retlw	44
 14831  0AD3  3400               	retlw	0
 14832  0AD4  342C               	retlw	44
 14833  0AD5  3400               	retlw	0
 14834  0AD6  342C               	retlw	44
 14835  0AD7  3400               	retlw	0
 14836  0AD8  342C               	retlw	44
 14837  0AD9  3400               	retlw	0
 14838  0ADA  342C               	retlw	44
 14839  0ADB  3400               	retlw	0
 14840  0ADC  342C               	retlw	44
 14841  0ADD  3400               	retlw	0
 14842  0ADE  342C               	retlw	44
 14843  0ADF  3400               	retlw	0
 14844  0AE0  342C               	retlw	44
 14845  0AE1  3400               	retlw	0
 14846  0AE2  342C               	retlw	44
 14847  0AE3  3400               	retlw	0
 14848  0AE4  342C               	retlw	44
 14849  0AE5  3400               	retlw	0
 14850  0AE6  342C               	retlw	44
 14851  0AE7  3400               	retlw	0
 14852  0AE8  342C               	retlw	44
 14853  0AE9  3400               	retlw	0
 14854  0AEA  342C               	retlw	44
 14855  0AEB  3400               	retlw	0
 14856  0AEC  342C               	retlw	44
 14857  0AED  3400               	retlw	0
 14858  0AEE  342C               	retlw	44
 14859  0AEF  3400               	retlw	0
 14860  0AF0  342C               	retlw	44
 14861  0AF1  3400               	retlw	0
 14862  0AF2  342C               	retlw	44
 14863  0AF3  3400               	retlw	0
 14864  0AF4  342C               	retlw	44
 14865  0AF5  3400               	retlw	0
 14866  0AF6  342C               	retlw	44
 14867  0AF7  3400               	retlw	0
 14868  0AF8  342C               	retlw	44
 14869  0AF9  3400               	retlw	0
 14870  0AFA  342C               	retlw	44
 14871  0AFB  3400               	retlw	0
 14872  0AFC  342C               	retlw	44
 14873  0AFD  3400               	retlw	0
 14874  0AFE  342C               	retlw	44
 14875  0AFF  3400               	retlw	0
 14876  0B00  342C               	retlw	44
 14877  0B01  3400               	retlw	0
 14878  0B02  342C               	retlw	44
 14879  0B03  3400               	retlw	0
 14880  0B04  342C               	retlw	44
 14881  0B05  3400               	retlw	0
 14882  0B06  342C               	retlw	44
 14883  0B07  3400               	retlw	0
 14884  0B08  342B               	retlw	43
 14885  0B09  3400               	retlw	0
 14886  0B0A  342B               	retlw	43
 14887  0B0B  3400               	retlw	0
 14888  0B0C  342B               	retlw	43
 14889  0B0D  3400               	retlw	0
 14890  0B0E  342B               	retlw	43
 14891  0B0F  3400               	retlw	0
 14892  0B10  342B               	retlw	43
 14893  0B11  3400               	retlw	0
 14894  0B12  342B               	retlw	43
 14895  0B13  3400               	retlw	0
 14896  0B14  342B               	retlw	43
 14897  0B15  3400               	retlw	0
 14898  0B16  342B               	retlw	43
 14899  0B17  3400               	retlw	0
 14900  0B18  342B               	retlw	43
 14901  0B19  3400               	retlw	0
 14902  0B1A  342B               	retlw	43
 14903  0B1B  3400               	retlw	0
 14904  0B1C  342B               	retlw	43
 14905  0B1D  3400               	retlw	0
 14906  0B1E  342B               	retlw	43
 14907  0B1F  3400               	retlw	0
 14908  0B20  342B               	retlw	43
 14909  0B21  3400               	retlw	0
 14910  0B22  342B               	retlw	43
 14911  0B23  3400               	retlw	0
 14912  0B24  342B               	retlw	43
 14913  0B25  3400               	retlw	0
 14914  0B26  342B               	retlw	43
 14915  0B27  3400               	retlw	0
 14916  0B28  342B               	retlw	43
 14917  0B29  3400               	retlw	0
 14918  0B2A  342B               	retlw	43
 14919  0B2B  3400               	retlw	0
 14920  0B2C  342B               	retlw	43
 14921  0B2D  3400               	retlw	0
 14922  0B2E  342B               	retlw	43
 14923  0B2F  3400               	retlw	0
 14924  0B30  342B               	retlw	43
 14925  0B31  3400               	retlw	0
 14926  0B32  342B               	retlw	43
 14927  0B33  3400               	retlw	0
 14928  0B34  342B               	retlw	43
 14929  0B35  3400               	retlw	0
 14930  0B36  342B               	retlw	43
 14931  0B37  3400               	retlw	0
 14932  0B38  342B               	retlw	43
 14933  0B39  3400               	retlw	0
 14934  0B3A  342B               	retlw	43
 14935  0B3B  3400               	retlw	0
 14936  0B3C  342B               	retlw	43
 14937  0B3D  3400               	retlw	0
 14938  0B3E  342B               	retlw	43
 14939  0B3F  3400               	retlw	0
 14940  0B40  342B               	retlw	43
 14941  0B41  3400               	retlw	0
 14942  0B42  342B               	retlw	43
 14943  0B43  3400               	retlw	0
 14944  0B44  342B               	retlw	43
 14945  0B45  3400               	retlw	0
 14946  0B46  342B               	retlw	43
 14947  0B47  3400               	retlw	0
 14948  0B48  342B               	retlw	43
 14949  0B49  3400               	retlw	0
 14950  0B4A  342B               	retlw	43
 14951  0B4B  3400               	retlw	0
 14952  0B4C  342B               	retlw	43
 14953  0B4D  3400               	retlw	0
 14954  0B4E  342B               	retlw	43
 14955  0B4F  3400               	retlw	0
 14956  0B50  342B               	retlw	43
 14957  0B51  3400               	retlw	0
 14958  0B52  342B               	retlw	43
 14959  0B53  3400               	retlw	0
 14960  0B54  342B               	retlw	43
 14961  0B55  3400               	retlw	0
 14962  0B56  342B               	retlw	43
 14963  0B57  3400               	retlw	0
 14964  0B58  342B               	retlw	43
 14965  0B59  3400               	retlw	0
 14966  0B5A  342B               	retlw	43
 14967  0B5B  3400               	retlw	0
 14968  0B5C  342B               	retlw	43
 14969  0B5D  3400               	retlw	0
 14970  0B5E  342B               	retlw	43
 14971  0B5F  3400               	retlw	0
 14972  0B60  342B               	retlw	43
 14973  0B61  3400               	retlw	0
 14974  0B62  342B               	retlw	43
 14975  0B63  3400               	retlw	0
 14976  0B64  342B               	retlw	43
 14977  0B65  3400               	retlw	0
 14978  0B66  342B               	retlw	43
 14979  0B67  3400               	retlw	0
 14980  0B68  342B               	retlw	43
 14981  0B69  3400               	retlw	0
 14982  0B6A  342B               	retlw	43
 14983  0B6B  3400               	retlw	0
 14984  0B6C  342B               	retlw	43
 14985  0B6D  3400               	retlw	0
 14986  0B6E  342B               	retlw	43
 14987  0B6F  3400               	retlw	0
 14988  0B70  342B               	retlw	43
 14989  0B71  3400               	retlw	0
 14990  0B72  342B               	retlw	43
 14991  0B73  3400               	retlw	0
 14992  0B74  342B               	retlw	43
 14993  0B75  3400               	retlw	0
 14994  0B76  342B               	retlw	43
 14995  0B77  3400               	retlw	0
 14996  0B78  342B               	retlw	43
 14997  0B79  3400               	retlw	0
 14998  0B7A  342B               	retlw	43
 14999  0B7B  3400               	retlw	0
 15000  0B7C  342B               	retlw	43
 15001  0B7D  3400               	retlw	0
 15002  0B7E  342B               	retlw	43
 15003  0B7F  3400               	retlw	0
 15004  0B80  342B               	retlw	43
 15005  0B81  3400               	retlw	0
 15006  0B82  342B               	retlw	43
 15007  0B83  3400               	retlw	0
 15008  0B84  342B               	retlw	43
 15009  0B85  3400               	retlw	0
 15010  0B86  342A               	retlw	42
 15011  0B87  3400               	retlw	0
 15012  0B88  342A               	retlw	42
 15013  0B89  3400               	retlw	0
 15014  0B8A  342A               	retlw	42
 15015  0B8B  3400               	retlw	0
 15016  0B8C  342A               	retlw	42
 15017  0B8D  3400               	retlw	0
 15018  0B8E  342A               	retlw	42
 15019  0B8F  3400               	retlw	0
 15020  0B90  342A               	retlw	42
 15021  0B91  3400               	retlw	0
 15022  0B92  342A               	retlw	42
 15023  0B93  3400               	retlw	0
 15024  0B94  342A               	retlw	42
 15025  0B95  3400               	retlw	0
 15026  0B96  342A               	retlw	42
 15027  0B97  3400               	retlw	0
 15028  0B98  342A               	retlw	42
 15029  0B99  3400               	retlw	0
 15030  0B9A  342A               	retlw	42
 15031  0B9B  3400               	retlw	0
 15032  0B9C  342A               	retlw	42
 15033  0B9D  3400               	retlw	0
 15034  0B9E  342A               	retlw	42
 15035  0B9F  3400               	retlw	0
 15036  0BA0  342A               	retlw	42
 15037  0BA1  3400               	retlw	0
 15038  0BA2  342A               	retlw	42
 15039  0BA3  3400               	retlw	0
 15040  0BA4  342A               	retlw	42
 15041  0BA5  3400               	retlw	0
 15042  0BA6  342A               	retlw	42
 15043  0BA7  3400               	retlw	0
 15044  0BA8  342A               	retlw	42
 15045  0BA9  3400               	retlw	0
 15046  0BAA  342A               	retlw	42
 15047  0BAB  3400               	retlw	0
 15048  0BAC  342A               	retlw	42
 15049  0BAD  3400               	retlw	0
 15050  0BAE  342A               	retlw	42
 15051  0BAF  3400               	retlw	0
 15052  0BB0  342A               	retlw	42
 15053  0BB1  3400               	retlw	0
 15054  0BB2  342A               	retlw	42
 15055  0BB3  3400               	retlw	0
 15056  0BB4  342A               	retlw	42
 15057  0BB5  3400               	retlw	0
 15058  0BB6  342A               	retlw	42
 15059  0BB7  3400               	retlw	0
 15060  0BB8  342A               	retlw	42
 15061  0BB9  3400               	retlw	0
 15062  0BBA  342A               	retlw	42
 15063  0BBB  3400               	retlw	0
 15064  0BBC  342A               	retlw	42
 15065  0BBD  3400               	retlw	0
 15066  0BBE  342A               	retlw	42
 15067  0BBF  3400               	retlw	0
 15068  0BC0  342A               	retlw	42
 15069  0BC1  3400               	retlw	0
 15070  0BC2  342A               	retlw	42
 15071  0BC3  3400               	retlw	0
 15072  0BC4  342A               	retlw	42
 15073  0BC5  3400               	retlw	0
 15074  0BC6  342A               	retlw	42
 15075  0BC7  3400               	retlw	0
 15076  0BC8  342A               	retlw	42
 15077  0BC9  3400               	retlw	0
 15078  0BCA  342A               	retlw	42
 15079  0BCB  3400               	retlw	0
 15080  0BCC  342A               	retlw	42
 15081  0BCD  3400               	retlw	0
 15082  0BCE  342A               	retlw	42
 15083  0BCF  3400               	retlw	0
 15084  0BD0  342A               	retlw	42
 15085  0BD1  3400               	retlw	0
 15086  0BD2  342A               	retlw	42
 15087  0BD3  3400               	retlw	0
 15088  0BD4  342A               	retlw	42
 15089  0BD5  3400               	retlw	0
 15090  0BD6  342A               	retlw	42
 15091  0BD7  3400               	retlw	0
 15092  0BD8  342A               	retlw	42
 15093  0BD9  3400               	retlw	0
 15094  0BDA  342A               	retlw	42
 15095  0BDB  3400               	retlw	0
 15096  0BDC  342A               	retlw	42
 15097  0BDD  3400               	retlw	0
 15098  0BDE  342A               	retlw	42
 15099  0BDF  3400               	retlw	0
 15100  0BE0  342A               	retlw	42
 15101  0BE1  3400               	retlw	0
 15102  0BE2  342A               	retlw	42
 15103  0BE3  3400               	retlw	0
 15104  0BE4  342A               	retlw	42
 15105  0BE5  3400               	retlw	0
 15106  0BE6  342A               	retlw	42
 15107  0BE7  3400               	retlw	0
 15108  0BE8  342A               	retlw	42
 15109  0BE9  3400               	retlw	0
 15110  0BEA  342A               	retlw	42
 15111  0BEB  3400               	retlw	0
 15112  0BEC  342A               	retlw	42
 15113  0BED  3400               	retlw	0
 15114  0BEE  342A               	retlw	42
 15115  0BEF  3400               	retlw	0
 15116  0BF0  342A               	retlw	42
 15117  0BF1  3400               	retlw	0
 15118  0BF2  342A               	retlw	42
 15119  0BF3  3400               	retlw	0
 15120  0BF4  342A               	retlw	42
 15121  0BF5  3400               	retlw	0
 15122  0BF6  342A               	retlw	42
 15123  0BF7  3400               	retlw	0
 15124  0BF8  342A               	retlw	42
 15125  0BF9  3400               	retlw	0
 15126  0BFA  342A               	retlw	42
 15127  0BFB  3400               	retlw	0
 15128  0BFC  342A               	retlw	42
 15129  0BFD  3400               	retlw	0
 15130  0BFE  342A               	retlw	42
 15131  0BFF  3400               	retlw	0
 15132  0C00  342A               	retlw	42
 15133  0C01  3400               	retlw	0
 15134  0C02  342A               	retlw	42
 15135  0C03  3400               	retlw	0
 15136  0C04  342A               	retlw	42
 15137  0C05  3400               	retlw	0
 15138  0C06  342A               	retlw	42
 15139  0C07  3400               	retlw	0
 15140  0C08  342A               	retlw	42
 15141  0C09  3400               	retlw	0
 15142  0C0A  342A               	retlw	42
 15143  0C0B  3400               	retlw	0
 15144  0C0C  3429               	retlw	41
 15145  0C0D  3400               	retlw	0
 15146  0C0E  3429               	retlw	41
 15147  0C0F  3400               	retlw	0
 15148  0C10  3429               	retlw	41
 15149  0C11  3400               	retlw	0
 15150  0C12  3429               	retlw	41
 15151  0C13  3400               	retlw	0
 15152  0C14  3429               	retlw	41
 15153  0C15  3400               	retlw	0
 15154  0C16  3429               	retlw	41
 15155  0C17  3400               	retlw	0
 15156  0C18  3429               	retlw	41
 15157  0C19  3400               	retlw	0
 15158  0C1A  3429               	retlw	41
 15159  0C1B  3400               	retlw	0
 15160  0C1C  3429               	retlw	41
 15161  0C1D  3400               	retlw	0
 15162  0C1E  3429               	retlw	41
 15163  0C1F  3400               	retlw	0
 15164  0C20  3429               	retlw	41
 15165  0C21  3400               	retlw	0
 15166  0C22  3429               	retlw	41
 15167  0C23  3400               	retlw	0
 15168  0C24  3429               	retlw	41
 15169  0C25  3400               	retlw	0
 15170  0C26  3429               	retlw	41
 15171  0C27  3400               	retlw	0
 15172  0C28  3429               	retlw	41
 15173  0C29  3400               	retlw	0
 15174  0C2A  3429               	retlw	41
 15175  0C2B  3400               	retlw	0
 15176  0C2C  3429               	retlw	41
 15177  0C2D  3400               	retlw	0
 15178  0C2E  3429               	retlw	41
 15179  0C2F  3400               	retlw	0
 15180  0C30  3429               	retlw	41
 15181  0C31  3400               	retlw	0
 15182  0C32  3429               	retlw	41
 15183  0C33  3400               	retlw	0
 15184  0C34  3429               	retlw	41
 15185  0C35  3400               	retlw	0
 15186  0C36  3429               	retlw	41
 15187  0C37  3400               	retlw	0
 15188  0C38  3429               	retlw	41
 15189  0C39  3400               	retlw	0
 15190  0C3A  3429               	retlw	41
 15191  0C3B  3400               	retlw	0
 15192  0C3C  3429               	retlw	41
 15193  0C3D  3400               	retlw	0
 15194  0C3E  3429               	retlw	41
 15195  0C3F  3400               	retlw	0
 15196  0C40  3429               	retlw	41
 15197  0C41  3400               	retlw	0
 15198  0C42  3429               	retlw	41
 15199  0C43  3400               	retlw	0
 15200  0C44  3429               	retlw	41
 15201  0C45  3400               	retlw	0
 15202  0C46  3429               	retlw	41
 15203  0C47  3400               	retlw	0
 15204  0C48  3429               	retlw	41
 15205  0C49  3400               	retlw	0
 15206  0C4A  3429               	retlw	41
 15207  0C4B  3400               	retlw	0
 15208  0C4C  3429               	retlw	41
 15209  0C4D  3400               	retlw	0
 15210  0C4E  3429               	retlw	41
 15211  0C4F  3400               	retlw	0
 15212  0C50  3429               	retlw	41
 15213  0C51  3400               	retlw	0
 15214  0C52  3429               	retlw	41
 15215  0C53  3400               	retlw	0
 15216  0C54  3429               	retlw	41
 15217  0C55  3400               	retlw	0
 15218  0C56  3429               	retlw	41
 15219  0C57  3400               	retlw	0
 15220  0C58  3429               	retlw	41
 15221  0C59  3400               	retlw	0
 15222  0C5A  3429               	retlw	41
 15223  0C5B  3400               	retlw	0
 15224  0C5C  3429               	retlw	41
 15225  0C5D  3400               	retlw	0
 15226  0C5E  3429               	retlw	41
 15227  0C5F  3400               	retlw	0
 15228  0C60  3429               	retlw	41
 15229  0C61  3400               	retlw	0
 15230  0C62  3429               	retlw	41
 15231  0C63  3400               	retlw	0
 15232  0C64  3429               	retlw	41
 15233  0C65  3400               	retlw	0
 15234  0C66  3429               	retlw	41
 15235  0C67  3400               	retlw	0
 15236  0C68  3429               	retlw	41
 15237  0C69  3400               	retlw	0
 15238  0C6A  3429               	retlw	41
 15239  0C6B  3400               	retlw	0
 15240  0C6C  3429               	retlw	41
 15241  0C6D  3400               	retlw	0
 15242  0C6E  3429               	retlw	41
 15243  0C6F  3400               	retlw	0
 15244  0C70  3429               	retlw	41
 15245  0C71  3400               	retlw	0
 15246  0C72  3429               	retlw	41
 15247  0C73  3400               	retlw	0
 15248  0C74  3429               	retlw	41
 15249  0C75  3400               	retlw	0
 15250  0C76  3429               	retlw	41
 15251  0C77  3400               	retlw	0
 15252  0C78  3429               	retlw	41
 15253  0C79  3400               	retlw	0
 15254  0C7A  3429               	retlw	41
 15255  0C7B  3400               	retlw	0
 15256  0C7C  3429               	retlw	41
 15257  0C7D  3400               	retlw	0
 15258  0C7E  3429               	retlw	41
 15259  0C7F  3400               	retlw	0
 15260  0C80  3429               	retlw	41
 15261  0C81  3400               	retlw	0
 15262  0C82  3429               	retlw	41
 15263  0C83  3400               	retlw	0
 15264  0C84  3429               	retlw	41
 15265  0C85  3400               	retlw	0
 15266  0C86  3429               	retlw	41
 15267  0C87  3400               	retlw	0
 15268  0C88  3429               	retlw	41
 15269  0C89  3400               	retlw	0
 15270  0C8A  3429               	retlw	41
 15271  0C8B  3400               	retlw	0
 15272  0C8C  3429               	retlw	41
 15273  0C8D  3400               	retlw	0
 15274  0C8E  3429               	retlw	41
 15275  0C8F  3400               	retlw	0
 15276  0C90  3429               	retlw	41
 15277  0C91  3400               	retlw	0
 15278  0C92  3429               	retlw	41
 15279  0C93  3400               	retlw	0
 15280  0C94  3429               	retlw	41
 15281  0C95  3400               	retlw	0
 15282  0C96  3429               	retlw	41
 15283  0C97  3400               	retlw	0
 15284  0C98  3429               	retlw	41
 15285  0C99  3400               	retlw	0
 15286  0C9A  3429               	retlw	41
 15287  0C9B  3400               	retlw	0
 15288  0C9C  3429               	retlw	41
 15289  0C9D  3400               	retlw	0
 15290  0C9E  3428               	retlw	40
 15291  0C9F  3400               	retlw	0
 15292  0CA0  3428               	retlw	40
 15293  0CA1  3400               	retlw	0
 15294  0CA2  3428               	retlw	40
 15295  0CA3  3400               	retlw	0
 15296  0CA4  3428               	retlw	40
 15297  0CA5  3400               	retlw	0
 15298  0CA6  3428               	retlw	40
 15299  0CA7  3400               	retlw	0
 15300  0CA8  3428               	retlw	40
 15301  0CA9  3400               	retlw	0
 15302  0CAA  3428               	retlw	40
 15303  0CAB  3400               	retlw	0
 15304  0CAC  3428               	retlw	40
 15305  0CAD  3400               	retlw	0
 15306  0CAE  3428               	retlw	40
 15307  0CAF  3400               	retlw	0
 15308  0CB0  3428               	retlw	40
 15309  0CB1  3400               	retlw	0
 15310  0CB2  3428               	retlw	40
 15311  0CB3  3400               	retlw	0
 15312  0CB4  3428               	retlw	40
 15313  0CB5  3400               	retlw	0
 15314  0CB6  3428               	retlw	40
 15315  0CB7  3400               	retlw	0
 15316  0CB8  3428               	retlw	40
 15317  0CB9  3400               	retlw	0
 15318  0CBA  3428               	retlw	40
 15319  0CBB  3400               	retlw	0
 15320  0CBC  3428               	retlw	40
 15321  0CBD  3400               	retlw	0
 15322  0CBE  3428               	retlw	40
 15323  0CBF  3400               	retlw	0
 15324  0CC0  3428               	retlw	40
 15325  0CC1  3400               	retlw	0
 15326  0CC2  3428               	retlw	40
 15327  0CC3  3400               	retlw	0
 15328  0CC4  3428               	retlw	40
 15329  0CC5  3400               	retlw	0
 15330  0CC6  3428               	retlw	40
 15331  0CC7  3400               	retlw	0
 15332  0CC8  3428               	retlw	40
 15333  0CC9  3400               	retlw	0
 15334  0CCA  3428               	retlw	40
 15335  0CCB  3400               	retlw	0
 15336  0CCC  3428               	retlw	40
 15337  0CCD  3400               	retlw	0
 15338  0CCE  3428               	retlw	40
 15339  0CCF  3400               	retlw	0
 15340  0CD0  3428               	retlw	40
 15341  0CD1  3400               	retlw	0
 15342  0CD2  3428               	retlw	40
 15343  0CD3  3400               	retlw	0
 15344  0CD4  3428               	retlw	40
 15345  0CD5  3400               	retlw	0
 15346  0CD6  3428               	retlw	40
 15347  0CD7  3400               	retlw	0
 15348  0CD8  3428               	retlw	40
 15349  0CD9  3400               	retlw	0
 15350  0CDA  3428               	retlw	40
 15351  0CDB  3400               	retlw	0
 15352  0CDC  3428               	retlw	40
 15353  0CDD  3400               	retlw	0
 15354  0CDE  3428               	retlw	40
 15355  0CDF  3400               	retlw	0
 15356  0CE0  3428               	retlw	40
 15357  0CE1  3400               	retlw	0
 15358  0CE2  3428               	retlw	40
 15359  0CE3  3400               	retlw	0
 15360  0CE4  3428               	retlw	40
 15361  0CE5  3400               	retlw	0
 15362  0CE6  3428               	retlw	40
 15363  0CE7  3400               	retlw	0
 15364  0CE8  3428               	retlw	40
 15365  0CE9  3400               	retlw	0
 15366  0CEA  3428               	retlw	40
 15367  0CEB  3400               	retlw	0
 15368  0CEC  3428               	retlw	40
 15369  0CED  3400               	retlw	0
 15370  0CEE  3428               	retlw	40
 15371  0CEF  3400               	retlw	0
 15372  0CF0  3428               	retlw	40
 15373  0CF1  3400               	retlw	0
 15374  0CF2  3428               	retlw	40
 15375  0CF3  3400               	retlw	0
 15376  0CF4  3428               	retlw	40
 15377  0CF5  3400               	retlw	0
 15378  0CF6  3428               	retlw	40
 15379  0CF7  3400               	retlw	0
 15380  0CF8  3428               	retlw	40
 15381  0CF9  3400               	retlw	0
 15382  0CFA  3428               	retlw	40
 15383  0CFB  3400               	retlw	0
 15384  0CFC  3428               	retlw	40
 15385  0CFD  3400               	retlw	0
 15386  0CFE  3428               	retlw	40
 15387  0CFF  3400               	retlw	0
 15388  0D00  3428               	retlw	40
 15389  0D01  3400               	retlw	0
 15390  0D02  3428               	retlw	40
 15391  0D03  3400               	retlw	0
 15392  0D04  3428               	retlw	40
 15393  0D05  3400               	retlw	0
 15394  0D06  3428               	retlw	40
 15395  0D07  3400               	retlw	0
 15396  0D08  3428               	retlw	40
 15397  0D09  3400               	retlw	0
 15398  0D0A  3428               	retlw	40
 15399  0D0B  3400               	retlw	0
 15400  0D0C  3428               	retlw	40
 15401  0D0D  3400               	retlw	0
 15402  0D0E  3428               	retlw	40
 15403  0D0F  3400               	retlw	0
 15404  0D10  3428               	retlw	40
 15405  0D11  3400               	retlw	0
 15406  0D12  3428               	retlw	40
 15407  0D13  3400               	retlw	0
 15408  0D14  3428               	retlw	40
 15409  0D15  3400               	retlw	0
 15410  0D16  3428               	retlw	40
 15411  0D17  3400               	retlw	0
 15412  0D18  3428               	retlw	40
 15413  0D19  3400               	retlw	0
 15414  0D1A  3428               	retlw	40
 15415  0D1B  3400               	retlw	0
 15416  0D1C  3428               	retlw	40
 15417  0D1D  3400               	retlw	0
 15418  0D1E  3428               	retlw	40
 15419  0D1F  3400               	retlw	0
 15420  0D20  3428               	retlw	40
 15421  0D21  3400               	retlw	0
 15422  0D22  3428               	retlw	40
 15423  0D23  3400               	retlw	0
 15424  0D24  3428               	retlw	40
 15425  0D25  3400               	retlw	0
 15426  0D26  3428               	retlw	40
 15427  0D27  3400               	retlw	0
 15428  0D28  3428               	retlw	40
 15429  0D29  3400               	retlw	0
 15430  0D2A  3428               	retlw	40
 15431  0D2B  3400               	retlw	0
 15432  0D2C  3428               	retlw	40
 15433  0D2D  3400               	retlw	0
 15434  0D2E  3428               	retlw	40
 15435  0D2F  3400               	retlw	0
 15436  0D30  3428               	retlw	40
 15437  0D31  3400               	retlw	0
 15438  0D32  3428               	retlw	40
 15439  0D33  3400               	retlw	0
 15440  0D34  3428               	retlw	40
 15441  0D35  3400               	retlw	0
 15442  0D36  3428               	retlw	40
 15443  0D37  3400               	retlw	0
 15444  0D38  3428               	retlw	40
 15445  0D39  3400               	retlw	0
 15446  0D3A  3427               	retlw	39
 15447  0D3B  3400               	retlw	0
 15448  0D3C  3427               	retlw	39
 15449  0D3D  3400               	retlw	0
 15450  0D3E  3427               	retlw	39
 15451  0D3F  3400               	retlw	0
 15452  0D40  3427               	retlw	39
 15453  0D41  3400               	retlw	0
 15454  0D42  3427               	retlw	39
 15455  0D43  3400               	retlw	0
 15456  0D44  3427               	retlw	39
 15457  0D45  3400               	retlw	0
 15458  0D46  3427               	retlw	39
 15459  0D47  3400               	retlw	0
 15460  0D48  3427               	retlw	39
 15461  0D49  3400               	retlw	0
 15462  0D4A  3427               	retlw	39
 15463  0D4B  3400               	retlw	0
 15464  0D4C  3427               	retlw	39
 15465  0D4D  3400               	retlw	0
 15466  0D4E  3427               	retlw	39
 15467  0D4F  3400               	retlw	0
 15468  0D50  3427               	retlw	39
 15469  0D51  3400               	retlw	0
 15470  0D52  3427               	retlw	39
 15471  0D53  3400               	retlw	0
 15472  0D54  3427               	retlw	39
 15473  0D55  3400               	retlw	0
 15474  0D56  3427               	retlw	39
 15475  0D57  3400               	retlw	0
 15476  0D58  3427               	retlw	39
 15477  0D59  3400               	retlw	0
 15478  0D5A  3427               	retlw	39
 15479  0D5B  3400               	retlw	0
 15480  0D5C  3427               	retlw	39
 15481  0D5D  3400               	retlw	0
 15482  0D5E  3427               	retlw	39
 15483  0D5F  3400               	retlw	0
 15484  0D60  3427               	retlw	39
 15485  0D61  3400               	retlw	0
 15486  0D62  3427               	retlw	39
 15487  0D63  3400               	retlw	0
 15488  0D64  3427               	retlw	39
 15489  0D65  3400               	retlw	0
 15490  0D66  3427               	retlw	39
 15491  0D67  3400               	retlw	0
 15492  0D68  3427               	retlw	39
 15493  0D69  3400               	retlw	0
 15494  0D6A  3427               	retlw	39
 15495  0D6B  3400               	retlw	0
 15496  0D6C  3427               	retlw	39
 15497  0D6D  3400               	retlw	0
 15498  0D6E  3427               	retlw	39
 15499  0D6F  3400               	retlw	0
 15500  0D70  3427               	retlw	39
 15501  0D71  3400               	retlw	0
 15502  0D72  3427               	retlw	39
 15503  0D73  3400               	retlw	0
 15504  0D74  3427               	retlw	39
 15505  0D75  3400               	retlw	0
 15506  0D76  3427               	retlw	39
 15507  0D77  3400               	retlw	0
 15508  0D78  3427               	retlw	39
 15509  0D79  3400               	retlw	0
 15510  0D7A  3427               	retlw	39
 15511  0D7B  3400               	retlw	0
 15512  0D7C  3427               	retlw	39
 15513  0D7D  3400               	retlw	0
 15514  0D7E  3427               	retlw	39
 15515  0D7F  3400               	retlw	0
 15516  0D80  3427               	retlw	39
 15517  0D81  3400               	retlw	0
 15518  0D82  3427               	retlw	39
 15519  0D83  3400               	retlw	0
 15520  0D84  3427               	retlw	39
 15521  0D85  3400               	retlw	0
 15522  0D86  3427               	retlw	39
 15523  0D87  3400               	retlw	0
 15524  0D88  3427               	retlw	39
 15525  0D89  3400               	retlw	0
 15526  0D8A  3427               	retlw	39
 15527  0D8B  3400               	retlw	0
 15528  0D8C  3427               	retlw	39
 15529  0D8D  3400               	retlw	0
 15530  0D8E  3427               	retlw	39
 15531  0D8F  3400               	retlw	0
 15532  0D90  3427               	retlw	39
 15533  0D91  3400               	retlw	0
 15534  0D92  3427               	retlw	39
 15535  0D93  3400               	retlw	0
 15536  0D94  3427               	retlw	39
 15537  0D95  3400               	retlw	0
 15538  0D96  3427               	retlw	39
 15539  0D97  3400               	retlw	0
 15540  0D98  3427               	retlw	39
 15541  0D99  3400               	retlw	0
 15542  0D9A  3427               	retlw	39
 15543  0D9B  3400               	retlw	0
 15544  0D9C  3427               	retlw	39
 15545  0D9D  3400               	retlw	0
 15546  0D9E  3427               	retlw	39
 15547  0D9F  3400               	retlw	0
 15548  0DA0  3427               	retlw	39
 15549  0DA1  3400               	retlw	0
 15550  0DA2  3427               	retlw	39
 15551  0DA3  3400               	retlw	0
 15552  0DA4  3427               	retlw	39
 15553  0DA5  3400               	retlw	0
 15554  0DA6  3427               	retlw	39
 15555  0DA7  3400               	retlw	0
 15556  0DA8  3427               	retlw	39
 15557  0DA9  3400               	retlw	0
 15558  0DAA  3427               	retlw	39
 15559  0DAB  3400               	retlw	0
 15560  0DAC  3427               	retlw	39
 15561  0DAD  3400               	retlw	0
 15562  0DAE  3427               	retlw	39
 15563  0DAF  3400               	retlw	0
 15564  0DB0  3427               	retlw	39
 15565  0DB1  3400               	retlw	0
 15566  0DB2  3427               	retlw	39
 15567  0DB3  3400               	retlw	0
 15568  0DB4  3427               	retlw	39
 15569  0DB5  3400               	retlw	0
 15570  0DB6  3427               	retlw	39
 15571  0DB7  3400               	retlw	0
 15572  0DB8  3427               	retlw	39
 15573  0DB9  3400               	retlw	0
 15574  0DBA  3427               	retlw	39
 15575  0DBB  3400               	retlw	0
 15576  0DBC  3427               	retlw	39
 15577  0DBD  3400               	retlw	0
 15578  0DBE  3427               	retlw	39
 15579  0DBF  3400               	retlw	0
 15580  0DC0  3427               	retlw	39
 15581  0DC1  3400               	retlw	0
 15582  0DC2  3427               	retlw	39
 15583  0DC3  3400               	retlw	0
 15584  0DC4  3427               	retlw	39
 15585  0DC5  3400               	retlw	0
 15586  0DC6  3427               	retlw	39
 15587  0DC7  3400               	retlw	0
 15588  0DC8  3427               	retlw	39
 15589  0DC9  3400               	retlw	0
 15590  0DCA  3427               	retlw	39
 15591  0DCB  3400               	retlw	0
 15592  0DCC  3427               	retlw	39
 15593  0DCD  3400               	retlw	0
 15594  0DCE  3427               	retlw	39
 15595  0DCF  3400               	retlw	0
 15596  0DD0  3427               	retlw	39
 15597  0DD1  3400               	retlw	0
 15598  0DD2  3427               	retlw	39
 15599  0DD3  3400               	retlw	0
 15600  0DD4  3427               	retlw	39
 15601  0DD5  3400               	retlw	0
 15602  0DD6  3427               	retlw	39
 15603  0DD7  3400               	retlw	0
 15604  0DD8  3427               	retlw	39
 15605  0DD9  3400               	retlw	0
 15606  0DDA  3427               	retlw	39
 15607  0DDB  3400               	retlw	0
 15608  0DDC  3427               	retlw	39
 15609  0DDD  3400               	retlw	0
 15610  0DDE  3427               	retlw	39
 15611  0DDF  3400               	retlw	0
 15612  0DE0  3427               	retlw	39
 15613  0DE1  3400               	retlw	0
 15614  0DE2  3426               	retlw	38
 15615  0DE3  3400               	retlw	0
 15616  0DE4  3426               	retlw	38
 15617  0DE5  3400               	retlw	0
 15618  0DE6  3426               	retlw	38
 15619  0DE7  3400               	retlw	0
 15620  0DE8  3426               	retlw	38
 15621  0DE9  3400               	retlw	0
 15622  0DEA  3426               	retlw	38
 15623  0DEB  3400               	retlw	0
 15624  0DEC  3426               	retlw	38
 15625  0DED  3400               	retlw	0
 15626  0DEE  3426               	retlw	38
 15627  0DEF  3400               	retlw	0
 15628  0DF0  3426               	retlw	38
 15629  0DF1  3400               	retlw	0
 15630  0DF2  3426               	retlw	38
 15631  0DF3  3400               	retlw	0
 15632  0DF4  3426               	retlw	38
 15633  0DF5  3400               	retlw	0
 15634  0DF6  3426               	retlw	38
 15635  0DF7  3400               	retlw	0
 15636  0DF8  3426               	retlw	38
 15637  0DF9  3400               	retlw	0
 15638  0DFA  3426               	retlw	38
 15639  0DFB  3400               	retlw	0
 15640  0DFC  3426               	retlw	38
 15641  0DFD  3400               	retlw	0
 15642  0DFE  3426               	retlw	38
 15643  0DFF  3400               	retlw	0
 15644  0E00  3426               	retlw	38
 15645  0E01  3400               	retlw	0
 15646  0E02  3426               	retlw	38
 15647  0E03  3400               	retlw	0
 15648  0E04  3426               	retlw	38
 15649  0E05  3400               	retlw	0
 15650  0E06  3426               	retlw	38
 15651  0E07  3400               	retlw	0
 15652  0E08  3426               	retlw	38
 15653  0E09  3400               	retlw	0
 15654  0E0A  3426               	retlw	38
 15655  0E0B  3400               	retlw	0
 15656  0E0C  3426               	retlw	38
 15657  0E0D  3400               	retlw	0
 15658  0E0E  3426               	retlw	38
 15659  0E0F  3400               	retlw	0
 15660  0E10  3426               	retlw	38
 15661  0E11  3400               	retlw	0
 15662  0E12  3426               	retlw	38
 15663  0E13  3400               	retlw	0
 15664  0E14  3426               	retlw	38
 15665  0E15  3400               	retlw	0
 15666  0E16  3426               	retlw	38
 15667  0E17  3400               	retlw	0
 15668  0E18  3426               	retlw	38
 15669  0E19  3400               	retlw	0
 15670  0E1A  3426               	retlw	38
 15671  0E1B  3400               	retlw	0
 15672  0E1C  3426               	retlw	38
 15673  0E1D  3400               	retlw	0
 15674  0E1E  3426               	retlw	38
 15675  0E1F  3400               	retlw	0
 15676  0E20  3426               	retlw	38
 15677  0E21  3400               	retlw	0
 15678  0E22  3426               	retlw	38
 15679  0E23  3400               	retlw	0
 15680  0E24  3426               	retlw	38
 15681  0E25  3400               	retlw	0
 15682  0E26  3426               	retlw	38
 15683  0E27  3400               	retlw	0
 15684  0E28  3426               	retlw	38
 15685  0E29  3400               	retlw	0
 15686  0E2A  3426               	retlw	38
 15687  0E2B  3400               	retlw	0
 15688  0E2C  3426               	retlw	38
 15689  0E2D  3400               	retlw	0
 15690  0E2E  3426               	retlw	38
 15691  0E2F  3400               	retlw	0
 15692  0E30  3426               	retlw	38
 15693  0E31  3400               	retlw	0
 15694  0E32  3426               	retlw	38
 15695  0E33  3400               	retlw	0
 15696  0E34  3426               	retlw	38
 15697  0E35  3400               	retlw	0
 15698  0E36  3426               	retlw	38
 15699  0E37  3400               	retlw	0
 15700  0E38  3426               	retlw	38
 15701  0E39  3400               	retlw	0
 15702  0E3A  3426               	retlw	38
 15703  0E3B  3400               	retlw	0
 15704  0E3C  3426               	retlw	38
 15705  0E3D  3400               	retlw	0
 15706  0E3E  3426               	retlw	38
 15707  0E3F  3400               	retlw	0
 15708  0E40  3426               	retlw	38
 15709  0E41  3400               	retlw	0
 15710  0E42  3426               	retlw	38
 15711  0E43  3400               	retlw	0
 15712  0E44  3426               	retlw	38
 15713  0E45  3400               	retlw	0
 15714  0E46  3426               	retlw	38
 15715  0E47  3400               	retlw	0
 15716  0E48  3426               	retlw	38
 15717  0E49  3400               	retlw	0
 15718  0E4A  3426               	retlw	38
 15719  0E4B  3400               	retlw	0
 15720  0E4C  3426               	retlw	38
 15721  0E4D  3400               	retlw	0
 15722  0E4E  3426               	retlw	38
 15723  0E4F  3400               	retlw	0
 15724  0E50  3426               	retlw	38
 15725  0E51  3400               	retlw	0
 15726  0E52  3426               	retlw	38
 15727  0E53  3400               	retlw	0
 15728  0E54  3426               	retlw	38
 15729  0E55  3400               	retlw	0
 15730  0E56  3426               	retlw	38
 15731  0E57  3400               	retlw	0
 15732  0E58  3426               	retlw	38
 15733  0E59  3400               	retlw	0
 15734  0E5A  3426               	retlw	38
 15735  0E5B  3400               	retlw	0
 15736  0E5C  3426               	retlw	38
 15737  0E5D  3400               	retlw	0
 15738  0E5E  3426               	retlw	38
 15739  0E5F  3400               	retlw	0
 15740  0E60  3426               	retlw	38
 15741  0E61  3400               	retlw	0
 15742  0E62  3426               	retlw	38
 15743  0E63  3400               	retlw	0
 15744  0E64  3426               	retlw	38
 15745  0E65  3400               	retlw	0
 15746  0E66  3426               	retlw	38
 15747  0E67  3400               	retlw	0
 15748  0E68  3426               	retlw	38
 15749  0E69  3400               	retlw	0
 15750  0E6A  3426               	retlw	38
 15751  0E6B  3400               	retlw	0
 15752  0E6C  3426               	retlw	38
 15753  0E6D  3400               	retlw	0
 15754  0E6E  3426               	retlw	38
 15755  0E6F  3400               	retlw	0
 15756  0E70  3426               	retlw	38
 15757  0E71  3400               	retlw	0
 15758  0E72  3426               	retlw	38
 15759  0E73  3400               	retlw	0
 15760  0E74  3426               	retlw	38
 15761  0E75  3400               	retlw	0
 15762  0E76  3426               	retlw	38
 15763  0E77  3400               	retlw	0
 15764  0E78  3426               	retlw	38
 15765  0E79  3400               	retlw	0
 15766  0E7A  3426               	retlw	38
 15767  0E7B  3400               	retlw	0
 15768  0E7C  3426               	retlw	38
 15769  0E7D  3400               	retlw	0
 15770  0E7E  3426               	retlw	38
 15771  0E7F  3400               	retlw	0
 15772  0E80  3426               	retlw	38
 15773  0E81  3400               	retlw	0
 15774  0E82  3426               	retlw	38
 15775  0E83  3400               	retlw	0
 15776  0E84  3426               	retlw	38
 15777  0E85  3400               	retlw	0
 15778  0E86  3426               	retlw	38
 15779  0E87  3400               	retlw	0
 15780  0E88  3426               	retlw	38
 15781  0E89  3400               	retlw	0
 15782  0E8A  3426               	retlw	38
 15783  0E8B  3400               	retlw	0
 15784  0E8C  3426               	retlw	38
 15785  0E8D  3400               	retlw	0
 15786  0E8E  3426               	retlw	38
 15787  0E8F  3400               	retlw	0
 15788  0E90  3426               	retlw	38
 15789  0E91  3400               	retlw	0
 15790  0E92  3426               	retlw	38
 15791  0E93  3400               	retlw	0
 15792  0E94  3426               	retlw	38
 15793  0E95  3400               	retlw	0
 15794  0E96  3426               	retlw	38
 15795  0E97  3400               	retlw	0
 15796  0E98  3425               	retlw	37
 15797  0E99  3400               	retlw	0
 15798  0E9A  3425               	retlw	37
 15799  0E9B  3400               	retlw	0
 15800  0E9C  3425               	retlw	37
 15801  0E9D  3400               	retlw	0
 15802  0E9E  3425               	retlw	37
 15803  0E9F  3400               	retlw	0
 15804  0EA0  3425               	retlw	37
 15805  0EA1  3400               	retlw	0
 15806  0EA2  3425               	retlw	37
 15807  0EA3  3400               	retlw	0
 15808  0EA4  3425               	retlw	37
 15809  0EA5  3400               	retlw	0
 15810  0EA6  3425               	retlw	37
 15811  0EA7  3400               	retlw	0
 15812  0EA8  3425               	retlw	37
 15813  0EA9  3400               	retlw	0
 15814  0EAA  3425               	retlw	37
 15815  0EAB  3400               	retlw	0
 15816  0EAC  3425               	retlw	37
 15817  0EAD  3400               	retlw	0
 15818  0EAE  3425               	retlw	37
 15819  0EAF  3400               	retlw	0
 15820  0EB0  3425               	retlw	37
 15821  0EB1  3400               	retlw	0
 15822  0EB2  3425               	retlw	37
 15823  0EB3  3400               	retlw	0
 15824  0EB4  3425               	retlw	37
 15825  0EB5  3400               	retlw	0
 15826  0EB6  3425               	retlw	37
 15827  0EB7  3400               	retlw	0
 15828  0EB8  3425               	retlw	37
 15829  0EB9  3400               	retlw	0
 15830  0EBA  3425               	retlw	37
 15831  0EBB  3400               	retlw	0
 15832  0EBC  3425               	retlw	37
 15833  0EBD  3400               	retlw	0
 15834  0EBE  3425               	retlw	37
 15835  0EBF  3400               	retlw	0
 15836  0EC0  3425               	retlw	37
 15837  0EC1  3400               	retlw	0
 15838  0EC2  3425               	retlw	37
 15839  0EC3  3400               	retlw	0
 15840  0EC4  3425               	retlw	37
 15841  0EC5  3400               	retlw	0
 15842  0EC6  3425               	retlw	37
 15843  0EC7  3400               	retlw	0
 15844  0EC8  3425               	retlw	37
 15845  0EC9  3400               	retlw	0
 15846  0ECA  3425               	retlw	37
 15847  0ECB  3400               	retlw	0
 15848  0ECC  3425               	retlw	37
 15849  0ECD  3400               	retlw	0
 15850  0ECE  3425               	retlw	37
 15851  0ECF  3400               	retlw	0
 15852  0ED0  3425               	retlw	37
 15853  0ED1  3400               	retlw	0
 15854  0ED2  3425               	retlw	37
 15855  0ED3  3400               	retlw	0
 15856  0ED4  3425               	retlw	37
 15857  0ED5  3400               	retlw	0
 15858  0ED6  3425               	retlw	37
 15859  0ED7  3400               	retlw	0
 15860  0ED8  3425               	retlw	37
 15861  0ED9  3400               	retlw	0
 15862  0EDA  3425               	retlw	37
 15863  0EDB  3400               	retlw	0
 15864  0EDC  3425               	retlw	37
 15865  0EDD  3400               	retlw	0
 15866  0EDE  3425               	retlw	37
 15867  0EDF  3400               	retlw	0
 15868  0EE0  3425               	retlw	37
 15869  0EE1  3400               	retlw	0
 15870  0EE2  3425               	retlw	37
 15871  0EE3  3400               	retlw	0
 15872  0EE4  3425               	retlw	37
 15873  0EE5  3400               	retlw	0
 15874  0EE6  3425               	retlw	37
 15875  0EE7  3400               	retlw	0
 15876  0EE8  3425               	retlw	37
 15877  0EE9  3400               	retlw	0
 15878  0EEA  3425               	retlw	37
 15879  0EEB  3400               	retlw	0
 15880  0EEC  3425               	retlw	37
 15881  0EED  3400               	retlw	0
 15882  0EEE  3425               	retlw	37
 15883  0EEF  3400               	retlw	0
 15884  0EF0  3425               	retlw	37
 15885  0EF1  3400               	retlw	0
 15886  0EF2  3425               	retlw	37
 15887  0EF3  3400               	retlw	0
 15888  0EF4  3425               	retlw	37
 15889  0EF5  3400               	retlw	0
 15890  0EF6  3425               	retlw	37
 15891  0EF7  3400               	retlw	0
 15892  0EF8  3425               	retlw	37
 15893  0EF9  3400               	retlw	0
 15894  0EFA  3425               	retlw	37
 15895  0EFB  3400               	retlw	0
 15896  0EFC  3425               	retlw	37
 15897  0EFD  3400               	retlw	0
 15898  0EFE  3425               	retlw	37
 15899  0EFF  3400               	retlw	0
 15900  0F00  3425               	retlw	37
 15901  0F01  3400               	retlw	0
 15902  0F02  3425               	retlw	37
 15903  0F03  3400               	retlw	0
 15904  0F04  3425               	retlw	37
 15905  0F05  3400               	retlw	0
 15906  0F06  3425               	retlw	37
 15907  0F07  3400               	retlw	0
 15908  0F08  3425               	retlw	37
 15909  0F09  3400               	retlw	0
 15910  0F0A  3425               	retlw	37
 15911  0F0B  3400               	retlw	0
 15912  0F0C  3425               	retlw	37
 15913  0F0D  3400               	retlw	0
 15914  0F0E  3425               	retlw	37
 15915  0F0F  3400               	retlw	0
 15916  0F10  3425               	retlw	37
 15917  0F11  3400               	retlw	0
 15918  0F12  3425               	retlw	37
 15919  0F13  3400               	retlw	0
 15920  0F14  3425               	retlw	37
 15921  0F15  3400               	retlw	0
 15922  0F16  3425               	retlw	37
 15923  0F17  3400               	retlw	0
 15924  0F18  3425               	retlw	37
 15925  0F19  3400               	retlw	0
 15926  0F1A  3425               	retlw	37
 15927  0F1B  3400               	retlw	0
 15928  0F1C  3425               	retlw	37
 15929  0F1D  3400               	retlw	0
 15930  0F1E  3425               	retlw	37
 15931  0F1F  3400               	retlw	0
 15932  0F20  3425               	retlw	37
 15933  0F21  3400               	retlw	0
 15934  0F22  3425               	retlw	37
 15935  0F23  3400               	retlw	0
 15936  0F24  3425               	retlw	37
 15937  0F25  3400               	retlw	0
 15938  0F26  3425               	retlw	37
 15939  0F27  3400               	retlw	0
 15940  0F28  3425               	retlw	37
 15941  0F29  3400               	retlw	0
 15942  0F2A  3425               	retlw	37
 15943  0F2B  3400               	retlw	0
 15944  0F2C  3425               	retlw	37
 15945  0F2D  3400               	retlw	0
 15946  0F2E  3425               	retlw	37
 15947  0F2F  3400               	retlw	0
 15948  0F30  3425               	retlw	37
 15949  0F31  3400               	retlw	0
 15950  0F32  3425               	retlw	37
 15951  0F33  3400               	retlw	0
 15952  0F34  3425               	retlw	37
 15953  0F35  3400               	retlw	0
 15954  0F36  3425               	retlw	37
 15955  0F37  3400               	retlw	0
 15956  0F38  3425               	retlw	37
 15957  0F39  3400               	retlw	0
 15958  0F3A  3425               	retlw	37
 15959  0F3B  3400               	retlw	0
 15960  0F3C  3425               	retlw	37
 15961  0F3D  3400               	retlw	0
 15962  0F3E  3425               	retlw	37
 15963  0F3F  3400               	retlw	0
 15964  0F40  3425               	retlw	37
 15965  0F41  3400               	retlw	0
 15966  0F42  3425               	retlw	37
 15967  0F43  3400               	retlw	0
 15968  0F44  3425               	retlw	37
 15969  0F45  3400               	retlw	0
 15970  0F46  3425               	retlw	37
 15971  0F47  3400               	retlw	0
 15972  0F48  3425               	retlw	37
 15973  0F49  3400               	retlw	0
 15974  0F4A  3425               	retlw	37
 15975  0F4B  3400               	retlw	0
 15976  0F4C  3425               	retlw	37
 15977  0F4D  3400               	retlw	0
 15978  0F4E  3425               	retlw	37
 15979  0F4F  3400               	retlw	0
 15980  0F50  3425               	retlw	37
 15981  0F51  3400               	retlw	0
 15982  0F52  3425               	retlw	37
 15983  0F53  3400               	retlw	0
 15984  0F54  3425               	retlw	37
 15985  0F55  3400               	retlw	0
 15986  0F56  3425               	retlw	37
 15987  0F57  3400               	retlw	0
 15988  0F58  3425               	retlw	37
 15989  0F59  3400               	retlw	0
 15990  0F5A  3425               	retlw	37
 15991  0F5B  3400               	retlw	0
 15992  0F5C  3425               	retlw	37
 15993  0F5D  3400               	retlw	0
 15994  0F5E  3424               	retlw	36
 15995  0F5F  3400               	retlw	0
 15996  0F60  3424               	retlw	36
 15997  0F61  3400               	retlw	0
 15998  0F62  3424               	retlw	36
 15999  0F63  3400               	retlw	0
 16000  0F64  3424               	retlw	36
 16001  0F65  3400               	retlw	0
 16002  0F66  3424               	retlw	36
 16003  0F67  3400               	retlw	0
 16004  0F68  3424               	retlw	36
 16005  0F69  3400               	retlw	0
 16006  0F6A  3424               	retlw	36
 16007  0F6B  3400               	retlw	0
 16008  0F6C  3424               	retlw	36
 16009  0F6D  3400               	retlw	0
 16010  0F6E  3424               	retlw	36
 16011  0F6F  3400               	retlw	0
 16012  0F70  3424               	retlw	36
 16013  0F71  3400               	retlw	0
 16014  0F72  3424               	retlw	36
 16015  0F73  3400               	retlw	0
 16016  0F74  3424               	retlw	36
 16017  0F75  3400               	retlw	0
 16018  0F76  3424               	retlw	36
 16019  0F77  3400               	retlw	0
 16020  0F78  3424               	retlw	36
 16021  0F79  3400               	retlw	0
 16022  0F7A  3424               	retlw	36
 16023  0F7B  3400               	retlw	0
 16024  0F7C  3424               	retlw	36
 16025  0F7D  3400               	retlw	0
 16026  0F7E  3424               	retlw	36
 16027  0F7F  3400               	retlw	0
 16028  0F80  3424               	retlw	36
 16029  0F81  3400               	retlw	0
 16030  0F82  3424               	retlw	36
 16031  0F83  3400               	retlw	0
 16032  0F84  3424               	retlw	36
 16033  0F85  3400               	retlw	0
 16034  0F86  3424               	retlw	36
 16035  0F87  3400               	retlw	0
 16036  0F88  3424               	retlw	36
 16037  0F89  3400               	retlw	0
 16038  0F8A  3424               	retlw	36
 16039  0F8B  3400               	retlw	0
 16040  0F8C  3424               	retlw	36
 16041  0F8D  3400               	retlw	0
 16042  0F8E  3424               	retlw	36
 16043  0F8F  3400               	retlw	0
 16044  0F90  3424               	retlw	36
 16045  0F91  3400               	retlw	0
 16046  0F92  3424               	retlw	36
 16047  0F93  3400               	retlw	0
 16048  0F94  3424               	retlw	36
 16049  0F95  3400               	retlw	0
 16050  0F96  3424               	retlw	36
 16051  0F97  3400               	retlw	0
 16052  0F98  3424               	retlw	36
 16053  0F99  3400               	retlw	0
 16054  0F9A  3424               	retlw	36
 16055  0F9B  3400               	retlw	0
 16056  0F9C  3424               	retlw	36
 16057  0F9D  3400               	retlw	0
 16058  0F9E  3424               	retlw	36
 16059  0F9F  3400               	retlw	0
 16060  0FA0  3424               	retlw	36
 16061  0FA1  3400               	retlw	0
 16062  0FA2  3424               	retlw	36
 16063  0FA3  3400               	retlw	0
 16064  0FA4  3424               	retlw	36
 16065  0FA5  3400               	retlw	0
 16066  0FA6  3424               	retlw	36
 16067  0FA7  3400               	retlw	0
 16068  0FA8  3424               	retlw	36
 16069  0FA9  3400               	retlw	0
 16070  0FAA  3424               	retlw	36
 16071  0FAB  3400               	retlw	0
 16072  0FAC  3424               	retlw	36
 16073  0FAD  3400               	retlw	0
 16074  0FAE  3424               	retlw	36
 16075  0FAF  3400               	retlw	0
 16076  0FB0  3424               	retlw	36
 16077  0FB1  3400               	retlw	0
 16078  0FB2  3424               	retlw	36
 16079  0FB3  3400               	retlw	0
 16080  0FB4  3424               	retlw	36
 16081  0FB5  3400               	retlw	0
 16082  0FB6  3424               	retlw	36
 16083  0FB7  3400               	retlw	0
 16084  0FB8  3424               	retlw	36
 16085  0FB9  3400               	retlw	0
 16086  0FBA  3424               	retlw	36
 16087  0FBB  3400               	retlw	0
 16088  0FBC  3424               	retlw	36
 16089  0FBD  3400               	retlw	0
 16090  0FBE  3424               	retlw	36
 16091  0FBF  3400               	retlw	0
 16092  0FC0  3424               	retlw	36
 16093  0FC1  3400               	retlw	0
 16094  0FC2  3424               	retlw	36
 16095  0FC3  3400               	retlw	0
 16096  0FC4  3424               	retlw	36
 16097  0FC5  3400               	retlw	0
 16098  0FC6  3424               	retlw	36
 16099  0FC7  3400               	retlw	0
 16100  0FC8  3424               	retlw	36
 16101  0FC9  3400               	retlw	0
 16102  0FCA  3424               	retlw	36
 16103  0FCB  3400               	retlw	0
 16104  0FCC  3424               	retlw	36
 16105  0FCD  3400               	retlw	0
 16106  0FCE  3424               	retlw	36
 16107  0FCF  3400               	retlw	0
 16108  0FD0  3424               	retlw	36
 16109  0FD1  3400               	retlw	0
 16110  0FD2  3424               	retlw	36
 16111  0FD3  3400               	retlw	0
 16112  0FD4  3424               	retlw	36
 16113  0FD5  3400               	retlw	0
 16114  0FD6  3424               	retlw	36
 16115  0FD7  3400               	retlw	0
 16116  0FD8  3424               	retlw	36
 16117  0FD9  3400               	retlw	0
 16118  0FDA  3424               	retlw	36
 16119  0FDB  3400               	retlw	0
 16120  0FDC  3424               	retlw	36
 16121  0FDD  3400               	retlw	0
 16122  0FDE  3424               	retlw	36
 16123  0FDF  3400               	retlw	0
 16124  0FE0  3424               	retlw	36
 16125  0FE1  3400               	retlw	0
 16126  0FE2  3424               	retlw	36
 16127  0FE3  3400               	retlw	0
 16128  0FE4  3424               	retlw	36
 16129  0FE5  3400               	retlw	0
 16130  0FE6  3424               	retlw	36
 16131  0FE7  3400               	retlw	0
 16132  0FE8  3424               	retlw	36
 16133  0FE9  3400               	retlw	0
 16134  0FEA  3424               	retlw	36
 16135  0FEB  3400               	retlw	0
 16136  0FEC  3424               	retlw	36
 16137  0FED  3400               	retlw	0
 16138  0FEE  3424               	retlw	36
 16139  0FEF  3400               	retlw	0
 16140  0FF0  3424               	retlw	36
 16141  0FF1  3400               	retlw	0
 16142  0FF2  3424               	retlw	36
 16143  0FF3  3400               	retlw	0
 16144  0FF4  3424               	retlw	36
 16145  0FF5  3400               	retlw	0
 16146  0FF6  3424               	retlw	36
 16147  0FF7  3400               	retlw	0
 16148  0FF8  3424               	retlw	36
 16149  0FF9  3400               	retlw	0
 16150  0FFA  3424               	retlw	36
 16151  0FFB  3400               	retlw	0
 16152  0FFC  3424               	retlw	36
 16153  0FFD  3400               	retlw	0
 16154  0FFE  3424               	retlw	36
 16155  0FFF  3400               	retlw	0
 16156  1000  3424               	retlw	36
 16157  1001  3400               	retlw	0
 16158  1002  3424               	retlw	36
 16159  1003  3400               	retlw	0
 16160  1004  3424               	retlw	36
 16161  1005  3400               	retlw	0
 16162  1006  3424               	retlw	36
 16163  1007  3400               	retlw	0
 16164  1008  3424               	retlw	36
 16165  1009  3400               	retlw	0
 16166  100A  3424               	retlw	36
 16167  100B  3400               	retlw	0
 16168  100C  3424               	retlw	36
 16169  100D  3400               	retlw	0
 16170  100E  3424               	retlw	36
 16171  100F  3400               	retlw	0
 16172  1010  3424               	retlw	36
 16173  1011  3400               	retlw	0
 16174  1012  3424               	retlw	36
 16175  1013  3400               	retlw	0
 16176  1014  3424               	retlw	36
 16177  1015  3400               	retlw	0
 16178  1016  3424               	retlw	36
 16179  1017  3400               	retlw	0
 16180  1018  3424               	retlw	36
 16181  1019  3400               	retlw	0
 16182  101A  3424               	retlw	36
 16183  101B  3400               	retlw	0
 16184  101C  3424               	retlw	36
 16185  101D  3400               	retlw	0
 16186  101E  3424               	retlw	36
 16187  101F  3400               	retlw	0
 16188  1020  3424               	retlw	36
 16189  1021  3400               	retlw	0
 16190  1022  3424               	retlw	36
 16191  1023  3400               	retlw	0
 16192  1024  3424               	retlw	36
 16193  1025  3400               	retlw	0
 16194  1026  3424               	retlw	36
 16195  1027  3400               	retlw	0
 16196  1028  3424               	retlw	36
 16197  1029  3400               	retlw	0
 16198  102A  3424               	retlw	36
 16199  102B  3400               	retlw	0
 16200  102C  3424               	retlw	36
 16201  102D  3400               	retlw	0
 16202  102E  3424               	retlw	36
 16203  102F  3400               	retlw	0
 16204  1030  3424               	retlw	36
 16205  1031  3400               	retlw	0
 16206  1032  3424               	retlw	36
 16207  1033  3400               	retlw	0
 16208  1034  3423               	retlw	35
 16209  1035  3400               	retlw	0
 16210  1036  3423               	retlw	35
 16211  1037  3400               	retlw	0
 16212  1038  3423               	retlw	35
 16213  1039  3400               	retlw	0
 16214  103A  3423               	retlw	35
 16215  103B  3400               	retlw	0
 16216  103C  3423               	retlw	35
 16217  103D  3400               	retlw	0
 16218  103E  3423               	retlw	35
 16219  103F  3400               	retlw	0
 16220  1040  3423               	retlw	35
 16221  1041  3400               	retlw	0
 16222  1042  3423               	retlw	35
 16223  1043  3400               	retlw	0
 16224  1044  3423               	retlw	35
 16225  1045  3400               	retlw	0
 16226  1046  3423               	retlw	35
 16227  1047  3400               	retlw	0
 16228  1048  3423               	retlw	35
 16229  1049  3400               	retlw	0
 16230  104A  3423               	retlw	35
 16231  104B  3400               	retlw	0
 16232  104C  3423               	retlw	35
 16233  104D  3400               	retlw	0
 16234  104E  3423               	retlw	35
 16235  104F  3400               	retlw	0
 16236  1050  3423               	retlw	35
 16237  1051  3400               	retlw	0
 16238  1052  3423               	retlw	35
 16239  1053  3400               	retlw	0
 16240  1054  3423               	retlw	35
 16241  1055  3400               	retlw	0
 16242  1056  3423               	retlw	35
 16243  1057  3400               	retlw	0
 16244  1058  3423               	retlw	35
 16245  1059  3400               	retlw	0
 16246  105A  3423               	retlw	35
 16247  105B  3400               	retlw	0
 16248  105C  3423               	retlw	35
 16249  105D  3400               	retlw	0
 16250  105E  3423               	retlw	35
 16251  105F  3400               	retlw	0
 16252  1060  3423               	retlw	35
 16253  1061  3400               	retlw	0
 16254  1062  3423               	retlw	35
 16255  1063  3400               	retlw	0
 16256  1064  3423               	retlw	35
 16257  1065  3400               	retlw	0
 16258  1066  3423               	retlw	35
 16259  1067  3400               	retlw	0
 16260  1068  3423               	retlw	35
 16261  1069  3400               	retlw	0
 16262  106A  3423               	retlw	35
 16263  106B  3400               	retlw	0
 16264  106C  3423               	retlw	35
 16265  106D  3400               	retlw	0
 16266  106E  3423               	retlw	35
 16267  106F  3400               	retlw	0
 16268  1070  3423               	retlw	35
 16269  1071  3400               	retlw	0
 16270  1072  3423               	retlw	35
 16271  1073  3400               	retlw	0
 16272  1074  3423               	retlw	35
 16273  1075  3400               	retlw	0
 16274  1076  3423               	retlw	35
 16275  1077  3400               	retlw	0
 16276  1078  3423               	retlw	35
 16277  1079  3400               	retlw	0
 16278  107A  3423               	retlw	35
 16279  107B  3400               	retlw	0
 16280  107C  3423               	retlw	35
 16281  107D  3400               	retlw	0
 16282  107E  3423               	retlw	35
 16283  107F  3400               	retlw	0
 16284  1080  3423               	retlw	35
 16285  1081  3400               	retlw	0
 16286  1082  3423               	retlw	35
 16287  1083  3400               	retlw	0
 16288  1084  3423               	retlw	35
 16289  1085  3400               	retlw	0
 16290  1086  3423               	retlw	35
 16291  1087  3400               	retlw	0
 16292  1088  3423               	retlw	35
 16293  1089  3400               	retlw	0
 16294  108A  3423               	retlw	35
 16295  108B  3400               	retlw	0
 16296  108C  3423               	retlw	35
 16297  108D  3400               	retlw	0
 16298  108E  3423               	retlw	35
 16299  108F  3400               	retlw	0
 16300  1090  3423               	retlw	35
 16301  1091  3400               	retlw	0
 16302  1092  3423               	retlw	35
 16303  1093  3400               	retlw	0
 16304  1094  3423               	retlw	35
 16305  1095  3400               	retlw	0
 16306  1096  3423               	retlw	35
 16307  1097  3400               	retlw	0
 16308  1098  3423               	retlw	35
 16309  1099  3400               	retlw	0
 16310  109A  3423               	retlw	35
 16311  109B  3400               	retlw	0
 16312  109C  3423               	retlw	35
 16313  109D  3400               	retlw	0
 16314  109E  3423               	retlw	35
 16315  109F  3400               	retlw	0
 16316  10A0  3423               	retlw	35
 16317  10A1  3400               	retlw	0
 16318  10A2  3423               	retlw	35
 16319  10A3  3400               	retlw	0
 16320  10A4  3423               	retlw	35
 16321  10A5  3400               	retlw	0
 16322  10A6  3423               	retlw	35
 16323  10A7  3400               	retlw	0
 16324  10A8  3423               	retlw	35
 16325  10A9  3400               	retlw	0
 16326  10AA  3423               	retlw	35
 16327  10AB  3400               	retlw	0
 16328  10AC  3423               	retlw	35
 16329  10AD  3400               	retlw	0
 16330  10AE  3423               	retlw	35
 16331  10AF  3400               	retlw	0
 16332  10B0  3423               	retlw	35
 16333  10B1  3400               	retlw	0
 16334  10B2  3423               	retlw	35
 16335  10B3  3400               	retlw	0
 16336  10B4  3423               	retlw	35
 16337  10B5  3400               	retlw	0
 16338  10B6  3423               	retlw	35
 16339  10B7  3400               	retlw	0
 16340  10B8  3423               	retlw	35
 16341  10B9  3400               	retlw	0
 16342  10BA  3423               	retlw	35
 16343  10BB  3400               	retlw	0
 16344  10BC  3423               	retlw	35
 16345  10BD  3400               	retlw	0
 16346  10BE  3423               	retlw	35
 16347  10BF  3400               	retlw	0
 16348  10C0  3423               	retlw	35
 16349  10C1  3400               	retlw	0
 16350  10C2  3423               	retlw	35
 16351  10C3  3400               	retlw	0
 16352  10C4  3423               	retlw	35
 16353  10C5  3400               	retlw	0
 16354  10C6  3423               	retlw	35
 16355  10C7  3400               	retlw	0
 16356  10C8  3423               	retlw	35
 16357  10C9  3400               	retlw	0
 16358  10CA  3423               	retlw	35
 16359  10CB  3400               	retlw	0
 16360  10CC  3423               	retlw	35
 16361  10CD  3400               	retlw	0
 16362  10CE  3423               	retlw	35
 16363  10CF  3400               	retlw	0
 16364  10D0  3423               	retlw	35
 16365  10D1  3400               	retlw	0
 16366  10D2  3423               	retlw	35
 16367  10D3  3400               	retlw	0
 16368  10D4  3423               	retlw	35
 16369  10D5  3400               	retlw	0
 16370  10D6  3423               	retlw	35
 16371  10D7  3400               	retlw	0
 16372  10D8  3423               	retlw	35
 16373  10D9  3400               	retlw	0
 16374  10DA  3423               	retlw	35
 16375  10DB  3400               	retlw	0
 16376  10DC  3423               	retlw	35
 16377  10DD  3400               	retlw	0
 16378  10DE  3423               	retlw	35
 16379  10DF  3400               	retlw	0
 16380  10E0  3423               	retlw	35
 16381  10E1  3400               	retlw	0
 16382  10E2  3423               	retlw	35
 16383  10E3  3400               	retlw	0
 16384  10E4  3423               	retlw	35
 16385  10E5  3400               	retlw	0
 16386  10E6  3423               	retlw	35
 16387  10E7  3400               	retlw	0
 16388  10E8  3423               	retlw	35
 16389  10E9  3400               	retlw	0
 16390  10EA  3423               	retlw	35
 16391  10EB  3400               	retlw	0
 16392  10EC  3423               	retlw	35
 16393  10ED  3400               	retlw	0
 16394  10EE  3423               	retlw	35
 16395  10EF  3400               	retlw	0
 16396  10F0  3423               	retlw	35
 16397  10F1  3400               	retlw	0
 16398  10F2  3423               	retlw	35
 16399  10F3  3400               	retlw	0
 16400  10F4  3423               	retlw	35
 16401  10F5  3400               	retlw	0
 16402  10F6  3423               	retlw	35
 16403  10F7  3400               	retlw	0
 16404  10F8  3423               	retlw	35
 16405  10F9  3400               	retlw	0
 16406  10FA  3423               	retlw	35
 16407  10FB  3400               	retlw	0
 16408  10FC  3423               	retlw	35
 16409  10FD  3400               	retlw	0
 16410  10FE  3423               	retlw	35
 16411  10FF  3400               	retlw	0
 16412  1100  3423               	retlw	35
 16413  1101  3400               	retlw	0
 16414  1102  3423               	retlw	35
 16415  1103  3400               	retlw	0
 16416  1104  3423               	retlw	35
 16417  1105  3400               	retlw	0
 16418  1106  3423               	retlw	35
 16419  1107  3400               	retlw	0
 16420  1108  3423               	retlw	35
 16421  1109  3400               	retlw	0
 16422  110A  3423               	retlw	35
 16423  110B  3400               	retlw	0
 16424  110C  3423               	retlw	35
 16425  110D  3400               	retlw	0
 16426  110E  3423               	retlw	35
 16427  110F  3400               	retlw	0
 16428  1110  3423               	retlw	35
 16429  1111  3400               	retlw	0
 16430  1112  3423               	retlw	35
 16431  1113  3400               	retlw	0
 16432  1114  3423               	retlw	35
 16433  1115  3400               	retlw	0
 16434  1116  3423               	retlw	35
 16435  1117  3400               	retlw	0
 16436  1118  3423               	retlw	35
 16437  1119  3400               	retlw	0
 16438  111A  3423               	retlw	35
 16439  111B  3400               	retlw	0
 16440  111C  3423               	retlw	35
 16441  111D  3400               	retlw	0
 16442  111E  3422               	retlw	34
 16443  111F  3400               	retlw	0
 16444  1120  3422               	retlw	34
 16445  1121  3400               	retlw	0
 16446  1122  3422               	retlw	34
 16447  1123  3400               	retlw	0
 16448  1124  3422               	retlw	34
 16449  1125  3400               	retlw	0
 16450  1126  3422               	retlw	34
 16451  1127  3400               	retlw	0
 16452  1128  3422               	retlw	34
 16453  1129  3400               	retlw	0
 16454  112A  3422               	retlw	34
 16455  112B  3400               	retlw	0
 16456  112C  3422               	retlw	34
 16457  112D  3400               	retlw	0
 16458  112E  3422               	retlw	34
 16459  112F  3400               	retlw	0
 16460  1130  3422               	retlw	34
 16461  1131  3400               	retlw	0
 16462  1132  3422               	retlw	34
 16463  1133  3400               	retlw	0
 16464  1134  3422               	retlw	34
 16465  1135  3400               	retlw	0
 16466  1136  3422               	retlw	34
 16467  1137  3400               	retlw	0
 16468  1138  3422               	retlw	34
 16469  1139  3400               	retlw	0
 16470  113A  3422               	retlw	34
 16471  113B  3400               	retlw	0
 16472  113C  3422               	retlw	34
 16473  113D  3400               	retlw	0
 16474  113E  3422               	retlw	34
 16475  113F  3400               	retlw	0
 16476  1140  3422               	retlw	34
 16477  1141  3400               	retlw	0
 16478  1142  3422               	retlw	34
 16479  1143  3400               	retlw	0
 16480  1144  3422               	retlw	34
 16481  1145  3400               	retlw	0
 16482  1146  3422               	retlw	34
 16483  1147  3400               	retlw	0
 16484  1148  3422               	retlw	34
 16485  1149  3400               	retlw	0
 16486  114A  3422               	retlw	34
 16487  114B  3400               	retlw	0
 16488  114C  3422               	retlw	34
 16489  114D  3400               	retlw	0
 16490  114E  3422               	retlw	34
 16491  114F  3400               	retlw	0
 16492  1150  3422               	retlw	34
 16493  1151  3400               	retlw	0
 16494  1152  3422               	retlw	34
 16495  1153  3400               	retlw	0
 16496  1154  3422               	retlw	34
 16497  1155  3400               	retlw	0
 16498  1156  3422               	retlw	34
 16499  1157  3400               	retlw	0
 16500  1158  3422               	retlw	34
 16501  1159  3400               	retlw	0
 16502  115A  3422               	retlw	34
 16503  115B  3400               	retlw	0
 16504  115C  3422               	retlw	34
 16505  115D  3400               	retlw	0
 16506  115E  3422               	retlw	34
 16507  115F  3400               	retlw	0
 16508  1160  3422               	retlw	34
 16509  1161  3400               	retlw	0
 16510  1162  3422               	retlw	34
 16511  1163  3400               	retlw	0
 16512  1164  3422               	retlw	34
 16513  1165  3400               	retlw	0
 16514  1166  3422               	retlw	34
 16515  1167  3400               	retlw	0
 16516  1168  3422               	retlw	34
 16517  1169  3400               	retlw	0
 16518  116A  3422               	retlw	34
 16519  116B  3400               	retlw	0
 16520  116C  3422               	retlw	34
 16521  116D  3400               	retlw	0
 16522  116E  3422               	retlw	34
 16523  116F  3400               	retlw	0
 16524  1170  3422               	retlw	34
 16525  1171  3400               	retlw	0
 16526  1172  3422               	retlw	34
 16527  1173  3400               	retlw	0
 16528  1174  3422               	retlw	34
 16529  1175  3400               	retlw	0
 16530  1176  3422               	retlw	34
 16531  1177  3400               	retlw	0
 16532  1178  3422               	retlw	34
 16533  1179  3400               	retlw	0
 16534  117A  3422               	retlw	34
 16535  117B  3400               	retlw	0
 16536  117C  3422               	retlw	34
 16537  117D  3400               	retlw	0
 16538  117E  3422               	retlw	34
 16539  117F  3400               	retlw	0
 16540  1180  3422               	retlw	34
 16541  1181  3400               	retlw	0
 16542  1182  3422               	retlw	34
 16543  1183  3400               	retlw	0
 16544  1184  3422               	retlw	34
 16545  1185  3400               	retlw	0
 16546  1186  3422               	retlw	34
 16547  1187  3400               	retlw	0
 16548  1188  3422               	retlw	34
 16549  1189  3400               	retlw	0
 16550  118A  3422               	retlw	34
 16551  118B  3400               	retlw	0
 16552  118C  3422               	retlw	34
 16553  118D  3400               	retlw	0
 16554  118E  3422               	retlw	34
 16555  118F  3400               	retlw	0
 16556  1190  3422               	retlw	34
 16557  1191  3400               	retlw	0
 16558  1192  3422               	retlw	34
 16559  1193  3400               	retlw	0
 16560  1194  3422               	retlw	34
 16561  1195  3400               	retlw	0
 16562  1196  3422               	retlw	34
 16563  1197  3400               	retlw	0
 16564  1198  3422               	retlw	34
 16565  1199  3400               	retlw	0
 16566  119A  3422               	retlw	34
 16567  119B  3400               	retlw	0
 16568  119C  3422               	retlw	34
 16569  119D  3400               	retlw	0
 16570  119E  3422               	retlw	34
 16571  119F  3400               	retlw	0
 16572  11A0  3422               	retlw	34
 16573  11A1  3400               	retlw	0
 16574  11A2  3422               	retlw	34
 16575  11A3  3400               	retlw	0
 16576  11A4  3422               	retlw	34
 16577  11A5  3400               	retlw	0
 16578  11A6  3422               	retlw	34
 16579  11A7  3400               	retlw	0
 16580  11A8  3422               	retlw	34
 16581  11A9  3400               	retlw	0
 16582  11AA  3422               	retlw	34
 16583  11AB  3400               	retlw	0
 16584  11AC  3422               	retlw	34
 16585  11AD  3400               	retlw	0
 16586  11AE  3422               	retlw	34
 16587  11AF  3400               	retlw	0
 16588  11B0  3422               	retlw	34
 16589  11B1  3400               	retlw	0
 16590  11B2  3422               	retlw	34
 16591  11B3  3400               	retlw	0
 16592  11B4  3422               	retlw	34
 16593  11B5  3400               	retlw	0
 16594  11B6  3422               	retlw	34
 16595  11B7  3400               	retlw	0
 16596  11B8  3422               	retlw	34
 16597  11B9  3400               	retlw	0
 16598  11BA  3422               	retlw	34
 16599  11BB  3400               	retlw	0
 16600  11BC  3422               	retlw	34
 16601  11BD  3400               	retlw	0
 16602  11BE  3422               	retlw	34
 16603  11BF  3400               	retlw	0
 16604  11C0  3422               	retlw	34
 16605  11C1  3400               	retlw	0
 16606  11C2  3422               	retlw	34
 16607  11C3  3400               	retlw	0
 16608  11C4  3422               	retlw	34
 16609  11C5  3400               	retlw	0
 16610  11C6  3422               	retlw	34
 16611  11C7  3400               	retlw	0
 16612  11C8  3422               	retlw	34
 16613  11C9  3400               	retlw	0
 16614  11CA  3422               	retlw	34
 16615  11CB  3400               	retlw	0
 16616  11CC  3422               	retlw	34
 16617  11CD  3400               	retlw	0
 16618  11CE  3422               	retlw	34
 16619  11CF  3400               	retlw	0
 16620  11D0  3422               	retlw	34
 16621  11D1  3400               	retlw	0
 16622  11D2  3422               	retlw	34
 16623  11D3  3400               	retlw	0
 16624  11D4  3422               	retlw	34
 16625  11D5  3400               	retlw	0
 16626  11D6  3422               	retlw	34
 16627  11D7  3400               	retlw	0
 16628  11D8  3422               	retlw	34
 16629  11D9  3400               	retlw	0
 16630  11DA  3422               	retlw	34
 16631  11DB  3400               	retlw	0
 16632  11DC  3422               	retlw	34
 16633  11DD  3400               	retlw	0
 16634  11DE  3422               	retlw	34
 16635  11DF  3400               	retlw	0
 16636  11E0  3422               	retlw	34
 16637  11E1  3400               	retlw	0
 16638  11E2  3422               	retlw	34
 16639  11E3  3400               	retlw	0
 16640  11E4  3422               	retlw	34
 16641  11E5  3400               	retlw	0
 16642  11E6  3422               	retlw	34
 16643  11E7  3400               	retlw	0
 16644  11E8  3422               	retlw	34
 16645  11E9  3400               	retlw	0
 16646  11EA  3422               	retlw	34
 16647  11EB  3400               	retlw	0
 16648  11EC  3422               	retlw	34
 16649  11ED  3400               	retlw	0
 16650  11EE  3422               	retlw	34
 16651  11EF  3400               	retlw	0
 16652  11F0  3422               	retlw	34
 16653  11F1  3400               	retlw	0
 16654  11F2  3422               	retlw	34
 16655  11F3  3400               	retlw	0
 16656  11F4  3422               	retlw	34
 16657  11F5  3400               	retlw	0
 16658  11F6  3422               	retlw	34
 16659  11F7  3400               	retlw	0
 16660  11F8  3422               	retlw	34
 16661  11F9  3400               	retlw	0
 16662  11FA  3422               	retlw	34
 16663  11FB  3400               	retlw	0
 16664  11FC  3422               	retlw	34
 16665  11FD  3400               	retlw	0
 16666  11FE  3422               	retlw	34
 16667  11FF  3400               	retlw	0
 16668  1200  3422               	retlw	34
 16669  1201  3400               	retlw	0
 16670  1202  3422               	retlw	34
 16671  1203  3400               	retlw	0
 16672  1204  3422               	retlw	34
 16673  1205  3400               	retlw	0
 16674  1206  3422               	retlw	34
 16675  1207  3400               	retlw	0
 16676  1208  3422               	retlw	34
 16677  1209  3400               	retlw	0
 16678  120A  3422               	retlw	34
 16679  120B  3400               	retlw	0
 16680  120C  3422               	retlw	34
 16681  120D  3400               	retlw	0
 16682  120E  3422               	retlw	34
 16683  120F  3400               	retlw	0
 16684  1210  3422               	retlw	34
 16685  1211  3400               	retlw	0
 16686  1212  3422               	retlw	34
 16687  1213  3400               	retlw	0
 16688  1214  3422               	retlw	34
 16689  1215  3400               	retlw	0
 16690  1216  3422               	retlw	34
 16691  1217  3400               	retlw	0
 16692  1218  3422               	retlw	34
 16693  1219  3400               	retlw	0
 16694  121A  3422               	retlw	34
 16695  121B  3400               	retlw	0
 16696  121C  3421               	retlw	33
 16697  121D  3400               	retlw	0
 16698  121E  3421               	retlw	33
 16699  121F  3400               	retlw	0
 16700  1220  3421               	retlw	33
 16701  1221  3400               	retlw	0
 16702  1222  3421               	retlw	33
 16703  1223  3400               	retlw	0
 16704  1224  3421               	retlw	33
 16705  1225  3400               	retlw	0
 16706  1226  3421               	retlw	33
 16707  1227  3400               	retlw	0
 16708  1228  3421               	retlw	33
 16709  1229  3400               	retlw	0
 16710  122A  3421               	retlw	33
 16711  122B  3400               	retlw	0
 16712  122C  3421               	retlw	33
 16713  122D  3400               	retlw	0
 16714  122E  3421               	retlw	33
 16715  122F  3400               	retlw	0
 16716  1230  3421               	retlw	33
 16717  1231  3400               	retlw	0
 16718  1232  3421               	retlw	33
 16719  1233  3400               	retlw	0
 16720  1234  3421               	retlw	33
 16721  1235  3400               	retlw	0
 16722  1236  3421               	retlw	33
 16723  1237  3400               	retlw	0
 16724  1238  3421               	retlw	33
 16725  1239  3400               	retlw	0
 16726  123A  3421               	retlw	33
 16727  123B  3400               	retlw	0
 16728  123C  3421               	retlw	33
 16729  123D  3400               	retlw	0
 16730  123E  3421               	retlw	33
 16731  123F  3400               	retlw	0
 16732  1240  3421               	retlw	33
 16733  1241  3400               	retlw	0
 16734  1242  3421               	retlw	33
 16735  1243  3400               	retlw	0
 16736  1244  3421               	retlw	33
 16737  1245  3400               	retlw	0
 16738  1246  3421               	retlw	33
 16739  1247  3400               	retlw	0
 16740  1248  3421               	retlw	33
 16741  1249  3400               	retlw	0
 16742  124A  3421               	retlw	33
 16743  124B  3400               	retlw	0
 16744  124C  3421               	retlw	33
 16745  124D  3400               	retlw	0
 16746  124E  3421               	retlw	33
 16747  124F  3400               	retlw	0
 16748  1250  3421               	retlw	33
 16749  1251  3400               	retlw	0
 16750  1252  3421               	retlw	33
 16751  1253  3400               	retlw	0
 16752  1254  3421               	retlw	33
 16753  1255  3400               	retlw	0
 16754  1256  3421               	retlw	33
 16755  1257  3400               	retlw	0
 16756  1258  3421               	retlw	33
 16757  1259  3400               	retlw	0
 16758  125A  3421               	retlw	33
 16759  125B  3400               	retlw	0
 16760  125C  3421               	retlw	33
 16761  125D  3400               	retlw	0
 16762  125E  3421               	retlw	33
 16763  125F  3400               	retlw	0
 16764  1260  3421               	retlw	33
 16765  1261  3400               	retlw	0
 16766  1262  3421               	retlw	33
 16767  1263  3400               	retlw	0
 16768  1264  3421               	retlw	33
 16769  1265  3400               	retlw	0
 16770  1266  3421               	retlw	33
 16771  1267  3400               	retlw	0
 16772  1268  3421               	retlw	33
 16773  1269  3400               	retlw	0
 16774  126A  3421               	retlw	33
 16775  126B  3400               	retlw	0
 16776  126C  3421               	retlw	33
 16777  126D  3400               	retlw	0
 16778  126E  3421               	retlw	33
 16779  126F  3400               	retlw	0
 16780  1270  3421               	retlw	33
 16781  1271  3400               	retlw	0
 16782  1272  3421               	retlw	33
 16783  1273  3400               	retlw	0
 16784  1274  3421               	retlw	33
 16785  1275  3400               	retlw	0
 16786  1276  3421               	retlw	33
 16787  1277  3400               	retlw	0
 16788  1278  3421               	retlw	33
 16789  1279  3400               	retlw	0
 16790  127A  3421               	retlw	33
 16791  127B  3400               	retlw	0
 16792  127C  3421               	retlw	33
 16793  127D  3400               	retlw	0
 16794  127E  3421               	retlw	33
 16795  127F  3400               	retlw	0
 16796  1280  3421               	retlw	33
 16797  1281  3400               	retlw	0
 16798  1282  3421               	retlw	33
 16799  1283  3400               	retlw	0
 16800  1284  3421               	retlw	33
 16801  1285  3400               	retlw	0
 16802  1286  3421               	retlw	33
 16803  1287  3400               	retlw	0
 16804  1288  3421               	retlw	33
 16805  1289  3400               	retlw	0
 16806  128A  3421               	retlw	33
 16807  128B  3400               	retlw	0
 16808  128C  3421               	retlw	33
 16809  128D  3400               	retlw	0
 16810  128E  3421               	retlw	33
 16811  128F  3400               	retlw	0
 16812  1290  3421               	retlw	33
 16813  1291  3400               	retlw	0
 16814  1292  3421               	retlw	33
 16815  1293  3400               	retlw	0
 16816  1294  3421               	retlw	33
 16817  1295  3400               	retlw	0
 16818  1296  3421               	retlw	33
 16819  1297  3400               	retlw	0
 16820  1298  3421               	retlw	33
 16821  1299  3400               	retlw	0
 16822  129A  3421               	retlw	33
 16823  129B  3400               	retlw	0
 16824  129C  3421               	retlw	33
 16825  129D  3400               	retlw	0
 16826  129E  3421               	retlw	33
 16827  129F  3400               	retlw	0
 16828  12A0  3421               	retlw	33
 16829  12A1  3400               	retlw	0
 16830  12A2  3421               	retlw	33
 16831  12A3  3400               	retlw	0
 16832  12A4  3421               	retlw	33
 16833  12A5  3400               	retlw	0
 16834  12A6  3421               	retlw	33
 16835  12A7  3400               	retlw	0
 16836  12A8  3421               	retlw	33
 16837  12A9  3400               	retlw	0
 16838  12AA  3421               	retlw	33
 16839  12AB  3400               	retlw	0
 16840  12AC  3421               	retlw	33
 16841  12AD  3400               	retlw	0
 16842  12AE  3421               	retlw	33
 16843  12AF  3400               	retlw	0
 16844  12B0  3421               	retlw	33
 16845  12B1  3400               	retlw	0
 16846  12B2  3421               	retlw	33
 16847  12B3  3400               	retlw	0
 16848  12B4  3421               	retlw	33
 16849  12B5  3400               	retlw	0
 16850  12B6  3421               	retlw	33
 16851  12B7  3400               	retlw	0
 16852  12B8  3421               	retlw	33
 16853  12B9  3400               	retlw	0
 16854  12BA  3421               	retlw	33
 16855  12BB  3400               	retlw	0
 16856  12BC  3421               	retlw	33
 16857  12BD  3400               	retlw	0
 16858  12BE  3421               	retlw	33
 16859  12BF  3400               	retlw	0
 16860  12C0  3421               	retlw	33
 16861  12C1  3400               	retlw	0
 16862  12C2  3421               	retlw	33
 16863  12C3  3400               	retlw	0
 16864  12C4  3421               	retlw	33
 16865  12C5  3400               	retlw	0
 16866  12C6  3421               	retlw	33
 16867  12C7  3400               	retlw	0
 16868  12C8  3421               	retlw	33
 16869  12C9  3400               	retlw	0
 16870  12CA  3421               	retlw	33
 16871  12CB  3400               	retlw	0
 16872  12CC  3421               	retlw	33
 16873  12CD  3400               	retlw	0
 16874  12CE  3421               	retlw	33
 16875  12CF  3400               	retlw	0
 16876  12D0  3421               	retlw	33
 16877  12D1  3400               	retlw	0
 16878  12D2  3421               	retlw	33
 16879  12D3  3400               	retlw	0
 16880  12D4  3421               	retlw	33
 16881  12D5  3400               	retlw	0
 16882  12D6  3421               	retlw	33
 16883  12D7  3400               	retlw	0
 16884  12D8  3421               	retlw	33
 16885  12D9  3400               	retlw	0
 16886  12DA  3421               	retlw	33
 16887  12DB  3400               	retlw	0
 16888  12DC  3421               	retlw	33
 16889  12DD  3400               	retlw	0
 16890  12DE  3421               	retlw	33
 16891  12DF  3400               	retlw	0
 16892  12E0  3421               	retlw	33
 16893  12E1  3400               	retlw	0
 16894  12E2  3421               	retlw	33
 16895  12E3  3400               	retlw	0
 16896  12E4  3421               	retlw	33
 16897  12E5  3400               	retlw	0
 16898  12E6  3421               	retlw	33
 16899  12E7  3400               	retlw	0
 16900  12E8  3421               	retlw	33
 16901  12E9  3400               	retlw	0
 16902  12EA  3421               	retlw	33
 16903  12EB  3400               	retlw	0
 16904  12EC  3421               	retlw	33
 16905  12ED  3400               	retlw	0
 16906  12EE  3421               	retlw	33
 16907  12EF  3400               	retlw	0
 16908  12F0  3421               	retlw	33
 16909  12F1  3400               	retlw	0
 16910  12F2  3421               	retlw	33
 16911  12F3  3400               	retlw	0
 16912  12F4  3421               	retlw	33
 16913  12F5  3400               	retlw	0
 16914  12F6  3421               	retlw	33
 16915  12F7  3400               	retlw	0
 16916  12F8  3421               	retlw	33
 16917  12F9  3400               	retlw	0
 16918  12FA  3421               	retlw	33
 16919  12FB  3400               	retlw	0
 16920  12FC  3421               	retlw	33
 16921  12FD  3400               	retlw	0
 16922  12FE  3421               	retlw	33
 16923  12FF  3400               	retlw	0
 16924  1300  3421               	retlw	33
 16925  1301  3400               	retlw	0
 16926  1302  3421               	retlw	33
 16927  1303  3400               	retlw	0
 16928  1304  3421               	retlw	33
 16929  1305  3400               	retlw	0
 16930  1306  3421               	retlw	33
 16931  1307  3400               	retlw	0
 16932  1308  3421               	retlw	33
 16933  1309  3400               	retlw	0
 16934  130A  3421               	retlw	33
 16935  130B  3400               	retlw	0
 16936  130C  3421               	retlw	33
 16937  130D  3400               	retlw	0
 16938  130E  3421               	retlw	33
 16939  130F  3400               	retlw	0
 16940  1310  3421               	retlw	33
 16941  1311  3400               	retlw	0
 16942  1312  3421               	retlw	33
 16943  1313  3400               	retlw	0
 16944  1314  3421               	retlw	33
 16945  1315  3400               	retlw	0
 16946  1316  3421               	retlw	33
 16947  1317  3400               	retlw	0
 16948  1318  3421               	retlw	33
 16949  1319  3400               	retlw	0
 16950  131A  3421               	retlw	33
 16951  131B  3400               	retlw	0
 16952  131C  3421               	retlw	33
 16953  131D  3400               	retlw	0
 16954  131E  3421               	retlw	33
 16955  131F  3400               	retlw	0
 16956  1320  3421               	retlw	33
 16957  1321  3400               	retlw	0
 16958  1322  3421               	retlw	33
 16959  1323  3400               	retlw	0
 16960  1324  3421               	retlw	33
 16961  1325  3400               	retlw	0
 16962  1326  3421               	retlw	33
 16963  1327  3400               	retlw	0
 16964  1328  3421               	retlw	33
 16965  1329  3400               	retlw	0
 16966  132A  3421               	retlw	33
 16967  132B  3400               	retlw	0
 16968  132C  3421               	retlw	33
 16969  132D  3400               	retlw	0
 16970  132E  3421               	retlw	33
 16971  132F  3400               	retlw	0
 16972  1330  3421               	retlw	33
 16973  1331  3400               	retlw	0
 16974  1332  3420               	retlw	32
 16975  1333  3400               	retlw	0
 16976  1334  3420               	retlw	32
 16977  1335  3400               	retlw	0
 16978  1336  3420               	retlw	32
 16979  1337  3400               	retlw	0
 16980  1338  3420               	retlw	32
 16981  1339  3400               	retlw	0
 16982  133A  3420               	retlw	32
 16983  133B  3400               	retlw	0
 16984  133C  3420               	retlw	32
 16985  133D  3400               	retlw	0
 16986  133E  3420               	retlw	32
 16987  133F  3400               	retlw	0
 16988  1340  3420               	retlw	32
 16989  1341  3400               	retlw	0
 16990  1342  3420               	retlw	32
 16991  1343  3400               	retlw	0
 16992  1344  3420               	retlw	32
 16993  1345  3400               	retlw	0
 16994  1346  3420               	retlw	32
 16995  1347  3400               	retlw	0
 16996  1348  3420               	retlw	32
 16997  1349  3400               	retlw	0
 16998  134A  3420               	retlw	32
 16999  134B  3400               	retlw	0
 17000  134C  3420               	retlw	32
 17001  134D  3400               	retlw	0
 17002  134E  3420               	retlw	32
 17003  134F  3400               	retlw	0
 17004  1350  3420               	retlw	32
 17005  1351  3400               	retlw	0
 17006  1352  3420               	retlw	32
 17007  1353  3400               	retlw	0
 17008  1354  3420               	retlw	32
 17009  1355  3400               	retlw	0
 17010  1356  3420               	retlw	32
 17011  1357  3400               	retlw	0
 17012  1358  3420               	retlw	32
 17013  1359  3400               	retlw	0
 17014  135A  3420               	retlw	32
 17015  135B  3400               	retlw	0
 17016  135C  3420               	retlw	32
 17017  135D  3400               	retlw	0
 17018  135E  3420               	retlw	32
 17019  135F  3400               	retlw	0
 17020  1360  3420               	retlw	32
 17021  1361  3400               	retlw	0
 17022  1362  3420               	retlw	32
 17023  1363  3400               	retlw	0
 17024  1364  3420               	retlw	32
 17025  1365  3400               	retlw	0
 17026  1366  3420               	retlw	32
 17027  1367  3400               	retlw	0
 17028  1368  3420               	retlw	32
 17029  1369  3400               	retlw	0
 17030  136A  3420               	retlw	32
 17031  136B  3400               	retlw	0
 17032  136C  3420               	retlw	32
 17033  136D  3400               	retlw	0
 17034  136E  3420               	retlw	32
 17035  136F  3400               	retlw	0
 17036  1370  3420               	retlw	32
 17037  1371  3400               	retlw	0
 17038  1372  3420               	retlw	32
 17039  1373  3400               	retlw	0
 17040  1374  3420               	retlw	32
 17041  1375  3400               	retlw	0
 17042  1376  3420               	retlw	32
 17043  1377  3400               	retlw	0
 17044  1378  3420               	retlw	32
 17045  1379  3400               	retlw	0
 17046  137A  3420               	retlw	32
 17047  137B  3400               	retlw	0
 17048  137C  3420               	retlw	32
 17049  137D  3400               	retlw	0
 17050  137E  3420               	retlw	32
 17051  137F  3400               	retlw	0
 17052  1380  3420               	retlw	32
 17053  1381  3400               	retlw	0
 17054  1382  3420               	retlw	32
 17055  1383  3400               	retlw	0
 17056  1384  3420               	retlw	32
 17057  1385  3400               	retlw	0
 17058  1386  3420               	retlw	32
 17059  1387  3400               	retlw	0
 17060  1388  3420               	retlw	32
 17061  1389  3400               	retlw	0
 17062  138A  3420               	retlw	32
 17063  138B  3400               	retlw	0
 17064  138C  3420               	retlw	32
 17065  138D  3400               	retlw	0
 17066  138E  3420               	retlw	32
 17067  138F  3400               	retlw	0
 17068  1390  3420               	retlw	32
 17069  1391  3400               	retlw	0
 17070  1392  3420               	retlw	32
 17071  1393  3400               	retlw	0
 17072  1394  3420               	retlw	32
 17073  1395  3400               	retlw	0
 17074  1396  3420               	retlw	32
 17075  1397  3400               	retlw	0
 17076  1398  3420               	retlw	32
 17077  1399  3400               	retlw	0
 17078  139A  3420               	retlw	32
 17079  139B  3400               	retlw	0
 17080  139C  3420               	retlw	32
 17081  139D  3400               	retlw	0
 17082  139E  3420               	retlw	32
 17083  139F  3400               	retlw	0
 17084  13A0  3420               	retlw	32
 17085  13A1  3400               	retlw	0
 17086  13A2  3420               	retlw	32
 17087  13A3  3400               	retlw	0
 17088  13A4  3420               	retlw	32
 17089  13A5  3400               	retlw	0
 17090  13A6  3420               	retlw	32
 17091  13A7  3400               	retlw	0
 17092  13A8  3420               	retlw	32
 17093  13A9  3400               	retlw	0
 17094  13AA  3420               	retlw	32
 17095  13AB  3400               	retlw	0
 17096  13AC  3420               	retlw	32
 17097  13AD  3400               	retlw	0
 17098  13AE  3420               	retlw	32
 17099  13AF  3400               	retlw	0
 17100  13B0  3420               	retlw	32
 17101  13B1  3400               	retlw	0
 17102  13B2  3420               	retlw	32
 17103  13B3  3400               	retlw	0
 17104  13B4  3420               	retlw	32
 17105  13B5  3400               	retlw	0
 17106  13B6  3420               	retlw	32
 17107  13B7  3400               	retlw	0
 17108  13B8  3420               	retlw	32
 17109  13B9  3400               	retlw	0
 17110  13BA  3420               	retlw	32
 17111  13BB  3400               	retlw	0
 17112  13BC  3420               	retlw	32
 17113  13BD  3400               	retlw	0
 17114  13BE  3420               	retlw	32
 17115  13BF  3400               	retlw	0
 17116  13C0  3420               	retlw	32
 17117  13C1  3400               	retlw	0
 17118  13C2  3420               	retlw	32
 17119  13C3  3400               	retlw	0
 17120  13C4  3420               	retlw	32
 17121  13C5  3400               	retlw	0
 17122  13C6  3420               	retlw	32
 17123  13C7  3400               	retlw	0
 17124  13C8  3420               	retlw	32
 17125  13C9  3400               	retlw	0
 17126  13CA  3420               	retlw	32
 17127  13CB  3400               	retlw	0
 17128  13CC  3420               	retlw	32
 17129  13CD  3400               	retlw	0
 17130  13CE  3420               	retlw	32
 17131  13CF  3400               	retlw	0
 17132  13D0  3420               	retlw	32
 17133  13D1  3400               	retlw	0
 17134  13D2  3420               	retlw	32
 17135  13D3  3400               	retlw	0
 17136  13D4  3420               	retlw	32
 17137  13D5  3400               	retlw	0
 17138  13D6  3420               	retlw	32
 17139  13D7  3400               	retlw	0
 17140  13D8  3420               	retlw	32
 17141  13D9  3400               	retlw	0
 17142  13DA  3420               	retlw	32
 17143  13DB  3400               	retlw	0
 17144  13DC  3420               	retlw	32
 17145  13DD  3400               	retlw	0
 17146  13DE  3420               	retlw	32
 17147  13DF  3400               	retlw	0
 17148  13E0  3420               	retlw	32
 17149  13E1  3400               	retlw	0
 17150  13E2  3420               	retlw	32
 17151  13E3  3400               	retlw	0
 17152  13E4  3420               	retlw	32
 17153  13E5  3400               	retlw	0
 17154  13E6  3420               	retlw	32
 17155  13E7  3400               	retlw	0
 17156  13E8  3420               	retlw	32
 17157  13E9  3400               	retlw	0
 17158  13EA  3420               	retlw	32
 17159  13EB  3400               	retlw	0
 17160  13EC  3420               	retlw	32
 17161  13ED  3400               	retlw	0
 17162  13EE  3420               	retlw	32
 17163  13EF  3400               	retlw	0
 17164  13F0  3420               	retlw	32
 17165  13F1  3400               	retlw	0
 17166  13F2  3420               	retlw	32
 17167  13F3  3400               	retlw	0
 17168  13F4  3420               	retlw	32
 17169  13F5  3400               	retlw	0
 17170  13F6  3420               	retlw	32
 17171  13F7  3400               	retlw	0
 17172  13F8  3420               	retlw	32
 17173  13F9  3400               	retlw	0
 17174  13FA  3420               	retlw	32
 17175  13FB  3400               	retlw	0
 17176  13FC  3420               	retlw	32
 17177  13FD  3400               	retlw	0
 17178  13FE  3420               	retlw	32
 17179  13FF  3400               	retlw	0
 17180  1400  3420               	retlw	32
 17181  1401  3400               	retlw	0
 17182  1402  3420               	retlw	32
 17183  1403  3400               	retlw	0
 17184  1404  3420               	retlw	32
 17185  1405  3400               	retlw	0
 17186  1406  3420               	retlw	32
 17187  1407  3400               	retlw	0
 17188  1408  3420               	retlw	32
 17189  1409  3400               	retlw	0
 17190  140A  3420               	retlw	32
 17191  140B  3400               	retlw	0
 17192  140C  3420               	retlw	32
 17193  140D  3400               	retlw	0
 17194  140E  3420               	retlw	32
 17195  140F  3400               	retlw	0
 17196  1410  3420               	retlw	32
 17197  1411  3400               	retlw	0
 17198  1412  3420               	retlw	32
 17199  1413  3400               	retlw	0
 17200  1414  3420               	retlw	32
 17201  1415  3400               	retlw	0
 17202  1416  3420               	retlw	32
 17203  1417  3400               	retlw	0
 17204  1418  3420               	retlw	32
 17205  1419  3400               	retlw	0
 17206  141A  3420               	retlw	32
 17207  141B  3400               	retlw	0
 17208  141C  3420               	retlw	32
 17209  141D  3400               	retlw	0
 17210  141E  3420               	retlw	32
 17211  141F  3400               	retlw	0
 17212  1420  3420               	retlw	32
 17213  1421  3400               	retlw	0
 17214  1422  3420               	retlw	32
 17215  1423  3400               	retlw	0
 17216  1424  3420               	retlw	32
 17217  1425  3400               	retlw	0
 17218  1426  3420               	retlw	32
 17219  1427  3400               	retlw	0
 17220  1428  3420               	retlw	32
 17221  1429  3400               	retlw	0
 17222  142A  3420               	retlw	32
 17223  142B  3400               	retlw	0
 17224  142C  3420               	retlw	32
 17225  142D  3400               	retlw	0
 17226  142E  3420               	retlw	32
 17227  142F  3400               	retlw	0
 17228  1430  3420               	retlw	32
 17229  1431  3400               	retlw	0
 17230  1432  3420               	retlw	32
 17231  1433  3400               	retlw	0
 17232  1434  3420               	retlw	32
 17233  1435  3400               	retlw	0
 17234  1436  3420               	retlw	32
 17235  1437  3400               	retlw	0
 17236  1438  3420               	retlw	32
 17237  1439  3400               	retlw	0
 17238  143A  3420               	retlw	32
 17239  143B  3400               	retlw	0
 17240  143C  3420               	retlw	32
 17241  143D  3400               	retlw	0
 17242  143E  3420               	retlw	32
 17243  143F  3400               	retlw	0
 17244  1440  3420               	retlw	32
 17245  1441  3400               	retlw	0
 17246  1442  3420               	retlw	32
 17247  1443  3400               	retlw	0
 17248  1444  3420               	retlw	32
 17249  1445  3400               	retlw	0
 17250  1446  3420               	retlw	32
 17251  1447  3400               	retlw	0
 17252  1448  3420               	retlw	32
 17253  1449  3400               	retlw	0
 17254  144A  3420               	retlw	32
 17255  144B  3400               	retlw	0
 17256  144C  3420               	retlw	32
 17257  144D  3400               	retlw	0
 17258  144E  3420               	retlw	32
 17259  144F  3400               	retlw	0
 17260  1450  3420               	retlw	32
 17261  1451  3400               	retlw	0
 17262  1452  3420               	retlw	32
 17263  1453  3400               	retlw	0
 17264  1454  3420               	retlw	32
 17265  1455  3400               	retlw	0
 17266  1456  3420               	retlw	32
 17267  1457  3400               	retlw	0
 17268  1458  3420               	retlw	32
 17269  1459  3400               	retlw	0
 17270  145A  3420               	retlw	32
 17271  145B  3400               	retlw	0
 17272  145C  3420               	retlw	32
 17273  145D  3400               	retlw	0
 17274  145E  3420               	retlw	32
 17275  145F  3400               	retlw	0
 17276  1460  3420               	retlw	32
 17277  1461  3400               	retlw	0
 17278  1462  3420               	retlw	32
 17279  1463  3400               	retlw	0
 17280  1464  341F               	retlw	31
 17281  1465  3400               	retlw	0
 17282  1466  341F               	retlw	31
 17283  1467  3400               	retlw	0
 17284  1468  341F               	retlw	31
 17285  1469  3400               	retlw	0
 17286  146A  341F               	retlw	31
 17287  146B  3400               	retlw	0
 17288  146C  341F               	retlw	31
 17289  146D  3400               	retlw	0
 17290  146E  341F               	retlw	31
 17291  146F  3400               	retlw	0
 17292  1470  341F               	retlw	31
 17293  1471  3400               	retlw	0
 17294  1472  341F               	retlw	31
 17295  1473  3400               	retlw	0
 17296  1474  341F               	retlw	31
 17297  1475  3400               	retlw	0
 17298  1476  341F               	retlw	31
 17299  1477  3400               	retlw	0
 17300  1478  341F               	retlw	31
 17301  1479  3400               	retlw	0
 17302  147A  341F               	retlw	31
 17303  147B  3400               	retlw	0
 17304  147C  341F               	retlw	31
 17305  147D  3400               	retlw	0
 17306  147E  341F               	retlw	31
 17307  147F  3400               	retlw	0
 17308  1480  341F               	retlw	31
 17309  1481  3400               	retlw	0
 17310  1482  341F               	retlw	31
 17311  1483  3400               	retlw	0
 17312  1484  341F               	retlw	31
 17313  1485  3400               	retlw	0
 17314  1486  341F               	retlw	31
 17315  1487  3400               	retlw	0
 17316  1488  341F               	retlw	31
 17317  1489  3400               	retlw	0
 17318  148A  341F               	retlw	31
 17319  148B  3400               	retlw	0
 17320  148C  341F               	retlw	31
 17321  148D  3400               	retlw	0
 17322  148E  341F               	retlw	31
 17323  148F  3400               	retlw	0
 17324  1490  341F               	retlw	31
 17325  1491  3400               	retlw	0
 17326  1492  341F               	retlw	31
 17327  1493  3400               	retlw	0
 17328  1494  341F               	retlw	31
 17329  1495  3400               	retlw	0
 17330  1496  341F               	retlw	31
 17331  1497  3400               	retlw	0
 17332  1498  341F               	retlw	31
 17333  1499  3400               	retlw	0
 17334  149A  341F               	retlw	31
 17335  149B  3400               	retlw	0
 17336  149C  341F               	retlw	31
 17337  149D  3400               	retlw	0
 17338  149E  341F               	retlw	31
 17339  149F  3400               	retlw	0
 17340  14A0  341F               	retlw	31
 17341  14A1  3400               	retlw	0
 17342  14A2  341F               	retlw	31
 17343  14A3  3400               	retlw	0
 17344  14A4  341F               	retlw	31
 17345  14A5  3400               	retlw	0
 17346  14A6  341F               	retlw	31
 17347  14A7  3400               	retlw	0
 17348  14A8  341F               	retlw	31
 17349  14A9  3400               	retlw	0
 17350  14AA  341F               	retlw	31
 17351  14AB  3400               	retlw	0
 17352  14AC  341F               	retlw	31
 17353  14AD  3400               	retlw	0
 17354  14AE  341F               	retlw	31
 17355  14AF  3400               	retlw	0
 17356  14B0  341F               	retlw	31
 17357  14B1  3400               	retlw	0
 17358  14B2  341F               	retlw	31
 17359  14B3  3400               	retlw	0
 17360  14B4  341F               	retlw	31
 17361  14B5  3400               	retlw	0
 17362  14B6  341F               	retlw	31
 17363  14B7  3400               	retlw	0
 17364  14B8  341F               	retlw	31
 17365  14B9  3400               	retlw	0
 17366  14BA  341F               	retlw	31
 17367  14BB  3400               	retlw	0
 17368  14BC  341F               	retlw	31
 17369  14BD  3400               	retlw	0
 17370  14BE  341F               	retlw	31
 17371  14BF  3400               	retlw	0
 17372  14C0  341F               	retlw	31
 17373  14C1  3400               	retlw	0
 17374  14C2  341F               	retlw	31
 17375  14C3  3400               	retlw	0
 17376  14C4  341F               	retlw	31
 17377  14C5  3400               	retlw	0
 17378  14C6  341F               	retlw	31
 17379  14C7  3400               	retlw	0
 17380  14C8  341F               	retlw	31
 17381  14C9  3400               	retlw	0
 17382  14CA  341F               	retlw	31
 17383  14CB  3400               	retlw	0
 17384  14CC  341F               	retlw	31
 17385  14CD  3400               	retlw	0
 17386  14CE  341F               	retlw	31
 17387  14CF  3400               	retlw	0
 17388  14D0  341F               	retlw	31
 17389  14D1  3400               	retlw	0
 17390  14D2  341F               	retlw	31
 17391  14D3  3400               	retlw	0
 17392  14D4  341F               	retlw	31
 17393  14D5  3400               	retlw	0
 17394  14D6  341F               	retlw	31
 17395  14D7  3400               	retlw	0
 17396  14D8  341F               	retlw	31
 17397  14D9  3400               	retlw	0
 17398  14DA  341F               	retlw	31
 17399  14DB  3400               	retlw	0
 17400  14DC  341F               	retlw	31
 17401  14DD  3400               	retlw	0
 17402  14DE  341F               	retlw	31
 17403  14DF  3400               	retlw	0
 17404  14E0  341F               	retlw	31
 17405  14E1  3400               	retlw	0
 17406  14E2  341F               	retlw	31
 17407  14E3  3400               	retlw	0
 17408  14E4  341F               	retlw	31
 17409  14E5  3400               	retlw	0
 17410  14E6  341F               	retlw	31
 17411  14E7  3400               	retlw	0
 17412  14E8  341F               	retlw	31
 17413  14E9  3400               	retlw	0
 17414  14EA  341F               	retlw	31
 17415  14EB  3400               	retlw	0
 17416  14EC  341F               	retlw	31
 17417  14ED  3400               	retlw	0
 17418  14EE  341F               	retlw	31
 17419  14EF  3400               	retlw	0
 17420  14F0  341F               	retlw	31
 17421  14F1  3400               	retlw	0
 17422  14F2  341F               	retlw	31
 17423  14F3  3400               	retlw	0
 17424  14F4  341F               	retlw	31
 17425  14F5  3400               	retlw	0
 17426  14F6  341F               	retlw	31
 17427  14F7  3400               	retlw	0
 17428  14F8  341F               	retlw	31
 17429  14F9  3400               	retlw	0
 17430  14FA  341F               	retlw	31
 17431  14FB  3400               	retlw	0
 17432  14FC  341F               	retlw	31
 17433  14FD  3400               	retlw	0
 17434  14FE  341F               	retlw	31
 17435  14FF  3400               	retlw	0
 17436  1500  341F               	retlw	31
 17437  1501  3400               	retlw	0
 17438  1502  341F               	retlw	31
 17439  1503  3400               	retlw	0
 17440  1504  341F               	retlw	31
 17441  1505  3400               	retlw	0
 17442  1506  341F               	retlw	31
 17443  1507  3400               	retlw	0
 17444  1508  341F               	retlw	31
 17445  1509  3400               	retlw	0
 17446  150A  341F               	retlw	31
 17447  150B  3400               	retlw	0
 17448  150C  341F               	retlw	31
 17449  150D  3400               	retlw	0
 17450  150E  341F               	retlw	31
 17451  150F  3400               	retlw	0
 17452  1510  341F               	retlw	31
 17453  1511  3400               	retlw	0
 17454  1512  341F               	retlw	31
 17455  1513  3400               	retlw	0
 17456  1514  341F               	retlw	31
 17457  1515  3400               	retlw	0
 17458  1516  341F               	retlw	31
 17459  1517  3400               	retlw	0
 17460  1518  341F               	retlw	31
 17461  1519  3400               	retlw	0
 17462  151A  341F               	retlw	31
 17463  151B  3400               	retlw	0
 17464  151C  341F               	retlw	31
 17465  151D  3400               	retlw	0
 17466  151E  341F               	retlw	31
 17467  151F  3400               	retlw	0
 17468  1520  341F               	retlw	31
 17469  1521  3400               	retlw	0
 17470  1522  341F               	retlw	31
 17471  1523  3400               	retlw	0
 17472  1524  341F               	retlw	31
 17473  1525  3400               	retlw	0
 17474  1526  341F               	retlw	31
 17475  1527  3400               	retlw	0
 17476  1528  341F               	retlw	31
 17477  1529  3400               	retlw	0
 17478  152A  341F               	retlw	31
 17479  152B  3400               	retlw	0
 17480  152C  341F               	retlw	31
 17481  152D  3400               	retlw	0
 17482  152E  341F               	retlw	31
 17483  152F  3400               	retlw	0
 17484  1530  341F               	retlw	31
 17485  1531  3400               	retlw	0
 17486  1532  341F               	retlw	31
 17487  1533  3400               	retlw	0
 17488  1534  341F               	retlw	31
 17489  1535  3400               	retlw	0
 17490  1536  341F               	retlw	31
 17491  1537  3400               	retlw	0
 17492  1538  341F               	retlw	31
 17493  1539  3400               	retlw	0
 17494  153A  341F               	retlw	31
 17495  153B  3400               	retlw	0
 17496  153C  341F               	retlw	31
 17497  153D  3400               	retlw	0
 17498  153E  341F               	retlw	31
 17499  153F  3400               	retlw	0
 17500  1540  341F               	retlw	31
 17501  1541  3400               	retlw	0
 17502  1542  341F               	retlw	31
 17503  1543  3400               	retlw	0
 17504  1544  341F               	retlw	31
 17505  1545  3400               	retlw	0
 17506  1546  341F               	retlw	31
 17507  1547  3400               	retlw	0
 17508  1548  341F               	retlw	31
 17509  1549  3400               	retlw	0
 17510  154A  341F               	retlw	31
 17511  154B  3400               	retlw	0
 17512  154C  341F               	retlw	31
 17513  154D  3400               	retlw	0
 17514  154E  341F               	retlw	31
 17515  154F  3400               	retlw	0
 17516  1550  341F               	retlw	31
 17517  1551  3400               	retlw	0
 17518  1552  341F               	retlw	31
 17519  1553  3400               	retlw	0
 17520  1554  341F               	retlw	31
 17521  1555  3400               	retlw	0
 17522  1556  341F               	retlw	31
 17523  1557  3400               	retlw	0
 17524  1558  341F               	retlw	31
 17525  1559  3400               	retlw	0
 17526  155A  341F               	retlw	31
 17527  155B  3400               	retlw	0
 17528  155C  341F               	retlw	31
 17529  155D  3400               	retlw	0
 17530  155E  341F               	retlw	31
 17531  155F  3400               	retlw	0
 17532  1560  341F               	retlw	31
 17533  1561  3400               	retlw	0
 17534  1562  341F               	retlw	31
 17535  1563  3400               	retlw	0
 17536  1564  341F               	retlw	31
 17537  1565  3400               	retlw	0
 17538  1566  341F               	retlw	31
 17539  1567  3400               	retlw	0
 17540  1568  341F               	retlw	31
 17541  1569  3400               	retlw	0
 17542  156A  341F               	retlw	31
 17543  156B  3400               	retlw	0
 17544  156C  341F               	retlw	31
 17545  156D  3400               	retlw	0
 17546  156E  341F               	retlw	31
 17547  156F  3400               	retlw	0
 17548  1570  341F               	retlw	31
 17549  1571  3400               	retlw	0
 17550  1572  341F               	retlw	31
 17551  1573  3400               	retlw	0
 17552  1574  341F               	retlw	31
 17553  1575  3400               	retlw	0
 17554  1576  341F               	retlw	31
 17555  1577  3400               	retlw	0
 17556  1578  341F               	retlw	31
 17557  1579  3400               	retlw	0
 17558  157A  341F               	retlw	31
 17559  157B  3400               	retlw	0
 17560  157C  341F               	retlw	31
 17561  157D  3400               	retlw	0
 17562  157E  341F               	retlw	31
 17563  157F  3400               	retlw	0
 17564  1580  341F               	retlw	31
 17565  1581  3400               	retlw	0
 17566  1582  341F               	retlw	31
 17567  1583  3400               	retlw	0
 17568  1584  341F               	retlw	31
 17569  1585  3400               	retlw	0
 17570  1586  341F               	retlw	31
 17571  1587  3400               	retlw	0
 17572  1588  341F               	retlw	31
 17573  1589  3400               	retlw	0
 17574  158A  341F               	retlw	31
 17575  158B  3400               	retlw	0
 17576  158C  341F               	retlw	31
 17577  158D  3400               	retlw	0
 17578  158E  341F               	retlw	31
 17579  158F  3400               	retlw	0
 17580  1590  341F               	retlw	31
 17581  1591  3400               	retlw	0
 17582  1592  341F               	retlw	31
 17583  1593  3400               	retlw	0
 17584  1594  341F               	retlw	31
 17585  1595  3400               	retlw	0
 17586  1596  341F               	retlw	31
 17587  1597  3400               	retlw	0
 17588  1598  341F               	retlw	31
 17589  1599  3400               	retlw	0
 17590  159A  341F               	retlw	31
 17591  159B  3400               	retlw	0
 17592  159C  341F               	retlw	31
 17593  159D  3400               	retlw	0
 17594  159E  341F               	retlw	31
 17595  159F  3400               	retlw	0
 17596  15A0  341F               	retlw	31
 17597  15A1  3400               	retlw	0
 17598  15A2  341F               	retlw	31
 17599  15A3  3400               	retlw	0
 17600  15A4  341F               	retlw	31
 17601  15A5  3400               	retlw	0
 17602  15A6  341F               	retlw	31
 17603  15A7  3400               	retlw	0
 17604  15A8  341F               	retlw	31
 17605  15A9  3400               	retlw	0
 17606  15AA  341F               	retlw	31
 17607  15AB  3400               	retlw	0
 17608  15AC  341F               	retlw	31
 17609  15AD  3400               	retlw	0
 17610  15AE  341F               	retlw	31
 17611  15AF  3400               	retlw	0
 17612  15B0  341F               	retlw	31
 17613  15B1  3400               	retlw	0
 17614  15B2  341F               	retlw	31
 17615  15B3  3400               	retlw	0
 17616  15B4  341E               	retlw	30
 17617  15B5  3400               	retlw	0
 17618  15B6  341E               	retlw	30
 17619  15B7  3400               	retlw	0
 17620  15B8  341E               	retlw	30
 17621  15B9  3400               	retlw	0
 17622  15BA  341E               	retlw	30
 17623  15BB  3400               	retlw	0
 17624  15BC  341E               	retlw	30
 17625  15BD  3400               	retlw	0
 17626  15BE  341E               	retlw	30
 17627  15BF  3400               	retlw	0
 17628  15C0  341E               	retlw	30
 17629  15C1  3400               	retlw	0
 17630  15C2  341E               	retlw	30
 17631  15C3  3400               	retlw	0
 17632  15C4  341E               	retlw	30
 17633  15C5  3400               	retlw	0
 17634  15C6  341E               	retlw	30
 17635  15C7  3400               	retlw	0
 17636  15C8  341E               	retlw	30
 17637  15C9  3400               	retlw	0
 17638  15CA  341E               	retlw	30
 17639  15CB  3400               	retlw	0
 17640  15CC  341E               	retlw	30
 17641  15CD  3400               	retlw	0
 17642  15CE  341E               	retlw	30
 17643  15CF  3400               	retlw	0
 17644  15D0  341E               	retlw	30
 17645  15D1  3400               	retlw	0
 17646  15D2  341E               	retlw	30
 17647  15D3  3400               	retlw	0
 17648  15D4  341E               	retlw	30
 17649  15D5  3400               	retlw	0
 17650  15D6  341E               	retlw	30
 17651  15D7  3400               	retlw	0
 17652  15D8  341E               	retlw	30
 17653  15D9  3400               	retlw	0
 17654  15DA  341E               	retlw	30
 17655  15DB  3400               	retlw	0
 17656  15DC  341E               	retlw	30
 17657  15DD  3400               	retlw	0
 17658  15DE  341E               	retlw	30
 17659  15DF  3400               	retlw	0
 17660  15E0  341E               	retlw	30
 17661  15E1  3400               	retlw	0
 17662  15E2  341E               	retlw	30
 17663  15E3  3400               	retlw	0
 17664  15E4  341E               	retlw	30
 17665  15E5  3400               	retlw	0
 17666  15E6  341E               	retlw	30
 17667  15E7  3400               	retlw	0
 17668  15E8  341E               	retlw	30
 17669  15E9  3400               	retlw	0
 17670  15EA  341E               	retlw	30
 17671  15EB  3400               	retlw	0
 17672  15EC  341E               	retlw	30
 17673  15ED  3400               	retlw	0
 17674  15EE  341E               	retlw	30
 17675  15EF  3400               	retlw	0
 17676  15F0  341E               	retlw	30
 17677  15F1  3400               	retlw	0
 17678  15F2  341E               	retlw	30
 17679  15F3  3400               	retlw	0
 17680  15F4  341E               	retlw	30
 17681  15F5  3400               	retlw	0
 17682  15F6  341E               	retlw	30
 17683  15F7  3400               	retlw	0
 17684  15F8  341E               	retlw	30
 17685  15F9  3400               	retlw	0
 17686  15FA  341E               	retlw	30
 17687  15FB  3400               	retlw	0
 17688  15FC  341E               	retlw	30
 17689  15FD  3400               	retlw	0
 17690  15FE  341E               	retlw	30
 17691  15FF  3400               	retlw	0
 17692  1600  341E               	retlw	30
 17693  1601  3400               	retlw	0
 17694  1602  341E               	retlw	30
 17695  1603  3400               	retlw	0
 17696  1604  341E               	retlw	30
 17697  1605  3400               	retlw	0
 17698  1606  341E               	retlw	30
 17699  1607  3400               	retlw	0
 17700  1608  341E               	retlw	30
 17701  1609  3400               	retlw	0
 17702  160A  341E               	retlw	30
 17703  160B  3400               	retlw	0
 17704  160C  341E               	retlw	30
 17705  160D  3400               	retlw	0
 17706  160E  341E               	retlw	30
 17707  160F  3400               	retlw	0
 17708  1610  341E               	retlw	30
 17709  1611  3400               	retlw	0
 17710  1612  341E               	retlw	30
 17711  1613  3400               	retlw	0
 17712  1614  341E               	retlw	30
 17713  1615  3400               	retlw	0
 17714  1616  341E               	retlw	30
 17715  1617  3400               	retlw	0
 17716  1618  341E               	retlw	30
 17717  1619  3400               	retlw	0
 17718  161A  341E               	retlw	30
 17719  161B  3400               	retlw	0
 17720  161C  341E               	retlw	30
 17721  161D  3400               	retlw	0
 17722  161E  341E               	retlw	30
 17723  161F  3400               	retlw	0
 17724  1620  341E               	retlw	30
 17725  1621  3400               	retlw	0
 17726  1622  341E               	retlw	30
 17727  1623  3400               	retlw	0
 17728  1624  341E               	retlw	30
 17729  1625  3400               	retlw	0
 17730  1626  341E               	retlw	30
 17731  1627  3400               	retlw	0
 17732  1628  341E               	retlw	30
 17733  1629  3400               	retlw	0
 17734  162A  341E               	retlw	30
 17735  162B  3400               	retlw	0
 17736  162C  341E               	retlw	30
 17737  162D  3400               	retlw	0
 17738  162E  341E               	retlw	30
 17739  162F  3400               	retlw	0
 17740  1630  341E               	retlw	30
 17741  1631  3400               	retlw	0
 17742  1632  341E               	retlw	30
 17743  1633  3400               	retlw	0
 17744  1634  341E               	retlw	30
 17745  1635  3400               	retlw	0
 17746  1636  341E               	retlw	30
 17747  1637  3400               	retlw	0
 17748  1638  341E               	retlw	30
 17749  1639  3400               	retlw	0
 17750  163A  341E               	retlw	30
 17751  163B  3400               	retlw	0
 17752  163C  341E               	retlw	30
 17753  163D  3400               	retlw	0
 17754  163E  341E               	retlw	30
 17755  163F  3400               	retlw	0
 17756  1640  341E               	retlw	30
 17757  1641  3400               	retlw	0
 17758  1642  341E               	retlw	30
 17759  1643  3400               	retlw	0
 17760  1644  341E               	retlw	30
 17761  1645  3400               	retlw	0
 17762  1646  341E               	retlw	30
 17763  1647  3400               	retlw	0
 17764  1648  341E               	retlw	30
 17765  1649  3400               	retlw	0
 17766  164A  341E               	retlw	30
 17767  164B  3400               	retlw	0
 17768  164C  341E               	retlw	30
 17769  164D  3400               	retlw	0
 17770  164E  341E               	retlw	30
 17771  164F  3400               	retlw	0
 17772  1650  341E               	retlw	30
 17773  1651  3400               	retlw	0
 17774  1652  341E               	retlw	30
 17775  1653  3400               	retlw	0
 17776  1654  341E               	retlw	30
 17777  1655  3400               	retlw	0
 17778  1656  341E               	retlw	30
 17779  1657  3400               	retlw	0
 17780  1658  341E               	retlw	30
 17781  1659  3400               	retlw	0
 17782  165A  341E               	retlw	30
 17783  165B  3400               	retlw	0
 17784  165C  341E               	retlw	30
 17785  165D  3400               	retlw	0
 17786  165E  341E               	retlw	30
 17787  165F  3400               	retlw	0
 17788  1660  341E               	retlw	30
 17789  1661  3400               	retlw	0
 17790  1662  341E               	retlw	30
 17791  1663  3400               	retlw	0
 17792  1664  341E               	retlw	30
 17793  1665  3400               	retlw	0
 17794  1666  341E               	retlw	30
 17795  1667  3400               	retlw	0
 17796  1668  341E               	retlw	30
 17797  1669  3400               	retlw	0
 17798  166A  341E               	retlw	30
 17799  166B  3400               	retlw	0
 17800  166C  341E               	retlw	30
 17801  166D  3400               	retlw	0
 17802  166E  341E               	retlw	30
 17803  166F  3400               	retlw	0
 17804  1670  341E               	retlw	30
 17805  1671  3400               	retlw	0
 17806  1672  341E               	retlw	30
 17807  1673  3400               	retlw	0
 17808  1674  341E               	retlw	30
 17809  1675  3400               	retlw	0
 17810  1676  341E               	retlw	30
 17811  1677  3400               	retlw	0
 17812  1678  341E               	retlw	30
 17813  1679  3400               	retlw	0
 17814  167A  341E               	retlw	30
 17815  167B  3400               	retlw	0
 17816  167C  341E               	retlw	30
 17817  167D  3400               	retlw	0
 17818  167E  341E               	retlw	30
 17819  167F  3400               	retlw	0
 17820  1680  341E               	retlw	30
 17821  1681  3400               	retlw	0
 17822  1682  341E               	retlw	30
 17823  1683  3400               	retlw	0
 17824  1684  341E               	retlw	30
 17825  1685  3400               	retlw	0
 17826  1686  341E               	retlw	30
 17827  1687  3400               	retlw	0
 17828  1688  341E               	retlw	30
 17829  1689  3400               	retlw	0
 17830  168A  341E               	retlw	30
 17831  168B  3400               	retlw	0
 17832  168C  341E               	retlw	30
 17833  168D  3400               	retlw	0
 17834  168E  341E               	retlw	30
 17835  168F  3400               	retlw	0
 17836  1690  341E               	retlw	30
 17837  1691  3400               	retlw	0
 17838  1692  341E               	retlw	30
 17839  1693  3400               	retlw	0
 17840  1694  341E               	retlw	30
 17841  1695  3400               	retlw	0
 17842  1696  341E               	retlw	30
 17843  1697  3400               	retlw	0
 17844  1698  341E               	retlw	30
 17845  1699  3400               	retlw	0
 17846  169A  341E               	retlw	30
 17847  169B  3400               	retlw	0
 17848  169C  341E               	retlw	30
 17849  169D  3400               	retlw	0
 17850  169E  341E               	retlw	30
 17851  169F  3400               	retlw	0
 17852  16A0  341E               	retlw	30
 17853  16A1  3400               	retlw	0
 17854  16A2  341E               	retlw	30
 17855  16A3  3400               	retlw	0
 17856  16A4  341E               	retlw	30
 17857  16A5  3400               	retlw	0
 17858  16A6  341E               	retlw	30
 17859  16A7  3400               	retlw	0
 17860  16A8  341E               	retlw	30
 17861  16A9  3400               	retlw	0
 17862  16AA  341E               	retlw	30
 17863  16AB  3400               	retlw	0
 17864  16AC  341E               	retlw	30
 17865  16AD  3400               	retlw	0
 17866  16AE  341E               	retlw	30
 17867  16AF  3400               	retlw	0
 17868  16B0  341E               	retlw	30
 17869  16B1  3400               	retlw	0
 17870  16B2  341E               	retlw	30
 17871  16B3  3400               	retlw	0
 17872  16B4  341E               	retlw	30
 17873  16B5  3400               	retlw	0
 17874  16B6  341E               	retlw	30
 17875  16B7  3400               	retlw	0
 17876  16B8  341E               	retlw	30
 17877  16B9  3400               	retlw	0
 17878  16BA  341E               	retlw	30
 17879  16BB  3400               	retlw	0
 17880  16BC  341E               	retlw	30
 17881  16BD  3400               	retlw	0
 17882  16BE  341E               	retlw	30
 17883  16BF  3400               	retlw	0
 17884  16C0  341E               	retlw	30
 17885  16C1  3400               	retlw	0
 17886  16C2  341E               	retlw	30
 17887  16C3  3400               	retlw	0
 17888  16C4  341E               	retlw	30
 17889  16C5  3400               	retlw	0
 17890  16C6  341E               	retlw	30
 17891  16C7  3400               	retlw	0
 17892  16C8  341E               	retlw	30
 17893  16C9  3400               	retlw	0
 17894  16CA  341E               	retlw	30
 17895  16CB  3400               	retlw	0
 17896  16CC  341E               	retlw	30
 17897  16CD  3400               	retlw	0
 17898  16CE  341E               	retlw	30
 17899  16CF  3400               	retlw	0
 17900  16D0  341E               	retlw	30
 17901  16D1  3400               	retlw	0
 17902  16D2  341E               	retlw	30
 17903  16D3  3400               	retlw	0
 17904  16D4  341E               	retlw	30
 17905  16D5  3400               	retlw	0
 17906  16D6  341E               	retlw	30
 17907  16D7  3400               	retlw	0
 17908  16D8  341E               	retlw	30
 17909  16D9  3400               	retlw	0
 17910  16DA  341E               	retlw	30
 17911  16DB  3400               	retlw	0
 17912  16DC  341E               	retlw	30
 17913  16DD  3400               	retlw	0
 17914  16DE  341E               	retlw	30
 17915  16DF  3400               	retlw	0
 17916  16E0  341E               	retlw	30
 17917  16E1  3400               	retlw	0
 17918  16E2  341E               	retlw	30
 17919  16E3  3400               	retlw	0
 17920  16E4  341E               	retlw	30
 17921  16E5  3400               	retlw	0
 17922  16E6  341E               	retlw	30
 17923  16E7  3400               	retlw	0
 17924  16E8  341E               	retlw	30
 17925  16E9  3400               	retlw	0
 17926  16EA  341E               	retlw	30
 17927  16EB  3400               	retlw	0
 17928  16EC  341E               	retlw	30
 17929  16ED  3400               	retlw	0
 17930  16EE  341E               	retlw	30
 17931  16EF  3400               	retlw	0
 17932  16F0  341E               	retlw	30
 17933  16F1  3400               	retlw	0
 17934  16F2  341E               	retlw	30
 17935  16F3  3400               	retlw	0
 17936  16F4  341E               	retlw	30
 17937  16F5  3400               	retlw	0
 17938  16F6  341E               	retlw	30
 17939  16F7  3400               	retlw	0
 17940  16F8  341E               	retlw	30
 17941  16F9  3400               	retlw	0
 17942  16FA  341E               	retlw	30
 17943  16FB  3400               	retlw	0
 17944  16FC  341E               	retlw	30
 17945  16FD  3400               	retlw	0
 17946  16FE  341E               	retlw	30
 17947  16FF  3400               	retlw	0
 17948  1700  341E               	retlw	30
 17949  1701  3400               	retlw	0
 17950  1702  341E               	retlw	30
 17951  1703  3400               	retlw	0
 17952  1704  341E               	retlw	30
 17953  1705  3400               	retlw	0
 17954  1706  341E               	retlw	30
 17955  1707  3400               	retlw	0
 17956  1708  341E               	retlw	30
 17957  1709  3400               	retlw	0
 17958  170A  341E               	retlw	30
 17959  170B  3400               	retlw	0
 17960  170C  341E               	retlw	30
 17961  170D  3400               	retlw	0
 17962  170E  341E               	retlw	30
 17963  170F  3400               	retlw	0
 17964  1710  341E               	retlw	30
 17965  1711  3400               	retlw	0
 17966  1712  341E               	retlw	30
 17967  1713  3400               	retlw	0
 17968  1714  341E               	retlw	30
 17969  1715  3400               	retlw	0
 17970  1716  341E               	retlw	30
 17971  1717  3400               	retlw	0
 17972  1718  341E               	retlw	30
 17973  1719  3400               	retlw	0
 17974  171A  341E               	retlw	30
 17975  171B  3400               	retlw	0
 17976  171C  341E               	retlw	30
 17977  171D  3400               	retlw	0
 17978  171E  341E               	retlw	30
 17979  171F  3400               	retlw	0
 17980  1720  341E               	retlw	30
 17981  1721  3400               	retlw	0
 17982  1722  341E               	retlw	30
 17983  1723  3400               	retlw	0
 17984  1724  341E               	retlw	30
 17985  1725  3400               	retlw	0
 17986  1726  341D               	retlw	29
 17987  1727  3400               	retlw	0
 17988  1728  341D               	retlw	29
 17989  1729  3400               	retlw	0
 17990  172A  341D               	retlw	29
 17991  172B  3400               	retlw	0
 17992  172C  341D               	retlw	29
 17993  172D  3400               	retlw	0
 17994  172E  341D               	retlw	29
 17995  172F  3400               	retlw	0
 17996  1730  341D               	retlw	29
 17997  1731  3400               	retlw	0
 17998  1732  341D               	retlw	29
 17999  1733  3400               	retlw	0
 18000  1734  341D               	retlw	29
 18001  1735  3400               	retlw	0
 18002  1736  341D               	retlw	29
 18003  1737  3400               	retlw	0
 18004  1738  341D               	retlw	29
 18005  1739  3400               	retlw	0
 18006  173A  341D               	retlw	29
 18007  173B  3400               	retlw	0
 18008  173C  341D               	retlw	29
 18009  173D  3400               	retlw	0
 18010  173E  341D               	retlw	29
 18011  173F  3400               	retlw	0
 18012  1740  341D               	retlw	29
 18013  1741  3400               	retlw	0
 18014  1742  341D               	retlw	29
 18015  1743  3400               	retlw	0
 18016  1744  341D               	retlw	29
 18017  1745  3400               	retlw	0
 18018  1746  341D               	retlw	29
 18019  1747  3400               	retlw	0
 18020  1748  341D               	retlw	29
 18021  1749  3400               	retlw	0
 18022  174A  341D               	retlw	29
 18023  174B  3400               	retlw	0
 18024  174C  341D               	retlw	29
 18025  174D  3400               	retlw	0
 18026  174E  341D               	retlw	29
 18027  174F  3400               	retlw	0
 18028  1750  341D               	retlw	29
 18029  1751  3400               	retlw	0
 18030  1752  341D               	retlw	29
 18031  1753  3400               	retlw	0
 18032  1754  341D               	retlw	29
 18033  1755  3400               	retlw	0
 18034  1756  341D               	retlw	29
 18035  1757  3400               	retlw	0
 18036  1758  341D               	retlw	29
 18037  1759  3400               	retlw	0
 18038  175A  341D               	retlw	29
 18039  175B  3400               	retlw	0
 18040  175C  341D               	retlw	29
 18041  175D  3400               	retlw	0
 18042  175E  341D               	retlw	29
 18043  175F  3400               	retlw	0
 18044  1760  341D               	retlw	29
 18045  1761  3400               	retlw	0
 18046  1762  341D               	retlw	29
 18047  1763  3400               	retlw	0
 18048  1764  341D               	retlw	29
 18049  1765  3400               	retlw	0
 18050  1766  341D               	retlw	29
 18051  1767  3400               	retlw	0
 18052  1768  341D               	retlw	29
 18053  1769  3400               	retlw	0
 18054  176A  341D               	retlw	29
 18055  176B  3400               	retlw	0
 18056  176C  341D               	retlw	29
 18057  176D  3400               	retlw	0
 18058  176E  341D               	retlw	29
 18059  176F  3400               	retlw	0
 18060  1770  341D               	retlw	29
 18061  1771  3400               	retlw	0
 18062  1772  341D               	retlw	29
 18063  1773  3400               	retlw	0
 18064  1774  341D               	retlw	29
 18065  1775  3400               	retlw	0
 18066  1776  341D               	retlw	29
 18067  1777  3400               	retlw	0
 18068  1778  341D               	retlw	29
 18069  1779  3400               	retlw	0
 18070  177A  341D               	retlw	29
 18071  177B  3400               	retlw	0
 18072  177C  341D               	retlw	29
 18073  177D  3400               	retlw	0
 18074  177E  341D               	retlw	29
 18075  177F  3400               	retlw	0
 18076  1780  341D               	retlw	29
 18077  1781  3400               	retlw	0
 18078  1782  341D               	retlw	29
 18079  1783  3400               	retlw	0
 18080  1784  341D               	retlw	29
 18081  1785  3400               	retlw	0
 18082  1786  341D               	retlw	29
 18083  1787  3400               	retlw	0
 18084  1788  341D               	retlw	29
 18085  1789  3400               	retlw	0
 18086  178A  341D               	retlw	29
 18087  178B  3400               	retlw	0
 18088  178C  341D               	retlw	29
 18089  178D  3400               	retlw	0
 18090  178E  341D               	retlw	29
 18091  178F  3400               	retlw	0
 18092  1790  341D               	retlw	29
 18093  1791  3400               	retlw	0
 18094  1792  341D               	retlw	29
 18095  1793  3400               	retlw	0
 18096  1794  341D               	retlw	29
 18097  1795  3400               	retlw	0
 18098  1796  341D               	retlw	29
 18099  1797  3400               	retlw	0
 18100  1798  341D               	retlw	29
 18101  1799  3400               	retlw	0
 18102  179A  341D               	retlw	29
 18103  179B  3400               	retlw	0
 18104  179C  341D               	retlw	29
 18105  179D  3400               	retlw	0
 18106  179E  341D               	retlw	29
 18107  179F  3400               	retlw	0
 18108  17A0  341D               	retlw	29
 18109  17A1  3400               	retlw	0
 18110  17A2  341D               	retlw	29
 18111  17A3  3400               	retlw	0
 18112  17A4  341D               	retlw	29
 18113  17A5  3400               	retlw	0
 18114  17A6  341D               	retlw	29
 18115  17A7  3400               	retlw	0
 18116  17A8  341D               	retlw	29
 18117  17A9  3400               	retlw	0
 18118  17AA  341D               	retlw	29
 18119  17AB  3400               	retlw	0
 18120  17AC  341D               	retlw	29
 18121  17AD  3400               	retlw	0
 18122  17AE  341D               	retlw	29
 18123  17AF  3400               	retlw	0
 18124  17B0  341D               	retlw	29
 18125  17B1  3400               	retlw	0
 18126  17B2  341D               	retlw	29
 18127  17B3  3400               	retlw	0
 18128  17B4  341D               	retlw	29
 18129  17B5  3400               	retlw	0
 18130  17B6  341D               	retlw	29
 18131  17B7  3400               	retlw	0
 18132  17B8  341D               	retlw	29
 18133  17B9  3400               	retlw	0
 18134  17BA  341D               	retlw	29
 18135  17BB  3400               	retlw	0
 18136  17BC  341D               	retlw	29
 18137  17BD  3400               	retlw	0
 18138  17BE  341D               	retlw	29
 18139  17BF  3400               	retlw	0
 18140  17C0  341D               	retlw	29
 18141  17C1  3400               	retlw	0
 18142  17C2  341D               	retlw	29
 18143  17C3  3400               	retlw	0
 18144  17C4  341D               	retlw	29
 18145  17C5  3400               	retlw	0
 18146  17C6  341D               	retlw	29
 18147  17C7  3400               	retlw	0
 18148  17C8  341D               	retlw	29
 18149  17C9  3400               	retlw	0
 18150  17CA  341D               	retlw	29
 18151  17CB  3400               	retlw	0
 18152  17CC  341D               	retlw	29
 18153  17CD  3400               	retlw	0
 18154  17CE  341D               	retlw	29
 18155  17CF  3400               	retlw	0
 18156  17D0  341D               	retlw	29
 18157  17D1  3400               	retlw	0
 18158  17D2  341D               	retlw	29
 18159  17D3  3400               	retlw	0
 18160  17D4  341D               	retlw	29
 18161  17D5  3400               	retlw	0
 18162  17D6  341D               	retlw	29
 18163  17D7  3400               	retlw	0
 18164  17D8  341D               	retlw	29
 18165  17D9  3400               	retlw	0
 18166  17DA  341D               	retlw	29
 18167  17DB  3400               	retlw	0
 18168  17DC  341D               	retlw	29
 18169  17DD  3400               	retlw	0
 18170  17DE  341D               	retlw	29
 18171  17DF  3400               	retlw	0
 18172  17E0  341D               	retlw	29
 18173  17E1  3400               	retlw	0
 18174  17E2  341D               	retlw	29
 18175  17E3  3400               	retlw	0
 18176  17E4  341D               	retlw	29
 18177  17E5  3400               	retlw	0
 18178  17E6  341D               	retlw	29
 18179  17E7  3400               	retlw	0
 18180  17E8  341D               	retlw	29
 18181  17E9  3400               	retlw	0
 18182  17EA  341D               	retlw	29
 18183  17EB  3400               	retlw	0
 18184  17EC  341D               	retlw	29
 18185  17ED  3400               	retlw	0
 18186  17EE  341D               	retlw	29
 18187  17EF  3400               	retlw	0
 18188  17F0  341D               	retlw	29
 18189  17F1  3400               	retlw	0
 18190  17F2  341D               	retlw	29
 18191  17F3  3400               	retlw	0
 18192  17F4  341D               	retlw	29
 18193  17F5  3400               	retlw	0
 18194  17F6  341D               	retlw	29
 18195  17F7  3400               	retlw	0
 18196  17F8  341D               	retlw	29
 18197  17F9  3400               	retlw	0
 18198  17FA  341D               	retlw	29
 18199  17FB  3400               	retlw	0
 18200  17FC  341D               	retlw	29
 18201  17FD  3400               	retlw	0
 18202  17FE  341D               	retlw	29
 18203  17FF  3400               	retlw	0
 18204  1800  341D               	retlw	29
 18205  1801  3400               	retlw	0
 18206  1802  341D               	retlw	29
 18207  1803  3400               	retlw	0
 18208  1804  341D               	retlw	29
 18209  1805  3400               	retlw	0
 18210  1806  341D               	retlw	29
 18211  1807  3400               	retlw	0
 18212  1808  341D               	retlw	29
 18213  1809  3400               	retlw	0
 18214  180A  341D               	retlw	29
 18215  180B  3400               	retlw	0
 18216  180C  341D               	retlw	29
 18217  180D  3400               	retlw	0
 18218  180E  341D               	retlw	29
 18219  180F  3400               	retlw	0
 18220  1810  341D               	retlw	29
 18221  1811  3400               	retlw	0
 18222  1812  341D               	retlw	29
 18223  1813  3400               	retlw	0
 18224  1814  341D               	retlw	29
 18225  1815  3400               	retlw	0
 18226  1816  341D               	retlw	29
 18227  1817  3400               	retlw	0
 18228  1818  341D               	retlw	29
 18229  1819  3400               	retlw	0
 18230  181A  341D               	retlw	29
 18231  181B  3400               	retlw	0
 18232  181C  341D               	retlw	29
 18233  181D  3400               	retlw	0
 18234  181E  341D               	retlw	29
 18235  181F  3400               	retlw	0
 18236  1820  341D               	retlw	29
 18237  1821  3400               	retlw	0
 18238  1822  341D               	retlw	29
 18239  1823  3400               	retlw	0
 18240  1824  341D               	retlw	29
 18241  1825  3400               	retlw	0
 18242  1826  341D               	retlw	29
 18243  1827  3400               	retlw	0
 18244  1828  341D               	retlw	29
 18245  1829  3400               	retlw	0
 18246  182A  341D               	retlw	29
 18247  182B  3400               	retlw	0
 18248  182C  341D               	retlw	29
 18249  182D  3400               	retlw	0
 18250  182E  341D               	retlw	29
 18251  182F  3400               	retlw	0
 18252  1830  341D               	retlw	29
 18253  1831  3400               	retlw	0
 18254  1832  341D               	retlw	29
 18255  1833  3400               	retlw	0
 18256  1834  341D               	retlw	29
 18257  1835  3400               	retlw	0
 18258  1836  341D               	retlw	29
 18259  1837  3400               	retlw	0
 18260  1838  341D               	retlw	29
 18261  1839  3400               	retlw	0
 18262  183A  341D               	retlw	29
 18263  183B  3400               	retlw	0
 18264  183C  341D               	retlw	29
 18265  183D  3400               	retlw	0
 18266  183E  341D               	retlw	29
 18267  183F  3400               	retlw	0
 18268  1840  341D               	retlw	29
 18269  1841  3400               	retlw	0
 18270  1842  341D               	retlw	29
 18271  1843  3400               	retlw	0
 18272  1844  341D               	retlw	29
 18273  1845  3400               	retlw	0
 18274  1846  341D               	retlw	29
 18275  1847  3400               	retlw	0
 18276  1848  341D               	retlw	29
 18277  1849  3400               	retlw	0
 18278  184A  341D               	retlw	29
 18279  184B  3400               	retlw	0
 18280  184C  341D               	retlw	29
 18281  184D  3400               	retlw	0
 18282  184E  341D               	retlw	29
 18283  184F  3400               	retlw	0
 18284  1850  341D               	retlw	29
 18285  1851  3400               	retlw	0
 18286  1852  341D               	retlw	29
 18287  1853  3400               	retlw	0
 18288  1854  341D               	retlw	29
 18289  1855  3400               	retlw	0
 18290  1856  341D               	retlw	29
 18291  1857  3400               	retlw	0
 18292  1858  341D               	retlw	29
 18293  1859  3400               	retlw	0
 18294  185A  341D               	retlw	29
 18295  185B  3400               	retlw	0
 18296  185C  341D               	retlw	29
 18297  185D  3400               	retlw	0
 18298  185E  341D               	retlw	29
 18299  185F  3400               	retlw	0
 18300  1860  341D               	retlw	29
 18301  1861  3400               	retlw	0
 18302  1862  341D               	retlw	29
 18303  1863  3400               	retlw	0
 18304  1864  341D               	retlw	29
 18305  1865  3400               	retlw	0
 18306  1866  341D               	retlw	29
 18307  1867  3400               	retlw	0
 18308  1868  341D               	retlw	29
 18309  1869  3400               	retlw	0
 18310  186A  341D               	retlw	29
 18311  186B  3400               	retlw	0
 18312  186C  341D               	retlw	29
 18313  186D  3400               	retlw	0
 18314  186E  341D               	retlw	29
 18315  186F  3400               	retlw	0
 18316  1870  341D               	retlw	29
 18317  1871  3400               	retlw	0
 18318  1872  341D               	retlw	29
 18319  1873  3400               	retlw	0
 18320  1874  341D               	retlw	29
 18321  1875  3400               	retlw	0
 18322  1876  341D               	retlw	29
 18323  1877  3400               	retlw	0
 18324  1878  341D               	retlw	29
 18325  1879  3400               	retlw	0
 18326  187A  341D               	retlw	29
 18327  187B  3400               	retlw	0
 18328  187C  341D               	retlw	29
 18329  187D  3400               	retlw	0
 18330  187E  341D               	retlw	29
 18331  187F  3400               	retlw	0
 18332  1880  341D               	retlw	29
 18333  1881  3400               	retlw	0
 18334  1882  341D               	retlw	29
 18335  1883  3400               	retlw	0
 18336  1884  341D               	retlw	29
 18337  1885  3400               	retlw	0
 18338  1886  341D               	retlw	29
 18339  1887  3400               	retlw	0
 18340  1888  341D               	retlw	29
 18341  1889  3400               	retlw	0
 18342  188A  341D               	retlw	29
 18343  188B  3400               	retlw	0
 18344  188C  341D               	retlw	29
 18345  188D  3400               	retlw	0
 18346  188E  341D               	retlw	29
 18347  188F  3400               	retlw	0
 18348  1890  341D               	retlw	29
 18349  1891  3400               	retlw	0
 18350  1892  341D               	retlw	29
 18351  1893  3400               	retlw	0
 18352  1894  341D               	retlw	29
 18353  1895  3400               	retlw	0
 18354  1896  341D               	retlw	29
 18355  1897  3400               	retlw	0
 18356  1898  341D               	retlw	29
 18357  1899  3400               	retlw	0
 18358  189A  341D               	retlw	29
 18359  189B  3400               	retlw	0
 18360  189C  341D               	retlw	29
 18361  189D  3400               	retlw	0
 18362  189E  341D               	retlw	29
 18363  189F  3400               	retlw	0
 18364  18A0  341D               	retlw	29
 18365  18A1  3400               	retlw	0
 18366  18A2  341D               	retlw	29
 18367  18A3  3400               	retlw	0
 18368  18A4  341D               	retlw	29
 18369  18A5  3400               	retlw	0
 18370  18A6  341D               	retlw	29
 18371  18A7  3400               	retlw	0
 18372  18A8  341D               	retlw	29
 18373  18A9  3400               	retlw	0
 18374  18AA  341D               	retlw	29
 18375  18AB  3400               	retlw	0
 18376  18AC  341D               	retlw	29
 18377  18AD  3400               	retlw	0
 18378  18AE  341D               	retlw	29
 18379  18AF  3400               	retlw	0
 18380  18B0  341D               	retlw	29
 18381  18B1  3400               	retlw	0
 18382  18B2  341D               	retlw	29
 18383  18B3  3400               	retlw	0
 18384  18B4  341D               	retlw	29
 18385  18B5  3400               	retlw	0
 18386  18B6  341D               	retlw	29
 18387  18B7  3400               	retlw	0
 18388  18B8  341D               	retlw	29
 18389  18B9  3400               	retlw	0
 18390  18BA  341D               	retlw	29
 18391  18BB  3400               	retlw	0
 18392  18BC  341D               	retlw	29
 18393  18BD  3400               	retlw	0
 18394  18BE  341D               	retlw	29
 18395  18BF  3400               	retlw	0
 18396  18C0  341C               	retlw	28
 18397  18C1  3400               	retlw	0
 18398  18C2  341C               	retlw	28
 18399  18C3  3400               	retlw	0
 18400  18C4  341C               	retlw	28
 18401  18C5  3400               	retlw	0
 18402  18C6  341C               	retlw	28
 18403  18C7  3400               	retlw	0
 18404  18C8  341C               	retlw	28
 18405  18C9  3400               	retlw	0
 18406  18CA  341C               	retlw	28
 18407  18CB  3400               	retlw	0
 18408  18CC  341C               	retlw	28
 18409  18CD  3400               	retlw	0
 18410  18CE  341C               	retlw	28
 18411  18CF  3400               	retlw	0
 18412  18D0  341C               	retlw	28
 18413  18D1  3400               	retlw	0
 18414  18D2  341C               	retlw	28
 18415  18D3  3400               	retlw	0
 18416  18D4  341C               	retlw	28
 18417  18D5  3400               	retlw	0
 18418  18D6  341C               	retlw	28
 18419  18D7  3400               	retlw	0
 18420  18D8  341C               	retlw	28
 18421  18D9  3400               	retlw	0
 18422  18DA  341C               	retlw	28
 18423  18DB  3400               	retlw	0
 18424  18DC  341C               	retlw	28
 18425  18DD  3400               	retlw	0
 18426  18DE  341C               	retlw	28
 18427  18DF  3400               	retlw	0
 18428  18E0  341C               	retlw	28
 18429  18E1  3400               	retlw	0
 18430  18E2  341C               	retlw	28
 18431  18E3  3400               	retlw	0
 18432  18E4  341C               	retlw	28
 18433  18E5  3400               	retlw	0
 18434  18E6  341C               	retlw	28
 18435  18E7  3400               	retlw	0
 18436  18E8  341C               	retlw	28
 18437  18E9  3400               	retlw	0
 18438  18EA  341C               	retlw	28
 18439  18EB  3400               	retlw	0
 18440  18EC  341C               	retlw	28
 18441  18ED  3400               	retlw	0
 18442  18EE  341C               	retlw	28
 18443  18EF  3400               	retlw	0
 18444  18F0  341C               	retlw	28
 18445  18F1  3400               	retlw	0
 18446  18F2  341C               	retlw	28
 18447  18F3  3400               	retlw	0
 18448  18F4  341C               	retlw	28
 18449  18F5  3400               	retlw	0
 18450  18F6  341C               	retlw	28
 18451  18F7  3400               	retlw	0
 18452  18F8  341C               	retlw	28
 18453  18F9  3400               	retlw	0
 18454  18FA  341C               	retlw	28
 18455  18FB  3400               	retlw	0
 18456  18FC  341C               	retlw	28
 18457  18FD  3400               	retlw	0
 18458  18FE  341C               	retlw	28
 18459  18FF  3400               	retlw	0
 18460  1900  341C               	retlw	28
 18461  1901  3400               	retlw	0
 18462  1902  341C               	retlw	28
 18463  1903  3400               	retlw	0
 18464  1904  341C               	retlw	28
 18465  1905  3400               	retlw	0
 18466  1906  341C               	retlw	28
 18467  1907  3400               	retlw	0
 18468  1908  341C               	retlw	28
 18469  1909  3400               	retlw	0
 18470  190A  341C               	retlw	28
 18471  190B  3400               	retlw	0
 18472  190C  341C               	retlw	28
 18473  190D  3400               	retlw	0
 18474  190E  341C               	retlw	28
 18475  190F  3400               	retlw	0
 18476  1910  341C               	retlw	28
 18477  1911  3400               	retlw	0
 18478  1912  341C               	retlw	28
 18479  1913  3400               	retlw	0
 18480  1914  341C               	retlw	28
 18481  1915  3400               	retlw	0
 18482  1916  341C               	retlw	28
 18483  1917  3400               	retlw	0
 18484  1918  341C               	retlw	28
 18485  1919  3400               	retlw	0
 18486  191A  341C               	retlw	28
 18487  191B  3400               	retlw	0
 18488  191C  341C               	retlw	28
 18489  191D  3400               	retlw	0
 18490  191E  341C               	retlw	28
 18491  191F  3400               	retlw	0
 18492  1920  341C               	retlw	28
 18493  1921  3400               	retlw	0
 18494  1922  341C               	retlw	28
 18495  1923  3400               	retlw	0
 18496  1924  341C               	retlw	28
 18497  1925  3400               	retlw	0
 18498  1926  341C               	retlw	28
 18499  1927  3400               	retlw	0
 18500  1928  341C               	retlw	28
 18501  1929  3400               	retlw	0
 18502  192A  341C               	retlw	28
 18503  192B  3400               	retlw	0
 18504  192C  341C               	retlw	28
 18505  192D  3400               	retlw	0
 18506  192E  341C               	retlw	28
 18507  192F  3400               	retlw	0
 18508  1930  341C               	retlw	28
 18509  1931  3400               	retlw	0
 18510  1932  341C               	retlw	28
 18511  1933  3400               	retlw	0
 18512  1934  341C               	retlw	28
 18513  1935  3400               	retlw	0
 18514  1936  341C               	retlw	28
 18515  1937  3400               	retlw	0
 18516  1938  341C               	retlw	28
 18517  1939  3400               	retlw	0
 18518  193A  341C               	retlw	28
 18519  193B  3400               	retlw	0
 18520  193C  341C               	retlw	28
 18521  193D  3400               	retlw	0
 18522  193E  341C               	retlw	28
 18523  193F  3400               	retlw	0
 18524  1940  341C               	retlw	28
 18525  1941  3400               	retlw	0
 18526  1942  341C               	retlw	28
 18527  1943  3400               	retlw	0
 18528  1944  341C               	retlw	28
 18529  1945  3400               	retlw	0
 18530  1946  341C               	retlw	28
 18531  1947  3400               	retlw	0
 18532  1948  341C               	retlw	28
 18533  1949  3400               	retlw	0
 18534  194A  341C               	retlw	28
 18535  194B  3400               	retlw	0
 18536  194C  341C               	retlw	28
 18537  194D  3400               	retlw	0
 18538  194E  341C               	retlw	28
 18539  194F  3400               	retlw	0
 18540  1950  341C               	retlw	28
 18541  1951  3400               	retlw	0
 18542  1952  341C               	retlw	28
 18543  1953  3400               	retlw	0
 18544  1954  341C               	retlw	28
 18545  1955  3400               	retlw	0
 18546  1956  341C               	retlw	28
 18547  1957  3400               	retlw	0
 18548  1958  341C               	retlw	28
 18549  1959  3400               	retlw	0
 18550  195A  341C               	retlw	28
 18551  195B  3400               	retlw	0
 18552  195C  341C               	retlw	28
 18553  195D  3400               	retlw	0
 18554  195E  341C               	retlw	28
 18555  195F  3400               	retlw	0
 18556  1960  341C               	retlw	28
 18557  1961  3400               	retlw	0
 18558  1962  341C               	retlw	28
 18559  1963  3400               	retlw	0
 18560  1964  341C               	retlw	28
 18561  1965  3400               	retlw	0
 18562  1966  341C               	retlw	28
 18563  1967  3400               	retlw	0
 18564  1968  341C               	retlw	28
 18565  1969  3400               	retlw	0
 18566  196A  341C               	retlw	28
 18567  196B  3400               	retlw	0
 18568  196C  341C               	retlw	28
 18569  196D  3400               	retlw	0
 18570  196E  341C               	retlw	28
 18571  196F  3400               	retlw	0
 18572  1970  341C               	retlw	28
 18573  1971  3400               	retlw	0
 18574  1972  341C               	retlw	28
 18575  1973  3400               	retlw	0
 18576  1974  341C               	retlw	28
 18577  1975  3400               	retlw	0
 18578  1976  341C               	retlw	28
 18579  1977  3400               	retlw	0
 18580  1978  341C               	retlw	28
 18581  1979  3400               	retlw	0
 18582  197A  341C               	retlw	28
 18583  197B  3400               	retlw	0
 18584  197C  341C               	retlw	28
 18585  197D  3400               	retlw	0
 18586  197E  341C               	retlw	28
 18587  197F  3400               	retlw	0
 18588  1980  341C               	retlw	28
 18589  1981  3400               	retlw	0
 18590  1982  341C               	retlw	28
 18591  1983  3400               	retlw	0
 18592  1984  341C               	retlw	28
 18593  1985  3400               	retlw	0
 18594  1986  341C               	retlw	28
 18595  1987  3400               	retlw	0
 18596  1988  341C               	retlw	28
 18597  1989  3400               	retlw	0
 18598  198A  341C               	retlw	28
 18599  198B  3400               	retlw	0
 18600  198C  341C               	retlw	28
 18601  198D  3400               	retlw	0
 18602  198E  341C               	retlw	28
 18603  198F  3400               	retlw	0
 18604  1990  341C               	retlw	28
 18605  1991  3400               	retlw	0
 18606  1992  341C               	retlw	28
 18607  1993  3400               	retlw	0
 18608  1994  341C               	retlw	28
 18609  1995  3400               	retlw	0
 18610  1996  341C               	retlw	28
 18611  1997  3400               	retlw	0
 18612  1998  341C               	retlw	28
 18613  1999  3400               	retlw	0
 18614  199A  341C               	retlw	28
 18615  199B  3400               	retlw	0
 18616  199C  341C               	retlw	28
 18617  199D  3400               	retlw	0
 18618  199E  341C               	retlw	28
 18619  199F  3400               	retlw	0
 18620  19A0  341C               	retlw	28
 18621  19A1  3400               	retlw	0
 18622  19A2  341C               	retlw	28
 18623  19A3  3400               	retlw	0
 18624  19A4  341C               	retlw	28
 18625  19A5  3400               	retlw	0
 18626  19A6  341C               	retlw	28
 18627  19A7  3400               	retlw	0
 18628  19A8  341C               	retlw	28
 18629  19A9  3400               	retlw	0
 18630  19AA  341C               	retlw	28
 18631  19AB  3400               	retlw	0
 18632  19AC  341C               	retlw	28
 18633  19AD  3400               	retlw	0
 18634  19AE  341C               	retlw	28
 18635  19AF  3400               	retlw	0
 18636  19B0  341C               	retlw	28
 18637  19B1  3400               	retlw	0
 18638  19B2  341C               	retlw	28
 18639  19B3  3400               	retlw	0
 18640  19B4  341C               	retlw	28
 18641  19B5  3400               	retlw	0
 18642  19B6  341C               	retlw	28
 18643  19B7  3400               	retlw	0
 18644  19B8  341C               	retlw	28
 18645  19B9  3400               	retlw	0
 18646  19BA  341C               	retlw	28
 18647  19BB  3400               	retlw	0
 18648  19BC  341C               	retlw	28
 18649  19BD  3400               	retlw	0
 18650  19BE  341C               	retlw	28
 18651  19BF  3400               	retlw	0
 18652  19C0  341C               	retlw	28
 18653  19C1  3400               	retlw	0
 18654  19C2  341C               	retlw	28
 18655  19C3  3400               	retlw	0
 18656  19C4  341C               	retlw	28
 18657  19C5  3400               	retlw	0
 18658  19C6  341C               	retlw	28
 18659  19C7  3400               	retlw	0
 18660  19C8  341C               	retlw	28
 18661  19C9  3400               	retlw	0
 18662  19CA  341C               	retlw	28
 18663  19CB  3400               	retlw	0
 18664  19CC  341C               	retlw	28
 18665  19CD  3400               	retlw	0
 18666  19CE  341C               	retlw	28
 18667  19CF  3400               	retlw	0
 18668  19D0  341C               	retlw	28
 18669  19D1  3400               	retlw	0
 18670  19D2  341C               	retlw	28
 18671  19D3  3400               	retlw	0
 18672  19D4  341C               	retlw	28
 18673  19D5  3400               	retlw	0
 18674  19D6  341C               	retlw	28
 18675  19D7  3400               	retlw	0
 18676  19D8  341C               	retlw	28
 18677  19D9  3400               	retlw	0
 18678  19DA  341C               	retlw	28
 18679  19DB  3400               	retlw	0
 18680  19DC  341C               	retlw	28
 18681  19DD  3400               	retlw	0
 18682  19DE  341C               	retlw	28
 18683  19DF  3400               	retlw	0
 18684  19E0  341C               	retlw	28
 18685  19E1  3400               	retlw	0
 18686  19E2  341C               	retlw	28
 18687  19E3  3400               	retlw	0
 18688  19E4  341C               	retlw	28
 18689  19E5  3400               	retlw	0
 18690  19E6  341C               	retlw	28
 18691  19E7  3400               	retlw	0
 18692  19E8  341C               	retlw	28
 18693  19E9  3400               	retlw	0
 18694  19EA  341C               	retlw	28
 18695  19EB  3400               	retlw	0
 18696  19EC  341C               	retlw	28
 18697  19ED  3400               	retlw	0
 18698  19EE  341C               	retlw	28
 18699  19EF  3400               	retlw	0
 18700  19F0  341C               	retlw	28
 18701  19F1  3400               	retlw	0
 18702  19F2  341C               	retlw	28
 18703  19F3  3400               	retlw	0
 18704  19F4  341C               	retlw	28
 18705  19F5  3400               	retlw	0
 18706  19F6  341C               	retlw	28
 18707  19F7  3400               	retlw	0
 18708  19F8  341C               	retlw	28
 18709  19F9  3400               	retlw	0
 18710  19FA  341C               	retlw	28
 18711  19FB  3400               	retlw	0
 18712  19FC  341C               	retlw	28
 18713  19FD  3400               	retlw	0
 18714  19FE  341C               	retlw	28
 18715  19FF  3400               	retlw	0
 18716  1A00  341C               	retlw	28
 18717  1A01  3400               	retlw	0
 18718  1A02  341C               	retlw	28
 18719  1A03  3400               	retlw	0
 18720  1A04  341C               	retlw	28
 18721  1A05  3400               	retlw	0
 18722  1A06  341C               	retlw	28
 18723  1A07  3400               	retlw	0
 18724  1A08  341C               	retlw	28
 18725  1A09  3400               	retlw	0
 18726  1A0A  341C               	retlw	28
 18727  1A0B  3400               	retlw	0
 18728  1A0C  341C               	retlw	28
 18729  1A0D  3400               	retlw	0
 18730  1A0E  341C               	retlw	28
 18731  1A0F  3400               	retlw	0
 18732  1A10  341C               	retlw	28
 18733  1A11  3400               	retlw	0
 18734  1A12  341C               	retlw	28
 18735  1A13  3400               	retlw	0
 18736  1A14  341C               	retlw	28
 18737  1A15  3400               	retlw	0
 18738  1A16  341C               	retlw	28
 18739  1A17  3400               	retlw	0
 18740  1A18  341C               	retlw	28
 18741  1A19  3400               	retlw	0
 18742  1A1A  341C               	retlw	28
 18743  1A1B  3400               	retlw	0
 18744  1A1C  341C               	retlw	28
 18745  1A1D  3400               	retlw	0
 18746  1A1E  341C               	retlw	28
 18747  1A1F  3400               	retlw	0
 18748  1A20  341C               	retlw	28
 18749  1A21  3400               	retlw	0
 18750  1A22  341C               	retlw	28
 18751  1A23  3400               	retlw	0
 18752  1A24  341C               	retlw	28
 18753  1A25  3400               	retlw	0
 18754  1A26  341C               	retlw	28
 18755  1A27  3400               	retlw	0
 18756  1A28  341C               	retlw	28
 18757  1A29  3400               	retlw	0
 18758  1A2A  341C               	retlw	28
 18759  1A2B  3400               	retlw	0
 18760  1A2C  341C               	retlw	28
 18761  1A2D  3400               	retlw	0
 18762  1A2E  341C               	retlw	28
 18763  1A2F  3400               	retlw	0
 18764  1A30  341C               	retlw	28
 18765  1A31  3400               	retlw	0
 18766  1A32  341C               	retlw	28
 18767  1A33  3400               	retlw	0
 18768  1A34  341C               	retlw	28
 18769  1A35  3400               	retlw	0
 18770  1A36  341C               	retlw	28
 18771  1A37  3400               	retlw	0
 18772  1A38  341C               	retlw	28
 18773  1A39  3400               	retlw	0
 18774  1A3A  341C               	retlw	28
 18775  1A3B  3400               	retlw	0
 18776  1A3C  341C               	retlw	28
 18777  1A3D  3400               	retlw	0
 18778  1A3E  341C               	retlw	28
 18779  1A3F  3400               	retlw	0
 18780  1A40  341C               	retlw	28
 18781  1A41  3400               	retlw	0
 18782  1A42  341C               	retlw	28
 18783  1A43  3400               	retlw	0
 18784  1A44  341C               	retlw	28
 18785  1A45  3400               	retlw	0
 18786  1A46  341C               	retlw	28
 18787  1A47  3400               	retlw	0
 18788  1A48  341C               	retlw	28
 18789  1A49  3400               	retlw	0
 18790  1A4A  341C               	retlw	28
 18791  1A4B  3400               	retlw	0
 18792  1A4C  341C               	retlw	28
 18793  1A4D  3400               	retlw	0
 18794  1A4E  341C               	retlw	28
 18795  1A4F  3400               	retlw	0
 18796  1A50  341C               	retlw	28
 18797  1A51  3400               	retlw	0
 18798  1A52  341C               	retlw	28
 18799  1A53  3400               	retlw	0
 18800  1A54  341C               	retlw	28
 18801  1A55  3400               	retlw	0
 18802  1A56  341C               	retlw	28
 18803  1A57  3400               	retlw	0
 18804  1A58  341C               	retlw	28
 18805  1A59  3400               	retlw	0
 18806  1A5A  341C               	retlw	28
 18807  1A5B  3400               	retlw	0
 18808  1A5C  341C               	retlw	28
 18809  1A5D  3400               	retlw	0
 18810  1A5E  341C               	retlw	28
 18811  1A5F  3400               	retlw	0
 18812  1A60  341C               	retlw	28
 18813  1A61  3400               	retlw	0
 18814  1A62  341C               	retlw	28
 18815  1A63  3400               	retlw	0
 18816  1A64  341C               	retlw	28
 18817  1A65  3400               	retlw	0
 18818  1A66  341C               	retlw	28
 18819  1A67  3400               	retlw	0
 18820  1A68  341C               	retlw	28
 18821  1A69  3400               	retlw	0
 18822  1A6A  341C               	retlw	28
 18823  1A6B  3400               	retlw	0
 18824  1A6C  341C               	retlw	28
 18825  1A6D  3400               	retlw	0
 18826  1A6E  341C               	retlw	28
 18827  1A6F  3400               	retlw	0
 18828  1A70  341C               	retlw	28
 18829  1A71  3400               	retlw	0
 18830  1A72  341C               	retlw	28
 18831  1A73  3400               	retlw	0
 18832  1A74  341C               	retlw	28
 18833  1A75  3400               	retlw	0
 18834  1A76  341C               	retlw	28
 18835  1A77  3400               	retlw	0
 18836  1A78  341C               	retlw	28
 18837  1A79  3400               	retlw	0
 18838  1A7A  341C               	retlw	28
 18839  1A7B  3400               	retlw	0
 18840  1A7C  341C               	retlw	28
 18841  1A7D  3400               	retlw	0
 18842  1A7E  341C               	retlw	28
 18843  1A7F  3400               	retlw	0
 18844  1A80  341C               	retlw	28
 18845  1A81  3400               	retlw	0
 18846  1A82  341C               	retlw	28
 18847  1A83  3400               	retlw	0
 18848  1A84  341C               	retlw	28
 18849  1A85  3400               	retlw	0
 18850  1A86  341C               	retlw	28
 18851  1A87  3400               	retlw	0
 18852  1A88  341B               	retlw	27
 18853  1A89  3400               	retlw	0
 18854  1A8A  341B               	retlw	27
 18855  1A8B  3400               	retlw	0
 18856  1A8C  341B               	retlw	27
 18857  1A8D  3400               	retlw	0
 18858  1A8E  341B               	retlw	27
 18859  1A8F  3400               	retlw	0
 18860  1A90  341B               	retlw	27
 18861  1A91  3400               	retlw	0
 18862  1A92  341B               	retlw	27
 18863  1A93  3400               	retlw	0
 18864  1A94  341B               	retlw	27
 18865  1A95  3400               	retlw	0
 18866  1A96  341B               	retlw	27
 18867  1A97  3400               	retlw	0
 18868  1A98  341B               	retlw	27
 18869  1A99  3400               	retlw	0
 18870  1A9A  341B               	retlw	27
 18871  1A9B  3400               	retlw	0
 18872  1A9C  341B               	retlw	27
 18873  1A9D  3400               	retlw	0
 18874  1A9E  341B               	retlw	27
 18875  1A9F  3400               	retlw	0
 18876  1AA0  341B               	retlw	27
 18877  1AA1  3400               	retlw	0
 18878  1AA2  341B               	retlw	27
 18879  1AA3  3400               	retlw	0
 18880  1AA4  341B               	retlw	27
 18881  1AA5  3400               	retlw	0
 18882  1AA6  341B               	retlw	27
 18883  1AA7  3400               	retlw	0
 18884  1AA8  341B               	retlw	27
 18885  1AA9  3400               	retlw	0
 18886  1AAA  341B               	retlw	27
 18887  1AAB  3400               	retlw	0
 18888  1AAC  341B               	retlw	27
 18889  1AAD  3400               	retlw	0
 18890  1AAE  341B               	retlw	27
 18891  1AAF  3400               	retlw	0
 18892  1AB0  341B               	retlw	27
 18893  1AB1  3400               	retlw	0
 18894  1AB2  341B               	retlw	27
 18895  1AB3  3400               	retlw	0
 18896  1AB4  341B               	retlw	27
 18897  1AB5  3400               	retlw	0
 18898  1AB6  341B               	retlw	27
 18899  1AB7  3400               	retlw	0
 18900  1AB8  341B               	retlw	27
 18901  1AB9  3400               	retlw	0
 18902  1ABA  341B               	retlw	27
 18903  1ABB  3400               	retlw	0
 18904  1ABC  341B               	retlw	27
 18905  1ABD  3400               	retlw	0
 18906  1ABE  341B               	retlw	27
 18907  1ABF  3400               	retlw	0
 18908  1AC0  341B               	retlw	27
 18909  1AC1  3400               	retlw	0
 18910  1AC2  341B               	retlw	27
 18911  1AC3  3400               	retlw	0
 18912  1AC4  341B               	retlw	27
 18913  1AC5  3400               	retlw	0
 18914  1AC6  341B               	retlw	27
 18915  1AC7  3400               	retlw	0
 18916  1AC8  341B               	retlw	27
 18917  1AC9  3400               	retlw	0
 18918  1ACA  341B               	retlw	27
 18919  1ACB  3400               	retlw	0
 18920  1ACC  341B               	retlw	27
 18921  1ACD  3400               	retlw	0
 18922  1ACE  341B               	retlw	27
 18923  1ACF  3400               	retlw	0
 18924  1AD0  341B               	retlw	27
 18925  1AD1  3400               	retlw	0
 18926  1AD2  341B               	retlw	27
 18927  1AD3  3400               	retlw	0
 18928  1AD4  341B               	retlw	27
 18929  1AD5  3400               	retlw	0
 18930  1AD6  341B               	retlw	27
 18931  1AD7  3400               	retlw	0
 18932  1AD8  341B               	retlw	27
 18933  1AD9  3400               	retlw	0
 18934  1ADA  341B               	retlw	27
 18935  1ADB  3400               	retlw	0
 18936  1ADC  341B               	retlw	27
 18937  1ADD  3400               	retlw	0
 18938  1ADE  341B               	retlw	27
 18939  1ADF  3400               	retlw	0
 18940  1AE0  341B               	retlw	27
 18941  1AE1  3400               	retlw	0
 18942  1AE2  341B               	retlw	27
 18943  1AE3  3400               	retlw	0
 18944  1AE4  341B               	retlw	27
 18945  1AE5  3400               	retlw	0
 18946  1AE6  341B               	retlw	27
 18947  1AE7  3400               	retlw	0
 18948  1AE8  341B               	retlw	27
 18949  1AE9  3400               	retlw	0
 18950  1AEA  341B               	retlw	27
 18951  1AEB  3400               	retlw	0
 18952  1AEC  341B               	retlw	27
 18953  1AED  3400               	retlw	0
 18954  1AEE  341B               	retlw	27
 18955  1AEF  3400               	retlw	0
 18956  1AF0  341B               	retlw	27
 18957  1AF1  3400               	retlw	0
 18958  1AF2  341B               	retlw	27
 18959  1AF3  3400               	retlw	0
 18960  1AF4  341B               	retlw	27
 18961  1AF5  3400               	retlw	0
 18962  1AF6  341B               	retlw	27
 18963  1AF7  3400               	retlw	0
 18964  1AF8  341B               	retlw	27
 18965  1AF9  3400               	retlw	0
 18966  1AFA  341B               	retlw	27
 18967  1AFB  3400               	retlw	0
 18968  1AFC  341B               	retlw	27
 18969  1AFD  3400               	retlw	0
 18970  1AFE  341B               	retlw	27
 18971  1AFF  3400               	retlw	0
 18972  1B00  341B               	retlw	27
 18973  1B01  3400               	retlw	0
 18974  1B02  341B               	retlw	27
 18975  1B03  3400               	retlw	0
 18976  1B04  341B               	retlw	27
 18977  1B05  3400               	retlw	0
 18978  1B06  341B               	retlw	27
 18979  1B07  3400               	retlw	0
 18980  1B08  341B               	retlw	27
 18981  1B09  3400               	retlw	0
 18982  1B0A  341B               	retlw	27
 18983  1B0B  3400               	retlw	0
 18984  1B0C  341B               	retlw	27
 18985  1B0D  3400               	retlw	0
 18986  1B0E  341B               	retlw	27
 18987  1B0F  3400               	retlw	0
 18988  1B10  341B               	retlw	27
 18989  1B11  3400               	retlw	0
 18990  1B12  341B               	retlw	27
 18991  1B13  3400               	retlw	0
 18992  1B14  341B               	retlw	27
 18993  1B15  3400               	retlw	0
 18994  1B16  341B               	retlw	27
 18995  1B17  3400               	retlw	0
 18996  1B18  341B               	retlw	27
 18997  1B19  3400               	retlw	0
 18998  1B1A  341B               	retlw	27
 18999  1B1B  3400               	retlw	0
 19000  1B1C  341B               	retlw	27
 19001  1B1D  3400               	retlw	0
 19002  1B1E  341B               	retlw	27
 19003  1B1F  3400               	retlw	0
 19004  1B20  341B               	retlw	27
 19005  1B21  3400               	retlw	0
 19006  1B22  341B               	retlw	27
 19007  1B23  3400               	retlw	0
 19008  1B24  341B               	retlw	27
 19009  1B25  3400               	retlw	0
 19010  1B26  341B               	retlw	27
 19011  1B27  3400               	retlw	0
 19012  1B28  341B               	retlw	27
 19013  1B29  3400               	retlw	0
 19014  1B2A  341B               	retlw	27
 19015  1B2B  3400               	retlw	0
 19016  1B2C  341B               	retlw	27
 19017  1B2D  3400               	retlw	0
 19018  1B2E  341B               	retlw	27
 19019  1B2F  3400               	retlw	0
 19020  1B30  341B               	retlw	27
 19021  1B31  3400               	retlw	0
 19022  1B32  341B               	retlw	27
 19023  1B33  3400               	retlw	0
 19024  1B34  341B               	retlw	27
 19025  1B35  3400               	retlw	0
 19026  1B36  341B               	retlw	27
 19027  1B37  3400               	retlw	0
 19028  1B38  341B               	retlw	27
 19029  1B39  3400               	retlw	0
 19030  1B3A  341B               	retlw	27
 19031  1B3B  3400               	retlw	0
 19032  1B3C  341B               	retlw	27
 19033  1B3D  3400               	retlw	0
 19034  1B3E  341B               	retlw	27
 19035  1B3F  3400               	retlw	0
 19036  1B40  341B               	retlw	27
 19037  1B41  3400               	retlw	0
 19038  1B42  341B               	retlw	27
 19039  1B43  3400               	retlw	0
 19040  1B44  341B               	retlw	27
 19041  1B45  3400               	retlw	0
 19042  1B46  341B               	retlw	27
 19043  1B47  3400               	retlw	0
 19044  1B48  341B               	retlw	27
 19045  1B49  3400               	retlw	0
 19046  1B4A  341B               	retlw	27
 19047  1B4B  3400               	retlw	0
 19048  1B4C  341B               	retlw	27
 19049  1B4D  3400               	retlw	0
 19050  1B4E  341B               	retlw	27
 19051  1B4F  3400               	retlw	0
 19052  1B50  341B               	retlw	27
 19053  1B51  3400               	retlw	0
 19054  1B52  341B               	retlw	27
 19055  1B53  3400               	retlw	0
 19056  1B54  341B               	retlw	27
 19057  1B55  3400               	retlw	0
 19058  1B56  341B               	retlw	27
 19059  1B57  3400               	retlw	0
 19060  1B58  341B               	retlw	27
 19061  1B59  3400               	retlw	0
 19062  1B5A  341B               	retlw	27
 19063  1B5B  3400               	retlw	0
 19064  1B5C  341B               	retlw	27
 19065  1B5D  3400               	retlw	0
 19066  1B5E  341B               	retlw	27
 19067  1B5F  3400               	retlw	0
 19068  1B60  341B               	retlw	27
 19069  1B61  3400               	retlw	0
 19070  1B62  341B               	retlw	27
 19071  1B63  3400               	retlw	0
 19072  1B64  341B               	retlw	27
 19073  1B65  3400               	retlw	0
 19074  1B66  341B               	retlw	27
 19075  1B67  3400               	retlw	0
 19076  1B68  341B               	retlw	27
 19077  1B69  3400               	retlw	0
 19078  1B6A  341B               	retlw	27
 19079  1B6B  3400               	retlw	0
 19080  1B6C  341B               	retlw	27
 19081  1B6D  3400               	retlw	0
 19082  1B6E  341B               	retlw	27
 19083  1B6F  3400               	retlw	0
 19084  1B70  341B               	retlw	27
 19085  1B71  3400               	retlw	0
 19086  1B72  341B               	retlw	27
 19087  1B73  3400               	retlw	0
 19088  1B74  341B               	retlw	27
 19089  1B75  3400               	retlw	0
 19090  1B76  341B               	retlw	27
 19091  1B77  3400               	retlw	0
 19092  1B78  341B               	retlw	27
 19093  1B79  3400               	retlw	0
 19094  1B7A  341B               	retlw	27
 19095  1B7B  3400               	retlw	0
 19096  1B7C  341B               	retlw	27
 19097  1B7D  3400               	retlw	0
 19098  1B7E  341B               	retlw	27
 19099  1B7F  3400               	retlw	0
 19100  1B80  341B               	retlw	27
 19101  1B81  3400               	retlw	0
 19102  1B82  341B               	retlw	27
 19103  1B83  3400               	retlw	0
 19104  1B84  341B               	retlw	27
 19105  1B85  3400               	retlw	0
 19106  1B86  341B               	retlw	27
 19107  1B87  3400               	retlw	0
 19108  1B88  341B               	retlw	27
 19109  1B89  3400               	retlw	0
 19110  1B8A  341B               	retlw	27
 19111  1B8B  3400               	retlw	0
 19112  1B8C  341B               	retlw	27
 19113  1B8D  3400               	retlw	0
 19114  1B8E  341B               	retlw	27
 19115  1B8F  3400               	retlw	0
 19116  1B90  341B               	retlw	27
 19117  1B91  3400               	retlw	0
 19118  1B92  341B               	retlw	27
 19119  1B93  3400               	retlw	0
 19120  1B94  341B               	retlw	27
 19121  1B95  3400               	retlw	0
 19122  1B96  3419               	retlw	25
 19123  1B97  3400               	retlw	0
 19124  1B98  3419               	retlw	25
 19125  1B99  3400               	retlw	0
 19126  1B9A  3419               	retlw	25
 19127  1B9B  3400               	retlw	0
 19128  1B9C  3419               	retlw	25
 19129  1B9D  3400               	retlw	0
 19130  1B9E  3419               	retlw	25
 19131  1B9F  3400               	retlw	0
 19132  1BA0  3419               	retlw	25
 19133  1BA1  3400               	retlw	0
 19134  1BA2  3419               	retlw	25
 19135  1BA3  3400               	retlw	0
 19136  1BA4  3419               	retlw	25
 19137  1BA5  3400               	retlw	0
 19138  1BA6  3419               	retlw	25
 19139  1BA7  3400               	retlw	0
 19140  1BA8  3419               	retlw	25
 19141  1BA9  3400               	retlw	0
 19142  1BAA  3419               	retlw	25
 19143  1BAB  3400               	retlw	0
 19144  1BAC  3419               	retlw	25
 19145  1BAD  3400               	retlw	0
 19146  1BAE  3419               	retlw	25
 19147  1BAF  3400               	retlw	0
 19148  1BB0  3419               	retlw	25
 19149  1BB1  3400               	retlw	0
 19150  1BB2  3419               	retlw	25
 19151  1BB3  3400               	retlw	0
 19152  1BB4  3419               	retlw	25
 19153  1BB5  3400               	retlw	0
 19154  1BB6  3419               	retlw	25
 19155  1BB7  3400               	retlw	0
 19156  1BB8  3419               	retlw	25
 19157  1BB9  3400               	retlw	0
 19158  1BBA  3419               	retlw	25
 19159  1BBB  3400               	retlw	0
 19160  1BBC  3419               	retlw	25
 19161  1BBD  3400               	retlw	0
 19162  1BBE  3419               	retlw	25
 19163  1BBF  3400               	retlw	0
 19164  1BC0  3419               	retlw	25
 19165  1BC1  3400               	retlw	0
 19166  1BC2  3419               	retlw	25
 19167  1BC3  3400               	retlw	0
 19168  1BC4  3419               	retlw	25
 19169  1BC5  3400               	retlw	0
 19170  1BC6  3419               	retlw	25
 19171  1BC7  3400               	retlw	0
 19172  1BC8  3419               	retlw	25
 19173  1BC9  3400               	retlw	0
 19174  1BCA  3419               	retlw	25
 19175  1BCB  3400               	retlw	0
 19176  1BCC  3419               	retlw	25
 19177  1BCD  3400               	retlw	0
 19178  1BCE  3419               	retlw	25
 19179  1BCF  3400               	retlw	0
 19180  1BD0  3419               	retlw	25
 19181  1BD1  3400               	retlw	0
 19182  1BD2  3419               	retlw	25
 19183  1BD3  3400               	retlw	0
 19184  1BD4  3419               	retlw	25
 19185  1BD5  3400               	retlw	0
 19186  1BD6  3419               	retlw	25
 19187  1BD7  3400               	retlw	0
 19188  1BD8  3419               	retlw	25
 19189  1BD9  3400               	retlw	0
 19190  1BDA  3419               	retlw	25
 19191  1BDB  3400               	retlw	0
 19192  1BDC  3419               	retlw	25
 19193  1BDD  3400               	retlw	0
 19194  1BDE  3419               	retlw	25
 19195  1BDF  3400               	retlw	0
 19196  1BE0  3419               	retlw	25
 19197  1BE1  3400               	retlw	0
 19198  1BE2  3419               	retlw	25
 19199  1BE3  3400               	retlw	0
 19200  1BE4  3419               	retlw	25
 19201  1BE5  3400               	retlw	0
 19202  1BE6  3419               	retlw	25
 19203  1BE7  3400               	retlw	0
 19204  1BE8  3419               	retlw	25
 19205  1BE9  3400               	retlw	0
 19206  1BEA  3419               	retlw	25
 19207  1BEB  3400               	retlw	0
 19208  1BEC  3419               	retlw	25
 19209  1BED  3400               	retlw	0
 19210  1BEE  3419               	retlw	25
 19211  1BEF  3400               	retlw	0
 19212  1BF0  3419               	retlw	25
 19213  1BF1  3400               	retlw	0
 19214  1BF2  3419               	retlw	25
 19215  1BF3  3400               	retlw	0
 19216  1BF4  3419               	retlw	25
 19217  1BF5  3400               	retlw	0
 19218  1BF6  3419               	retlw	25
 19219  1BF7  3400               	retlw	0
 19220  1BF8  3419               	retlw	25
 19221  1BF9  3400               	retlw	0
 19222  1BFA  3419               	retlw	25
 19223  1BFB  3400               	retlw	0
 19224  1BFC  3419               	retlw	25
 19225  1BFD  3400               	retlw	0
 19226  1BFE  3419               	retlw	25
 19227  1BFF  3400               	retlw	0
 19228  1C00  3419               	retlw	25
 19229  1C01  3400               	retlw	0
 19230  1C02  3419               	retlw	25
 19231  1C03  3400               	retlw	0
 19232  1C04  3419               	retlw	25
 19233  1C05  3400               	retlw	0
 19234  1C06  3419               	retlw	25
 19235  1C07  3400               	retlw	0
 19236  1C08  3419               	retlw	25
 19237  1C09  3400               	retlw	0
 19238  1C0A  3419               	retlw	25
 19239  1C0B  3400               	retlw	0
 19240  1C0C  3419               	retlw	25
 19241  1C0D  3400               	retlw	0
 19242  1C0E  3419               	retlw	25
 19243  1C0F  3400               	retlw	0
 19244  1C10  3419               	retlw	25
 19245  1C11  3400               	retlw	0
 19246  1C12  3419               	retlw	25
 19247  1C13  3400               	retlw	0
 19248  1C14  3419               	retlw	25
 19249  1C15  3400               	retlw	0
 19250  1C16  3419               	retlw	25
 19251  1C17  3400               	retlw	0
 19252  1C18  3419               	retlw	25
 19253  1C19  3400               	retlw	0
 19254  1C1A  3419               	retlw	25
 19255  1C1B  3400               	retlw	0
 19256  1C1C  3419               	retlw	25
 19257  1C1D  3400               	retlw	0
 19258  1C1E  3419               	retlw	25
 19259  1C1F  3400               	retlw	0
 19260  1C20  3419               	retlw	25
 19261  1C21  3400               	retlw	0
 19262  1C22  3419               	retlw	25
 19263  1C23  3400               	retlw	0
 19264  1C24  3419               	retlw	25
 19265  1C25  3400               	retlw	0
 19266  1C26  3419               	retlw	25
 19267  1C27  3400               	retlw	0
 19268  1C28  3419               	retlw	25
 19269  1C29  3400               	retlw	0
 19270  1C2A  3419               	retlw	25
 19271  1C2B  3400               	retlw	0
 19272  1C2C  3419               	retlw	25
 19273  1C2D  3400               	retlw	0
 19274  1C2E  3419               	retlw	25
 19275  1C2F  3400               	retlw	0
 19276  1C30  3419               	retlw	25
 19277  1C31  3400               	retlw	0
 19278  1C32  3419               	retlw	25
 19279  1C33  3400               	retlw	0
 19280  1C34  3419               	retlw	25
 19281  1C35  3400               	retlw	0
 19282  1C36  3419               	retlw	25
 19283  1C37  3400               	retlw	0
 19284  1C38  3419               	retlw	25
 19285  1C39  3400               	retlw	0
 19286  1C3A  3419               	retlw	25
 19287  1C3B  3400               	retlw	0
 19288  1C3C  3419               	retlw	25
 19289  1C3D  3400               	retlw	0
 19290  1C3E  3419               	retlw	25
 19291  1C3F  3400               	retlw	0
 19292  1C40  3419               	retlw	25
 19293  1C41  3400               	retlw	0
 19294  1C42  3419               	retlw	25
 19295  1C43  3400               	retlw	0
 19296  1C44  3419               	retlw	25
 19297  1C45  3400               	retlw	0
 19298  1C46  3419               	retlw	25
 19299  1C47  3400               	retlw	0
 19300  1C48  3419               	retlw	25
 19301  1C49  3400               	retlw	0
 19302  1C4A  3419               	retlw	25
 19303  1C4B  3400               	retlw	0
 19304  1C4C  3419               	retlw	25
 19305  1C4D  3400               	retlw	0
 19306  1C4E  3419               	retlw	25
 19307  1C4F  3400               	retlw	0
 19308  1C50  3419               	retlw	25
 19309  1C51  3400               	retlw	0
 19310  1C52  3419               	retlw	25
 19311  1C53  3400               	retlw	0
 19312  1C54  3419               	retlw	25
 19313  1C55  3400               	retlw	0
 19314  1C56  3419               	retlw	25
 19315  1C57  3400               	retlw	0
 19316  1C58  3419               	retlw	25
 19317  1C59  3400               	retlw	0
 19318  1C5A  3419               	retlw	25
 19319  1C5B  3400               	retlw	0
 19320  1C5C  3419               	retlw	25
 19321  1C5D  3400               	retlw	0
 19322  1C5E  3419               	retlw	25
 19323  1C5F  3400               	retlw	0
 19324  1C60  3419               	retlw	25
 19325  1C61  3400               	retlw	0
 19326  1C62  3419               	retlw	25
 19327  1C63  3400               	retlw	0
 19328  1C64  3419               	retlw	25
 19329  1C65  3400               	retlw	0
 19330  1C66  3419               	retlw	25
 19331  1C67  3400               	retlw	0
 19332  1C68  3419               	retlw	25
 19333  1C69  3400               	retlw	0
 19334  1C6A  3419               	retlw	25
 19335  1C6B  3400               	retlw	0
 19336  1C6C  3419               	retlw	25
 19337  1C6D  3400               	retlw	0
 19338  1C6E  3419               	retlw	25
 19339  1C6F  3400               	retlw	0
 19340  1C70  3419               	retlw	25
 19341  1C71  3400               	retlw	0
 19342  1C72  3419               	retlw	25
 19343  1C73  3400               	retlw	0
 19344  1C74  3419               	retlw	25
 19345  1C75  3400               	retlw	0
 19346  1C76  3419               	retlw	25
 19347  1C77  3400               	retlw	0
 19348  1C78  3419               	retlw	25
 19349  1C79  3400               	retlw	0
 19350  1C7A  3419               	retlw	25
 19351  1C7B  3400               	retlw	0
 19352  1C7C  3419               	retlw	25
 19353  1C7D  3400               	retlw	0
 19354  1C7E  3419               	retlw	25
 19355  1C7F  3400               	retlw	0
 19356  1C80  3419               	retlw	25
 19357  1C81  3400               	retlw	0
 19358  1C82  3419               	retlw	25
 19359  1C83  3400               	retlw	0
 19360  1C84  3419               	retlw	25
 19361  1C85  3400               	retlw	0
 19362  1C86                     __end_of_acce200:
 19363                           
 19364                           	psect	stringtext2
 19365  5800                     __pstringtext2:
 19366  5800                     __powers_:
 19367  5800  3400               	retlw	0
 19368  5801  3400               	retlw	0
 19369  5802  3480               	retlw	128
 19370  5803  343F               	retlw	63
 19371  5804  3400               	retlw	0
 19372  5805  3400               	retlw	0
 19373  5806  3420               	retlw	32
 19374  5807  3441               	retlw	65
 19375  5808  3400               	retlw	0
 19376  5809  3400               	retlw	0
 19377  580A  34C8               	retlw	200
 19378  580B  3442               	retlw	66
 19379  580C  3400               	retlw	0
 19380  580D  3400               	retlw	0
 19381  580E  347A               	retlw	122
 19382  580F  3444               	retlw	68
 19383  5810  3400               	retlw	0
 19384  5811  3440               	retlw	64
 19385  5812  341C               	retlw	28
 19386  5813  3446               	retlw	70
 19387  5814  3400               	retlw	0
 19388  5815  3450               	retlw	80
 19389  5816  34C3               	retlw	195
 19390  5817  3447               	retlw	71
 19391  5818  3400               	retlw	0
 19392  5819  3424               	retlw	36
 19393  581A  3474               	retlw	116
 19394  581B  3449               	retlw	73
 19395  581C  3480               	retlw	128
 19396  581D  3496               	retlw	150
 19397  581E  3418               	retlw	24
 19398  581F  344B               	retlw	75
 19399  5820  3420               	retlw	32
 19400  5821  34BC               	retlw	188
 19401  5822  34BE               	retlw	190
 19402  5823  344C               	retlw	76
 19403  5824  3428               	retlw	40
 19404  5825  346B               	retlw	107
 19405  5826  346E               	retlw	110
 19406  5827  344E               	retlw	78
 19407  5828  34F9               	retlw	249
 19408  5829  3402               	retlw	2
 19409  582A  3415               	retlw	21
 19410  582B  3450               	retlw	80
 19411  582C  34EC               	retlw	236
 19412  582D  3478               	retlw	120
 19413  582E  34AD               	retlw	173
 19414  582F  3460               	retlw	96
 19415  5830  34CA               	retlw	202
 19416  5831  34F2               	retlw	242
 19417  5832  3449               	retlw	73
 19418  5833  3471               	retlw	113
 19419  5834                     __end_of__powers_:
 19420                           
 19421                           	psect	stringtext3
 19422  5834                     __pstringtext3:
 19423  5834                     __npowers_:
 19424  5834  3400               	retlw	0
 19425  5835  3400               	retlw	0
 19426  5836  3480               	retlw	128
 19427  5837  343F               	retlw	63
 19428  5838  34CD               	retlw	205
 19429  5839  34CC               	retlw	204
 19430  583A  34CC               	retlw	204
 19431  583B  343D               	retlw	61
 19432  583C  340A               	retlw	10
 19433  583D  34D7               	retlw	215
 19434  583E  3423               	retlw	35
 19435  583F  343C               	retlw	60
 19436  5840  346F               	retlw	111
 19437  5841  3412               	retlw	18
 19438  5842  3483               	retlw	131
 19439  5843  343A               	retlw	58
 19440  5844  3417               	retlw	23
 19441  5845  34B7               	retlw	183
 19442  5846  34D1               	retlw	209
 19443  5847  3438               	retlw	56
 19444  5848  34AC               	retlw	172
 19445  5849  34C5               	retlw	197
 19446  584A  3427               	retlw	39
 19447  584B  3437               	retlw	55
 19448  584C  34BD               	retlw	189
 19449  584D  3437               	retlw	55
 19450  584E  3486               	retlw	134
 19451  584F  3435               	retlw	53
 19452  5850  3495               	retlw	149
 19453  5851  34BF               	retlw	191
 19454  5852  34D6               	retlw	214
 19455  5853  3433               	retlw	51
 19456  5854  3477               	retlw	119
 19457  5855  34CC               	retlw	204
 19458  5856  342B               	retlw	43
 19459  5857  3432               	retlw	50
 19460  5858  345F               	retlw	95
 19461  5859  3470               	retlw	112
 19462  585A  3489               	retlw	137
 19463  585B  3430               	retlw	48
 19464  585C  34FF               	retlw	255
 19465  585D  34E6               	retlw	230
 19466  585E  34DB               	retlw	219
 19467  585F  342E               	retlw	46
 19468  5860  3408               	retlw	8
 19469  5861  34E5               	retlw	229
 19470  5862  343C               	retlw	60
 19471  5863  341E               	retlw	30
 19472  5864  3460               	retlw	96
 19473  5865  3442               	retlw	66
 19474  5866  34A2               	retlw	162
 19475  5867  340D               	retlw	13
 19476  5868                     __end_of__npowers_:
 19477                           
 19478                           	psect	stringtext4
 19479  61AB                     __pstringtext4:
 19480  61AB                     _spi2_configuration:
 19481  61AB  340A               	retlw	10
 19482  61AC  3440               	retlw	64
 19483  61AD  3431               	retlw	49
 19484  61AE  3400               	retlw	0
 19485  61AF                     __end_of_spi2_configuration:
 19486                           
 19487                           	psect	stringtext5
 19488  5868                     __pstringtext5:
 19489  5868                     _dpowers:
 19490  5868  3401               	retlw	1
 19491  5869  3400               	retlw	0
 19492  586A  3400               	retlw	0
 19493  586B  3400               	retlw	0
 19494  586C  340A               	retlw	10
 19495  586D  3400               	retlw	0
 19496  586E  3400               	retlw	0
 19497  586F  3400               	retlw	0
 19498  5870  3464               	retlw	100
 19499  5871  3400               	retlw	0
 19500  5872  3400               	retlw	0
 19501  5873  3400               	retlw	0
 19502  5874  34E8               	retlw	232
 19503  5875  3403               	retlw	3
 19504  5876  3400               	retlw	0
 19505  5877  3400               	retlw	0
 19506  5878  3410               	retlw	16
 19507  5879  3427               	retlw	39
 19508  587A  3400               	retlw	0
 19509  587B  3400               	retlw	0
 19510  587C  34A0               	retlw	160
 19511  587D  3486               	retlw	134
 19512  587E  3401               	retlw	1
 19513  587F  3400               	retlw	0
 19514  5880  3440               	retlw	64
 19515  5881  3442               	retlw	66
 19516  5882  340F               	retlw	15
 19517  5883  3400               	retlw	0
 19518  5884  3480               	retlw	128
 19519  5885  3496               	retlw	150
 19520  5886  3498               	retlw	152
 19521  5887  3400               	retlw	0
 19522  5888  3400               	retlw	0
 19523  5889  34E1               	retlw	225
 19524  588A  34F5               	retlw	245
 19525  588B  3405               	retlw	5
 19526  588C  3400               	retlw	0
 19527  588D  34CA               	retlw	202
 19528  588E  349A               	retlw	154
 19529  588F  343B               	retlw	59
 19530  5890                     __end_of_dpowers:
 19531                           
 19532                           	psect	nvBANK2
 19533  0161                     __pnvBANK2:
 19534  0161                     _TMR2_InterruptHandler:
 19535  0161                     	ds	2
 19536  0163                     _IOCBF5_InterruptHandler:
 19537  0163                     	ds	2
 19538  0165                     _IOCBF4_InterruptHandler:
 19539  0165                     	ds	2
 19540  0167                     _IOCBF3_InterruptHandler:
 19541  0167                     	ds	2
 19542  0169                     _MSSP2_InterruptHandler:
 19543  0169                     	ds	2
 19544  016B                     _eusartTxBufferRemaining:
 19545  016B                     	ds	1
 19546                           
 19547                           	psect	nvBANK3
 19548  01E4                     __pnvBANK3:
 19549  01E4                     _timer5ReloadVal:
 19550  01E4                     	ds	2
 19551  01E6                     _EUSART_ErrorHandler:
 19552  01E6                     	ds	2
 19553  01E8                     _EUSART_OverrunErrorHandler:
 19554  01E8                     	ds	2
 19555  01EA                     _EUSART_FramingErrorHandler:
 19556  01EA                     	ds	2
 19557  01EC                     _EUSART_RxDefaultInterruptHandler:
 19558  01EC                     	ds	2
 19559  01EE                     _EUSART_TxDefaultInterruptHandler:
 19560  01EE                     	ds	2
 19561                           
 19562                           	psect	nvBANK4
 19563  0268                     __pnvBANK4:
 19564  0268                     _timer1ReloadVal:
 19565  0268                     	ds	2
 19566  0017                     _LATBbits	set	23
 19567  0018                     _LATCbits	set	24
 19568  0019                     _LATDbits	set	25
 19569  000C                     _PORTAbits	set	12
 19570  001A                     _LATEbits	set	26
 19571  0016                     _LATAbits	set	22
 19572  0014                     _TRISD	set	20
 19573  0013                     _TRISC	set	19
 19574  0012                     _TRISB	set	18
 19575  0011                     _TRISA	set	17
 19576  0015                     _TRISE	set	21
 19577  0018                     _LATC	set	24
 19578  0017                     _LATB	set	23
 19579  0016                     _LATA	set	22
 19580  0019                     _LATD	set	25
 19581  001A                     _LATE	set	26
 19582  000B                     _INTCONbits	set	11
 19583  0014                     _TRISDbits	set	20
 19584  000D                     _PORTB	set	13
 19585  009D                     _ADACQ	set	157
 19586  0093                     _ADCON0	set	147
 19587  0098                     _ADCLK	set	152
 19588  0099                     _ADACT	set	153
 19589  009A                     _ADREF	set	154
 19590  0097                     _ADSTAT	set	151
 19591  0096                     _ADCON3	set	150
 19592  0095                     _ADCON2	set	149
 19593  0094                     _ADCON1	set	148
 19594  009C                     _ADPRE	set	156
 19595  009B                     _ADCAP	set	155
 19596  009E                     _ADPCH	set	158
 19597  010D                     _ADRPT	set	269
 19598  0113                     _ADSTPTH	set	275
 19599  0112                     _ADSTPTL	set	274
 19600  0111                     _ADUTHH	set	273
 19601  0110                     _ADUTHL	set	272
 19602  010F                     _ADLTHH	set	271
 19603  010E                     _ADLTHL	set	270
 19604  0119                     _RC1REG	set	281
 19605  011D                     _RC1STAbits	set	285
 19606  011A                     _TX1REG	set	282
 19607  011C                     _SP1BRGH	set	284
 19608  011B                     _SP1BRGL	set	283
 19609  011E                     _TX1STA	set	286
 19610  011D                     _RC1STA	set	285
 19611  011F                     _BAUD1CON	set	287
 19612  019A                     _SSP2CON1bits	set	410
 19613  0197                     _SSP2ADD	set	407
 19614  019A                     _SSP2CON1	set	410
 19615  0199                     _SSP2STAT	set	409
 19616  0218                     _TMR5	set	536
 19617  020E                     _T1CON	set	526
 19618  020C                     _TMR1L	set	524
 19619  020D                     _TMR1H	set	525
 19620  0211                     _T1CLK	set	529
 19621  0210                     _T1GATE	set	528
 19622  020F                     _T1GCON	set	527
 19623  021A                     _T5CON	set	538
 19624  0218                     _TMR5L	set	536
 19625  0219                     _TMR5H	set	537
 19626  021D                     _T5CLK	set	541
 19627  021C                     _T5GATE	set	540
 19628  021B                     _T5GCON	set	539
 19629  0294                     _T4CON	set	660
 19630  0292                     _T4TMR	set	658
 19631  0293                     _T4PR	set	659
 19632  0297                     _T4RST	set	663
 19633  0295                     _T4HLT	set	661
 19634  0296                     _T4CLKCON	set	662
 19635  028E                     _T2CON	set	654
 19636  028C                     _T2TMR	set	652
 19637  028D                     _T2PR	set	653
 19638  0291                     _T2RST	set	657
 19639  028F                     _T2HLT	set	655
 19640  0290                     _T2CLKCON	set	656
 19641  0592                     _NCO1CONbits	set	1426
 19642  058F                     _NCO1INCL	set	1423
 19643  0590                     _NCO1INCH	set	1424
 19644  0591                     _NCO1INCU	set	1425
 19645  058C                     _NCO1ACCL	set	1420
 19646  058D                     _NCO1ACCH	set	1421
 19647  058E                     _NCO1ACCU	set	1422
 19648  0593                     _NCO1CLK	set	1427
 19649  0592                     _NCO1CON	set	1426
 19650  0710                     _PIR4bits	set	1808
 19651  071A                     _PIE4bits	set	1818
 19652  070C                     _PIR0bits	set	1804
 19653  0716                     _PIE0bits	set	1814
 19654  070F                     _PIR3bits	set	1807
 19655  0719                     _PIE3bits	set	1817
 19656  3881                     _TMR2IF	set	14465
 19657  38D1                     _TMR2IE	set	14545
 19658  3883                     _TMR4IF	set	14467
 19659  079B                     _PMD5	set	1947
 19660  079A                     _PMD4	set	1946
 19661  0799                     _PMD3	set	1945
 19662  0798                     _PMD2	set	1944
 19663  0797                     _PMD1	set	1943
 19664  0796                     _PMD0	set	1942
 19665  0892                     _OSCTUNE	set	2194
 19666  0893                     _OSCFRQ	set	2195
 19667  0891                     _OSCEN	set	2193
 19668  088F                     _OSCCON3	set	2191
 19669  088D                     _OSCCON1	set	2189
 19670  0895                     _CLKRCON	set	2197
 19671  0896                     _CLKRCLK	set	2198
 19672  090C                     _FVRCON	set	2316
 19673  1E1A                     _CLC2CON	set	7706
 19674  1E23                     _CLC2GLS3	set	7715
 19675  1E22                     _CLC2GLS2	set	7714
 19676  1E21                     _CLC2GLS1	set	7713
 19677  1E20                     _CLC2GLS0	set	7712
 19678  1E1F                     _CLC2SEL3	set	7711
 19679  1E1E                     _CLC2SEL2	set	7710
 19680  1E1D                     _CLC2SEL1	set	7709
 19681  1E1C                     _CLC2SEL0	set	7708
 19682  1E1B                     _CLC2POL	set	7707
 19683  1E10                     _CLC1CON	set	7696
 19684  1E19                     _CLC1GLS3	set	7705
 19685  1E18                     _CLC1GLS2	set	7704
 19686  1E17                     _CLC1GLS1	set	7703
 19687  1E16                     _CLC1GLS0	set	7702
 19688  1E15                     _CLC1SEL3	set	7701
 19689  1E14                     _CLC1SEL2	set	7700
 19690  1E13                     _CLC1SEL1	set	7699
 19691  1E12                     _CLC1SEL0	set	7698
 19692  1E11                     _CLC1POL	set	7697
 19693  1EBD                     _CLCIN2PPS	set	7869
 19694  1ECB                     _RXPPS	set	7883
 19695  1EC9                     _SSP2DATPPS	set	7881
 19696  1EC8                     _SSP2CLKPPS	set	7880
 19697  1F24                     _RC4PPS	set	7972
 19698  1F25                     _RC5PPS	set	7973
 19699  1F48                     _IOCBPbits	set	8008
 19700  1F49                     _IOCBNbits	set	8009
 19701  1F4A                     _IOCBFbits	set	8010
 19702  1F68                     _INLVLE	set	8040
 19703  1F5D                     _INLVLD	set	8029
 19704  1F52                     _INLVLC	set	8018
 19705  1F47                     _INLVLB	set	8007
 19706  1F3C                     _INLVLA	set	7996
 19707  1F67                     _SLRCONE	set	8039
 19708  1F5C                     _SLRCOND	set	8028
 19709  1F51                     _SLRCONC	set	8017
 19710  1F46                     _SLRCONB	set	8006
 19711  1F3B                     _SLRCONA	set	7995
 19712  1F5B                     _ODCOND	set	8027
 19713  1F50                     _ODCONC	set	8016
 19714  1F45                     _ODCONB	set	8005
 19715  1F3A                     _ODCONA	set	7994
 19716  1F66                     _ODCONE	set	8038
 19717  1F4F                     _WPUC	set	8015
 19718  1F39                     _WPUA	set	7993
 19719  1F44                     _WPUB	set	8004
 19720  1F65                     _WPUE	set	8037
 19721  1F5A                     _WPUD	set	8026
 19722  1F38                     _ANSELA	set	7992
 19723  1F64                     _ANSELE	set	8036
 19724  1F43                     _ANSELB	set	8003
 19725  1F4E                     _ANSELC	set	8014
 19726  1F59                     _ANSELD	set	8025
 19727  1F2E                     _RD6PPS	set	7982
 19728  1F2D                     _RD5PPS	set	7981
 19729                           
 19730                           	psect	stringtext6
 19731  6000                     __pstringtext6:
 19732  6000                     STR_25:
 19733  6000  3456               	retlw	86	;'V'
 19734  6001  3465               	retlw	101	;'e'
 19735  6002  346C               	retlw	108	;'l'
 19736  6003  3420               	retlw	32	;' '
 19737  6004  344D               	retlw	77	;'M'
 19738  6005  3461               	retlw	97	;'a'
 19739  6006  346E               	retlw	110	;'n'
 19740  6007  3475               	retlw	117	;'u'
 19741  6008  3461               	retlw	97	;'a'
 19742  6009  346C               	retlw	108	;'l'
 19743  600A  343A               	retlw	58	;':'
 19744  600B  3425               	retlw	37	;'%'
 19745  600C  342E               	retlw	46	;'.'
 19746  600D  3432               	retlw	50	;'2'
 19747  600E  3466               	retlw	102	;'f'
 19748  600F  3420               	retlw	32	;' '
 19749  6010  346D               	retlw	109	;'m'
 19750  6011  346D               	retlw	109	;'m'
 19751  6012  342F               	retlw	47	;'/'
 19752  6013  3473               	retlw	115	;'s'
 19753  6014  3400               	retlw	0
 19754                           
 19755                           	psect	stringtext7
 19756  6015                     __pstringtext7:
 19757  6015                     STR_28:
 19758  6015  3420               	retlw	32	;' '
 19759  6016  3454               	retlw	84	;'T'
 19760  6017  346D               	retlw	109	;'m'
 19761  6018  3470               	retlw	112	;'p'
 19762  6019  343A               	retlw	58	;':'
 19763  601A  3425               	retlw	37	;'%'
 19764  601B  342E               	retlw	46	;'.'
 19765  601C  3432               	retlw	50	;'2'
 19766  601D  3466               	retlw	102	;'f'
 19767  601E  3473               	retlw	115	;'s'
 19768  601F  3428               	retlw	40	;'('
 19769  6020  3425               	retlw	37	;'%'
 19770  6021  342E               	retlw	46	;'.'
 19771  6022  3432               	retlw	50	;'2'
 19772  6023  3466               	retlw	102	;'f'
 19773  6024  3429               	retlw	41	;')'
 19774  6025  3400               	retlw	0
 19775                           
 19776                           	psect	stringtext8
 19777  6026                     __pstringtext8:
 19778  6026                     STR_22:
 19779  6026  3421               	retlw	33	;'!'
 19780  6027  3421               	retlw	33	;'!'
 19781  6028  3446               	retlw	70	;'F'
 19782  6029  3469               	retlw	105	;'i'
 19783  602A  346D               	retlw	109	;'m'
 19784  602B  3420               	retlw	32	;' '
 19785  602C  3464               	retlw	100	;'d'
 19786  602D  3465               	retlw	101	;'e'
 19787  602E  3420               	retlw	32	;' '
 19788  602F  3463               	retlw	99	;'c'
 19789  6030  3475               	retlw	117	;'u'
 19790  6031  3472               	retlw	114	;'r'
 19791  6032  3473               	retlw	115	;'s'
 19792  6033  346F               	retlw	111	;'o'
 19793  6034  3421               	retlw	33	;'!'
 19794  6035  3421               	retlw	33	;'!'
 19795  6036  3400               	retlw	0
 19796                           
 19797                           	psect	stringtext9
 19798  6037                     __pstringtext9:
 19799  6037                     STR_19:
 19800  6037  3452               	retlw	82	;'R'
 19801  6038  3465               	retlw	101	;'e'
 19802  6039  3466               	retlw	102	;'f'
 19803  603A  3465               	retlw	101	;'e'
 19804  603B  3472               	retlw	114	;'r'
 19805  603C  3465               	retlw	101	;'e'
 19806  603D  346E               	retlw	110	;'n'
 19807  603E  3463               	retlw	99	;'c'
 19808  603F  3469               	retlw	105	;'i'
 19809  6040  3461               	retlw	97	;'a'
 19810  6041  346E               	retlw	110	;'n'
 19811  6042  3464               	retlw	100	;'d'
 19812  6043  346F               	retlw	111	;'o'
 19813  6044  342E               	retlw	46	;'.'
 19814  6045  342E               	retlw	46	;'.'
 19815  6046  342E               	retlw	46	;'.'
 19816  6047  3400               	retlw	0
 19817                           
 19818                           	psect	stringtext10
 19819  6048                     __pstringtext10:
 19820  6048                     STR_29:
 19821  6048  3425               	retlw	37	;'%'
 19822  6049  3473               	retlw	115	;'s'
 19823  604A  3444               	retlw	68	;'D'
 19824  604B  3469               	retlw	105	;'i'
 19825  604C  3473               	retlw	115	;'s'
 19826  604D  3474               	retlw	116	;'t'
 19827  604E  343A               	retlw	58	;':'
 19828  604F  3420               	retlw	32	;' '
 19829  6050  3425               	retlw	37	;'%'
 19830  6051  342E               	retlw	46	;'.'
 19831  6052  3432               	retlw	50	;'2'
 19832  6053  3466               	retlw	102	;'f'
 19833  6054  3420               	retlw	32	;' '
 19834  6055  346D               	retlw	109	;'m'
 19835  6056  346D               	retlw	109	;'m'
 19836  6057  3400               	retlw	0
 19837                           
 19838                           	psect	stringtext11
 19839  6058                     __pstringtext11:
 19840  6058                     STR_32:
 19841  6058  3420               	retlw	32	;' '
 19842  6059  3456               	retlw	86	;'V'
 19843  605A  3465               	retlw	101	;'e'
 19844  605B  346C               	retlw	108	;'l'
 19845  605C  343A               	retlw	58	;':'
 19846  605D  3420               	retlw	32	;' '
 19847  605E  3425               	retlw	37	;'%'
 19848  605F  342E               	retlw	46	;'.'
 19849  6060  3432               	retlw	50	;'2'
 19850  6061  3466               	retlw	102	;'f'
 19851  6062  3420               	retlw	32	;' '
 19852  6063  346D               	retlw	109	;'m'
 19853  6064  346D               	retlw	109	;'m'
 19854  6065  342F               	retlw	47	;'/'
 19855  6066  3473               	retlw	115	;'s'
 19856  6067  3400               	retlw	0
 19857                           
 19858                           	psect	stringtext12
 19859  6068                     __pstringtext12:
 19860  6068                     STR_20:
 19861  6068  344D               	retlw	77	;'M'
 19862  6069  346F               	retlw	111	;'o'
 19863  606A  3476               	retlw	118	;'v'
 19864  606B  3465               	retlw	101	;'e'
 19865  606C  346E               	retlw	110	;'n'
 19866  606D  3464               	retlw	100	;'d'
 19867  606E  346F               	retlw	111	;'o'
 19868  606F  3420               	retlw	32	;' '
 19869  6070  3470               	retlw	112	;'p'
 19870  6071  342F               	retlw	47	;'/'
 19871  6072  3420               	retlw	32	;' '
 19872  6073  3448               	retlw	72	;'H'
 19873  6074  346F               	retlw	111	;'o'
 19874  6075  346D               	retlw	109	;'m'
 19875  6076  3465               	retlw	101	;'e'
 19876  6077  3400               	retlw	0
 19877                           
 19878                           	psect	stringtext13
 19879  6078                     __pstringtext13:
 19880  6078                     STR_4:
 19881  6078  3420               	retlw	32	;' '
 19882  6079  3421               	retlw	33	;'!'
 19883  607A  3421               	retlw	33	;'!'
 19884  607B  3421               	retlw	33	;'!'
 19885  607C  3420               	retlw	32	;' '
 19886  607D  3452               	retlw	82	;'R'
 19887  607E  3465               	retlw	101	;'e'
 19888  607F  3461               	retlw	97	;'a'
 19889  6080  3464               	retlw	100	;'d'
 19890  6081  3479               	retlw	121	;'y'
 19891  6082  3420               	retlw	32	;' '
 19892  6083  3421               	retlw	33	;'!'
 19893  6084  3421               	retlw	33	;'!'
 19894  6085  3421               	retlw	33	;'!'
 19895  6086  3420               	retlw	32	;' '
 19896  6087  3400               	retlw	0
 19897                           
 19898                           	psect	stringtext14
 19899  6088                     __pstringtext14:
 19900  6088                     STR_47:
 19901  6088  3443               	retlw	67	;'C'
 19902  6089  3466               	retlw	102	;'f'
 19903  608A  3467               	retlw	103	;'g'
 19904  608B  342E               	retlw	46	;'.'
 19905  608C  3420               	retlw	32	;' '
 19906  608D  3443               	retlw	67	;'C'
 19907  608E  346F               	retlw	111	;'o'
 19908  608F  346E               	retlw	110	;'n'
 19909  6090  3474               	retlw	116	;'t'
 19910  6091  3472               	retlw	114	;'r'
 19911  6092  346F               	retlw	111	;'o'
 19912  6093  346C               	retlw	108	;'l'
 19913  6094  3465               	retlw	101	;'e'
 19914  6095  343A               	retlw	58	;':'
 19915  6096  3400               	retlw	0
 19916                           
 19917                           	psect	stringtext15
 19918  6097                     __pstringtext15:
 19919  6097                     STR_30:
 19920  6097  3425               	retlw	37	;'%'
 19921  6098  3473               	retlw	115	;'s'
 19922  6099  3450               	retlw	80	;'P'
 19923  609A  346F               	retlw	111	;'o'
 19924  609B  3473               	retlw	115	;'s'
 19925  609C  343A               	retlw	58	;':'
 19926  609D  3420               	retlw	32	;' '
 19927  609E  3425               	retlw	37	;'%'
 19928  609F  342E               	retlw	46	;'.'
 19929  60A0  3432               	retlw	50	;'2'
 19930  60A1  3466               	retlw	102	;'f'
 19931  60A2  3420               	retlw	32	;' '
 19932  60A3  346D               	retlw	109	;'m'
 19933  60A4  346D               	retlw	109	;'m'
 19934  60A5  3400               	retlw	0
 19935                           
 19936                           	psect	stringtext16
 19937  60A6                     __pstringtext16:
 19938  60A6                     STR_36:
 19939  60A6  3425               	retlw	37	;'%'
 19940  60A7  342E               	retlw	46	;'.'
 19941  60A8  3432               	retlw	50	;'2'
 19942  60A9  3466               	retlw	102	;'f'
 19943  60AA  3473               	retlw	115	;'s'
 19944  60AB  3420               	retlw	32	;' '
 19945  60AC  342D               	retlw	45	;'-'
 19946  60AD  343E               	retlw	62	;'>'
 19947  60AE  3425               	retlw	37	;'%'
 19948  60AF  342E               	retlw	46	;'.'
 19949  60B0  3432               	retlw	50	;'2'
 19950  60B1  3466               	retlw	102	;'f'
 19951  60B2  346D               	retlw	109	;'m'
 19952  60B3  346D               	retlw	109	;'m'
 19953  60B4  3400               	retlw	0
 19954                           
 19955                           	psect	stringtext17
 19956  60B5                     __pstringtext17:
 19957  60B5                     STR_18:
 19958  60B5  3452               	retlw	82	;'R'
 19959  60B6  3465               	retlw	101	;'e'
 19960  60B7  3466               	retlw	102	;'f'
 19961  60B8  3465               	retlw	101	;'e'
 19962  60B9  3472               	retlw	114	;'r'
 19963  60BA  3465               	retlw	101	;'e'
 19964  60BB  346E               	retlw	110	;'n'
 19965  60BC  3463               	retlw	99	;'c'
 19966  60BD  3469               	retlw	105	;'i'
 19967  60BE  3461               	retlw	97	;'a'
 19968  60BF  3472               	retlw	114	;'r'
 19969  60C0  343F               	retlw	63	;'?'
 19970  60C1  343F               	retlw	63	;'?'
 19971  60C2  343F               	retlw	63	;'?'
 19972  60C3  3400               	retlw	0
 19973                           
 19974                           	psect	stringtext18
 19975  60C4                     __pstringtext18:
 19976  60C4                     STR_35:
 19977  60C4  3443               	retlw	67	;'C'
 19978  60C5  3466               	retlw	102	;'f'
 19979  60C6  3467               	retlw	103	;'g'
 19980  60C7  342E               	retlw	46	;'.'
 19981  60C8  3420               	retlw	32	;' '
 19982  60C9  3444               	retlw	68	;'D'
 19983  60CA  3465               	retlw	101	;'e'
 19984  60CB  3473               	retlw	115	;'s'
 19985  60CC  3463               	retlw	99	;'c'
 19986  60CD  3469               	retlw	105	;'i'
 19987  60CE  3464               	retlw	100	;'d'
 19988  60CF  3461               	retlw	97	;'a'
 19989  60D0  343A               	retlw	58	;':'
 19990  60D1  3400               	retlw	0
 19991                           
 19992                           	psect	stringtext19
 19993  60D2                     __pstringtext19:
 19994  60D2                     STR_9:
 19995  60D2  3462               	retlw	98	;'b'
 19996  60D3  3474               	retlw	116	;'t'
 19997  60D4  3474               	retlw	116	;'t'
 19998  60D5  3420               	retlw	32	;' '
 19999  60D6  343D               	retlw	61	;'='
 20000  60D7  3420               	retlw	32	;' '
 20001  60D8  3425               	retlw	37	;'%'
 20002  60D9  3469               	retlw	105	;'i'
 20003  60DA  3420               	retlw	32	;' '
 20004  60DB  3428               	retlw	40	;'('
 20005  60DC  3425               	retlw	37	;'%'
 20006  60DD  3469               	retlw	105	;'i'
 20007  60DE  3429               	retlw	41	;')'
 20008  60DF  3400               	retlw	0
 20009                           
 20010                           	psect	stringtext20
 20011  60E0                     __pstringtext20:
 20012  60E0                     STR_43:
 20013  60E0  3443               	retlw	67	;'C'
 20014  60E1  3466               	retlw	102	;'f'
 20015  60E2  3467               	retlw	103	;'g'
 20016  60E3  342E               	retlw	46	;'.'
 20017  60E4  3420               	retlw	32	;' '
 20018  60E5  3445               	retlw	69	;'E'
 20019  60E6  3473               	retlw	115	;'s'
 20020  60E7  3470               	retlw	112	;'p'
 20021  60E8  3465               	retlw	101	;'e'
 20022  60E9  3472               	retlw	114	;'r'
 20023  60EA  3461               	retlw	97	;'a'
 20024  60EB  343A               	retlw	58	;':'
 20025  60EC  3400               	retlw	0
 20026                           
 20027                           	psect	stringtext21
 20028  60ED                     __pstringtext21:
 20029  60ED                     STR_39:
 20030  60ED  3443               	retlw	67	;'C'
 20031  60EE  3466               	retlw	102	;'f'
 20032  60EF  3467               	retlw	103	;'g'
 20033  60F0  342E               	retlw	46	;'.'
 20034  60F1  3420               	retlw	32	;' '
 20035  60F2  3453               	retlw	83	;'S'
 20036  60F3  346F               	retlw	111	;'o'
 20037  60F4  346C               	retlw	108	;'l'
 20038  60F5  3464               	retlw	100	;'d'
 20039  60F6  3461               	retlw	97	;'a'
 20040  60F7  343A               	retlw	58	;':'
 20041  60F8  3400               	retlw	0
 20042                           
 20043                           	psect	stringtext22
 20044  60F9                     __pstringtext22:
 20045  60F9                     STR_26:
 20046  60F9  3450               	retlw	80	;'P'
 20047  60FA  346F               	retlw	111	;'o'
 20048  60FB  3473               	retlw	115	;'s'
 20049  60FC  343A               	retlw	58	;':'
 20050  60FD  3425               	retlw	37	;'%'
 20051  60FE  342E               	retlw	46	;'.'
 20052  60FF  3432               	retlw	50	;'2'
 20053  6100  3466               	retlw	102	;'f'
 20054  6101  3420               	retlw	32	;' '
 20055  6102  346D               	retlw	109	;'m'
 20056  6103  346D               	retlw	109	;'m'
 20057  6104  3400               	retlw	0
 20058                           
 20059                           	psect	stringtext23
 20060  6105                     __pstringtext23:
 20061  6105                     STR_1:
 20062  6105  3420               	retlw	32	;' '
 20063  6106  3442               	retlw	66	;'B'
 20064  6107  346F               	retlw	111	;'o'
 20065  6108  346D               	retlw	109	;'m'
 20066  6109  3420               	retlw	32	;' '
 20067  610A  3464               	retlw	100	;'d'
 20068  610B  3469               	retlw	105	;'i'
 20069  610C  3461               	retlw	97	;'a'
 20070  610D  3421               	retlw	33	;'!'
 20071  610E  3421               	retlw	33	;'!'
 20072  610F  3421               	retlw	33	;'!'
 20073  6110  3400               	retlw	0
 20074                           
 20075                           	psect	stringtext24
 20076  6111                     __pstringtext24:
 20077  6111                     STR_6:
 20078  6111  3425               	retlw	37	;'%'
 20079  6112  342E               	retlw	46	;'.'
 20080  6113  3432               	retlw	50	;'2'
 20081  6114  3466               	retlw	102	;'f'
 20082  6115  3420               	retlw	32	;' '
 20083  6116  347C               	retlw	124	;'|'
 20084  6117  3420               	retlw	32	;' '
 20085  6118  3425               	retlw	37	;'%'
 20086  6119  342E               	retlw	46	;'.'
 20087  611A  3432               	retlw	50	;'2'
 20088  611B  3466               	retlw	102	;'f'
 20089  611C  3400               	retlw	0
 20090                           
 20091                           	psect	stringtext25
 20092  611D                     __pstringtext25:
 20093  611D                     STR_41:
 20094  611D  3443               	retlw	67	;'C'
 20095  611E  3466               	retlw	102	;'f'
 20096  611F  3467               	retlw	103	;'g'
 20097  6120  342E               	retlw	46	;'.'
 20098  6121  3420               	retlw	32	;' '
 20099  6122  3448               	retlw	72	;'H'
 20100  6123  346F               	retlw	111	;'o'
 20101  6124  346D               	retlw	109	;'m'
 20102  6125  3465               	retlw	101	;'e'
 20103  6126  343A               	retlw	58	;':'
 20104  6127  3400               	retlw	0
 20105                           
 20106                           	psect	stringtext26
 20107  6128                     __pstringtext26:
 20108  6128                     STR_27:
 20109  6128  344D               	retlw	77	;'M'
 20110  6129  346F               	retlw	111	;'o'
 20111  612A  3476               	retlw	118	;'v'
 20112  612B  3469               	retlw	105	;'i'
 20113  612C  346E               	retlw	110	;'n'
 20114  612D  3467               	retlw	103	;'g'
 20115  612E  3420               	retlw	32	;' '
 20116  612F  3474               	retlw	116	;'t'
 20117  6130  346F               	retlw	111	;'o'
 20118  6131  343A               	retlw	58	;':'
 20119  6132  3400               	retlw	0
 20120                           
 20121                           	psect	stringtext27
 20122  6133                     __pstringtext27:
 20123  6133                     STR_31:
 20124  6133  3420               	retlw	32	;' '
 20125  6134  3454               	retlw	84	;'T'
 20126  6135  346D               	retlw	109	;'m'
 20127  6136  3470               	retlw	112	;'p'
 20128  6137  343A               	retlw	58	;':'
 20129  6138  3425               	retlw	37	;'%'
 20130  6139  342E               	retlw	46	;'.'
 20131  613A  3432               	retlw	50	;'2'
 20132  613B  3466               	retlw	102	;'f'
 20133  613C  3473               	retlw	115	;'s'
 20134  613D  3400               	retlw	0
 20135                           
 20136                           	psect	stringtext28
 20137  613E                     __pstringtext28:
 20138  613E                     STR_21:
 20139  613E  344D               	retlw	77	;'M'
 20140  613F  346F               	retlw	111	;'o'
 20141  6140  3476               	retlw	118	;'v'
 20142  6141  3465               	retlw	101	;'e'
 20143  6142  346E               	retlw	110	;'n'
 20144  6143  3464               	retlw	100	;'d'
 20145  6144  346F               	retlw	111	;'o'
 20146  6145  342E               	retlw	46	;'.'
 20147  6146  342E               	retlw	46	;'.'
 20148  6147  342E               	retlw	46	;'.'
 20149  6148  3400               	retlw	0
 20150                           
 20151                           	psect	stringtext29
 20152  6149                     __pstringtext29:
 20153  6149                     STR_45:
 20154  6149  3443               	retlw	67	;'C'
 20155  614A  3466               	retlw	102	;'f'
 20156  614B  3467               	retlw	103	;'g'
 20157  614C  342E               	retlw	46	;'.'
 20158  614D  3420               	retlw	32	;' '
 20159  614E  3443               	retlw	67	;'C'
 20160  614F  344E               	retlw	78	;'N'
 20161  6150  3443               	retlw	67	;'C'
 20162  6151  343A               	retlw	58	;':'
 20163  6152  3400               	retlw	0
 20164                           
 20165                           	psect	stringtext30
 20166  6153                     __pstringtext30:
 20167  6153                     STR_34:
 20168  6153  3420               	retlw	32	;' '
 20169  6154  3441               	retlw	65	;'A'
 20170  6155  3463               	retlw	99	;'c'
 20171  6156  3465               	retlw	101	;'e'
 20172  6157  346C               	retlw	108	;'l'
 20173  6158  343A               	retlw	58	;':'
 20174  6159  3420               	retlw	32	;' '
 20175  615A  3425               	retlw	37	;'%'
 20176  615B  3469               	retlw	105	;'i'
 20177  615C  3400               	retlw	0
 20178                           
 20179                           	psect	stringtext31
 20180  615D                     __pstringtext31:
 20181  615D                     STR_15:
 20182  615D  3474               	retlw	116	;'t'
 20183  615E  346F               	retlw	111	;'o'
 20184  615F  3420               	retlw	32	;' '
 20185  6160  3452               	retlw	82	;'R'
 20186  6161  3465               	retlw	101	;'e'
 20187  6162  3474               	retlw	116	;'t'
 20188  6163  3475               	retlw	117	;'u'
 20189  6164  3472               	retlw	114	;'r'
 20190  6165  346E               	retlw	110	;'n'
 20191  6166  3400               	retlw	0
 20192                           
 20193                           	psect	stringtext32
 20194  6167                     __pstringtext32:
 20195  6167                     STR_24:
 20196  6167  345B               	retlw	91	;'['
 20197  6168  3425               	retlw	37	;'%'
 20198  6169  3463               	retlw	99	;'c'
 20199  616A  3425               	retlw	37	;'%'
 20200  616B  346C               	retlw	108	;'l'
 20201  616C  3475               	retlw	117	;'u'
 20202  616D  345D               	retlw	93	;']'
 20203  616E  340A               	retlw	10
 20204  616F  3400               	retlw	0
 20205                           
 20206                           	psect	stringtext33
 20207  6170                     __pstringtext33:
 20208  6170                     STR_11:
 20209  6170  3474               	retlw	116	;'t'
 20210  6171  346F               	retlw	111	;'o'
 20211  6172  3420               	retlw	32	;' '
 20212  6173  3453               	retlw	83	;'S'
 20213  6174  3474               	retlw	116	;'t'
 20214  6175  3461               	retlw	97	;'a'
 20215  6176  3472               	retlw	114	;'r'
 20216  6177  3474               	retlw	116	;'t'
 20217  6178  3400               	retlw	0
 20218                           
 20219                           	psect	stringtext34
 20220  6179                     __pstringtext34:
 20221  6179                     STR_8:
 20222  6179  3463               	retlw	99	;'c'
 20223  617A  346E               	retlw	110	;'n'
 20224  617B  3463               	retlw	99	;'c'
 20225  617C  3454               	retlw	84	;'T'
 20226  617D  3465               	retlw	101	;'e'
 20227  617E  3473               	retlw	115	;'s'
 20228  617F  3474               	retlw	116	;'t'
 20229  6180  3465               	retlw	101	;'e'
 20230  6181  3400               	retlw	0
 20231                           
 20232                           	psect	stringtext35
 20233  6182                     __pstringtext35:
 20234  6182                     STR_17:
 20235  6182  3454               	retlw	84	;'T'
 20236  6183  346F               	retlw	111	;'o'
 20237  6184  3420               	retlw	32	;' '
 20238  6185  3448               	retlw	72	;'H'
 20239  6186  346F               	retlw	111	;'o'
 20240  6187  346D               	retlw	109	;'m'
 20241  6188  3465               	retlw	101	;'e'
 20242  6189  3400               	retlw	0
 20243                           
 20244                           	psect	stringtext36
 20245  618A                     __pstringtext36:
 20246  618A                     STR_14:
 20247  618A  3457               	retlw	87	;'W'
 20248  618B  3461               	retlw	97	;'a'
 20249  618C  3469               	retlw	105	;'i'
 20250  618D  3474               	retlw	116	;'t'
 20251  618E  3469               	retlw	105	;'i'
 20252  618F  346E               	retlw	110	;'n'
 20253  6190  3467               	retlw	103	;'g'
 20254  6191  3400               	retlw	0
 20255                           
 20256                           	psect	stringtext37
 20257  6192                     __pstringtext37:
 20258  6192                     STR_49:
 20259  6192  3428               	retlw	40	;'('
 20260  6193  346E               	retlw	110	;'n'
 20261  6194  3475               	retlw	117	;'u'
 20262  6195  346C               	retlw	108	;'l'
 20263  6196  346C               	retlw	108	;'l'
 20264  6197  3429               	retlw	41	;')'
 20265  6198  3400               	retlw	0
 20266                           
 20267                           	psect	stringtext38
 20268  6199                     __pstringtext38:
 20269  6199                     STR_10:
 20270  6199  344D               	retlw	77	;'M'
 20271  619A  346F               	retlw	111	;'o'
 20272  619B  3476               	retlw	118	;'v'
 20273  619C  3469               	retlw	105	;'i'
 20274  619D  346E               	retlw	110	;'n'
 20275  619E  3467               	retlw	103	;'g'
 20276  619F  3400               	retlw	0
 20277                           
 20278                           	psect	stringtext39
 20279  61A0                     __pstringtext39:
 20280  61A0                     STR_2:
 20281  61A0  345B               	retlw	91	;'['
 20282  61A1  3462               	retlw	98	;'b'
 20283  61A2  3436               	retlw	54	;'6'
 20284  61A3  3435               	retlw	53	;'5'
 20285  61A4  345D               	retlw	93	;']'
 20286  61A5  3400               	retlw	0
 20287                           
 20288                           	psect	stringtext40
 20289  61A6                     __pstringtext40:
 20290  61A6                     STR_13:
 20291  61A6  3457               	retlw	87	;'W'
 20292  61A7  3465               	retlw	101	;'e'
 20293  61A8  346C               	retlw	108	;'l'
 20294  61A9  3464               	retlw	100	;'d'
 20295  61AA  3400               	retlw	0
 20296                           
 20297                           	psect	stringtext41
 20298  0000                     __pstringtext41:
 20299  6086                     
 20300                           	psect	cinit
 20301  0042                     start_initialization:	
 20302                           ; #config settings
 20303                           
 20304  0042                     __initialization:	;BIGRAM
 20305                           
 20306                           ; Initialize objects allocated to BANK2
 20307  0042  0142               	movlb	2	; select bank2
 20308  0043  31DE  265D  3180   	fcall	__pidataBANK2	;fetch initializer
 20309  0046  00EC               	movwf	__pdataBANK2& (0+127)
 20310  0047  31DE  265E  3180   	fcall	__pidataBANK2+1	;fetch initializer
 20311  004A  00ED               	movwf	(__pdataBANK2+1)& (0+127)
 20312  004B  31DE  265F  3180   	fcall	__pidataBANK2+2	;fetch initializer
 20313  004E  00EE               	movwf	(__pdataBANK2+2)& (0+127)
 20314  004F  31DE  2660  3180   	fcall	__pidataBANK2+3	;fetch initializer
 20315  0052  00EF               	movwf	(__pdataBANK2+3)& (0+127)
 20316                           
 20317                           ; Clear objects allocated to BIGRAM
 20318  0053  30F8               	movlw	low (0+12024)
 20319  0054  0084               	movwf	4
 20320  0055  302E               	movlw	high (0+12024)
 20321  0056  0085               	movwf	5
 20322  0057  30F8               	movlw	248
 20323  0058  00FE               	movwf	btemp
 20324  0059  3000               	movlw	0
 20325  005A  00FF               	movwf	btemp+1
 20326  005B  31DE  26AD  3180   	fcall	clear_ram0
 20327                           
 20328                           ; Clear objects allocated to COMMON
 20329  005E  01FC               	clrf	__pbssCOMMON& (0+127)
 20330                           
 20331                           ; Clear objects allocated to BANK1
 20332  005F  0141               	movlb	1	; select bank1
 20333  0060  01E9               	clrf	__pbssBANK1& (0+127)
 20334  0061  01EA               	clrf	(__pbssBANK1+1)& (0+127)
 20335  0062  01EB               	clrf	(__pbssBANK1+2)& (0+127)
 20336  0063  01EC               	clrf	(__pbssBANK1+3)& (0+127)
 20337  0064  01ED               	clrf	(__pbssBANK1+4)& (0+127)
 20338  0065  01EE               	clrf	(__pbssBANK1+5)& (0+127)
 20339  0066  01EF               	clrf	(__pbssBANK1+6)& (0+127)
 20340                           
 20341                           ; Clear objects allocated to BANK2
 20342  0067  3020               	movlw	low __pbssBANK2
 20343  0068  0084               	movwf	4
 20344  0069  3001               	movlw	high __pbssBANK2
 20345  006A  0085               	movwf	5
 20346  006B  3041               	movlw	65
 20347  006C  00FE               	movwf	btemp
 20348  006D  3000               	movlw	0
 20349  006E  00FF               	movwf	btemp+1
 20350  006F  31DE  26AD  3180   	fcall	clear_ram0
 20351                           
 20352                           ; Clear objects allocated to BANK3
 20353  0072  30A0               	movlw	low __pbssBANK3
 20354  0073  0084               	movwf	4
 20355  0074  3001               	movlw	high __pbssBANK3
 20356  0075  0085               	movwf	5
 20357  0076  3044               	movlw	68
 20358  0077  00FE               	movwf	btemp
 20359  0078  3000               	movlw	0
 20360  0079  00FF               	movwf	btemp+1
 20361  007A  31DE  26AD  3180   	fcall	clear_ram0
 20362                           
 20363                           ; Clear objects allocated to BANK4
 20364  007D  3020               	movlw	low __pbssBANK4
 20365  007E  0084               	movwf	4
 20366  007F  3002               	movlw	high __pbssBANK4
 20367  0080  0085               	movwf	5
 20368  0081  3048               	movlw	72
 20369  0082  00FE               	movwf	btemp
 20370  0083  3000               	movlw	0
 20371  0084  00FF               	movwf	btemp+1
 20372  0085  31DE  26AD  3180   	fcall	clear_ram0
 20373                           
 20374                           ; Clear objects allocated to BANK5
 20375  0088  30A0               	movlw	low __pbssBANK5
 20376  0089  0084               	movwf	4
 20377  008A  3002               	movlw	high __pbssBANK5
 20378  008B  0085               	movwf	5
 20379  008C  303A               	movlw	58
 20380  008D  00FE               	movwf	btemp
 20381  008E  3000               	movlw	0
 20382  008F  00FF               	movwf	btemp+1
 20383  0090  31DE  26AD  3180   	fcall	clear_ram0
 20384                           
 20385                           ; Clear objects allocated to BANK6
 20386  0093  3020               	movlw	low __pbssBANK6
 20387  0094  0084               	movwf	4
 20388  0095  3003               	movlw	high __pbssBANK6
 20389  0096  0085               	movwf	5
 20390  0097  3040               	movlw	64
 20391  0098  00FE               	movwf	btemp
 20392  0099  3000               	movlw	0
 20393  009A  00FF               	movwf	btemp+1
 20394  009B  31DE  26AD  3180   	fcall	clear_ram0
 20395                           
 20396                           ; Clear objects allocated to BANK7
 20397  009E  30A0               	movlw	low __pbssBANK7
 20398  009F  0084               	movwf	4
 20399  00A0  3003               	movlw	high __pbssBANK7
 20400  00A1  0085               	movwf	5
 20401  00A2  3020               	movlw	32
 20402  00A3  00FE               	movwf	btemp
 20403  00A4  3000               	movlw	0
 20404  00A5  00FF               	movwf	btemp+1
 20405  00A6  31DE  26AD         	fcall	clear_ram0
 20406  00A8                     end_of_initialization:	
 20407                           ;End of C runtime variable initialization code
 20408                           
 20409  00A8                     __end_of__initialization:
 20410  00A8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20411  00A9  0140               	movlb	0
 20412  00AA  31B3  2B4D         	ljmp	_main	;jump to C main() function
 20413                           
 20414                           	psect	bssCOMMON
 20415  007C                     __pbssCOMMON:
 20416  007C                     _eusartRxHead:
 20417  007C                     	ds	1
 20418                           
 20419                           	psect	bssBANK1
 20420  00E9                     __pbssBANK1:
 20421  00E9                     _mvTela:
 20422  00E9                     	ds	2
 20423  00EB                     _tela:
 20424  00EB                     	ds	1
 20425  00EC                     _eusartRxCount:
 20426  00EC                     	ds	1
 20427  00ED                     _eusartRxTail:
 20428  00ED                     	ds	1
 20429  00EE                     _eusartTxTail:
 20430  00EE                     	ds	1
 20431  00EF                     _eusartTxHead:
 20432  00EF                     	ds	1
 20433                           
 20434                           	psect	bssBANK2
 20435  0120                     __pbssBANK2:
 20436  0120                     _bt:
 20437  0120                     	ds	6
 20438  0126                     _test:
 20439  0126                     	ds	4
 20440  012A                     getAccelTable@us:
 20441  012A                     	ds	2
 20442  012C                     getSerial@data:
 20443  012C                     	ds	1
 20444  012D                     escreve_LCD@c:
 20445  012D                     	ds	1
 20446  012E                     Lcd_Write_Char@y:
 20447  012E                     	ds	1
 20448  012F                     Lcd_Write_Char@temp:
 20449  012F                     	ds	1
 20450  0130                     _alarme:
 20451  0130                     	ds	1
 20452  0131                     _eusartRxLastError:
 20453  0131                     	ds	1
 20454  0132                     _serial:
 20455  0132                     	ds	27
 20456  014D                     _str2:
 20457  014D                     	ds	20
 20458                           
 20459                           	psect	dataBANK2
 20460  016C                     __pdataBANK2:
 20461  016C                     navCfgMove@soma:
 20462  016C                     	ds	4
 20463                           
 20464                           	psect	bssBANK3
 20465  01A0                     __pbssBANK3:
 20466  01A0                     _cnc:
 20467  01A0                     	ds	68
 20468                           
 20469                           	psect	bssBANK4
 20470  0220                     __pbssBANK4:
 20471  0220                     _pot:
 20472  0220                     	ds	46
 20473  024E                     _strCncTela:
 20474  024E                     	ds	6
 20475  0254                     _str1:
 20476  0254                     	ds	20
 20477                           
 20478                           	psect	bssBANK5
 20479  02A0                     __pbssBANK5:
 20480  02A0                     _oscCfg:
 20481  02A0                     	ds	38
 20482  02C6                     _str:
 20483  02C6                     	ds	20
 20484                           
 20485                           	psect	bssBANK6
 20486  0320                     __pbssBANK6:
 20487  0320                     _eusartRxStatusBuffer:
 20488  0320                     	ds	32
 20489  0340                     _eusartTxBuffer:
 20490  0340                     	ds	32
 20491                           
 20492                           	psect	bssBANK7
 20493  03A0                     __pbssBANK7:
 20494  03A0                     _eusartRxBuffer:
 20495  03A0                     	ds	32
 20496                           
 20497                           	psect	clrtext
 20498  5EAD                     clear_ram0:	
 20499                           ;	Called with FSR0 containing the base address, and
 20500                           ;	btemp/btemp+1 has the size to clear
 20501                           
 20502  5EAD  0064               	clrwdt	;clear the watchdog before getting into this loop
 20503  5EAE                     clrloop0:
 20504  5EAE  0180               	clrf	0	;clear RAM location pointed to by FSR
 20505  5EAF  3101               	addfsr 0,1
 20506  5EB0  3001               	movlw	1
 20507  5EB1  02FE               	subwf	126,f
 20508  5EB2  3000               	movlw	0
 20509  5EB3  3BFF               	subwfb	127,f
 20510  5EB4  087F               	movf	127,w
 20511  5EB5  047E               	iorwf	126,w
 20512  5EB6  1903               	btfsc	3,2
 20513  5EB7  3400               	retlw	0	;all done for this memory range, return
 20514  5EB8  2EAE               	goto	clrloop0	;have we reached the end yet?
 20515                           
 20516                           	psect	cstackBANK4
 20517  026A                     __pcstackBANK4:
 20518  026A                     main@i:
 20519                           
 20520                           ; 2 bytes @ 0x0
 20521  026A                     	ds	2
 20522                           
 20523                           	psect	cstackBANK1
 20524  00A0                     __pcstackBANK1:
 20525  00A0                     ?___flge:
 20526  00A0                     ??_cncConfigMove:	
 20527                           ; 1 bit 
 20528                           
 20529  00A0                     ?___flsub:	
 20530                           ; 1 bytes @ 0x0
 20531                           
 20532  00A0                     ___flge@ff1:	
 20533                           ; 4 bytes @ 0x0
 20534                           
 20535  00A0                     ___flsub@a:	
 20536                           ; 4 bytes @ 0x0
 20537                           
 20538                           
 20539                           ; 4 bytes @ 0x0
 20540  00A0                     	ds	4
 20541  00A4                     ___flge@ff2:
 20542  00A4                     ___flsub@b:	
 20543                           ; 4 bytes @ 0x4
 20544                           
 20545                           
 20546                           ; 4 bytes @ 0x4
 20547  00A4                     	ds	4
 20548  00A8                     ?_cncSetPos:
 20549  00A8                     ??__doprnt:	
 20550                           ; 1 bytes @ 0x8
 20551                           
 20552  00A8                     cncSetPos@home:	
 20553                           ; 1 bytes @ 0x8
 20554                           
 20555                           
 20556                           ; 4 bytes @ 0x8
 20557  00A8                     	ds	1
 20558  00A9                     ?_cncMoveTo:
 20559  00A9                     ?_cncManualMove:	
 20560                           ; 1 bytes @ 0x9
 20561                           
 20562  00A9                     cncManualMove@speed:	
 20563                           ; 4 bytes @ 0x9
 20564                           
 20565  00A9                     cncMoveTo@pos:	
 20566                           ; 4 bytes @ 0x9
 20567                           
 20568                           
 20569                           ; 4 bytes @ 0x9
 20570  00A9                     	ds	3
 20571  00AC                     cncSetPos@start:
 20572                           
 20573                           ; 4 bytes @ 0xC
 20574  00AC                     	ds	1
 20575  00AD                     cncManualMove@accel:
 20576  00AD                     cncMoveTo@speed:	
 20577                           ; 1 bytes @ 0xD
 20578                           
 20579                           
 20580                           ; 4 bytes @ 0xD
 20581  00AD                     	ds	1
 20582  00AE                     cncManualMove@max:
 20583  00AE                     __doprnt$4358:	
 20584                           ; 4 bytes @ 0xE
 20585                           
 20586                           
 20587                           ; 4 bytes @ 0xE
 20588  00AE                     	ds	2
 20589  00B0                     cncSetPos@stop:
 20590                           
 20591                           ; 4 bytes @ 0x10
 20592  00B0                     	ds	1
 20593  00B1                     cncMoveTo@accel:
 20594                           
 20595                           ; 1 bytes @ 0x11
 20596  00B1                     	ds	1
 20597  00B2                     ??_cncTeste:
 20598  00B2                     __doprnt@len:	
 20599                           ; 1 bytes @ 0x12
 20600                           
 20601  00B2                     cncManualMove@min:	
 20602                           ; 2 bytes @ 0x12
 20603                           
 20604                           
 20605                           ; 4 bytes @ 0x12
 20606  00B2                     	ds	2
 20607  00B4                     ??_cncSetPos:
 20608  00B4                     __doprnt@cp:	
 20609                           ; 1 bytes @ 0x14
 20610                           
 20611  00B4                     _cncTeste$4354:	
 20612                           ; 2 bytes @ 0x14
 20613                           
 20614                           
 20615                           ; 4 bytes @ 0x14
 20616  00B4                     	ds	2
 20617  00B6                     __doprnt@flag:
 20618  00B6                     cncManualMove@posEnd:	
 20619                           ; 2 bytes @ 0x16
 20620                           
 20621                           
 20622                           ; 4 bytes @ 0x16
 20623  00B6                     	ds	2
 20624  00B8                     __doprnt@eexp:
 20625  00B8                     cncSetPos@h:	
 20626                           ; 2 bytes @ 0x18
 20627                           
 20628                           
 20629                           ; 4 bytes @ 0x18
 20630  00B8                     	ds	2
 20631  00BA                     cncManualMove@btt:
 20632  00BA                     __doprnt@val:	
 20633                           ; 1 bytes @ 0x1A
 20634                           
 20635                           
 20636                           ; 4 bytes @ 0x1A
 20637  00BA                     	ds	2
 20638  00BC                     cncSetPos@s:
 20639                           
 20640                           ; 4 bytes @ 0x1C
 20641  00BC                     	ds	2
 20642  00BE                     __doprnt@tmpval:
 20643                           
 20644                           ; 4 bytes @ 0x1E
 20645  00BE                     	ds	2
 20646  00C0                     cncSetPos@e:
 20647                           
 20648                           ; 4 bytes @ 0x20
 20649  00C0                     	ds	2
 20650  00C2                     __doprnt@fval:
 20651                           
 20652                           ; 4 bytes @ 0x22
 20653  00C2                     	ds	2
 20654  00C4                     ?_cncSetPosHome:
 20655  00C4                     ?_cncSetPosStart:	
 20656                           ; 1 bytes @ 0x24
 20657                           
 20658  00C4                     ?_cncSetPosStop:	
 20659                           ; 1 bytes @ 0x24
 20660                           
 20661  00C4                     cncSetPosHome@home:	
 20662                           ; 1 bytes @ 0x24
 20663                           
 20664  00C4                     cncSetPosStart@start:	
 20665                           ; 4 bytes @ 0x24
 20666                           
 20667  00C4                     cncSetPosStop@stop:	
 20668                           ; 4 bytes @ 0x24
 20669                           
 20670                           
 20671                           ; 4 bytes @ 0x24
 20672  00C4                     	ds	2
 20673  00C6                     __doprnt@prec:
 20674                           
 20675                           ; 2 bytes @ 0x26
 20676  00C6                     	ds	2
 20677  00C8                     __doprnt@c:
 20678  00C8                     cncSetPosStart@diff:	
 20679                           ; 1 bytes @ 0x28
 20680                           
 20681                           
 20682                           ; 4 bytes @ 0x28
 20683  00C8                     	ds	1
 20684  00C9                     __doprnt@pb:
 20685                           
 20686                           ; 1 bytes @ 0x29
 20687  00C9                     	ds	1
 20688  00CA                     ?_printf:
 20689  00CA                     ?_sprintf:	
 20690                           ; 2 bytes @ 0x2A
 20691                           
 20692  00CA                     printf@f:	
 20693                           ; 2 bytes @ 0x2A
 20694                           
 20695  00CA                     sprintf@wh:	
 20696                           ; 2 bytes @ 0x2A
 20697                           
 20698                           
 20699                           ; 2 bytes @ 0x2A
 20700  00CA                     	ds	2
 20701  00CC                     sprintf@f:
 20702                           
 20703                           ; 2 bytes @ 0x2C
 20704  00CC                     	ds	6
 20705  00D2                     ??_printf:
 20706                           
 20707                           ; 1 bytes @ 0x32
 20708  00D2                     	ds	1
 20709  00D3                     printf@ap:
 20710                           
 20711                           ; 1 bytes @ 0x33
 20712  00D3                     	ds	1
 20713  00D4                     printf@pb:
 20714                           
 20715                           ; 4 bytes @ 0x34
 20716  00D4                     	ds	2
 20717  00D6                     ??_sprintf:
 20718                           
 20719                           ; 1 bytes @ 0x36
 20720  00D6                     	ds	1
 20721  00D7                     sprintf@ap:
 20722                           
 20723                           ; 1 bytes @ 0x37
 20724  00D7                     	ds	1
 20725  00D8                     ?_sendCMDValue:
 20726  00D8                     sendCMDValue@value:	
 20727                           ; 1 bytes @ 0x38
 20728                           
 20729  00D8                     sprintf@pb:	
 20730                           ; 4 bytes @ 0x38
 20731                           
 20732                           
 20733                           ; 4 bytes @ 0x38
 20734  00D8                     	ds	4
 20735  00DC                     ??_sendCMDValue:
 20736  00DC                     ??_navCfgMove:	
 20737                           ; 1 bytes @ 0x3C
 20738                           
 20739                           
 20740                           ; 1 bytes @ 0x3C
 20741  00DC                     	ds	2
 20742  00DE                     sendCMDValue@cmd:
 20743                           
 20744                           ; 1 bytes @ 0x3E
 20745  00DE                     	ds	1
 20746  00DF                     sendCMD@value:
 20747                           
 20748                           ; 4 bytes @ 0x3F
 20749  00DF                     	ds	4
 20750  00E3                     sendCMD@cmd:
 20751                           
 20752                           ; 1 bytes @ 0x43
 20753  00E3                     	ds	1
 20754  00E4                     ??_exeSerial:
 20755  00E4                     navCfgMove@tela:	
 20756                           ; 1 bytes @ 0x44
 20757                           
 20758                           
 20759                           ; 1 bytes @ 0x44
 20760  00E4                     	ds	1
 20761  00E5                     exeSerial@cmd:
 20762  00E5                     navCfgMove@subTela:	
 20763                           ; 1 bytes @ 0x45
 20764                           
 20765                           
 20766                           ; 1 bytes @ 0x45
 20767  00E5                     	ds	1
 20768  00E6                     ??_navTelas:
 20769                           
 20770                           ; 1 bytes @ 0x46
 20771  00E6                     	ds	1
 20772  00E7                     ??_main:
 20773                           
 20774                           ; 1 bytes @ 0x47
 20775  00E7                     	ds	2
 20776                           
 20777                           	psect	cstackCOMMON
 20778  0070                     __pcstackCOMMON:
 20779  0070                     ?_isdigit:
 20780  0070                     ?_EUSART_Receive_ISR:	
 20781                           ; 1 bit 
 20782                           
 20783  0070                     ?_EUSART_Transmit_ISR:	
 20784                           ; 1 bytes @ 0x0
 20785                           
 20786  0070                     ??_EUSART_Transmit_ISR:	
 20787                           ; 1 bytes @ 0x0
 20788                           
 20789  0070                     ?_EUSART_DefaultFramingErrorHandler:	
 20790                           ; 1 bytes @ 0x0
 20791                           
 20792  0070                     ??_EUSART_DefaultFramingErrorHandler:	
 20793                           ; 1 bytes @ 0x0
 20794                           
 20795  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
 20796                           ; 1 bytes @ 0x0
 20797                           
 20798  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
 20799                           ; 1 bytes @ 0x0
 20800                           
 20801  0070                     ?_EUSART_DefaultErrorHandler:	
 20802                           ; 1 bytes @ 0x0
 20803                           
 20804  0070                     ?_EUSART_RxDataHandler:	
 20805                           ; 1 bytes @ 0x0
 20806                           
 20807  0070                     ??_EUSART_RxDataHandler:	
 20808                           ; 1 bytes @ 0x0
 20809                           
 20810  0070                     ?_SPI2_Isr:	
 20811                           ; 1 bytes @ 0x0
 20812                           
 20813  0070                     ??_SPI2_Isr:	
 20814                           ; 1 bytes @ 0x0
 20815                           
 20816  0070                     ?_PIN_MANAGER_IOC:	
 20817                           ; 1 bytes @ 0x0
 20818                           
 20819  0070                     ?_TMR2_ISR:	
 20820                           ; 1 bytes @ 0x0
 20821                           
 20822  0070                     ?_PMD_Initialize:	
 20823                           ; 1 bytes @ 0x0
 20824                           
 20825  0070                     ?_PIN_MANAGER_Initialize:	
 20826                           ; 1 bytes @ 0x0
 20827                           
 20828  0070                     ?_OSCILLATOR_Initialize:	
 20829                           ; 1 bytes @ 0x0
 20830                           
 20831  0070                     ?_FVR_Initialize:	
 20832                           ; 1 bytes @ 0x0
 20833                           
 20834  0070                     ?_ADCC_Initialize:	
 20835                           ; 1 bytes @ 0x0
 20836                           
 20837  0070                     ?_CLC2_Initialize:	
 20838                           ; 1 bytes @ 0x0
 20839                           
 20840  0070                     ?_TMR4_Initialize:	
 20841                           ; 1 bytes @ 0x0
 20842                           
 20843  0070                     ?_TMR2_Initialize:	
 20844                           ; 1 bytes @ 0x0
 20845                           
 20846  0070                     ?_CLC1_Initialize:	
 20847                           ; 1 bytes @ 0x0
 20848                           
 20849  0070                     ?_TMR1_Initialize:	
 20850                           ; 1 bytes @ 0x0
 20851                           
 20852  0070                     ?_IOCBF3_DefaultInterruptHandler:	
 20853                           ; 1 bytes @ 0x0
 20854                           
 20855  0070                     ??_IOCBF3_DefaultInterruptHandler:	
 20856                           ; 1 bytes @ 0x0
 20857                           
 20858  0070                     ?_IOCBF4_DefaultInterruptHandler:	
 20859                           ; 1 bytes @ 0x0
 20860                           
 20861  0070                     ??_IOCBF4_DefaultInterruptHandler:	
 20862                           ; 1 bytes @ 0x0
 20863                           
 20864  0070                     ?_IOCBF5_DefaultInterruptHandler:	
 20865                           ; 1 bytes @ 0x0
 20866                           
 20867  0070                     ??_IOCBF5_DefaultInterruptHandler:	
 20868                           ; 1 bytes @ 0x0
 20869                           
 20870  0070                     ?_IOCBF3_ISR:	
 20871                           ; 1 bytes @ 0x0
 20872                           
 20873  0070                     ?_IOCBF4_ISR:	
 20874                           ; 1 bytes @ 0x0
 20875                           
 20876  0070                     ?_IOCBF5_ISR:	
 20877                           ; 1 bytes @ 0x0
 20878                           
 20879  0070                     ?_TMR2_DefaultInterruptHandler:	
 20880                           ; 1 bytes @ 0x0
 20881                           
 20882  0070                     ??_TMR2_DefaultInterruptHandler:	
 20883                           ; 1 bytes @ 0x0
 20884                           
 20885  0070                     ?_Inicia_LCD:	
 20886                           ; 1 bytes @ 0x0
 20887                           
 20888  0070                     ?_task10ms:	
 20889                           ; 1 bytes @ 0x0
 20890                           
 20891  0070                     ??_task10ms:	
 20892                           ; 1 bytes @ 0x0
 20893                           
 20894  0070                     ?_btFunc:	
 20895                           ; 1 bytes @ 0x0
 20896                           
 20897  0070                     ??_btFunc:	
 20898                           ; 1 bytes @ 0x0
 20899                           
 20900  0070                     ?_cncConfig:	
 20901                           ; 1 bytes @ 0x0
 20902                           
 20903  0070                     ?_cncConfigHome:	
 20904                           ; 1 bytes @ 0x0
 20905                           
 20906  0070                     ?_getSerial:	
 20907                           ; 1 bytes @ 0x0
 20908                           
 20909  0070                     ?_exeSerial:	
 20910                           ; 1 bytes @ 0x0
 20911                           
 20912  0070                     ?_navTelas:	
 20913                           ; 1 bytes @ 0x0
 20914                           
 20915  0070                     ?_cncTeste:	
 20916                           ; 1 bytes @ 0x0
 20917                           
 20918  0070                     ?_Lcd_Clear:	
 20919                           ; 1 bytes @ 0x0
 20920                           
 20921  0070                     ?_EUSART_Initialize:	
 20922                           ; 1 bytes @ 0x0
 20923                           
 20924  0070                     ?_EUSART_Read:	
 20925                           ; 1 bytes @ 0x0
 20926                           
 20927  0070                     ?_EUSART_Write:	
 20928                           ; 1 bytes @ 0x0
 20929                           
 20930  0070                     ?_getch:	
 20931                           ; 1 bytes @ 0x0
 20932                           
 20933  0070                     ?_SPI2_Initialize:	
 20934                           ; 1 bytes @ 0x0
 20935                           
 20936  0070                     ?_CLKREF_Initialize:	
 20937                           ; 1 bytes @ 0x0
 20938                           
 20939  0070                     ?_NCO1_Initialize:	
 20940                           ; 1 bytes @ 0x0
 20941                           
 20942  0070                     ?_INTERRUPT_InterruptManager:	
 20943                           ; 1 bytes @ 0x0
 20944                           
 20945  0070                     ?_TMR5_Initialize:	
 20946                           ; 1 bytes @ 0x0
 20947                           
 20948  0070                     ?_SYSTEM_Initialize:	
 20949                           ; 1 bytes @ 0x0
 20950                           
 20951  0070                     ?_main:	
 20952                           ; 1 bytes @ 0x0
 20953                           
 20954  0070                     ?_Lcd_Port:	
 20955                           ; 1 bytes @ 0x0
 20956                           
 20957  0070                     ?_Lcd_Cmd:	
 20958                           ; 1 bytes @ 0x0
 20959                           
 20960  0070                     ?_Lcd_Init:	
 20961                           ; 1 bytes @ 0x0
 20962                           
 20963  0070                     ?_Lcd_Write_Char:	
 20964                           ; 1 bytes @ 0x0
 20965                           
 20966  0070                     ?_sendCMD:	
 20967                           ; 1 bytes @ 0x0
 20968                           
 20969  0070                     ?_navCfgControl:	
 20970                           ; 1 bytes @ 0x0
 20971                           
 20972  0070                     ?_navCfgEspera:	
 20973                           ; 1 bytes @ 0x0
 20974                           
 20975  0070                     ?_navCfgMove:	
 20976                           ; 1 bytes @ 0x0
 20977                           
 20978  0070                     navCfgControl@tela:	
 20979                           ; 1 bytes @ 0x0
 20980                           
 20981  0070                     navCfgEspera@tela:	
 20982                           ; 1 bytes @ 0x0
 20983                           
 20984                           
 20985                           ; 1 bytes @ 0x0
 20986  0070                     	ds	1
 20987  0071                     ?___fleq:
 20988  0071                     ?_EUSART_SetRxInterruptHandler:	
 20989                           ; 1 bit 
 20990                           
 20991  0071                     ??_EUSART_Receive_ISR:	
 20992                           ; 1 bytes @ 0x1
 20993                           
 20994  0071                     ?_EUSART_SetTxInterruptHandler:	
 20995                           ; 1 bytes @ 0x1
 20996                           
 20997  0071                     ?_EUSART_SetFramingErrorHandler:	
 20998                           ; 1 bytes @ 0x1
 20999                           
 21000  0071                     ?_EUSART_SetOverrunErrorHandler:	
 21001                           ; 1 bytes @ 0x1
 21002                           
 21003  0071                     ?_EUSART_SetErrorHandler:	
 21004                           ; 1 bytes @ 0x1
 21005                           
 21006  0071                     ??_EUSART_DefaultErrorHandler:	
 21007                           ; 1 bytes @ 0x1
 21008                           
 21009  0071                     ?_SPI2_SetInterruptHandler:	
 21010                           ; 1 bytes @ 0x1
 21011                           
 21012  0071                     ??_PIN_MANAGER_IOC:	
 21013                           ; 1 bytes @ 0x1
 21014                           
 21015  0071                     ??_TMR2_ISR:	
 21016                           ; 1 bytes @ 0x1
 21017                           
 21018  0071                     ??_PMD_Initialize:	
 21019                           ; 1 bytes @ 0x1
 21020                           
 21021  0071                     ??_OSCILLATOR_Initialize:	
 21022                           ; 1 bytes @ 0x1
 21023                           
 21024  0071                     ??_FVR_Initialize:	
 21025                           ; 1 bytes @ 0x1
 21026                           
 21027  0071                     ??_ADCC_Initialize:	
 21028                           ; 1 bytes @ 0x1
 21029                           
 21030  0071                     ??_CLC2_Initialize:	
 21031                           ; 1 bytes @ 0x1
 21032                           
 21033  0071                     ??_TMR4_Initialize:	
 21034                           ; 1 bytes @ 0x1
 21035                           
 21036  0071                     ??_CLC1_Initialize:	
 21037                           ; 1 bytes @ 0x1
 21038                           
 21039  0071                     ??_TMR1_Initialize:	
 21040                           ; 1 bytes @ 0x1
 21041                           
 21042  0071                     ?_IOCBF3_SetInterruptHandler:	
 21043                           ; 1 bytes @ 0x1
 21044                           
 21045  0071                     ?_IOCBF4_SetInterruptHandler:	
 21046                           ; 1 bytes @ 0x1
 21047                           
 21048  0071                     ?_IOCBF5_SetInterruptHandler:	
 21049                           ; 1 bytes @ 0x1
 21050                           
 21051  0071                     ??_IOCBF3_ISR:	
 21052                           ; 1 bytes @ 0x1
 21053                           
 21054  0071                     ??_IOCBF4_ISR:	
 21055                           ; 1 bytes @ 0x1
 21056                           
 21057  0071                     ??_IOCBF5_ISR:	
 21058                           ; 1 bytes @ 0x1
 21059                           
 21060  0071                     ?_TMR2_SetInterruptHandler:	
 21061                           ; 1 bytes @ 0x1
 21062                           
 21063  0071                     ?_liberarTeclado:	
 21064                           ; 1 bytes @ 0x1
 21065                           
 21066  0071                     ?_cncEndMove:	
 21067                           ; 1 bytes @ 0x1
 21068                           
 21069  0071                     ??_isdigit:	
 21070                           ; 1 bytes @ 0x1
 21071                           
 21072  0071                     ??_EUSART_Read:	
 21073                           ; 1 bytes @ 0x1
 21074                           
 21075  0071                     ??_EUSART_Write:	
 21076                           ; 1 bytes @ 0x1
 21077                           
 21078  0071                     ??_CLKREF_Initialize:	
 21079                           ; 1 bytes @ 0x1
 21080                           
 21081  0071                     ??_NCO1_Initialize:	
 21082                           ; 1 bytes @ 0x1
 21083                           
 21084  0071                     ??_INTERRUPT_InterruptManager:	
 21085                           ; 1 bytes @ 0x1
 21086                           
 21087  0071                     ??_TMR5_Initialize:	
 21088                           ; 1 bytes @ 0x1
 21089                           
 21090  0071                     ?_cncConfigStop:	
 21091                           ; 1 bytes @ 0x1
 21092                           
 21093  0071                     ??_Lcd_Port:	
 21094                           ; 1 bytes @ 0x1
 21095                           
 21096  0071                     ??_navCfgControl:	
 21097                           ; 1 bytes @ 0x1
 21098                           
 21099  0071                     ??_navCfgEspera:	
 21100                           ; 1 bytes @ 0x1
 21101                           
 21102  0071                     ?___lbmod:	
 21103                           ; 1 bytes @ 0x1
 21104                           
 21105  0071                     ?_getAccelTable:	
 21106                           ; 1 bytes @ 0x1
 21107                           
 21108  0071                     ?__Umul8_16:	
 21109                           ; 2 bytes @ 0x1
 21110                           
 21111  0071                     ?___wmul:	
 21112                           ; 2 bytes @ 0x1
 21113                           
 21114  0071                     ?___awmod:	
 21115                           ; 2 bytes @ 0x1
 21116                           
 21117  0071                     ?_velMax:	
 21118                           ; 2 bytes @ 0x1
 21119                           
 21120  0071                     ?_labs:	
 21121                           ; 4 bytes @ 0x1
 21122                           
 21123  0071                     ?__tdiv_to_l_:	
 21124                           ; 4 bytes @ 0x1
 21125                           
 21126  0071                     ?__div_to_l_:	
 21127                           ; 4 bytes @ 0x1
 21128                           
 21129  0071                     ?___lmul:	
 21130                           ; 4 bytes @ 0x1
 21131                           
 21132  0071                     ?___lldiv:	
 21133                           ; 4 bytes @ 0x1
 21134                           
 21135  0071                     ?___flneg:	
 21136                           ; 4 bytes @ 0x1
 21137                           
 21138  0071                     ?___xxtofl:	
 21139                           ; 4 bytes @ 0x1
 21140                           
 21141  0071                     Lcd_Port@a:	
 21142                           ; 4 bytes @ 0x1
 21143                           
 21144  0071                     ___lbmod@divisor:	
 21145                           ; 1 bytes @ 0x1
 21146                           
 21147  0071                     __Umul8_16@multiplicand:	
 21148                           ; 1 bytes @ 0x1
 21149                           
 21150  0071                     _isdigit$3932:	
 21151                           ; 1 bytes @ 0x1
 21152                           
 21153  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
 21154                           ; 1 bytes @ 0x1
 21155                           
 21156  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
 21157                           ; 2 bytes @ 0x1
 21158                           
 21159  0071                     EUSART_SetErrorHandler@interruptHandler:	
 21160                           ; 2 bytes @ 0x1
 21161                           
 21162  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
 21163                           ; 2 bytes @ 0x1
 21164                           
 21165  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
 21166                           ; 2 bytes @ 0x1
 21167                           
 21168  0071                     SPI2_SetInterruptHandler@handler:	
 21169                           ; 2 bytes @ 0x1
 21170                           
 21171  0071                     IOCBF3_SetInterruptHandler@InterruptHandler:	
 21172                           ; 2 bytes @ 0x1
 21173                           
 21174  0071                     IOCBF4_SetInterruptHandler@InterruptHandler:	
 21175                           ; 2 bytes @ 0x1
 21176                           
 21177  0071                     IOCBF5_SetInterruptHandler@InterruptHandler:	
 21178                           ; 2 bytes @ 0x1
 21179                           
 21180  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
 21181                           ; 2 bytes @ 0x1
 21182                           
 21183  0071                     cncConfigStop@mv:	
 21184                           ; 2 bytes @ 0x1
 21185                           
 21186  0071                     cncEndMove@mv:	
 21187                           ; 2 bytes @ 0x1
 21188                           
 21189  0071                     velMax@mv:	
 21190                           ; 2 bytes @ 0x1
 21191                           
 21192  0071                     getAccelTable@accel:	
 21193                           ; 2 bytes @ 0x1
 21194                           
 21195  0071                     liberarTeclado@ms:	
 21196                           ; 2 bytes @ 0x1
 21197                           
 21198  0071                     ___wmul@multiplier:	
 21199                           ; 2 bytes @ 0x1
 21200                           
 21201  0071                     ___awmod@divisor:	
 21202                           ; 2 bytes @ 0x1
 21203                           
 21204  0071                     ___lmul@multiplier:	
 21205                           ; 2 bytes @ 0x1
 21206                           
 21207  0071                     ___lldiv@divisor:	
 21208                           ; 4 bytes @ 0x1
 21209                           
 21210  0071                     ___fleq@ff1:	
 21211                           ; 4 bytes @ 0x1
 21212                           
 21213  0071                     ___flneg@f1:	
 21214                           ; 4 bytes @ 0x1
 21215                           
 21216  0071                     ___xxtofl@val:	
 21217                           ; 4 bytes @ 0x1
 21218                           
 21219  0071                     labs@l:	
 21220                           ; 4 bytes @ 0x1
 21221                           
 21222  0071                     __div_to_l_@f1:	
 21223                           ; 4 bytes @ 0x1
 21224                           
 21225  0071                     __tdiv_to_l_@f1:	
 21226                           ; 4 bytes @ 0x1
 21227                           
 21228                           
 21229                           ; 4 bytes @ 0x1
 21230  0071                     	ds	1
 21231  0072                     ??_Lcd_Cmd:
 21232  0072                     ??_Lcd_Write_Char:	
 21233                           ; 1 bytes @ 0x2
 21234                           
 21235  0072                     ??___lbmod:	
 21236                           ; 1 bytes @ 0x2
 21237                           
 21238  0072                     EUSART_Read@readValue:	
 21239                           ; 1 bytes @ 0x2
 21240                           
 21241  0072                     EUSART_Write@txData:	
 21242                           ; 1 bytes @ 0x2
 21243                           
 21244  0072                     isdigit@c:	
 21245                           ; 1 bytes @ 0x2
 21246                           
 21247                           
 21248                           ; 1 bytes @ 0x2
 21249  0072                     	ds	1
 21250  0073                     ??_EUSART_SetRxInterruptHandler:
 21251  0073                     ??_EUSART_SetTxInterruptHandler:	
 21252                           ; 1 bytes @ 0x3
 21253                           
 21254  0073                     ??_EUSART_SetFramingErrorHandler:	
 21255                           ; 1 bytes @ 0x3
 21256                           
 21257  0073                     ??_EUSART_SetOverrunErrorHandler:	
 21258                           ; 1 bytes @ 0x3
 21259                           
 21260  0073                     ??_EUSART_SetErrorHandler:	
 21261                           ; 1 bytes @ 0x3
 21262                           
 21263  0073                     ??_SPI2_SetInterruptHandler:	
 21264                           ; 1 bytes @ 0x3
 21265                           
 21266  0073                     ??_PIN_MANAGER_Initialize:	
 21267                           ; 1 bytes @ 0x3
 21268                           
 21269  0073                     ??_TMR2_Initialize:	
 21270                           ; 1 bytes @ 0x3
 21271                           
 21272  0073                     ??_IOCBF3_SetInterruptHandler:	
 21273                           ; 1 bytes @ 0x3
 21274                           
 21275  0073                     ??_IOCBF4_SetInterruptHandler:	
 21276                           ; 1 bytes @ 0x3
 21277                           
 21278  0073                     ??_IOCBF5_SetInterruptHandler:	
 21279                           ; 1 bytes @ 0x3
 21280                           
 21281  0073                     ??_TMR2_SetInterruptHandler:	
 21282                           ; 1 bytes @ 0x3
 21283                           
 21284  0073                     ??_liberarTeclado:	
 21285                           ; 1 bytes @ 0x3
 21286                           
 21287  0073                     ??_cncEndMove:	
 21288                           ; 1 bytes @ 0x3
 21289                           
 21290  0073                     ??__Umul8_16:	
 21291                           ; 1 bytes @ 0x3
 21292                           
 21293  0073                     ??_EUSART_Initialize:	
 21294                           ; 1 bytes @ 0x3
 21295                           
 21296  0073                     ??_getch:	
 21297                           ; 1 bytes @ 0x3
 21298                           
 21299  0073                     ?_putch:	
 21300                           ; 1 bytes @ 0x3
 21301                           
 21302  0073                     ??_SPI2_Initialize:	
 21303                           ; 1 bytes @ 0x3
 21304                           
 21305  0073                     putch@txData:	
 21306                           ; 1 bytes @ 0x3
 21307                           
 21308  0073                     getAccelTable@i:	
 21309                           ; 1 bytes @ 0x3
 21310                           
 21311  0073                     Lcd_Cmd@a:	
 21312                           ; 1 bytes @ 0x3
 21313                           
 21314  0073                     Lcd_Write_Char@a:	
 21315                           ; 1 bytes @ 0x3
 21316                           
 21317  0073                     cncConfigStop@port:	
 21318                           ; 1 bytes @ 0x3
 21319                           
 21320  0073                     ___wmul@multiplicand:	
 21321                           ; 2 bytes @ 0x3
 21322                           
 21323  0073                     ___awmod@dividend:	
 21324                           ; 2 bytes @ 0x3
 21325                           
 21326                           
 21327                           ; 2 bytes @ 0x3
 21328  0073                     	ds	1
 21329  0074                     ??_Lcd_Clear:
 21330  0074                     ??_getAccelTable:	
 21331                           ; 1 bytes @ 0x4
 21332                           
 21333  0074                     ??_putch:	
 21334                           ; 1 bytes @ 0x4
 21335                           
 21336  0074                     ??_SYSTEM_Initialize:	
 21337                           ; 1 bytes @ 0x4
 21338                           
 21339  0074                     ?_Lcd_Set_Cursor:	
 21340                           ; 1 bytes @ 0x4
 21341                           
 21342  0074                     ??_Lcd_Init:	
 21343                           ; 1 bytes @ 0x4
 21344                           
 21345  0074                     ?_Lcd_Write_String:	
 21346                           ; 1 bytes @ 0x4
 21347                           
 21348  0074                     Lcd_Set_Cursor@b:	
 21349                           ; 2 bytes @ 0x4
 21350                           
 21351  0074                     ___lbmod@dividend:	
 21352                           ; 1 bytes @ 0x4
 21353                           
 21354  0074                     Lcd_Write_String@a:	
 21355                           ; 1 bytes @ 0x4
 21356                           
 21357                           
 21358                           ; 2 bytes @ 0x4
 21359  0074                     	ds	1
 21360  0075                     ??_Inicia_LCD:
 21361  0075                     ??_velMax:	
 21362                           ; 1 bytes @ 0x5
 21363                           
 21364  0075                     ??_labs:	
 21365                           ; 1 bytes @ 0x5
 21366                           
 21367  0075                     ??_Lcd_Set_Cursor:	
 21368                           ; 1 bytes @ 0x5
 21369                           
 21370  0075                     ??___wmul:	
 21371                           ; 1 bytes @ 0x5
 21372                           
 21373  0075                     ??___awmod:	
 21374                           ; 1 bytes @ 0x5
 21375                           
 21376  0075                     ??___flneg:	
 21377                           ; 1 bytes @ 0x5
 21378                           
 21379  0075                     ??___xxtofl:	
 21380                           ; 1 bytes @ 0x5
 21381                           
 21382  0075                     cncConfigStop@mask:	
 21383                           ; 1 bytes @ 0x5
 21384                           
 21385  0075                     ___lbmod@counter:	
 21386                           ; 1 bytes @ 0x5
 21387                           
 21388  0075                     ___wmul@product:	
 21389                           ; 1 bytes @ 0x5
 21390                           
 21391  0075                     __Umul8_16@product:	
 21392                           ; 2 bytes @ 0x5
 21393                           
 21394  0075                     ___lmul@multiplicand:	
 21395                           ; 2 bytes @ 0x5
 21396                           
 21397  0075                     ___lldiv@dividend:	
 21398                           ; 4 bytes @ 0x5
 21399                           
 21400  0075                     ___fleq@ff2:	
 21401                           ; 4 bytes @ 0x5
 21402                           
 21403  0075                     __div_to_l_@f2:	
 21404                           ; 4 bytes @ 0x5
 21405                           
 21406  0075                     __tdiv_to_l_@f2:	
 21407                           ; 4 bytes @ 0x5
 21408                           
 21409                           
 21410                           ; 4 bytes @ 0x5
 21411  0075                     	ds	1
 21412  0076                     ??_Lcd_Write_String:
 21413  0076                     cncConfigStop@value:	
 21414                           ; 1 bytes @ 0x6
 21415                           
 21416  0076                     ___awmod@counter:	
 21417                           ; 1 bytes @ 0x6
 21418                           
 21419  0076                     ___lbmod@rem:	
 21420                           ; 1 bytes @ 0x6
 21421                           
 21422                           
 21423                           ; 1 bytes @ 0x6
 21424  0076                     	ds	1
 21425  0077                     ??_cncConfigStop:
 21426  0077                     ?___lbdiv:	
 21427                           ; 1 bytes @ 0x7
 21428                           
 21429  0077                     Lcd_Set_Cursor@a:	
 21430                           ; 1 bytes @ 0x7
 21431                           
 21432  0077                     ___awmod@sign:	
 21433                           ; 1 bytes @ 0x7
 21434                           
 21435  0077                     ___lbdiv@divisor:	
 21436                           ; 1 bytes @ 0x7
 21437                           
 21438  0077                     Lcd_Write_String@i:	
 21439                           ; 1 bytes @ 0x7
 21440                           
 21441  0077                     __Umul8_16@word_mpld:	
 21442                           ; 2 bytes @ 0x7
 21443                           
 21444                           
 21445                           ; 2 bytes @ 0x7
 21446  0077                     	ds	1
 21447  0078                     ??___aldiv:
 21448  0078                     ??___lbdiv:	
 21449                           ; 1 bytes @ 0x8
 21450                           
 21451  0078                     ?___awdiv:	
 21452                           ; 1 bytes @ 0x8
 21453                           
 21454  0078                     ?_getBackTableSpeed:	
 21455                           ; 2 bytes @ 0x8
 21456                           
 21457  0078                     Lcd_Set_Cursor@z:	
 21458                           ; 4 bytes @ 0x8
 21459                           
 21460  0078                     getBackTableSpeed@mv:	
 21461                           ; 1 bytes @ 0x8
 21462                           
 21463  0078                     ___awdiv@divisor:	
 21464                           ; 2 bytes @ 0x8
 21465                           
 21466                           
 21467                           ; 2 bytes @ 0x8
 21468  0078                     	ds	1
 21469  0079                     ??_getSerial:
 21470  0079                     ??_cncCalcToCruise:	
 21471                           ; 1 bytes @ 0x9
 21472                           
 21473  0079                     ??__div_to_l_:	
 21474                           ; 1 bytes @ 0x9
 21475                           
 21476  0079                     ??___lmul:	
 21477                           ; 1 bytes @ 0x9
 21478                           
 21479  0079                     ??___lldiv:	
 21480                           ; 1 bytes @ 0x9
 21481                           
 21482  0079                     getSpeedTable@accel:	
 21483                           ; 1 bytes @ 0x9
 21484                           
 21485  0079                     Lcd_Set_Cursor@y:	
 21486                           ; 1 bytes @ 0x9
 21487                           
 21488  0079                     ___lbdiv@dividend:	
 21489                           ; 1 bytes @ 0x9
 21490                           
 21491  0079                     __Umul8_16@multiplier:	
 21492                           ; 1 bytes @ 0x9
 21493                           
 21494                           
 21495                           ; 1 bytes @ 0x9
 21496  0079                     	ds	1
 21497  007A                     ??___llmod:
 21498  007A                     Lcd_Set_Cursor@temp:	
 21499                           ; 1 bytes @ 0xA
 21500                           
 21501  007A                     ___lbdiv@counter:	
 21502                           ; 1 bytes @ 0xA
 21503                           
 21504  007A                     ___awdiv@dividend:	
 21505                           ; 1 bytes @ 0xA
 21506                           
 21507                           
 21508                           ; 2 bytes @ 0xA
 21509  007A                     	ds	1
 21510  007B                     ??_escreve_LCD:
 21511  007B                     ___lbdiv@quotient:	
 21512                           ; 1 bytes @ 0xB
 21513                           
 21514  007B                     ___llmod@counter:	
 21515                           ; 1 bytes @ 0xB
 21516                           
 21517                           
 21518                           ; 1 bytes @ 0xB
 21519  007B                     	ds	1
 21520  007C                     ??_convertStepsToMM:
 21521  007C                     ??_convertMMtoSteps:	
 21522                           ; 1 bytes @ 0xC
 21523                           
 21524  007C                     ??_cncSetPosHome:	
 21525                           ; 1 bytes @ 0xC
 21526                           
 21527  007C                     ??_cncSetPosStart:	
 21528                           ; 1 bytes @ 0xC
 21529                           
 21530  007C                     ??_cncSetPosStop:	
 21531                           ; 1 bytes @ 0xC
 21532                           
 21533  007C                     ??_sendCMD:	
 21534                           ; 1 bytes @ 0xC
 21535                           
 21536  007C                     ??___flsub:	
 21537                           ; 1 bytes @ 0xC
 21538                           
 21539                           
 21540                           	psect	cstackBANK0
 21541  0020                     __pcstackBANK0:	
 21542                           ; 1 bytes @ 0xC
 21543                           
 21544  0020                     ?_escreve_LCD:
 21545  0020                     ?_cncMove:	
 21546                           ; 1 bytes @ 0x0
 21547                           
 21548  0020                     ??__tdiv_to_l_:	
 21549                           ; 1 bytes @ 0x0
 21550                           
 21551  0020                     ?_cncHomeMove:	
 21552                           ; 1 bytes @ 0x0
 21553                           
 21554  0020                     ??_getBackTableSpeed:	
 21555                           ; 1 bytes @ 0x0
 21556                           
 21557  0020                     ??___awdiv:	
 21558                           ; 1 bytes @ 0x0
 21559                           
 21560  0020                     ??___fleq:	
 21561                           ; 1 bytes @ 0x0
 21562                           
 21563  0020                     ?___aldiv:	
 21564                           ; 1 bytes @ 0x0
 21565                           
 21566  0020                     escreve_LCD@coluna:	
 21567                           ; 4 bytes @ 0x0
 21568                           
 21569  0020                     ___xxtofl@sign:	
 21570                           ; 1 bytes @ 0x0
 21571                           
 21572  0020                     cncHomeMove@mv:	
 21573                           ; 1 bytes @ 0x0
 21574                           
 21575  0020                     cncMove@mv:	
 21576                           ; 2 bytes @ 0x0
 21577                           
 21578  0020                     ___lmul@product:	
 21579                           ; 2 bytes @ 0x0
 21580                           
 21581  0020                     ___lldiv@quotient:	
 21582                           ; 4 bytes @ 0x0
 21583                           
 21584  0020                     ___aldiv@divisor:	
 21585                           ; 4 bytes @ 0x0
 21586                           
 21587  0020                     __div_to_l_@quot:	
 21588                           ; 4 bytes @ 0x0
 21589                           
 21590                           
 21591                           ; 4 bytes @ 0x0
 21592  0020                     	ds	1
 21593  0021                     ___awdiv@counter:
 21594  0021                     ___xxtofl@exp:	
 21595                           ; 1 bytes @ 0x1
 21596                           
 21597  0021                     escreve_LCD@str:	
 21598                           ; 1 bytes @ 0x1
 21599                           
 21600                           
 21601                           ; 2 bytes @ 0x1
 21602  0021                     	ds	1
 21603  0022                     ??_cncMove:
 21604  0022                     cncHomeMove@varHome:	
 21605                           ; 1 bytes @ 0x2
 21606                           
 21607  0022                     ___awdiv@sign:	
 21608                           ; 1 bytes @ 0x2
 21609                           
 21610  0022                     ___xxtofl@arg:	
 21611                           ; 1 bytes @ 0x2
 21612                           
 21613                           
 21614                           ; 4 bytes @ 0x2
 21615  0022                     	ds	1
 21616  0023                     ??_cncHomeMove:
 21617  0023                     escreve_LCD@linha:	
 21618                           ; 1 bytes @ 0x3
 21619                           
 21620  0023                     ___awdiv@quotient:	
 21621                           ; 1 bytes @ 0x3
 21622                           
 21623                           
 21624                           ; 2 bytes @ 0x3
 21625  0023                     	ds	1
 21626  0024                     ?_atol:
 21627  0024                     ___lldiv@counter:	
 21628                           ; 4 bytes @ 0x4
 21629                           
 21630  0024                     __div_to_l_@cntr:	
 21631                           ; 1 bytes @ 0x4
 21632                           
 21633  0024                     getBackTableSpeed@i:	
 21634                           ; 1 bytes @ 0x4
 21635                           
 21636  0024                     ___aldiv@dividend:	
 21637                           ; 4 bytes @ 0x4
 21638                           
 21639  0024                     __tdiv_to_l_@quot:	
 21640                           ; 4 bytes @ 0x4
 21641                           
 21642                           
 21643                           ; 4 bytes @ 0x4
 21644  0024                     	ds	1
 21645  0025                     ?___llmod:
 21646  0025                     __div_to_l_@exp1:	
 21647                           ; 4 bytes @ 0x5
 21648                           
 21649  0025                     ___llmod@divisor:	
 21650                           ; 1 bytes @ 0x5
 21651                           
 21652                           
 21653                           ; 4 bytes @ 0x5
 21654  0025                     	ds	1
 21655  0026                     ?___fldiv:
 21656  0026                     ?___flmul:	
 21657                           ; 4 bytes @ 0x6
 21658                           
 21659  0026                     ___fldiv@a:	
 21660                           ; 4 bytes @ 0x6
 21661                           
 21662  0026                     ___flmul@b:	
 21663                           ; 4 bytes @ 0x6
 21664                           
 21665                           
 21666                           ; 4 bytes @ 0x6
 21667  0026                     	ds	2
 21668  0028                     ??_atol:
 21669  0028                     ___aldiv@counter:	
 21670                           ; 1 bytes @ 0x8
 21671                           
 21672  0028                     __tdiv_to_l_@cntr:	
 21673                           ; 1 bytes @ 0x8
 21674                           
 21675  0028                     getBackTableSpeed@ini:	
 21676                           ; 1 bytes @ 0x8
 21677                           
 21678                           
 21679                           ; 4 bytes @ 0x8
 21680  0028                     	ds	1
 21681  0029                     ___aldiv@sign:
 21682  0029                     __tdiv_to_l_@exp1:	
 21683                           ; 1 bytes @ 0x9
 21684                           
 21685  0029                     ___llmod@dividend:	
 21686                           ; 1 bytes @ 0x9
 21687                           
 21688                           
 21689                           ; 4 bytes @ 0x9
 21690  0029                     	ds	1
 21691  002A                     ___aldiv@quotient:
 21692  002A                     ___fldiv@b:	
 21693                           ; 4 bytes @ 0xA
 21694                           
 21695  002A                     ___flmul@a:	
 21696                           ; 4 bytes @ 0xA
 21697                           
 21698                           
 21699                           ; 4 bytes @ 0xA
 21700  002A                     	ds	1
 21701  002B                     cncMove@t:
 21702                           
 21703                           ; 2 bytes @ 0xB
 21704  002B                     	ds	1
 21705  002C                     atol@sign:
 21706  002C                     cncHomeMove@t:	
 21707                           ; 1 bytes @ 0xC
 21708                           
 21709  002C                     getBackTableSpeed@count:	
 21710                           ; 2 bytes @ 0xC
 21711                           
 21712                           
 21713                           ; 4 bytes @ 0xC
 21714  002C                     	ds	1
 21715  002D                     cncMove@timeSteps:
 21716  002D                     atol@a:	
 21717                           ; 4 bytes @ 0xD
 21718                           
 21719                           
 21720                           ; 4 bytes @ 0xD
 21721  002D                     	ds	1
 21722  002E                     ??___fldiv:
 21723  002E                     ??___flmul:	
 21724                           ; 1 bytes @ 0xE
 21725                           
 21726  002E                     ?_cncCalcToCruise:	
 21727                           ; 1 bytes @ 0xE
 21728                           
 21729  002E                     ?_getSpeedTable:	
 21730                           ; 4 bytes @ 0xE
 21731                           
 21732  002E                     ?_getFrontTableSpeed:	
 21733                           ; 4 bytes @ 0xE
 21734                           
 21735  002E                     cncCalcToCruise@mv:	
 21736                           ; 4 bytes @ 0xE
 21737                           
 21738  002E                     getFrontTableSpeed@mv:	
 21739                           ; 2 bytes @ 0xE
 21740                           
 21741  002E                     cncHomeMove@timeSteps:	
 21742                           ; 2 bytes @ 0xE
 21743                           
 21744  002E                     getSpeedTable@i:	
 21745                           ; 4 bytes @ 0xE
 21746                           
 21747                           
 21748                           ; 4 bytes @ 0xE
 21749  002E                     	ds	3
 21750  0031                     atol@s:
 21751                           
 21752                           ; 1 bytes @ 0x11
 21753  0031                     	ds	1
 21754  0032                     ??_getSpeedTable:
 21755  0032                     ??_getFrontTableSpeed:	
 21756                           ; 1 bytes @ 0x12
 21757                           
 21758  0032                     atol@c:	
 21759                           ; 1 bytes @ 0x12
 21760                           
 21761  0032                     cncCalcToCruise@V:	
 21762                           ; 1 bytes @ 0x12
 21763                           
 21764                           
 21765                           ; 4 bytes @ 0x12
 21766  0032                     	ds	1
 21767  0033                     ___flmul@sign:
 21768  0033                     ___fldiv@rem:	
 21769                           ; 1 bytes @ 0x13
 21770                           
 21771                           
 21772                           ; 4 bytes @ 0x13
 21773  0033                     	ds	1
 21774  0034                     ___flmul@aexp:
 21775                           
 21776                           ; 1 bytes @ 0x14
 21777  0034                     	ds	1
 21778  0035                     ___flmul@bexp:
 21779                           
 21780                           ; 1 bytes @ 0x15
 21781  0035                     	ds	1
 21782  0036                     cncCalcToCruise@S:
 21783  0036                     getFrontTableSpeed@i:	
 21784                           ; 4 bytes @ 0x16
 21785                           
 21786  0036                     ___flmul@grs:	
 21787                           ; 4 bytes @ 0x16
 21788                           
 21789                           
 21790                           ; 4 bytes @ 0x16
 21791  0036                     	ds	1
 21792  0037                     ___fldiv@sign:
 21793                           
 21794                           ; 1 bytes @ 0x17
 21795  0037                     	ds	1
 21796  0038                     ___fldiv@new_exp:
 21797                           
 21798                           ; 2 bytes @ 0x18
 21799  0038                     	ds	2
 21800  003A                     cncCalcToCruise@len:
 21801  003A                     getFrontTableSpeed@len:	
 21802                           ; 4 bytes @ 0x1A
 21803                           
 21804  003A                     ___fldiv@grs:	
 21805                           ; 4 bytes @ 0x1A
 21806                           
 21807  003A                     ___flmul@prod:	
 21808                           ; 4 bytes @ 0x1A
 21809                           
 21810                           
 21811                           ; 4 bytes @ 0x1A
 21812  003A                     	ds	4
 21813  003E                     ___fldiv@bexp:
 21814  003E                     ___flmul@temp:	
 21815                           ; 1 bytes @ 0x1E
 21816                           
 21817  003E                     cncCalcToCruise@a:	
 21818                           ; 2 bytes @ 0x1E
 21819                           
 21820  003E                     getFrontTableSpeed@ini:	
 21821                           ; 4 bytes @ 0x1E
 21822                           
 21823                           
 21824                           ; 4 bytes @ 0x1E
 21825  003E                     	ds	1
 21826  003F                     ___fldiv@aexp:
 21827                           
 21828                           ; 1 bytes @ 0x1F
 21829  003F                     	ds	1
 21830  0040                     ?_convertStepsToMM:
 21831  0040                     ?_getMoveTime:	
 21832                           ; 4 bytes @ 0x20
 21833                           
 21834  0040                     ?_fround:	
 21835                           ; 4 bytes @ 0x20
 21836                           
 21837  0040                     ?_scale:	
 21838                           ; 4 bytes @ 0x20
 21839                           
 21840  0040                     getMoveTime@mv:	
 21841                           ; 4 bytes @ 0x20
 21842                           
 21843  0040                     convertStepsToMM@steps:	
 21844                           ; 2 bytes @ 0x20
 21845                           
 21846                           
 21847                           ; 4 bytes @ 0x20
 21848  0040                     	ds	2
 21849  0042                     getFrontTableSpeed@count:
 21850                           
 21851                           ; 4 bytes @ 0x22
 21852  0042                     	ds	2
 21853  0044                     ??_getMoveTime:
 21854  0044                     ??_fround:	
 21855                           ; 1 bytes @ 0x24
 21856                           
 21857  0044                     ??_scale:	
 21858                           ; 1 bytes @ 0x24
 21859                           
 21860                           
 21861                           ; 1 bytes @ 0x24
 21862  0044                     	ds	5
 21863  0049                     getMoveTime@usAcc:
 21864                           
 21865                           ; 4 bytes @ 0x29
 21866  0049                     	ds	3
 21867  004C                     _fround$4356:
 21868                           
 21869                           ; 4 bytes @ 0x2C
 21870  004C                     	ds	1
 21871  004D                     getMoveTime@count:
 21872                           
 21873                           ; 4 bytes @ 0x2D
 21874  004D                     	ds	3
 21875  0050                     _fround$4355:
 21876  0050                     _scale$4357:	
 21877                           ; 4 bytes @ 0x30
 21878                           
 21879                           
 21880                           ; 4 bytes @ 0x30
 21881  0050                     	ds	4
 21882  0054                     fround@prec:
 21883  0054                     scale@scl:	
 21884                           ; 1 bytes @ 0x34
 21885                           
 21886                           
 21887                           ; 1 bytes @ 0x34
 21888  0054                     	ds	1
 21889  0055                     ?___fltol:
 21890  0055                     ?___fladd:	
 21891                           ; 4 bytes @ 0x35
 21892                           
 21893  0055                     ___fltol@f1:	
 21894                           ; 4 bytes @ 0x35
 21895                           
 21896  0055                     ___fladd@b:	
 21897                           ; 4 bytes @ 0x35
 21898                           
 21899                           
 21900                           ; 4 bytes @ 0x35
 21901  0055                     	ds	4
 21902  0059                     ??___fltol:
 21903  0059                     ___fladd@a:	
 21904                           ; 1 bytes @ 0x39
 21905                           
 21906                           
 21907                           ; 4 bytes @ 0x39
 21908  0059                     	ds	4
 21909  005D                     ??___fladd:
 21910                           
 21911                           ; 1 bytes @ 0x3D
 21912  005D                     	ds	1
 21913  005E                     ___fltol@sign1:
 21914                           
 21915                           ; 1 bytes @ 0x3E
 21916  005E                     	ds	1
 21917  005F                     ___fltol@exp1:
 21918                           
 21919                           ; 1 bytes @ 0x3F
 21920  005F                     	ds	1
 21921  0060                     ?_convertMMtoSteps:
 21922  0060                     ?_getValueCMD:	
 21923                           ; 4 bytes @ 0x40
 21924                           
 21925  0060                     convertMMtoSteps@mm:	
 21926                           ; 4 bytes @ 0x40
 21927                           
 21928                           
 21929                           ; 4 bytes @ 0x40
 21930  0060                     	ds	4
 21931  0064                     ?_cncConfigMove:
 21932  0064                     ??_getValueCMD:	
 21933                           ; 1 bytes @ 0x44
 21934                           
 21935  0064                     cncConfigMove@mv:	
 21936                           ; 1 bytes @ 0x44
 21937                           
 21938                           
 21939                           ; 2 bytes @ 0x44
 21940  0064                     	ds	1
 21941  0065                     ___fladd@signs:
 21942                           
 21943                           ; 1 bytes @ 0x45
 21944  0065                     	ds	1
 21945  0066                     ___fladd@aexp:
 21946  0066                     cncConfigMove@speed:	
 21947                           ; 1 bytes @ 0x46
 21948                           
 21949                           
 21950                           ; 4 bytes @ 0x46
 21951  0066                     	ds	1
 21952  0067                     ___fladd@bexp:
 21953                           
 21954                           ; 1 bytes @ 0x47
 21955  0067                     	ds	1
 21956  0068                     getValueCMD@cmd:
 21957  0068                     ___fladd@grs:	
 21958                           ; 1 bytes @ 0x48
 21959                           
 21960                           
 21961                           ; 1 bytes @ 0x48
 21962  0068                     	ds	1
 21963  0069                     ??___flge:
 21964  0069                     getValueCMD@value:	
 21965                           ; 1 bytes @ 0x49
 21966                           
 21967                           
 21968                           ; 4 bytes @ 0x49
 21969  0069                     	ds	1
 21970  006A                     cncConfigMove@accel:
 21971                           
 21972                           ; 1 bytes @ 0x4A
 21973  006A                     	ds	1
 21974  006B                     ??_cncConfigHome:
 21975  006B                     ??_cncManualMove:	
 21976                           ; 1 bytes @ 0x4B
 21977                           
 21978  006B                     ??_cncMoveTo:	
 21979                           ; 1 bytes @ 0x4B
 21980                           
 21981                           
 21982                           ; 1 bytes @ 0x4B
 21983  006B                     	ds	2
 21984  006D                     ??_cncConfig:
 21985  006D                     ?__doprnt:	
 21986                           ; 1 bytes @ 0x4D
 21987                           
 21988  006D                     __doprnt@f:	
 21989                           ; 2 bytes @ 0x4D
 21990                           
 21991                           
 21992                           ; 2 bytes @ 0x4D
 21993  006D                     	ds	2
 21994  006F                     cncConfigHome@b:
 21995  006F                     __doprnt@ap:	
 21996                           ; 1 bytes @ 0x4F
 21997                           
 21998                           
 21999                           ; 1 bytes @ 0x4F
 22000  006F                     	ds	1
 22001                           
 22002                           	psect	maintext
 22003  334D                     __pmaintext:	
 22004 ;;
 22005 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 22006 ;;
 22007 ;; *************** function _main *****************
 22008 ;; Defined at:
 22009 ;;		line 3 in file "main.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;		None
 22012 ;; Auto vars:     Size  Location     Type
 22013 ;;  i               2    0[BANK4 ] int 
 22014 ;; Return value:  Size  Location     Type
 22015 ;;                  1    wreg      void 
 22016 ;; Registers used:
 22017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22018 ;; Tracked objects:
 22019 ;;		On entry : B3F/0
 22020 ;;		On exit  : 3F/2
 22021 ;;		Unchanged: 0/0
 22022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22024 ;;      Locals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22025 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22026 ;;      Totals:         0       0       2       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22027 ;;Total ram usage:        4 bytes
 22028 ;; Hardware stack levels required when called: unknown (due to recursion)
 22029 ;; This function calls:
 22030 ;;		_IOCBF3_SetInterruptHandler
 22031 ;;		_IOCBF4_SetInterruptHandler
 22032 ;;		_IOCBF5_SetInterruptHandler
 22033 ;;		_Inicia_LCD
 22034 ;;		_Lcd_Clear
 22035 ;;		_SYSTEM_Initialize
 22036 ;;		_TMR2_SetInterruptHandler
 22037 ;;		_cncConfig
 22038 ;;		_cncConfigHome
 22039 ;;		_cncConfigMove
 22040 ;;		_cncManualMove
 22041 ;;		_cncSetPos
 22042 ;;		_cncTeste
 22043 ;;		_convertStepsToMM
 22044 ;;		_escreve_LCD
 22045 ;;		_exeSerial
 22046 ;;		_getSerial
 22047 ;;		_liberarTeclado
 22048 ;;		_navTelas
 22049 ;;		_printf
 22050 ;;		_sprintf
 22051 ;; This function is called by:
 22052 ;;		Startup code after reset
 22053 ;; This function uses a non-reentrant model
 22054 ;;
 22055                           
 22056  334D                     _main:	
 22057                           ;psect for function _main
 22058                           
 22059                           
 22060                           ;main.c: 7: SYSTEM_Initialize();
 22061                           
 22062                           ;incstack = 0
 22063                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22064  334D  31D1  21F7  31B3   	fcall	_SYSTEM_Initialize
 22065                           
 22066                           ;main.c: 8: Inicia_LCD();
 22067  3350  31DE  26EF  31B3   	fcall	_Inicia_LCD
 22068                           
 22069                           ;main.c: 10: TMR2_SetInterruptHandler(task10ms);
 22070  3353  3085               	movlw	low _task10ms
 22071  3354  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22072  3355  3055               	movlw	high _task10ms
 22073  3356  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22074  3357  31D0  2001  31B3   	fcall	_TMR2_SetInterruptHandler
 22075                           
 22076                           ;main.c: 11: IOCBF3_SetInterruptHandler(btFunc);
 22077  335A  3074               	movlw	low _btFunc
 22078  335B  00F1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
 22079  335C  3050               	movlw	high _btFunc
 22080  335D  00F2               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
 22081  335E  31DE  268D  31B3   	fcall	_IOCBF3_SetInterruptHandler
 22082                           
 22083                           ;main.c: 12: IOCBF4_SetInterruptHandler(btFunc);
 22084  3361  3074               	movlw	low _btFunc
 22085  3362  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
 22086  3363  3050               	movlw	high _btFunc
 22087  3364  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
 22088  3365  31DE  266B  31B3   	fcall	_IOCBF4_SetInterruptHandler
 22089                           
 22090                           ;main.c: 13: IOCBF5_SetInterruptHandler(btFunc);
 22091  3368  3074               	movlw	low _btFunc
 22092  3369  00F1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
 22093  336A  3050               	movlw	high _btFunc
 22094  336B  00F2               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
 22095  336C  31DE  2670  31B3   	fcall	_IOCBF5_SetInterruptHandler
 22096                           
 22097                           ;main.c: 15: (INTCONbits.GIE = 1);
 22098  336F  178B               	bsf	11,7	;volatile
 22099                           
 22100                           ;main.c: 16: (INTCONbits.PEIE = 1);
 22101  3370  170B               	bsf	11,6	;volatile
 22102                           
 22103                           ;main.c: 20: escreve_LCD(1,1," Bom dia!!!");
 22104  3371  0140               	movlb	0	; select bank0
 22105  3372  01A0               	clrf	escreve_LCD@coluna
 22106  3373  0AA0               	incf	escreve_LCD@coluna,f
 22107  3374  3005               	movlw	low (STR_1| (0+32768))
 22108  3375  00A1               	movwf	escreve_LCD@str
 22109  3376  30E1               	movlw	high (STR_1| (0+32768))
 22110  3377  00A2               	movwf	escreve_LCD@str+1
 22111  3378  3001               	movlw	1
 22112  3379  31D2  22E7  31B3   	fcall	_escreve_LCD
 22113                           
 22114                           ;main.c: 21: (LATAbits.LATA5 = 1);
 22115  337C  0140               	movlb	0	; select bank0
 22116  337D  1696               	bsf	22,5	;volatile
 22117                           
 22118                           ;main.c: 22: printf("[b65]");
 22119  337E  30A0               	movlw	low (STR_2| (0+32768))
 22120  337F  0141               	movlb	1	; select bank1
 22121  3380  00CA               	movwf	printf@f^(0+128)
 22122  3381  30E1               	movlw	high (STR_2| (0+32768))
 22123  3382  00CB               	movwf	(printf@f^(0+128)+1)
 22124  3383  31D0  203B  31B3   	fcall	_printf
 22125                           
 22126                           ;main.c: 23: cncConfig();
 22127  3386  31C5  2517  31B3   	fcall	_cncConfig
 22128                           
 22129                           ;main.c: 24: cncConfigHome();
 22130  3389  31C1  2129  31B3   	fcall	_cncConfigHome
 22131                           
 22132                           ;main.c: 26: int i = 0;
 22133  338C  0144               	movlb	4	; select bank4
 22134  338D  01EA               	clrf	main@i^(0+512)
 22135  338E  01EB               	clrf	(main@i+1)^(0+512)
 22136  338F                     l11730:
 22137                           
 22138                           ;main.c: 29: getSerial();
 22139  338F  31D7  2720  31B3   	fcall	_getSerial
 22140                           
 22141                           ;main.c: 30: exeSerial();
 22142  3392  31C8  20D7  31B3   	fcall	_exeSerial
 22143                           
 22144                           ;main.c: 32: if(TMR4IF){
 22145  3395  014E               	movlb	14	; select bank14
 22146  3396  1D90               	btfss	16,3	;volatile
 22147  3397  2BF7               	goto	l11750
 22148                           
 22149                           ;main.c: 33: TMR4IF = 0;
 22150  3398  1190               	bcf	16,3	;volatile
 22151                           
 22152                           ;main.c: 34: sprintf(str,"Pos: %.2f mm",convertStepsToMM(step.ref));
 22153  3399  30C6               	movlw	low _str
 22154  339A  0141               	movlb	1	; select bank1
 22155  339B  00CA               	movwf	sprintf@wh^(0+128)
 22156  339C  3002               	movlw	high _str
 22157  339D  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22158  339E  3099               	movlw	low ((STR_30+2)| (0+32768))
 22159  339F  00CC               	movwf	sprintf@f^(0+128)
 22160  33A0  30E0               	movlw	high ((STR_30+2)| (0+32768))
 22161  33A1  00CD               	movwf	(sprintf@f^(0+128)+1)
 22162  33A2  30E8               	movlw	232
 22163  33A3  0086               	movwf	6
 22164  33A4  302F               	movlw	47
 22165  33A5  0087               	movwf	7
 22166  33A6  3F40               	moviw [0]fsr1
 22167  33A7  0140               	movlb	0	; select bank0
 22168  33A8  00C0               	movwf	convertStepsToMM@steps
 22169  33A9  3F41               	moviw [1]fsr1
 22170  33AA  00C1               	movwf	convertStepsToMM@steps+1
 22171  33AB  3F42               	moviw [2]fsr1
 22172  33AC  00C2               	movwf	convertStepsToMM@steps+2
 22173  33AD  3F43               	moviw [3]fsr1
 22174  33AE  00C3               	movwf	convertStepsToMM@steps+3
 22175  33AF  31D1  21CB  31B3   	fcall	_convertStepsToMM
 22176  33B2  0843               	movf	?_convertStepsToMM+3,w
 22177  33B3  0141               	movlb	1	; select bank1
 22178  33B4  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 22179  33B5  0140               	movlb	0	; select bank0
 22180  33B6  0842               	movf	?_convertStepsToMM+2,w
 22181  33B7  0141               	movlb	1	; select bank1
 22182  33B8  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 22183  33B9  0140               	movlb	0	; select bank0
 22184  33BA  0841               	movf	?_convertStepsToMM+1,w
 22185  33BB  0141               	movlb	1	; select bank1
 22186  33BC  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 22187  33BD  0140               	movlb	0	; select bank0
 22188  33BE  0840               	movf	?_convertStepsToMM,w
 22189  33BF  0141               	movlb	1	; select bank1
 22190  33C0  00CE               	movwf	(?_sprintf^(0+128)+4)
 22191  33C1  31B8  2002  31B3   	fcall	_sprintf
 22192                           
 22193                           ;main.c: 35: escreve_LCD(2,1,str);
 22194  33C4  0140               	movlb	0	; select bank0
 22195  33C5  01A0               	clrf	escreve_LCD@coluna
 22196  33C6  0AA0               	incf	escreve_LCD@coluna,f
 22197  33C7  30C6               	movlw	low _str
 22198  33C8  00A1               	movwf	escreve_LCD@str
 22199  33C9  3002               	movlw	high _str
 22200  33CA  00A2               	movwf	escreve_LCD@str+1
 22201  33CB  3002               	movlw	2
 22202  33CC  31D2  22E7  31B3   	fcall	_escreve_LCD
 22203                           
 22204                           ;main.c: 36: escreve_LCD(1,1," !!! Ready !!! ");
 22205  33CF  0140               	movlb	0	; select bank0
 22206  33D0  01A0               	clrf	escreve_LCD@coluna
 22207  33D1  0AA0               	incf	escreve_LCD@coluna,f
 22208  33D2  3078               	movlw	low (STR_4| (0+32768))
 22209  33D3  00A1               	movwf	escreve_LCD@str
 22210  33D4  30E0               	movlw	high (STR_4| (0+32768))
 22211  33D5  00A2               	movwf	escreve_LCD@str+1
 22212  33D6  3001               	movlw	1
 22213  33D7  31D2  22E7  31B3   	fcall	_escreve_LCD
 22214                           
 22215                           ;main.c: 37: if(++i > 10){
 22216  33DA  3001               	movlw	1
 22217  33DB  0144               	movlb	4	; select bank4
 22218  33DC  07EA               	addwf	main@i^(0+512),f
 22219  33DD  3000               	movlw	0
 22220  33DE  3DEB               	addwfc	(main@i+1)^(0+512),f
 22221  33DF  086B               	movf	(main@i+1)^(0+512),w
 22222  33E0  3A80               	xorlw	128
 22223  33E1  0141               	movlb	1	; select bank1
 22224  33E2  00E7               	movwf	??_main^(0+128)
 22225  33E3  3080               	movlw	128
 22226  33E4  0267               	subwf	??_main^(0+128),w
 22227  33E5  1D03               	skipz
 22228  33E6  2BEA               	goto	u13005
 22229  33E7  300B               	movlw	11
 22230  33E8  0144               	movlb	4	; select bank4
 22231  33E9  026A               	subwf	main@i^(0+512),w
 22232  33EA                     u13005:
 22233  33EA  1C03               	skipc
 22234  33EB  2BF7               	goto	l11750
 22235                           
 22236                           ;main.c: 38: printf("[b65]");
 22237  33EC  30A0               	movlw	low (STR_2| (0+32768))
 22238  33ED  0141               	movlb	1	; select bank1
 22239  33EE  00CA               	movwf	printf@f^(0+128)
 22240  33EF  30E1               	movlw	high (STR_2| (0+32768))
 22241  33F0  00CB               	movwf	(printf@f^(0+128)+1)
 22242  33F1  31D0  203B  31B3   	fcall	_printf
 22243                           
 22244                           ;main.c: 39: i = 0;
 22245  33F4  0144               	movlb	4	; select bank4
 22246  33F5  01EA               	clrf	main@i^(0+512)
 22247  33F6  01EB               	clrf	(main@i+1)^(0+512)
 22248  33F7                     l11750:
 22249                           
 22250                           ;main.c: 40: };main.c: 41: };main.c: 43: if(bt.exec){
 22251  33F7  0142               	movlb	2	; select bank2
 22252  33F8  0821               	movf	(_bt^(0+256)+1),w	;volatile
 22253  33F9  1D03               	btfss	3,2
 22254  33FA  2D8A               	goto	l11806
 22255  33FB  2B8F               	goto	l11730
 22256  33FC                     l11754:
 22257                           
 22258                           ;main.c: 46: tela = TELA_DESCE;
 22259  33FC  3002               	movlw	2
 22260  33FD  0141               	movlb	1	; select bank1
 22261  33FE  00E7               	movwf	??_main^(0+128)
 22262  33FF  0867               	movf	??_main^(0+128),w
 22263  3400  00EB               	movwf	_tela^(0+128)
 22264                           
 22265                           ;main.c: 47: navTelas();
 22266  3401  31BA  229F  31B3   	fcall	_navTelas
 22267                           
 22268                           ;main.c: 49: cncSetPos(cnc.pos.Home,cnc.pos.Start,cnc.pos.Stop);
 22269  3404  3038               	movlw	56
 22270  3405  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22271  3406  0086               	movwf	6
 22272  3407  3001               	movlw	1	; select bank3/4
 22273  3408  0087               	movwf	7
 22274  3409  3F40               	moviw [0]fsr1
 22275  340A  0141               	movlb	1	; select bank1
 22276  340B  00A8               	movwf	cncSetPos@home^(0+128)
 22277  340C  3F41               	moviw [1]fsr1
 22278  340D  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 22279  340E  3F42               	moviw [2]fsr1
 22280  340F  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 22281  3410  3F43               	moviw [3]fsr1
 22282  3411  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 22283  3412  303C               	movlw	60
 22284  3413  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22285  3414  0086               	movwf	6
 22286  3415  3001               	movlw	1	; select bank3/4
 22287  3416  0087               	movwf	7
 22288  3417  3F40               	moviw [0]fsr1
 22289  3418  00AC               	movwf	cncSetPos@start^(0+128)
 22290  3419  3F41               	moviw [1]fsr1
 22291  341A  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 22292  341B  3F42               	moviw [2]fsr1
 22293  341C  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 22294  341D  3F43               	moviw [3]fsr1
 22295  341E  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 22296  341F  3040               	movlw	64
 22297  3420  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22298  3421  0086               	movwf	6
 22299  3422  3001               	movlw	1	; select bank3/4
 22300  3423  0087               	movwf	7
 22301  3424  3F40               	moviw [0]fsr1
 22302  3425  00B0               	movwf	cncSetPos@stop^(0+128)
 22303  3426  3F41               	moviw [1]fsr1
 22304  3427  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 22305  3428  3F42               	moviw [2]fsr1
 22306  3429  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 22307  342A  3F43               	moviw [3]fsr1
 22308  342B  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 22309  342C  31A8  200D  31B3   	fcall	_cncSetPos
 22310                           
 22311                           ;main.c: 50: cncConfigMove(&step.Forward,step.Forward.Speed,step.Forward.accel);
 22312  342F  30F8               	movlw	248
 22313  3430  0140               	movlb	0	; select bank0
 22314  3431  00E4               	movwf	cncConfigMove@mv
 22315  3432  302E               	movlw	46
 22316  3433  00E5               	movwf	cncConfigMove@mv+1
 22317  3434  30F8               	movlw	248
 22318  3435  0086               	movwf	6
 22319  3436  302E               	movlw	46
 22320  3437  0087               	movwf	7
 22321  3438  3143               	addfsr 1,3
 22322  3439  3F40               	moviw [0]fsr1
 22323  343A  00E6               	movwf	cncConfigMove@speed
 22324  343B  3F41               	moviw [1]fsr1
 22325  343C  00E7               	movwf	cncConfigMove@speed+1
 22326  343D  3F42               	moviw [2]fsr1
 22327  343E  00E8               	movwf	cncConfigMove@speed+2
 22328  343F  3F43               	moviw [3]fsr1
 22329  3440  00E9               	movwf	cncConfigMove@speed+3
 22330  3441  30F8               	movlw	248
 22331  3442  0086               	movwf	6
 22332  3443  302E               	movlw	46
 22333  3444  0087               	movwf	7
 22334  3445  3142               	addfsr 1,2
 22335  3446  0801               	movf	1,w
 22336  3447  0141               	movlb	1	; select bank1
 22337  3448  00E7               	movwf	??_main^(0+128)
 22338  3449  0867               	movf	??_main^(0+128),w
 22339  344A  0140               	movlb	0	; select bank0
 22340  344B  00EA               	movwf	cncConfigMove@accel
 22341  344C  31BC  2450  31B3   	fcall	_cncConfigMove
 22342                           
 22343                           ;main.c: 51: cncConfigMove(&step.Welding,step.Welding.Speed,step.Welding.accel);
 22344  344F  3031               	movlw	49
 22345  3450  00E4               	movwf	cncConfigMove@mv
 22346  3451  302F               	movlw	47
 22347  3452  00E5               	movwf	cncConfigMove@mv+1
 22348  3453  3034               	movlw	52
 22349  3454  0086               	movwf	6
 22350  3455  302F               	movlw	47
 22351  3456  0087               	movwf	7
 22352  3457  3F40               	moviw [0]fsr1
 22353  3458  00E6               	movwf	cncConfigMove@speed
 22354  3459  3F41               	moviw [1]fsr1
 22355  345A  00E7               	movwf	cncConfigMove@speed+1
 22356  345B  3F42               	moviw [2]fsr1
 22357  345C  00E8               	movwf	cncConfigMove@speed+2
 22358  345D  3F43               	moviw [3]fsr1
 22359  345E  00E9               	movwf	cncConfigMove@speed+3
 22360  345F  3033               	movlw	51
 22361  3460  0086               	movwf	6
 22362  3461  302F               	movlw	47
 22363  3462  0087               	movwf	7
 22364  3463  0801               	movf	1,w
 22365  3464  0141               	movlb	1	; select bank1
 22366  3465  00E7               	movwf	??_main^(0+128)
 22367  3466  0867               	movf	??_main^(0+128),w
 22368  3467  0140               	movlb	0	; select bank0
 22369  3468  00EA               	movwf	cncConfigMove@accel
 22370  3469  31BC  2450  31B3   	fcall	_cncConfigMove
 22371                           
 22372                           ;main.c: 52: cncConfigMove(&step.Return,step.Return.Speed,step.Return.accel);
 22373  346C  306A               	movlw	106
 22374  346D  00E4               	movwf	cncConfigMove@mv
 22375  346E  302F               	movlw	47
 22376  346F  00E5               	movwf	cncConfigMove@mv+1
 22377  3470  306D               	movlw	109
 22378  3471  0086               	movwf	6
 22379  3472  302F               	movlw	47
 22380  3473  0087               	movwf	7
 22381  3474  3F40               	moviw [0]fsr1
 22382  3475  00E6               	movwf	cncConfigMove@speed
 22383  3476  3F41               	moviw [1]fsr1
 22384  3477  00E7               	movwf	cncConfigMove@speed+1
 22385  3478  3F42               	moviw [2]fsr1
 22386  3479  00E8               	movwf	cncConfigMove@speed+2
 22387  347A  3F43               	moviw [3]fsr1
 22388  347B  00E9               	movwf	cncConfigMove@speed+3
 22389  347C  306C               	movlw	108
 22390  347D  0086               	movwf	6
 22391  347E  302F               	movlw	47
 22392  347F  0087               	movwf	7
 22393  3480  0801               	movf	1,w
 22394  3481  0141               	movlb	1	; select bank1
 22395  3482  00E7               	movwf	??_main^(0+128)
 22396  3483  0867               	movf	??_main^(0+128),w
 22397  3484  0140               	movlb	0	; select bank0
 22398  3485  00EA               	movwf	cncConfigMove@accel
 22399  3486  31BC  2450  31B3   	fcall	_cncConfigMove
 22400                           
 22401                           ;main.c: 54: sprintf(str1,"%.2f | %.2f",cnc.pos.Home, cnc.pos.Start);
 22402  3489  3054               	movlw	low _str1
 22403  348A  0141               	movlb	1	; select bank1
 22404  348B  00CA               	movwf	sprintf@wh^(0+128)
 22405  348C  3002               	movlw	high _str1
 22406  348D  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22407  348E  3011               	movlw	low (STR_6| (0+32768))
 22408  348F  00CC               	movwf	sprintf@f^(0+128)
 22409  3490  30E1               	movlw	high (STR_6| (0+32768))
 22410  3491  00CD               	movwf	(sprintf@f^(0+128)+1)
 22411  3492  3038               	movlw	56
 22412  3493  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22413  3494  0086               	movwf	6
 22414  3495  3001               	movlw	1	; select bank3/4
 22415  3496  0087               	movwf	7
 22416  3497  3F40               	moviw [0]fsr1
 22417  3498  00CE               	movwf	(?_sprintf^(0+128)+4)
 22418  3499  3F41               	moviw [1]fsr1
 22419  349A  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 22420  349B  3F42               	moviw [2]fsr1
 22421  349C  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 22422  349D  3F43               	moviw [3]fsr1
 22423  349E  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 22424  349F  303C               	movlw	60
 22425  34A0  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22426  34A1  0086               	movwf	6
 22427  34A2  3001               	movlw	1	; select bank3/4
 22428  34A3  0087               	movwf	7
 22429  34A4  3F40               	moviw [0]fsr1
 22430  34A5  00D2               	movwf	(?_sprintf^(0+128)+8)
 22431  34A6  3F41               	moviw [1]fsr1
 22432  34A7  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 22433  34A8  3F42               	moviw [2]fsr1
 22434  34A9  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 22435  34AA  3F43               	moviw [3]fsr1
 22436  34AB  00D5               	movwf	((?_sprintf+3)^(0+128)+8)
 22437  34AC  31B8  2002  31B3   	fcall	_sprintf
 22438                           
 22439                           ;main.c: 55: sprintf(str2,"%.2f | %.2f",cnc.pos.Stop, convertStepsToMM(step.ref));
 22440  34AF  304D               	movlw	low _str2
 22441  34B0  00CA               	movwf	sprintf@wh^(0+128)
 22442  34B1  3001               	movlw	high _str2
 22443  34B2  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22444  34B3  3011               	movlw	low (STR_6| (0+32768))
 22445  34B4  00CC               	movwf	sprintf@f^(0+128)
 22446  34B5  30E1               	movlw	high (STR_6| (0+32768))
 22447  34B6  00CD               	movwf	(sprintf@f^(0+128)+1)
 22448  34B7  3040               	movlw	64
 22449  34B8  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22450  34B9  0086               	movwf	6
 22451  34BA  3001               	movlw	1	; select bank3/4
 22452  34BB  0087               	movwf	7
 22453  34BC  3F40               	moviw [0]fsr1
 22454  34BD  00CE               	movwf	(?_sprintf^(0+128)+4)
 22455  34BE  3F41               	moviw [1]fsr1
 22456  34BF  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 22457  34C0  3F42               	moviw [2]fsr1
 22458  34C1  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 22459  34C2  3F43               	moviw [3]fsr1
 22460  34C3  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 22461  34C4  30E8               	movlw	232
 22462  34C5  0086               	movwf	6
 22463  34C6  302F               	movlw	47
 22464  34C7  0087               	movwf	7
 22465  34C8  3F40               	moviw [0]fsr1
 22466  34C9  0140               	movlb	0	; select bank0
 22467  34CA  00C0               	movwf	convertStepsToMM@steps
 22468  34CB  3F41               	moviw [1]fsr1
 22469  34CC  00C1               	movwf	convertStepsToMM@steps+1
 22470  34CD  3F42               	moviw [2]fsr1
 22471  34CE  00C2               	movwf	convertStepsToMM@steps+2
 22472  34CF  3F43               	moviw [3]fsr1
 22473  34D0  00C3               	movwf	convertStepsToMM@steps+3
 22474  34D1  31D1  21CB  31B3   	fcall	_convertStepsToMM
 22475  34D4  0843               	movf	?_convertStepsToMM+3,w
 22476  34D5  0141               	movlb	1	; select bank1
 22477  34D6  00D5               	movwf	((?_sprintf+3)^(0+128)+8)
 22478  34D7  0140               	movlb	0	; select bank0
 22479  34D8  0842               	movf	?_convertStepsToMM+2,w
 22480  34D9  0141               	movlb	1	; select bank1
 22481  34DA  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 22482  34DB  0140               	movlb	0	; select bank0
 22483  34DC  0841               	movf	?_convertStepsToMM+1,w
 22484  34DD  0141               	movlb	1	; select bank1
 22485  34DE  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 22486  34DF  0140               	movlb	0	; select bank0
 22487  34E0  0840               	movf	?_convertStepsToMM,w
 22488  34E1  0141               	movlb	1	; select bank1
 22489  34E2  00D2               	movwf	(?_sprintf^(0+128)+8)
 22490  34E3  31B8  2002  31B3   	fcall	_sprintf
 22491                           
 22492                           ;main.c: 56: escreve_LCD(1,1,str1);
 22493  34E6  0140               	movlb	0	; select bank0
 22494  34E7  01A0               	clrf	escreve_LCD@coluna
 22495  34E8  0AA0               	incf	escreve_LCD@coluna,f
 22496  34E9  3054               	movlw	low _str1
 22497  34EA  00A1               	movwf	escreve_LCD@str
 22498  34EB  3002               	movlw	high _str1
 22499  34EC  00A2               	movwf	escreve_LCD@str+1
 22500  34ED  3001               	movlw	1
 22501  34EE  31D2  22E7  31B3   	fcall	_escreve_LCD
 22502                           
 22503                           ;main.c: 57: escreve_LCD(2,1,str2);
 22504  34F1  0140               	movlb	0	; select bank0
 22505  34F2  01A0               	clrf	escreve_LCD@coluna
 22506  34F3  0AA0               	incf	escreve_LCD@coluna,f
 22507  34F4  304D               	movlw	low _str2
 22508  34F5  00A1               	movwf	escreve_LCD@str
 22509  34F6  3001               	movlw	high _str2
 22510  34F7  00A2               	movwf	escreve_LCD@str+1
 22511  34F8  3002               	movlw	2
 22512  34F9  31D2  22E7  31B3   	fcall	_escreve_LCD
 22513                           
 22514                           ;main.c: 58: liberarTeclado(1000);
 22515  34FC  30E8               	movlw	232
 22516  34FD  00F1               	movwf	liberarTeclado@ms
 22517  34FE  3003               	movlw	3
 22518  34FF  00F2               	movwf	liberarTeclado@ms+1
 22519  3500  31D0  2007  31B3   	fcall	_liberarTeclado
 22520                           
 22521                           ;main.c: 59: break;
 22522  3503  2B8F               	goto	l11730
 22523  3504                     l11776:
 22524                           
 22525                           ;main.c: 63: escreve_LCD(1,1,"cncTeste");
 22526  3504  0140               	movlb	0	; select bank0
 22527  3505  01A0               	clrf	escreve_LCD@coluna
 22528  3506  0AA0               	incf	escreve_LCD@coluna,f
 22529  3507  3079               	movlw	low (STR_8| (0+32768))
 22530  3508  00A1               	movwf	escreve_LCD@str
 22531  3509  30E1               	movlw	high (STR_8| (0+32768))
 22532  350A  00A2               	movwf	escreve_LCD@str+1
 22533  350B  3001               	movlw	1
 22534  350C  31D2  22E7  31B3   	fcall	_escreve_LCD
 22535                           
 22536                           ;main.c: 64: bt.exec = 0;
 22537  350F  01A1               	clrf	(_bt^(0+256)+1)	;volatile
 22538                           
 22539                           ;main.c: 65: liberarTeclado(100);
 22540  3510  3064               	movlw	100
 22541  3511  00F1               	movwf	liberarTeclado@ms
 22542  3512  3000               	movlw	0
 22543  3513  00F2               	movwf	liberarTeclado@ms+1
 22544  3514  31D0  2007  31B3   	fcall	_liberarTeclado
 22545  3517                     l11784:	
 22546                           ;main.c: 66: while(bt.value != 0x0C){
 22547                           
 22548  3517  300C               	movlw	12
 22549  3518  0142               	movlb	2	; select bank2
 22550  3519  0620               	xorwf	_bt^(0+256),w	;volatile
 22551  351A  1903               	btfsc	3,2
 22552  351B  2D20               	goto	l11786
 22553                           
 22554                           ;main.c: 67: cncTeste();
 22555  351C  31CE  26C9  31B3   	fcall	_cncTeste
 22556  351F  2D17               	goto	l11784
 22557  3520                     l11786:
 22558                           
 22559                           ;main.c: 68: };main.c: 69: liberarTeclado(100);
 22560  3520  3064               	movlw	100
 22561  3521  00F1               	movwf	liberarTeclado@ms
 22562  3522  3000               	movlw	0
 22563  3523  00F2               	movwf	liberarTeclado@ms+1
 22564  3524  31D0  2007  31B3   	fcall	_liberarTeclado
 22565                           
 22566                           ;main.c: 71: break;
 22567  3527  2B8F               	goto	l11730
 22568  3528                     l11788:
 22569                           
 22570                           ;main.c: 74: case 0x0A:;main.c: 75: cncManualMove(100.0,ACC_50,cnc.max.step.Pos,cnc.min.
      +                          step.Pos);
 22571  3528  3042               	movlw	66
 22572  3529  0141               	movlb	1	; select bank1
 22573  352A  00AC               	movwf	(cncManualMove@speed+3)^(0+128)
 22574  352B  30C8               	movlw	200
 22575  352C  00AB               	movwf	(cncManualMove@speed+2)^(0+128)
 22576  352D  3000               	movlw	0
 22577  352E  00AA               	movwf	(cncManualMove@speed+1)^(0+128)
 22578  352F  3000               	movlw	0
 22579  3530  00A9               	movwf	cncManualMove@speed^(0+128)
 22580  3531  3003               	movlw	3
 22581  3532  00E7               	movwf	??_main^(0+128)
 22582  3533  0867               	movf	??_main^(0+128),w
 22583  3534  00AD               	movwf	cncManualMove@accel^(0+128)
 22584  3535  3030               	movlw	48
 22585  3536  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22586  3537  0086               	movwf	6
 22587  3538  3001               	movlw	1	; select bank3/4
 22588  3539  0087               	movwf	7
 22589  353A  3F40               	moviw [0]fsr1
 22590  353B  00AE               	movwf	cncManualMove@max^(0+128)
 22591  353C  3F41               	moviw [1]fsr1
 22592  353D  00AF               	movwf	(cncManualMove@max+1)^(0+128)
 22593  353E  3F42               	moviw [2]fsr1
 22594  353F  00B0               	movwf	(cncManualMove@max+2)^(0+128)
 22595  3540  3F43               	moviw [3]fsr1
 22596  3541  00B1               	movwf	(cncManualMove@max+3)^(0+128)
 22597  3542  301C               	movlw	28
 22598  3543  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 22599  3544  0086               	movwf	6
 22600  3545  3001               	movlw	1	; select bank3/4
 22601  3546  0087               	movwf	7
 22602  3547  3F40               	moviw [0]fsr1
 22603  3548  00B2               	movwf	cncManualMove@min^(0+128)
 22604  3549  3F41               	moviw [1]fsr1
 22605  354A  00B3               	movwf	(cncManualMove@min+1)^(0+128)
 22606  354B  3F42               	moviw [2]fsr1
 22607  354C  00B4               	movwf	(cncManualMove@min+2)^(0+128)
 22608  354D  3F43               	moviw [3]fsr1
 22609  354E  00B5               	movwf	(cncManualMove@min+3)^(0+128)
 22610  354F  31CD  25FE  31B3   	fcall	_cncManualMove
 22611                           
 22612                           ;main.c: 76: break;
 22613  3552  2B8F               	goto	l11730
 22614  3553                     l11790:
 22615                           
 22616                           ;main.c: 79: Lcd_Clear();
 22617  3553  31DE  2699  31B3   	fcall	_Lcd_Clear
 22618                           
 22619                           ;main.c: 84: break;
 22620  3556  2B8F               	goto	l11730
 22621  3557                     l11792:
 22622                           
 22623                           ;main.c: 125: cncConfigHome();
 22624  3557  31C1  2129  31B3   	fcall	_cncConfigHome
 22625                           
 22626                           ;main.c: 126: break;
 22627  355A  2B8F               	goto	l11730
 22628  355B                     l11794:
 22629                           
 22630                           ;main.c: 129: bt.exec = 0;
 22631  355B  01A1               	clrf	(_bt^(0+256)+1)	;volatile
 22632                           
 22633                           ;main.c: 130: sprintf(str,"btt = %i (%i)",bt.value,i++);
 22634  355C  30C6               	movlw	low _str
 22635  355D  0141               	movlb	1	; select bank1
 22636  355E  00CA               	movwf	sprintf@wh^(0+128)
 22637  355F  3002               	movlw	high _str
 22638  3560  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22639  3561  30D2               	movlw	low (STR_9| (0+32768))
 22640  3562  00CC               	movwf	sprintf@f^(0+128)
 22641  3563  30E0               	movlw	high (STR_9| (0+32768))
 22642  3564  00CD               	movwf	(sprintf@f^(0+128)+1)
 22643  3565  0142               	movlb	2	; select bank2
 22644  3566  0820               	movf	_bt^(0+256),w	;volatile
 22645  3567  0141               	movlb	1	; select bank1
 22646  3568  00E7               	movwf	??_main^(0+128)
 22647  3569  01E8               	clrf	(??_main^(0+128)+1)
 22648  356A  0867               	movf	??_main^(0+128),w
 22649  356B  00CE               	movwf	(?_sprintf^(0+128)+4)
 22650  356C  0868               	movf	(??_main+1)^(0+128),w
 22651  356D  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 22652  356E  0144               	movlb	4	; select bank4
 22653  356F  086B               	movf	(main@i+1)^(0+512),w
 22654  3570  0141               	movlb	1	; select bank1
 22655  3571  00D1               	movwf	((?_sprintf+1)^(0+128)+6)
 22656  3572  0144               	movlb	4	; select bank4
 22657  3573  086A               	movf	main@i^(0+512),w
 22658  3574  0141               	movlb	1	; select bank1
 22659  3575  00D0               	movwf	(?_sprintf^(0+128)+6)
 22660  3576  31B8  2002  31B3   	fcall	_sprintf
 22661  3579  3001               	movlw	1
 22662  357A  0144               	movlb	4	; select bank4
 22663  357B  07EA               	addwf	main@i^(0+512),f
 22664  357C  3000               	movlw	0
 22665  357D  3DEB               	addwfc	(main@i+1)^(0+512),f
 22666                           
 22667                           ;main.c: 131: escreve_LCD(1,1,str);
 22668  357E  0140               	movlb	0	; select bank0
 22669  357F  01A0               	clrf	escreve_LCD@coluna
 22670  3580  0AA0               	incf	escreve_LCD@coluna,f
 22671  3581  30C6               	movlw	low _str
 22672  3582  00A1               	movwf	escreve_LCD@str
 22673  3583  3002               	movlw	high _str
 22674  3584  00A2               	movwf	escreve_LCD@str+1
 22675  3585  3001               	movlw	1
 22676  3586  31D2  22E7  31B3   	fcall	_escreve_LCD
 22677  3589  2D20               	goto	l11786
 22678  358A                     l11806:
 22679  358A  0820               	movf	_bt^(0+256),w	;volatile
 22680                           
 22681                           ; Switch size 1, requested type "simple"
 22682                           ; Number of cases is 7, Range of values is 9 to 36
 22683                           ; switch strategies available:
 22684                           ; Name         Instructions Cycles
 22685                           ; simple_byte           22    12 (average)
 22686                           ; direct_byte           65     9 (fixed)
 22687                           ; jumptable            263     9 (fixed)
 22688                           ;	Chosen strategy is simple_byte
 22689  358B  3A09               	xorlw	9	; case 9
 22690  358C  1903               	skipnz
 22691  358D  2D57               	goto	l11792
 22692  358E  3A03               	xorlw	3	; case 10
 22693  358F  1903               	skipnz
 22694  3590  2D28               	goto	l11788
 22695  3591  3A06               	xorlw	6	; case 12
 22696  3592  1903               	skipnz
 22697  3593  2D53               	goto	l11790
 22698  3594  3A1E               	xorlw	30	; case 18
 22699  3595  1903               	skipnz
 22700  3596  2D04               	goto	l11776
 22701  3597  3A33               	xorlw	51	; case 33
 22702  3598  1903               	skipnz
 22703  3599  2DA1               	goto	l803
 22704  359A  3A03               	xorlw	3	; case 34
 22705  359B  1903               	skipnz
 22706  359C  2D28               	goto	l11788
 22707  359D  3A06               	xorlw	6	; case 36
 22708  359E  1903               	skipnz
 22709  359F  2BFC               	goto	l11754
 22710  35A0  2D5B               	goto	l11794
 22711  35A1                     l803:
 22712  35A1  2B8F               	goto	l11730
 22713  35A2                     __end_of_main:
 22714                           
 22715                           	psect	text1
 22716  3A9F                     __ptext1:	
 22717 ;; *************** function _navTelas *****************
 22718 ;; Defined at:
 22719 ;;		line 464 in file "telas.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;		None
 22722 ;; Auto vars:     Size  Location     Type
 22723 ;;		None
 22724 ;; Return value:  Size  Location     Type
 22725 ;;                  1    wreg      void 
 22726 ;; Registers used:
 22727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22728 ;; Tracked objects:
 22729 ;;		On entry : 3F/1
 22730 ;;		On exit  : 3F/2
 22731 ;;		Unchanged: 0/0
 22732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22735 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22736 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22737 ;;Total ram usage:        1 bytes
 22738 ;; Hardware stack levels used: 1
 22739 ;; Hardware stack levels required when called: unknown (due to recursion)
 22740 ;; This function calls:
 22741 ;;		_escreve_LCD
 22742 ;;		_getMoveTime
 22743 ;;		_liberarTeclado
 22744 ;;		_navCfgControl
 22745 ;;		_navCfgEspera
 22746 ;;		_navCfgMove
 22747 ;;		_sprintf
 22748 ;; This function is called by:
 22749 ;;		_main
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753  3A9F                     _navTelas:	
 22754                           ;psect for function _navTelas
 22755                           
 22756                           
 22757                           ;telas.c: 466: mvTela = &step.Forward;
 22758                           
 22759                           ;incstack = 0
 22760                           ; Regs used in _navTelas: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22761  3A9F  30F8               	movlw	248
 22762  3AA0  00E9               	movwf	_mvTela^(0+128)
 22763  3AA1  302E               	movlw	46
 22764  3AA2  00EA               	movwf	(_mvTela^(0+128)+1)
 22765                           
 22766                           ;telas.c: 467: sprintf(str1,"Cfg. Descida:");
 22767  3AA3  3054               	movlw	low _str1
 22768  3AA4  00CA               	movwf	sprintf@wh^(0+128)
 22769  3AA5  3002               	movlw	high _str1
 22770  3AA6  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22771  3AA7  30C4               	movlw	low (STR_35| (0+32768))
 22772  3AA8  00CC               	movwf	sprintf@f^(0+128)
 22773  3AA9  30E0               	movlw	high (STR_35| (0+32768))
 22774  3AAA  00CD               	movwf	(sprintf@f^(0+128)+1)
 22775  3AAB  31B8  2002  31BA   	fcall	_sprintf
 22776                           
 22777                           ;telas.c: 468: sprintf(str2,"%.2fs ->%.2fmm",getMoveTime(mvTela),mvTela->Pos);
 22778  3AAE  304D               	movlw	low _str2
 22779  3AAF  00CA               	movwf	sprintf@wh^(0+128)
 22780  3AB0  3001               	movlw	high _str2
 22781  3AB1  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22782  3AB2  30A6               	movlw	low (STR_36| (0+32768))
 22783  3AB3  00CC               	movwf	sprintf@f^(0+128)
 22784  3AB4  30E0               	movlw	high (STR_36| (0+32768))
 22785  3AB5  00CD               	movwf	(sprintf@f^(0+128)+1)
 22786  3AB6  086A               	movf	(_mvTela+1)^(0+128),w
 22787  3AB7  0140               	movlb	0	; select bank0
 22788  3AB8  00C1               	movwf	getMoveTime@mv+1
 22789  3AB9  0141               	movlb	1	; select bank1
 22790  3ABA  0869               	movf	_mvTela^(0+128),w
 22791  3ABB  0140               	movlb	0	; select bank0
 22792  3ABC  00C0               	movwf	getMoveTime@mv
 22793  3ABD  319C  2491  31BA   	fcall	_getMoveTime
 22794  3AC0  0843               	movf	?_getMoveTime+3,w
 22795  3AC1  0141               	movlb	1	; select bank1
 22796  3AC2  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 22797  3AC3  0140               	movlb	0	; select bank0
 22798  3AC4  0842               	movf	?_getMoveTime+2,w
 22799  3AC5  0141               	movlb	1	; select bank1
 22800  3AC6  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 22801  3AC7  0140               	movlb	0	; select bank0
 22802  3AC8  0841               	movf	?_getMoveTime+1,w
 22803  3AC9  0141               	movlb	1	; select bank1
 22804  3ACA  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 22805  3ACB  0140               	movlb	0	; select bank0
 22806  3ACC  0840               	movf	?_getMoveTime,w
 22807  3ACD  0141               	movlb	1	; select bank1
 22808  3ACE  00CE               	movwf	(?_sprintf^(0+128)+4)
 22809  3ACF  0869               	movf	_mvTela^(0+128),w
 22810  3AD0  0086               	movwf	6
 22811  3AD1  086A               	movf	(_mvTela+1)^(0+128),w
 22812  3AD2  0087               	movwf	7
 22813  3AD3  3147               	addfsr 1,7
 22814  3AD4  3F40               	moviw [0]fsr1
 22815  3AD5  00D2               	movwf	(?_sprintf^(0+128)+8)
 22816  3AD6  3F41               	moviw [1]fsr1
 22817  3AD7  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 22818  3AD8  3F42               	moviw [2]fsr1
 22819  3AD9  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 22820  3ADA  3F43               	moviw [3]fsr1
 22821  3ADB                     L2:
 22822  3ADB  00D5               	movwf	((?_sprintf+3)^(0+128)+8)
 22823  3ADC                     L3:
 22824  3ADC  31B8  2002  31BA   	fcall	_sprintf
 22825  3ADF                     L1:
 22826                           
 22827                           ;telas.c: 469: escreve_LCD(1,1,str1);
 22828  3ADF  0140               	movlb	0	; select bank0
 22829  3AE0  01A0               	clrf	escreve_LCD@coluna
 22830  3AE1  0AA0               	incf	escreve_LCD@coluna,f
 22831  3AE2  3054               	movlw	low _str1
 22832  3AE3  00A1               	movwf	escreve_LCD@str
 22833  3AE4  3002               	movlw	high _str1
 22834  3AE5  00A2               	movwf	escreve_LCD@str+1
 22835  3AE6  3001               	movlw	1
 22836  3AE7  31D2  22E7  31BA   	fcall	_escreve_LCD
 22837                           
 22838                           ;telas.c: 470: escreve_LCD(2,1,str2);
 22839  3AEA  0140               	movlb	0	; select bank0
 22840  3AEB  01A0               	clrf	escreve_LCD@coluna
 22841  3AEC  0AA0               	incf	escreve_LCD@coluna,f
 22842  3AED  304D               	movlw	low _str2
 22843  3AEE  00A1               	movwf	escreve_LCD@str
 22844  3AEF  3001               	movlw	high _str2
 22845  3AF0  00A2               	movwf	escreve_LCD@str+1
 22846  3AF1  3002               	movlw	2
 22847  3AF2  31D2  22E7  31BA   	fcall	_escreve_LCD
 22848                           
 22849                           ;telas.c: 472: liberarTeclado(100);
 22850  3AF5  3064               	movlw	100
 22851  3AF6  00F1               	movwf	liberarTeclado@ms
 22852  3AF7  3000               	movlw	0
 22853  3AF8  00F2               	movwf	liberarTeclado@ms+1
 22854  3AF9  31D0  2007  31BA   	fcall	_liberarTeclado
 22855  3AFC                     l11578:
 22856                           
 22857                           ;telas.c: 475: if(bt.exec){
 22858  3AFC  0821               	movf	(_bt^(0+256)+1),w	;volatile
 22859  3AFD  1D03               	btfss	3,2
 22860  3AFE  2B38               	goto	l11602
 22861  3AFF  2AFC               	goto	l11578
 22862  3B00                     l11582:
 22863                           
 22864                           ;telas.c: 478: tela++;
 22865  3B00  3001               	movlw	1
 22866  3B01  0141               	movlb	1	; select bank1
 22867  3B02  00E6               	movwf	??_navTelas^(0+128)
 22868  3B03  0866               	movf	??_navTelas^(0+128),w
 22869  3B04  07EB               	addwf	_tela^(0+128),f
 22870                           
 22871                           ;telas.c: 479: if(tela == TELA_MAX)
 22872  3B05  3007               	movlw	7
 22873  3B06  066B               	xorwf	_tela^(0+128),w
 22874  3B07  1D03               	btfss	3,2
 22875  3B08  2C39               	goto	l11630
 22876                           
 22877                           ;telas.c: 480: tela = TELA_NONE + 1;
 22878  3B09  01EB               	clrf	_tela^(0+128)
 22879  3B0A  0AEB               	incf	_tela^(0+128),f
 22880  3B0B  2C39               	goto	l11630
 22881  3B0C                     l11586:
 22882                           
 22883                           ;telas.c: 483: tela--;
 22884  3B0C  3001               	movlw	1
 22885  3B0D  0141               	movlb	1	; select bank1
 22886  3B0E  02EB               	subwf	_tela^(0+128),f
 22887                           
 22888                           ;telas.c: 484: if(tela == TELA_NONE)
 22889  3B0F  086B               	movf	_tela^(0+128),w
 22890  3B10  1D03               	btfss	3,2
 22891  3B11  2C39               	goto	l11630
 22892                           
 22893                           ;telas.c: 485: tela = TELA_MAX - 1;
 22894  3B12  3006               	movlw	6
 22895  3B13  00E6               	movwf	??_navTelas^(0+128)
 22896  3B14  0866               	movf	??_navTelas^(0+128),w
 22897  3B15  00EB               	movwf	_tela^(0+128)
 22898  3B16  2C39               	goto	l11630
 22899  3B17                     l11590:
 22900                           
 22901                           ;telas.c: 490: case TELA_SOLDA:;telas.c: 491: case TELA_HOME:;telas.c: 492: navCfgMove(t
      +                          ela);
 22902  3B17  086B               	movf	_tela^(0+128),w
 22903  3B18  31A9  2193  31BA   	fcall	_navCfgMove
 22904                           
 22905                           ;telas.c: 493: break;
 22906  3B1B  2C39               	goto	l11630
 22907  3B1C                     l11592:
 22908                           
 22909                           ;telas.c: 495: navCfgControl(tela);
 22910  3B1C  086B               	movf	_tela^(0+128),w
 22911  3B1D  3180  2002  31BA   	fcall	_navCfgControl
 22912                           
 22913                           ;telas.c: 496: break;
 22914  3B20  2C39               	goto	l11630
 22915  3B21                     l11594:
 22916                           
 22917                           ;telas.c: 498: navCfgEspera(tela);
 22918  3B21  086B               	movf	_tela^(0+128),w
 22919  3B22  3180  2003  31BA   	fcall	_navCfgEspera
 22920                           
 22921                           ;telas.c: 499: break;
 22922  3B25  2C39               	goto	l11630
 22923  3B26                     l11598:
 22924  3B26  0141               	movlb	1	; select bank1
 22925  3B27  086B               	movf	_tela^(0+128),w
 22926                           
 22927                           ; Switch size 1, requested type "simple"
 22928                           ; Number of cases is 5, Range of values is 1 to 6
 22929                           ; switch strategies available:
 22930                           ; Name         Instructions Cycles
 22931                           ; simple_byte           16     9 (average)
 22932                           ; direct_byte           21     9 (fixed)
 22933                           ; jumptable            263     9 (fixed)
 22934                           ;	Chosen strategy is simple_byte
 22935  3B28  3A01               	xorlw	1	; case 1
 22936  3B29  1903               	skipnz
 22937  3B2A  2B17               	goto	l11590
 22938  3B2B  3A03               	xorlw	3	; case 2
 22939  3B2C  1903               	skipnz
 22940  3B2D  2B17               	goto	l11590
 22941  3B2E  3A01               	xorlw	1	; case 3
 22942  3B2F  1903               	skipnz
 22943  3B30  2B17               	goto	l11590
 22944  3B31  3A07               	xorlw	7	; case 4
 22945  3B32  1903               	skipnz
 22946  3B33  2B21               	goto	l11594
 22947  3B34  3A02               	xorlw	2	; case 6
 22948  3B35  1903               	skipnz
 22949  3B36  2B1C               	goto	l11592
 22950  3B37  2B49               	goto	l1561
 22951  3B38                     l11602:
 22952  3B38  0820               	movf	_bt^(0+256),w	;volatile
 22953                           
 22954                           ; Switch size 1, requested type "simple"
 22955                           ; Number of cases is 5, Range of values is 12 to 36
 22956                           ; switch strategies available:
 22957                           ; Name         Instructions Cycles
 22958                           ; simple_byte           16     9 (average)
 22959                           ; direct_byte           59     9 (fixed)
 22960                           ; jumptable            263     9 (fixed)
 22961                           ;	Chosen strategy is simple_byte
 22962  3B39  3A0C               	xorlw	12	; case 12
 22963  3B3A  1903               	skipnz
 22964  3B3B  2C4F               	goto	l1575
 22965  3B3C  3A1D               	xorlw	29	; case 17
 22966  3B3D  1903               	skipnz
 22967  3B3E  2B00               	goto	l11582
 22968  3B3F  3A03               	xorlw	3	; case 18
 22969  3B40  1903               	skipnz
 22970  3B41  2B26               	goto	l11598
 22971  3B42  3A06               	xorlw	6	; case 20
 22972  3B43  1903               	skipnz
 22973  3B44  2B0C               	goto	l11586
 22974  3B45  3A30               	xorlw	48	; case 36
 22975  3B46  1903               	skipnz
 22976  3B47  2C4F               	goto	l1575
 22977  3B48  2C39               	goto	l11630
 22978  3B49                     l1561:
 22979                           
 22980                           ;telas.c: 510: switch(tela){
 22981  3B49  2C39               	goto	l11630
 22982  3B4A                     l11604:
 22983                           
 22984                           ;telas.c: 512: mvTela = &step.Forward;
 22985  3B4A  30F8               	movlw	248
 22986  3B4B  00E9               	movwf	_mvTela^(0+128)
 22987  3B4C  302E               	movlw	46
 22988  3B4D  00EA               	movwf	(_mvTela^(0+128)+1)
 22989                           
 22990                           ;telas.c: 513: sprintf(str1,"Cfg. Descida:");
 22991  3B4E  3054               	movlw	low _str1
 22992  3B4F  00CA               	movwf	sprintf@wh^(0+128)
 22993  3B50  3002               	movlw	high _str1
 22994  3B51  00CB               	movwf	(sprintf@wh+1)^(0+128)
 22995  3B52  30C4               	movlw	low (STR_35| (0+32768))
 22996  3B53  00CC               	movwf	sprintf@f^(0+128)
 22997  3B54  30E0               	movlw	high (STR_35| (0+32768))
 22998  3B55  00CD               	movwf	(sprintf@f^(0+128)+1)
 22999  3B56  31B8  2002  31BA   	fcall	_sprintf
 23000                           
 23001                           ;telas.c: 514: sprintf(str2,"%.2fs ->%.2fmm",getMoveTime(mvTela),mvTela->Pos);
 23002  3B59  304D               	movlw	low _str2
 23003  3B5A  00CA               	movwf	sprintf@wh^(0+128)
 23004  3B5B  3001               	movlw	high _str2
 23005  3B5C  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23006  3B5D  30A6               	movlw	low (STR_36| (0+32768))
 23007  3B5E  00CC               	movwf	sprintf@f^(0+128)
 23008  3B5F  30E0               	movlw	high (STR_36| (0+32768))
 23009  3B60  00CD               	movwf	(sprintf@f^(0+128)+1)
 23010  3B61  086A               	movf	(_mvTela+1)^(0+128),w
 23011  3B62  0140               	movlb	0	; select bank0
 23012  3B63  00C1               	movwf	getMoveTime@mv+1
 23013  3B64  0141               	movlb	1	; select bank1
 23014  3B65  0869               	movf	_mvTela^(0+128),w
 23015  3B66  0140               	movlb	0	; select bank0
 23016  3B67  00C0               	movwf	getMoveTime@mv
 23017  3B68  319C  2491  31BA   	fcall	_getMoveTime
 23018  3B6B  0843               	movf	?_getMoveTime+3,w
 23019  3B6C  0141               	movlb	1	; select bank1
 23020  3B6D  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 23021  3B6E  0140               	movlb	0	; select bank0
 23022  3B6F  0842               	movf	?_getMoveTime+2,w
 23023  3B70  0141               	movlb	1	; select bank1
 23024  3B71  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 23025  3B72  0140               	movlb	0	; select bank0
 23026  3B73  0841               	movf	?_getMoveTime+1,w
 23027  3B74  0141               	movlb	1	; select bank1
 23028  3B75  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 23029  3B76  0140               	movlb	0	; select bank0
 23030  3B77  0840               	movf	?_getMoveTime,w
 23031  3B78  0141               	movlb	1	; select bank1
 23032  3B79  00CE               	movwf	(?_sprintf^(0+128)+4)
 23033  3B7A  0869               	movf	_mvTela^(0+128),w
 23034  3B7B  0086               	movwf	6
 23035  3B7C  086A               	movf	(_mvTela+1)^(0+128),w
 23036  3B7D  0087               	movwf	7
 23037  3B7E  3147               	addfsr 1,7
 23038  3B7F  3F40               	moviw [0]fsr1
 23039  3B80  00D2               	movwf	(?_sprintf^(0+128)+8)
 23040  3B81  3F41               	moviw [1]fsr1
 23041  3B82  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 23042  3B83  3F42               	moviw [2]fsr1
 23043  3B84  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 23044  3B85  3F43               	moviw [3]fsr1
 23045  3B86  2ADB               	goto	L2
 23046  3B87                     l11610:	
 23047                           ;telas.c: 515: break;
 23048                           
 23049                           
 23050                           ;telas.c: 517: mvTela = &step.Welding;
 23051  3B87  3031               	movlw	49
 23052  3B88  00E9               	movwf	_mvTela^(0+128)
 23053  3B89  302F               	movlw	47
 23054  3B8A  00EA               	movwf	(_mvTela^(0+128)+1)
 23055                           
 23056                           ;telas.c: 518: sprintf(str1,"Cfg. Solda:");
 23057  3B8B  3054               	movlw	low _str1
 23058  3B8C  00CA               	movwf	sprintf@wh^(0+128)
 23059  3B8D  3002               	movlw	high _str1
 23060  3B8E  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23061  3B8F  30ED               	movlw	low (STR_39| (0+32768))
 23062  3B90  00CC               	movwf	sprintf@f^(0+128)
 23063  3B91  30E0               	movlw	high (STR_39| (0+32768))
 23064  3B92  00CD               	movwf	(sprintf@f^(0+128)+1)
 23065  3B93  31B8  2002  31BA   	fcall	_sprintf
 23066                           
 23067                           ;telas.c: 519: sprintf(str2,"%.2fs ->%.2fmm",getMoveTime(mvTela),mvTela->Pos);
 23068  3B96  304D               	movlw	low _str2
 23069  3B97  00CA               	movwf	sprintf@wh^(0+128)
 23070  3B98  3001               	movlw	high _str2
 23071  3B99  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23072  3B9A  30A6               	movlw	low (STR_36| (0+32768))
 23073  3B9B  00CC               	movwf	sprintf@f^(0+128)
 23074  3B9C  30E0               	movlw	high (STR_36| (0+32768))
 23075  3B9D  00CD               	movwf	(sprintf@f^(0+128)+1)
 23076  3B9E  086A               	movf	(_mvTela+1)^(0+128),w
 23077  3B9F  0140               	movlb	0	; select bank0
 23078  3BA0  00C1               	movwf	getMoveTime@mv+1
 23079  3BA1  0141               	movlb	1	; select bank1
 23080  3BA2  0869               	movf	_mvTela^(0+128),w
 23081  3BA3  0140               	movlb	0	; select bank0
 23082  3BA4  00C0               	movwf	getMoveTime@mv
 23083  3BA5  319C  2491  31BA   	fcall	_getMoveTime
 23084  3BA8  0843               	movf	?_getMoveTime+3,w
 23085  3BA9  0141               	movlb	1	; select bank1
 23086  3BAA  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 23087  3BAB  0140               	movlb	0	; select bank0
 23088  3BAC  0842               	movf	?_getMoveTime+2,w
 23089  3BAD  0141               	movlb	1	; select bank1
 23090  3BAE  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 23091  3BAF  0140               	movlb	0	; select bank0
 23092  3BB0  0841               	movf	?_getMoveTime+1,w
 23093  3BB1  0141               	movlb	1	; select bank1
 23094  3BB2  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 23095  3BB3  0140               	movlb	0	; select bank0
 23096  3BB4  0840               	movf	?_getMoveTime,w
 23097  3BB5  0141               	movlb	1	; select bank1
 23098  3BB6  00CE               	movwf	(?_sprintf^(0+128)+4)
 23099  3BB7  0869               	movf	_mvTela^(0+128),w
 23100  3BB8  0086               	movwf	6
 23101  3BB9  086A               	movf	(_mvTela+1)^(0+128),w
 23102  3BBA  0087               	movwf	7
 23103  3BBB  3147               	addfsr 1,7
 23104  3BBC  3F40               	moviw [0]fsr1
 23105  3BBD  00D2               	movwf	(?_sprintf^(0+128)+8)
 23106  3BBE  3F41               	moviw [1]fsr1
 23107  3BBF  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 23108  3BC0  3F42               	moviw [2]fsr1
 23109  3BC1  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 23110  3BC2  3F43               	moviw [3]fsr1
 23111  3BC3  2ADB               	goto	L2
 23112  3BC4                     l11616:	
 23113                           ;telas.c: 520: break;
 23114                           
 23115                           
 23116                           ;telas.c: 522: mvTela = &step.Return;
 23117  3BC4  306A               	movlw	106
 23118  3BC5  00E9               	movwf	_mvTela^(0+128)
 23119  3BC6  302F               	movlw	47
 23120  3BC7  00EA               	movwf	(_mvTela^(0+128)+1)
 23121                           
 23122                           ;telas.c: 523: sprintf(str1,"Cfg. Home:");
 23123  3BC8  3054               	movlw	low _str1
 23124  3BC9  00CA               	movwf	sprintf@wh^(0+128)
 23125  3BCA  3002               	movlw	high _str1
 23126  3BCB  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23127  3BCC  301D               	movlw	low (STR_41| (0+32768))
 23128  3BCD  00CC               	movwf	sprintf@f^(0+128)
 23129  3BCE  30E1               	movlw	high (STR_41| (0+32768))
 23130  3BCF  00CD               	movwf	(sprintf@f^(0+128)+1)
 23131  3BD0  31B8  2002  31BA   	fcall	_sprintf
 23132                           
 23133                           ;telas.c: 524: sprintf(str2,"%.2fs ->%.2fmm",getMoveTime(mvTela),mvTela->Pos);
 23134  3BD3  304D               	movlw	low _str2
 23135  3BD4  00CA               	movwf	sprintf@wh^(0+128)
 23136  3BD5  3001               	movlw	high _str2
 23137  3BD6  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23138  3BD7  30A6               	movlw	low (STR_36| (0+32768))
 23139  3BD8  00CC               	movwf	sprintf@f^(0+128)
 23140  3BD9  30E0               	movlw	high (STR_36| (0+32768))
 23141  3BDA  00CD               	movwf	(sprintf@f^(0+128)+1)
 23142  3BDB  086A               	movf	(_mvTela+1)^(0+128),w
 23143  3BDC  0140               	movlb	0	; select bank0
 23144  3BDD  00C1               	movwf	getMoveTime@mv+1
 23145  3BDE  0141               	movlb	1	; select bank1
 23146  3BDF  0869               	movf	_mvTela^(0+128),w
 23147  3BE0  0140               	movlb	0	; select bank0
 23148  3BE1  00C0               	movwf	getMoveTime@mv
 23149  3BE2  319C  2491  31BA   	fcall	_getMoveTime
 23150  3BE5  0843               	movf	?_getMoveTime+3,w
 23151  3BE6  0141               	movlb	1	; select bank1
 23152  3BE7  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 23153  3BE8  0140               	movlb	0	; select bank0
 23154  3BE9  0842               	movf	?_getMoveTime+2,w
 23155  3BEA  0141               	movlb	1	; select bank1
 23156  3BEB  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 23157  3BEC  0140               	movlb	0	; select bank0
 23158  3BED  0841               	movf	?_getMoveTime+1,w
 23159  3BEE  0141               	movlb	1	; select bank1
 23160  3BEF  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 23161  3BF0  0140               	movlb	0	; select bank0
 23162  3BF1  0840               	movf	?_getMoveTime,w
 23163  3BF2  0141               	movlb	1	; select bank1
 23164  3BF3  00CE               	movwf	(?_sprintf^(0+128)+4)
 23165  3BF4  0869               	movf	_mvTela^(0+128),w
 23166  3BF5  0086               	movwf	6
 23167  3BF6  086A               	movf	(_mvTela+1)^(0+128),w
 23168  3BF7  0087               	movwf	7
 23169  3BF8  3147               	addfsr 1,7
 23170  3BF9  3F40               	moviw [0]fsr1
 23171  3BFA  00D2               	movwf	(?_sprintf^(0+128)+8)
 23172  3BFB  3F41               	moviw [1]fsr1
 23173  3BFC  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 23174  3BFD  3F42               	moviw [2]fsr1
 23175  3BFE  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 23176  3BFF  3F43               	moviw [3]fsr1
 23177  3C00  2ADB               	goto	L2
 23178  3C01                     l11622:	
 23179                           ;telas.c: 525: break;
 23180                           
 23181                           
 23182                           ;telas.c: 527: sprintf(str1,"Cfg. Espera:");
 23183  3C01  3054               	movlw	low _str1
 23184  3C02  00CA               	movwf	sprintf@wh^(0+128)
 23185  3C03  3002               	movlw	high _str1
 23186  3C04  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23187  3C05  30E0               	movlw	low (STR_43| (0+32768))
 23188  3C06  00CC               	movwf	sprintf@f^(0+128)
 23189  3C07  30E0               	movlw	high (STR_43| (0+32768))
 23190  3C08  00CD               	movwf	(sprintf@f^(0+128)+1)
 23191  3C09  31B8  2002  31BA   	fcall	_sprintf
 23192                           
 23193                           ;telas.c: 528: sprintf(str2,"%.2fs",0.04);
 23194  3C0C  304D               	movlw	low _str2
 23195  3C0D  00CA               	movwf	sprintf@wh^(0+128)
 23196  3C0E  3001               	movlw	high _str2
 23197  3C0F  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23198  3C10  3038               	movlw	low ((STR_31+5)| (0+32768))
 23199  3C11  00CC               	movwf	sprintf@f^(0+128)
 23200  3C12  30E1               	movlw	high ((STR_31+5)| (0+32768))
 23201  3C13  00CD               	movwf	(sprintf@f^(0+128)+1)
 23202  3C14  303D               	movlw	61
 23203  3C15  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 23204  3C16  3023               	movlw	35
 23205  3C17  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 23206  3C18  30D7               	movlw	215
 23207  3C19  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 23208  3C1A  300A               	movlw	10
 23209  3C1B  00CE               	movwf	(?_sprintf^(0+128)+4)
 23210  3C1C  2ADC               	goto	L3
 23211  3C1D                     l11624:	
 23212                           ;telas.c: 529: break;
 23213                           
 23214                           
 23215                           ;telas.c: 531: sprintf(str1,"Cfg. CNC:");
 23216  3C1D  3054               	movlw	low _str1
 23217  3C1E  00CA               	movwf	sprintf@wh^(0+128)
 23218  3C1F  3002               	movlw	high _str1
 23219  3C20  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23220  3C21  3049               	movlw	low (STR_45| (0+32768))
 23221  3C22  00CC               	movwf	sprintf@f^(0+128)
 23222  3C23  30E1               	movlw	high (STR_45| (0+32768))
 23223  3C24  2C2C               	goto	L5
 23224  3C25                     l11626:	
 23225                           ;telas.c: 533: break;
 23226                           
 23227                           ;telas.c: 532: sprintf(str2," ");
 23228                           
 23229                           
 23230                           ;telas.c: 535: sprintf(str1,"Cfg. Controle:");
 23231  3C25  3054               	movlw	low _str1
 23232  3C26  00CA               	movwf	sprintf@wh^(0+128)
 23233  3C27  3002               	movlw	high _str1
 23234  3C28  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23235  3C29  3088               	movlw	low (STR_47| (0+32768))
 23236  3C2A  00CC               	movwf	sprintf@f^(0+128)
 23237  3C2B  30E0               	movlw	high (STR_47| (0+32768))
 23238  3C2C                     L5:
 23239  3C2C  00CD               	movwf	(sprintf@f^(0+128)+1)
 23240  3C2D  31B8  2002  31BA   	fcall	_sprintf
 23241                           
 23242                           ;telas.c: 536: sprintf(str2," ");
 23243  3C30  304D               	movlw	low _str2
 23244  3C31  00CA               	movwf	sprintf@wh^(0+128)
 23245  3C32  3001               	movlw	high _str2
 23246  3C33  00CB               	movwf	(sprintf@wh+1)^(0+128)
 23247  3C34  3086               	movlw	low ((STR_4+14)| (0+32768))
 23248  3C35  00CC               	movwf	sprintf@f^(0+128)
 23249  3C36  30E0               	movlw	high ((STR_4+14)| (0+32768))
 23250  3C37  00CD               	movwf	(sprintf@f^(0+128)+1)
 23251  3C38  2ADC               	goto	L3
 23252  3C39                     l11630:	
 23253                           ;telas.c: 537: break;
 23254                           
 23255  3C39  0141               	movlb	1	; select bank1
 23256  3C3A  086B               	movf	_tela^(0+128),w
 23257                           
 23258                           ; Switch size 1, requested type "simple"
 23259                           ; Number of cases is 6, Range of values is 1 to 6
 23260                           ; switch strategies available:
 23261                           ; Name         Instructions Cycles
 23262                           ; simple_byte           19    10 (average)
 23263                           ; direct_byte           21     9 (fixed)
 23264                           ; jumptable            263     9 (fixed)
 23265                           ;	Chosen strategy is simple_byte
 23266  3C3B  3A01               	xorlw	1	; case 1
 23267  3C3C  1903               	skipnz
 23268  3C3D  2BC4               	goto	l11616
 23269  3C3E  3A03               	xorlw	3	; case 2
 23270  3C3F  1903               	skipnz
 23271  3C40  2B4A               	goto	l11604
 23272  3C41  3A01               	xorlw	1	; case 3
 23273  3C42  1903               	skipnz
 23274  3C43  2B87               	goto	l11610
 23275  3C44  3A07               	xorlw	7	; case 4
 23276  3C45  1903               	skipnz
 23277  3C46  2C01               	goto	l11622
 23278  3C47  3A01               	xorlw	1	; case 5
 23279  3C48  1903               	skipnz
 23280  3C49  2C1D               	goto	l11624
 23281  3C4A  3A03               	xorlw	3	; case 6
 23282  3C4B  1903               	skipnz
 23283  3C4C  2C25               	goto	l11626
 23284  3C4D  2C4E               	goto	l11632
 23285  3C4E                     l11632:
 23286  3C4E  2ADF               	goto	L1
 23287  3C4F                     l1575:	
 23288                           ;telas.c: 542: escreve_LCD(2,1,str2);
 23289                           
 23290                           ;telas.c: 541: escreve_LCD(1,1,str1);
 23291                           
 23292  3C4F  0008               	return
 23293  3C50                     __end_of_navTelas:
 23294                           
 23295                           	psect	text2
 23296  2993                     __ptext2:	
 23297 ;; *************** function _navCfgMove *****************
 23298 ;; Defined at:
 23299 ;;		line 298 in file "telas.c"
 23300 ;; Parameters:    Size  Location     Type
 23301 ;;  tela            1    wreg     enum E12771
 23302 ;; Auto vars:     Size  Location     Type
 23303 ;;  tela            1   68[BANK1 ] enum E12771
 23304 ;;  subTela         1   69[BANK1 ] enum E12781
 23305 ;; Return value:  Size  Location     Type
 23306 ;;                  1    wreg      void 
 23307 ;; Registers used:
 23308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23309 ;; Tracked objects:
 23310 ;;		On entry : 3F/1
 23311 ;;		On exit  : 3F/2
 23312 ;;		Unchanged: 0/0
 23313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23315 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23316 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23317 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23318 ;;Total ram usage:       10 bytes
 23319 ;; Hardware stack levels used: 1
 23320 ;; Hardware stack levels required when called: unknown (due to recursion)
 23321 ;; This function calls:
 23322 ;;		___fladd
 23323 ;;		___fldiv
 23324 ;;		___flge
 23325 ;;		___flmul
 23326 ;;		___flsub
 23327 ;;		_cncConfigMove
 23328 ;;		_cncMoveTo
 23329 ;;		_cncSetPos
 23330 ;;		_cncSetPosHome
 23331 ;;		_cncSetPosStart
 23332 ;;		_cncSetPosStop
 23333 ;;		_convertStepsToMM
 23334 ;;		_escreve_LCD
 23335 ;;		_getBackTableSpeed
 23336 ;;		_getFrontTableSpeed
 23337 ;;		_getMoveTime
 23338 ;;		_getSpeedTable
 23339 ;;		_liberarTeclado
 23340 ;;		_sprintf
 23341 ;; This function is called by:
 23342 ;;		_navTelas
 23343 ;; This function uses a non-reentrant model
 23344 ;;
 23345                           
 23346  2993                     _navCfgMove:	
 23347                           ;psect for function _navCfgMove
 23348                           
 23349                           
 23350                           ;incstack = 0
 23351                           ; Regs used in _navCfgMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23352                           ;navCfgMove@tela stored from wreg
 23353  2993  00E4               	movwf	navCfgMove@tela^(0+128)
 23354                           
 23355                           ;telas.c: 300: CncTelas_t subTela = TELA_CNC_POS;
 23356  2994  01E5               	clrf	navCfgMove@subTela^(0+128)
 23357                           
 23358                           ;telas.c: 301: static float soma = 0.10;;telas.c: 303: liberarTeclado(100);
 23359  2995  3064               	movlw	100
 23360  2996  00F1               	movwf	liberarTeclado@ms
 23361  2997  3000               	movlw	0
 23362  2998  00F2               	movwf	liberarTeclado@ms+1
 23363  2999  31D0  2007  31A9   	fcall	_liberarTeclado
 23364  299C                     l11226:
 23365                           
 23366                           ;telas.c: 305: if(bt.exec){
 23367  299C  0821               	movf	(_bt^(0+256)+1),w	;volatile
 23368  299D  1D03               	btfss	3,2
 23369  299E  2E8B               	goto	l11358
 23370  299F  2FDD               	goto	l11382
 23371  29A0                     l11230:
 23372                           
 23373                           ;telas.c: 308: subTela++;
 23374  29A0  3001               	movlw	1
 23375  29A1  0141               	movlb	1	; select bank1
 23376  29A2  00DC               	movwf	??_navCfgMove^(0+128)
 23377  29A3  085C               	movf	??_navCfgMove^(0+128),w
 23378  29A4  07E5               	addwf	navCfgMove@subTela^(0+128),f
 23379                           
 23380                           ;telas.c: 309: if(subTela > TELA_CNC_LEN) subTela = TELA_CNC_POS;
 23381  29A5  3004               	movlw	4
 23382  29A6  0265               	subwf	navCfgMove@subTela^(0+128),w
 23383  29A7  1803               	btfsc	3,0
 23384  29A8  01E5               	clrf	navCfgMove@subTela^(0+128)
 23385  29A9                     l11236:
 23386                           
 23387                           ;telas.c: 310: liberarTeclado(100);
 23388  29A9  3064               	movlw	100
 23389  29AA  00F1               	movwf	liberarTeclado@ms
 23390  29AB  3000               	movlw	0
 23391  29AC  00F2               	movwf	liberarTeclado@ms+1
 23392  29AD  31D0  2007  31A9   	fcall	_liberarTeclado
 23393                           
 23394                           ;telas.c: 311: break;
 23395  29B0  2FDD               	goto	l11382
 23396  29B1                     l11238:
 23397                           
 23398                           ;telas.c: 313: if(subTela == TELA_CNC_POS) subTela = TELA_CNC_LEN;
 23399  29B1  0141               	movlb	1	; select bank1
 23400  29B2  0865               	movf	navCfgMove@subTela^(0+128),w
 23401  29B3  1D03               	btfss	3,2
 23402  29B4  29B9               	goto	l11242
 23403  29B5  3003               	movlw	3
 23404  29B6  00DC               	movwf	??_navCfgMove^(0+128)
 23405  29B7  085C               	movf	??_navCfgMove^(0+128),w
 23406  29B8  00E5               	movwf	navCfgMove@subTela^(0+128)
 23407  29B9                     l11242:
 23408                           
 23409                           ;telas.c: 314: subTela--;
 23410  29B9  3001               	movlw	1
 23411  29BA  02E5               	subwf	navCfgMove@subTela^(0+128),f
 23412  29BB  29A9               	goto	l11236
 23413  29BC                     l11246:
 23414                           
 23415                           ;telas.c: 319: bt.exec = 0;
 23416  29BC  01A1               	clrf	(_bt^(0+256)+1)	;volatile
 23417                           
 23418                           ;telas.c: 320: switch(subTela){
 23419  29BD  2B9A               	goto	l11288
 23420  29BE                     l11248:
 23421                           
 23422                           ;telas.c: 322: mvTela->Pos += soma;
 23423  29BE  0142               	movlb	2	; select bank2
 23424  29BF  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 23425  29C0  0140               	movlb	0	; select bank0
 23426  29C1  00D8               	movwf	___fladd@b+3
 23427  29C2  0142               	movlb	2	; select bank2
 23428  29C3  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 23429  29C4  0140               	movlb	0	; select bank0
 23430  29C5  00D7               	movwf	___fladd@b+2
 23431  29C6  0142               	movlb	2	; select bank2
 23432  29C7  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 23433  29C8  0140               	movlb	0	; select bank0
 23434  29C9  00D6               	movwf	___fladd@b+1
 23435  29CA  0142               	movlb	2	; select bank2
 23436  29CB  086C               	movf	navCfgMove@soma^(0+256),w
 23437  29CC  0140               	movlb	0	; select bank0
 23438  29CD  00D5               	movwf	___fladd@b
 23439  29CE  0141               	movlb	1	; select bank1
 23440  29CF  0869               	movf	_mvTela^(0+128),w
 23441  29D0  0086               	movwf	6
 23442  29D1  086A               	movf	(_mvTela+1)^(0+128),w
 23443  29D2  0087               	movwf	7
 23444  29D3  3147               	addfsr 1,7
 23445  29D4  3F40               	moviw [0]fsr1
 23446  29D5  0140               	movlb	0	; select bank0
 23447  29D6  00D9               	movwf	___fladd@a
 23448  29D7  3F41               	moviw [1]fsr1
 23449  29D8  00DA               	movwf	___fladd@a+1
 23450  29D9  3F42               	moviw [2]fsr1
 23451  29DA  00DB               	movwf	___fladd@a+2
 23452  29DB  3F43               	moviw [3]fsr1
 23453  29DC  00DC               	movwf	___fladd@a+3
 23454  29DD  31BE  261F  31A9   	fcall	___fladd
 23455  29E0  0141               	movlb	1	; select bank1
 23456  29E1  0869               	movf	_mvTela^(0+128),w
 23457  29E2  0086               	movwf	6
 23458  29E3  086A               	movf	(_mvTela+1)^(0+128),w
 23459  29E4  0087               	movwf	7
 23460  29E5  3147               	addfsr 1,7
 23461  29E6  0140               	movlb	0	; select bank0
 23462  29E7  0855               	movf	?___fladd,w
 23463  29E8  3FC0               	movwi [0]fsr1
 23464  29E9  0856               	movf	?___fladd+1,w
 23465  29EA  3FC1               	movwi [1]fsr1
 23466  29EB  0857               	movf	?___fladd+2,w
 23467  29EC  3FC2               	movwi [2]fsr1
 23468  29ED  0858               	movf	?___fladd+3,w
 23469  29EE  3FC3               	movwi [3]fsr1
 23470                           
 23471                           ;telas.c: 323: if(mvTela->Pos > cnc.max.mm.Pos)
 23472  29EF  3028               	movlw	40
 23473  29F0  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 23474  29F1  0086               	movwf	6
 23475  29F2  3001               	movlw	1	; select bank3/4
 23476  29F3  0087               	movwf	7
 23477  29F4  3F40               	moviw [0]fsr1
 23478  29F5  0141               	movlb	1	; select bank1
 23479  29F6  00A0               	movwf	___flge@ff1^(0+128)
 23480  29F7  3F41               	moviw [1]fsr1
 23481  29F8  00A1               	movwf	(___flge@ff1+1)^(0+128)
 23482  29F9  3F42               	moviw [2]fsr1
 23483  29FA  00A2               	movwf	(___flge@ff1+2)^(0+128)
 23484  29FB  3F43               	moviw [3]fsr1
 23485  29FC  00A3               	movwf	(___flge@ff1+3)^(0+128)
 23486  29FD  0869               	movf	_mvTela^(0+128),w
 23487  29FE  0086               	movwf	6
 23488  29FF  086A               	movf	(_mvTela+1)^(0+128),w
 23489  2A00  0087               	movwf	7
 23490  2A01  3147               	addfsr 1,7
 23491  2A02  3F40               	moviw [0]fsr1
 23492  2A03  00A4               	movwf	___flge@ff2^(0+128)
 23493  2A04  3F41               	moviw [1]fsr1
 23494  2A05  00A5               	movwf	(___flge@ff2+1)^(0+128)
 23495  2A06  3F42               	moviw [2]fsr1
 23496  2A07  00A6               	movwf	(___flge@ff2+2)^(0+128)
 23497  2A08  3F43               	moviw [3]fsr1
 23498  2A09  00A7               	movwf	(___flge@ff2+3)^(0+128)
 23499  2A0A  31CD  2551  31A9   	fcall	___flge
 23500  2A0D  1803               	btfsc	3,0
 23501  2A0E  2A1D               	goto	l11252
 23502                           
 23503                           ;telas.c: 324: mvTela->Pos = cnc.max.mm.Pos;
 23504  2A0F  0869               	movf	_mvTela^(0+128),w
 23505  2A10  0086               	movwf	6
 23506  2A11  086A               	movf	(_mvTela+1)^(0+128),w
 23507  2A12  0087               	movwf	7
 23508  2A13  3147               	addfsr 1,7
 23509  2A14  0143               	movlb	3	; select bank3
 23510  2A15  0848               	movf	(_cnc^(0+384)+40),w
 23511  2A16  3FC0               	movwi [0]fsr1
 23512  2A17  0849               	movf	((_cnc+1)^(0+384)+40),w
 23513  2A18  3FC1               	movwi [1]fsr1
 23514  2A19  084A               	movf	((_cnc+2)^(0+384)+40),w
 23515  2A1A  3FC2               	movwi [2]fsr1
 23516  2A1B  084B               	movf	((_cnc+3)^(0+384)+40),w
 23517  2A1C  3FC3               	movwi [3]fsr1
 23518  2A1D                     l11252:
 23519                           
 23520                           ;telas.c: 326: if(tela == TELA_DESCE) {
 23521  2A1D  3002               	movlw	2
 23522  2A1E  0141               	movlb	1	; select bank1
 23523  2A1F  0664               	xorwf	navCfgMove@tela^(0+128),w
 23524  2A20  1D03               	btfss	3,2
 23525  2A21  2A57               	goto	l11258
 23526                           
 23527                           ;telas.c: 328: cncSetPosStart(mvTela->Pos);
 23528  2A22  0869               	movf	_mvTela^(0+128),w
 23529  2A23  0086               	movwf	6
 23530  2A24  086A               	movf	(_mvTela+1)^(0+128),w
 23531  2A25  0087               	movwf	7
 23532  2A26  3147               	addfsr 1,7
 23533  2A27  3F40               	moviw [0]fsr1
 23534  2A28  00C4               	movwf	cncSetPosStart@start^(0+128)
 23535  2A29  3F41               	moviw [1]fsr1
 23536  2A2A  00C5               	movwf	(cncSetPosStart@start+1)^(0+128)
 23537  2A2B  3F42               	moviw [2]fsr1
 23538  2A2C  00C6               	movwf	(cncSetPosStart@start+2)^(0+128)
 23539  2A2D  3F43               	moviw [3]fsr1
 23540  2A2E  00C7               	movwf	(cncSetPosStart@start+3)^(0+128)
 23541  2A2F  31C0  2031  31A9   	fcall	_cncSetPosStart
 23542                           
 23543                           ;telas.c: 329: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 23544  2A32  086A               	movf	(_mvTela+1)^(0+128),w
 23545  2A33  0140               	movlb	0	; select bank0
 23546  2A34  00E5               	movwf	cncConfigMove@mv+1
 23547  2A35  0141               	movlb	1	; select bank1
 23548  2A36  0869               	movf	_mvTela^(0+128),w
 23549  2A37  0140               	movlb	0	; select bank0
 23550  2A38  00E4               	movwf	cncConfigMove@mv
 23551  2A39  0141               	movlb	1	; select bank1
 23552  2A3A  0869               	movf	_mvTela^(0+128),w
 23553  2A3B  0086               	movwf	6
 23554  2A3C  086A               	movf	(_mvTela+1)^(0+128),w
 23555  2A3D  0087               	movwf	7
 23556  2A3E  3143               	addfsr 1,3
 23557  2A3F  3F40               	moviw [0]fsr1
 23558  2A40  0140               	movlb	0	; select bank0
 23559  2A41  00E6               	movwf	cncConfigMove@speed
 23560  2A42  3F41               	moviw [1]fsr1
 23561  2A43  00E7               	movwf	cncConfigMove@speed+1
 23562  2A44  3F42               	moviw [2]fsr1
 23563  2A45  00E8               	movwf	cncConfigMove@speed+2
 23564  2A46  3F43               	moviw [3]fsr1
 23565  2A47  00E9               	movwf	cncConfigMove@speed+3
 23566  2A48  0141               	movlb	1	; select bank1
 23567  2A49  0869               	movf	_mvTela^(0+128),w
 23568  2A4A  0086               	movwf	6
 23569  2A4B  086A               	movf	(_mvTela+1)^(0+128),w
 23570  2A4C  0087               	movwf	7
 23571  2A4D  3142               	addfsr 1,2
 23572  2A4E  0801               	movf	1,w
 23573  2A4F  00DC               	movwf	??_navCfgMove^(0+128)
 23574  2A50  085C               	movf	??_navCfgMove^(0+128),w
 23575  2A51  0140               	movlb	0	; select bank0
 23576  2A52  00EA               	movwf	cncConfigMove@accel
 23577  2A53  31BC  2450  31A9   	fcall	_cncConfigMove
 23578                           
 23579                           ;telas.c: 330: }
 23580  2A56  2FDD               	goto	l11382
 23581  2A57                     l11258:
 23582                           
 23583                           ;telas.c: 331: else if(tela == TELA_SOLDA) {
 23584  2A57  3003               	movlw	3
 23585  2A58  0664               	xorwf	navCfgMove@tela^(0+128),w
 23586  2A59  1D03               	btfss	3,2
 23587  2A5A  2A90               	goto	l11264
 23588                           
 23589                           ;telas.c: 333: cncSetPosStop(mvTela->Pos);
 23590  2A5B  0869               	movf	_mvTela^(0+128),w
 23591  2A5C  0086               	movwf	6
 23592  2A5D  086A               	movf	(_mvTela+1)^(0+128),w
 23593  2A5E  0087               	movwf	7
 23594  2A5F  3147               	addfsr 1,7
 23595  2A60  3F40               	moviw [0]fsr1
 23596  2A61  00C4               	movwf	cncSetPosStop@stop^(0+128)
 23597  2A62  3F41               	moviw [1]fsr1
 23598  2A63  00C5               	movwf	(cncSetPosStop@stop+1)^(0+128)
 23599  2A64  3F42               	moviw [2]fsr1
 23600  2A65  00C6               	movwf	(cncSetPosStop@stop+2)^(0+128)
 23601  2A66  3F43               	moviw [3]fsr1
 23602  2A67  00C7               	movwf	(cncSetPosStop@stop+3)^(0+128)
 23603  2A68  31D7  278D  31A9   	fcall	_cncSetPosStop
 23604                           
 23605                           ;telas.c: 334: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 23606  2A6B  086A               	movf	(_mvTela+1)^(0+128),w
 23607  2A6C  0140               	movlb	0	; select bank0
 23608  2A6D  00E5               	movwf	cncConfigMove@mv+1
 23609  2A6E  0141               	movlb	1	; select bank1
 23610  2A6F  0869               	movf	_mvTela^(0+128),w
 23611  2A70  0140               	movlb	0	; select bank0
 23612  2A71  00E4               	movwf	cncConfigMove@mv
 23613  2A72  0141               	movlb	1	; select bank1
 23614  2A73  0869               	movf	_mvTela^(0+128),w
 23615  2A74  0086               	movwf	6
 23616  2A75  086A               	movf	(_mvTela+1)^(0+128),w
 23617  2A76  0087               	movwf	7
 23618  2A77  3143               	addfsr 1,3
 23619  2A78  3F40               	moviw [0]fsr1
 23620  2A79  0140               	movlb	0	; select bank0
 23621  2A7A  00E6               	movwf	cncConfigMove@speed
 23622  2A7B  3F41               	moviw [1]fsr1
 23623  2A7C  00E7               	movwf	cncConfigMove@speed+1
 23624  2A7D  3F42               	moviw [2]fsr1
 23625  2A7E  00E8               	movwf	cncConfigMove@speed+2
 23626  2A7F  3F43               	moviw [3]fsr1
 23627  2A80  00E9               	movwf	cncConfigMove@speed+3
 23628  2A81  0141               	movlb	1	; select bank1
 23629  2A82  0869               	movf	_mvTela^(0+128),w
 23630  2A83  0086               	movwf	6
 23631  2A84  086A               	movf	(_mvTela+1)^(0+128),w
 23632  2A85  0087               	movwf	7
 23633  2A86  3142               	addfsr 1,2
 23634  2A87  0801               	movf	1,w
 23635  2A88  00DC               	movwf	??_navCfgMove^(0+128)
 23636  2A89  085C               	movf	??_navCfgMove^(0+128),w
 23637  2A8A  0140               	movlb	0	; select bank0
 23638  2A8B  00EA               	movwf	cncConfigMove@accel
 23639  2A8C  31BC  2450  31A9   	fcall	_cncConfigMove
 23640                           
 23641                           ;telas.c: 335: }
 23642  2A8F  2FDD               	goto	l11382
 23643  2A90                     l11264:
 23644                           
 23645                           ;telas.c: 336: else if(tela == TELA_HOME){
 23646  2A90  0364               	decf	navCfgMove@tela^(0+128),w
 23647  2A91  1D03               	btfss	3,2
 23648  2A92  2FDD               	goto	l11382
 23649                           
 23650                           ;telas.c: 337: cncSetPosHome(mvTela->Pos);
 23651  2A93  0869               	movf	_mvTela^(0+128),w
 23652  2A94  0086               	movwf	6
 23653  2A95  086A               	movf	(_mvTela+1)^(0+128),w
 23654  2A96  0087               	movwf	7
 23655  2A97  3147               	addfsr 1,7
 23656  2A98  3F40               	moviw [0]fsr1
 23657  2A99  00C4               	movwf	cncSetPosHome@home^(0+128)
 23658  2A9A  3F41               	moviw [1]fsr1
 23659  2A9B  00C5               	movwf	(cncSetPosHome@home+1)^(0+128)
 23660  2A9C  3F42               	moviw [2]fsr1
 23661  2A9D  00C6               	movwf	(cncSetPosHome@home+2)^(0+128)
 23662  2A9E  3F43               	moviw [3]fsr1
 23663  2A9F  00C7               	movwf	(cncSetPosHome@home+3)^(0+128)
 23664  2AA0  31CC  24A8  31A9   	fcall	_cncSetPosHome
 23665                           
 23666                           ;telas.c: 338: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 23667  2AA3  086A               	movf	(_mvTela+1)^(0+128),w
 23668  2AA4  0140               	movlb	0	; select bank0
 23669  2AA5  00E5               	movwf	cncConfigMove@mv+1
 23670  2AA6  0141               	movlb	1	; select bank1
 23671  2AA7  0869               	movf	_mvTela^(0+128),w
 23672  2AA8  0140               	movlb	0	; select bank0
 23673  2AA9  00E4               	movwf	cncConfigMove@mv
 23674  2AAA  0141               	movlb	1	; select bank1
 23675  2AAB  0869               	movf	_mvTela^(0+128),w
 23676  2AAC  0086               	movwf	6
 23677  2AAD  086A               	movf	(_mvTela+1)^(0+128),w
 23678  2AAE  0087               	movwf	7
 23679  2AAF  3143               	addfsr 1,3
 23680  2AB0  3F40               	moviw [0]fsr1
 23681  2AB1  0140               	movlb	0	; select bank0
 23682  2AB2  00E6               	movwf	cncConfigMove@speed
 23683  2AB3  3F41               	moviw [1]fsr1
 23684  2AB4  00E7               	movwf	cncConfigMove@speed+1
 23685  2AB5  3F42               	moviw [2]fsr1
 23686  2AB6  00E8               	movwf	cncConfigMove@speed+2
 23687  2AB7  3F43               	moviw [3]fsr1
 23688  2AB8  00E9               	movwf	cncConfigMove@speed+3
 23689  2AB9  0141               	movlb	1	; select bank1
 23690  2ABA  0869               	movf	_mvTela^(0+128),w
 23691  2ABB  0086               	movwf	6
 23692  2ABC  086A               	movf	(_mvTela+1)^(0+128),w
 23693  2ABD  0087               	movwf	7
 23694  2ABE  3142               	addfsr 1,2
 23695  2ABF  0801               	movf	1,w
 23696  2AC0  00DC               	movwf	??_navCfgMove^(0+128)
 23697  2AC1  085C               	movf	??_navCfgMove^(0+128),w
 23698  2AC2  0140               	movlb	0	; select bank0
 23699  2AC3  00EA               	movwf	cncConfigMove@accel
 23700  2AC4  31BC  2450  31A9   	fcall	_cncConfigMove
 23701  2AC7  2FDD               	goto	l11382
 23702  2AC8                     l11270:
 23703                           
 23704                           ;telas.c: 343: mvTela->toCruise = getFrontTableSpeed(mvTela);
 23705  2AC8  086A               	movf	(_mvTela+1)^(0+128),w
 23706  2AC9  0140               	movlb	0	; select bank0
 23707  2ACA  00AF               	movwf	getFrontTableSpeed@mv+1
 23708  2ACB  0141               	movlb	1	; select bank1
 23709  2ACC  0869               	movf	_mvTela^(0+128),w
 23710  2ACD  0140               	movlb	0	; select bank0
 23711  2ACE  00AE               	movwf	getFrontTableSpeed@mv
 23712  2ACF  31B8  2023  31A9   	fcall	_getFrontTableSpeed
 23713  2AD2  0141               	movlb	1	; select bank1
 23714  2AD3  0869               	movf	_mvTela^(0+128),w
 23715  2AD4  0086               	movwf	6
 23716  2AD5  086A               	movf	(_mvTela+1)^(0+128),w
 23717  2AD6  0087               	movwf	7
 23718  2AD7  315F               	addfsr 1,31
 23719  2AD8  0140               	movlb	0	; select bank0
 23720  2AD9  082E               	movf	?_getFrontTableSpeed,w
 23721  2ADA  3FC0               	movwi [0]fsr1
 23722  2ADB  082F               	movf	?_getFrontTableSpeed+1,w
 23723  2ADC  3FC1               	movwi [1]fsr1
 23724  2ADD  0830               	movf	?_getFrontTableSpeed+2,w
 23725  2ADE  3FC2               	movwi [2]fsr1
 23726  2ADF  0831               	movf	?_getFrontTableSpeed+3,w
 23727  2AE0  3FC3               	movwi [3]fsr1
 23728                           
 23729                           ;telas.c: 344: mvTela->toBrake = mvTela->dist - mvTela->toCruise;
 23730  2AE1  0141               	movlb	1	; select bank1
 23731  2AE2  0869               	movf	_mvTela^(0+128),w
 23732  2AE3  0086               	movwf	6
 23733  2AE4  086A               	movf	(_mvTela+1)^(0+128),w
 23734  2AE5  0087               	movwf	7
 23735  2AE6  315F               	addfsr 1,31
 23736  2AE7  3F40               	moviw [0]fsr1
 23737  2AE8  00DC               	movwf	??_navCfgMove^(0+128)
 23738  2AE9  3F41               	moviw [1]fsr1
 23739  2AEA  00DD               	movwf	(??_navCfgMove^(0+128)+1)
 23740  2AEB  3F42               	moviw [2]fsr1
 23741  2AEC  00DE               	movwf	(??_navCfgMove^(0+128)+2)
 23742  2AED  3F43               	moviw [3]fsr1
 23743  2AEE  00DF               	movwf	(??_navCfgMove^(0+128)+3)
 23744  2AEF  0869               	movf	_mvTela^(0+128),w
 23745  2AF0  0086               	movwf	6
 23746  2AF1  086A               	movf	(_mvTela+1)^(0+128),w
 23747  2AF2  0087               	movwf	7
 23748  2AF3  315B               	addfsr 1,27
 23749  2AF4  3F40               	moviw [0]fsr1
 23750  2AF5  00E0               	movwf	(??_navCfgMove+4)^(0+128)
 23751  2AF6  3F41               	moviw [1]fsr1
 23752  2AF7  00E1               	movwf	((??_navCfgMove+4)^(0+128)+1)
 23753  2AF8  3F42               	moviw [2]fsr1
 23754  2AF9  00E2               	movwf	((??_navCfgMove+4)^(0+128)+2)
 23755  2AFA  3F43               	moviw [3]fsr1
 23756  2AFB  00E3               	movwf	((??_navCfgMove+4)^(0+128)+3)
 23757  2AFC  085C               	movf	??_navCfgMove^(0+128),w
 23758  2AFD  02E0               	subwf	(??_navCfgMove+4)^(0+128),f
 23759  2AFE  085D               	movf	(??_navCfgMove+1)^(0+128),w
 23760  2AFF  3BE1               	subwfb	((??_navCfgMove+4)^(0+128)+1),f
 23761  2B00  085E               	movf	(??_navCfgMove+2)^(0+128),w
 23762  2B01  3BE2               	subwfb	((??_navCfgMove+4)^(0+128)+2),f
 23763  2B02  085F               	movf	(??_navCfgMove+3)^(0+128),w
 23764  2B03  3BE3               	subwfb	((??_navCfgMove+4)^(0+128)+3),f
 23765  2B04  0869               	movf	_mvTela^(0+128),w
 23766  2B05  3E23               	addlw	35
 23767  2B06  0086               	movwf	6
 23768  2B07  3000               	movlw	0
 23769  2B08  3D6A               	addwfc	(_mvTela+1)^(0+128),w
 23770  2B09  0087               	movwf	7
 23771  2B0A  0860               	movf	(??_navCfgMove+4)^(0+128),w
 23772  2B0B  3FC0               	movwi [0]fsr1
 23773  2B0C  0861               	movf	(??_navCfgMove+5)^(0+128),w
 23774  2B0D  3FC1               	movwi [1]fsr1
 23775  2B0E  0862               	movf	(??_navCfgMove+6)^(0+128),w
 23776  2B0F  3FC2               	movwi [2]fsr1
 23777  2B10  0863               	movf	(??_navCfgMove+7)^(0+128),w
 23778  2B11  3FC3               	movwi [3]fsr1
 23779                           
 23780                           ;telas.c: 345: mvTela->vCruise = getSpeedTable(mvTela->accel,mvTela->toCruise);
 23781  2B12  0869               	movf	_mvTela^(0+128),w
 23782  2B13  0086               	movwf	6
 23783  2B14  086A               	movf	(_mvTela+1)^(0+128),w
 23784  2B15  0087               	movwf	7
 23785  2B16  315F               	addfsr 1,31
 23786  2B17  3F40               	moviw [0]fsr1
 23787  2B18  0140               	movlb	0	; select bank0
 23788  2B19  00AE               	movwf	getSpeedTable@i
 23789  2B1A  3F41               	moviw [1]fsr1
 23790  2B1B  00AF               	movwf	getSpeedTable@i+1
 23791  2B1C  3F42               	moviw [2]fsr1
 23792  2B1D  00B0               	movwf	getSpeedTable@i+2
 23793  2B1E  3F43               	moviw [3]fsr1
 23794  2B1F  00B1               	movwf	getSpeedTable@i+3
 23795  2B20  0141               	movlb	1	; select bank1
 23796  2B21  0869               	movf	_mvTela^(0+128),w
 23797  2B22  0086               	movwf	6
 23798  2B23  086A               	movf	(_mvTela+1)^(0+128),w
 23799  2B24  0087               	movwf	7
 23800  2B25  3142               	addfsr 1,2
 23801  2B26  0801               	movf	1,w
 23802  2B27  31D5  2534  31A9   	fcall	_getSpeedTable
 23803  2B2A  0141               	movlb	1	; select bank1
 23804  2B2B  0869               	movf	_mvTela^(0+128),w
 23805  2B2C  0086               	movwf	6
 23806  2B2D  086A               	movf	(_mvTela+1)^(0+128),w
 23807  2B2E  0087               	movwf	7
 23808  2B2F  314B               	addfsr 1,11
 23809  2B30  0140               	movlb	0	; select bank0
 23810  2B31  082E               	movf	?_getSpeedTable,w
 23811  2B32  3FC0               	movwi [0]fsr1
 23812  2B33  082F               	movf	?_getSpeedTable+1,w
 23813  2B34  3FC1               	movwi [1]fsr1
 23814  2B35  0830               	movf	?_getSpeedTable+2,w
 23815  2B36  3FC2               	movwi [2]fsr1
 23816  2B37  0831               	movf	?_getSpeedTable+3,w
 23817  2B38  3FC3               	movwi [3]fsr1
 23818                           
 23819                           ;telas.c: 346: mvTela->Speed = convertStepsToMM(mvTela->vCruise);
 23820  2B39  0141               	movlb	1	; select bank1
 23821  2B3A  0869               	movf	_mvTela^(0+128),w
 23822  2B3B  0086               	movwf	6
 23823  2B3C  086A               	movf	(_mvTela+1)^(0+128),w
 23824  2B3D  0087               	movwf	7
 23825  2B3E  314B               	addfsr 1,11
 23826  2B3F  3F40               	moviw [0]fsr1
 23827  2B40  0140               	movlb	0	; select bank0
 23828  2B41  00C0               	movwf	convertStepsToMM@steps
 23829  2B42  3F41               	moviw [1]fsr1
 23830  2B43  00C1               	movwf	convertStepsToMM@steps+1
 23831  2B44  3F42               	moviw [2]fsr1
 23832  2B45  00C2               	movwf	convertStepsToMM@steps+2
 23833  2B46  3F43               	moviw [3]fsr1
 23834  2B47  00C3               	movwf	convertStepsToMM@steps+3
 23835  2B48  31D1  21CB  31A9   	fcall	_convertStepsToMM
 23836  2B4B  0141               	movlb	1	; select bank1
 23837  2B4C  0869               	movf	_mvTela^(0+128),w
 23838  2B4D  0086               	movwf	6
 23839  2B4E  086A               	movf	(_mvTela+1)^(0+128),w
 23840  2B4F  0087               	movwf	7
 23841  2B50  3143               	addfsr 1,3
 23842  2B51  0140               	movlb	0	; select bank0
 23843  2B52  0840               	movf	?_convertStepsToMM,w
 23844  2B53  3FC0               	movwi [0]fsr1
 23845  2B54  0841               	movf	?_convertStepsToMM+1,w
 23846  2B55  3FC1               	movwi [1]fsr1
 23847  2B56  0842               	movf	?_convertStepsToMM+2,w
 23848  2B57  3FC2               	movwi [2]fsr1
 23849  2B58  0843               	movf	?_convertStepsToMM+3,w
 23850  2B59  3FC3               	movwi [3]fsr1
 23851  2B5A                     l11278:
 23852                           
 23853                           ;telas.c: 347: getMoveTime(mvTela);
 23854  2B5A  0141               	movlb	1	; select bank1
 23855  2B5B  086A               	movf	(_mvTela+1)^(0+128),w
 23856  2B5C  0140               	movlb	0	; select bank0
 23857  2B5D  00C1               	movwf	getMoveTime@mv+1
 23858  2B5E  0141               	movlb	1	; select bank1
 23859  2B5F  0869               	movf	_mvTela^(0+128),w
 23860  2B60  0140               	movlb	0	; select bank0
 23861  2B61  00C0               	movwf	getMoveTime@mv
 23862  2B62  319C  2491  31A9   	fcall	_getMoveTime
 23863                           
 23864                           ;telas.c: 348: break;
 23865  2B65  2FDD               	goto	l11382
 23866  2B66                     l11280:
 23867                           
 23868                           ;telas.c: 351: if(mvTela->accel > ACC_MAX) {
 23869  2B66  0869               	movf	_mvTela^(0+128),w
 23870  2B67  0086               	movwf	6
 23871  2B68  086A               	movf	(_mvTela+1)^(0+128),w
 23872  2B69  0087               	movwf	7
 23873  2B6A  3142               	addfsr 1,2
 23874  2B6B  0801               	movf	1,w
 23875  2B6C  1903               	btfsc	3,2
 23876  2B6D  2FDD               	goto	l11382
 23877                           
 23878                           ;telas.c: 352: mvTela->accel--;
 23879  2B6E  0869               	movf	_mvTela^(0+128),w
 23880  2B6F  0086               	movwf	6
 23881  2B70  086A               	movf	(_mvTela+1)^(0+128),w
 23882  2B71  0087               	movwf	7
 23883  2B72  3142               	addfsr 1,2
 23884  2B73  3001               	movlw	1
 23885  2B74  0281               	subwf	1,f
 23886                           
 23887                           ;telas.c: 353: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 23888  2B75  086A               	movf	(_mvTela+1)^(0+128),w
 23889  2B76  0140               	movlb	0	; select bank0
 23890  2B77  00E5               	movwf	cncConfigMove@mv+1
 23891  2B78  0141               	movlb	1	; select bank1
 23892  2B79  0869               	movf	_mvTela^(0+128),w
 23893  2B7A  0140               	movlb	0	; select bank0
 23894  2B7B  00E4               	movwf	cncConfigMove@mv
 23895  2B7C  0141               	movlb	1	; select bank1
 23896  2B7D  0869               	movf	_mvTela^(0+128),w
 23897  2B7E  0086               	movwf	6
 23898  2B7F  086A               	movf	(_mvTela+1)^(0+128),w
 23899  2B80  0087               	movwf	7
 23900  2B81  3143               	addfsr 1,3
 23901  2B82  3F40               	moviw [0]fsr1
 23902  2B83  0140               	movlb	0	; select bank0
 23903  2B84  00E6               	movwf	cncConfigMove@speed
 23904  2B85  3F41               	moviw [1]fsr1
 23905  2B86  00E7               	movwf	cncConfigMove@speed+1
 23906  2B87  3F42               	moviw [2]fsr1
 23907  2B88  00E8               	movwf	cncConfigMove@speed+2
 23908  2B89  3F43               	moviw [3]fsr1
 23909  2B8A  00E9               	movwf	cncConfigMove@speed+3
 23910  2B8B  0141               	movlb	1	; select bank1
 23911  2B8C  0869               	movf	_mvTela^(0+128),w
 23912  2B8D  0086               	movwf	6
 23913  2B8E  086A               	movf	(_mvTela+1)^(0+128),w
 23914  2B8F  0087               	movwf	7
 23915  2B90  3142               	addfsr 1,2
 23916  2B91  0801               	movf	1,w
 23917  2B92  00DC               	movwf	??_navCfgMove^(0+128)
 23918  2B93  085C               	movf	??_navCfgMove^(0+128),w
 23919  2B94  0140               	movlb	0	; select bank0
 23920  2B95  00EA               	movwf	cncConfigMove@accel
 23921  2B96  31BC  2450  31A9   	fcall	_cncConfigMove
 23922  2B99  2FDD               	goto	l11382
 23923  2B9A                     l11288:
 23924  2B9A  0141               	movlb	1	; select bank1
 23925  2B9B  0865               	movf	navCfgMove@subTela^(0+128),w
 23926                           
 23927                           ; Switch size 1, requested type "simple"
 23928                           ; Number of cases is 3, Range of values is 0 to 2
 23929                           ; switch strategies available:
 23930                           ; Name         Instructions Cycles
 23931                           ; simple_byte           10     6 (average)
 23932                           ; direct_byte           12     6 (fixed)
 23933                           ; jumptable            260     6 (fixed)
 23934                           ;	Chosen strategy is simple_byte
 23935  2B9C  3A00               	xorlw	0	; case 0
 23936  2B9D  1903               	skipnz
 23937  2B9E  29BE               	goto	l11248
 23938  2B9F  3A01               	xorlw	1	; case 1
 23939  2BA0  1903               	skipnz
 23940  2BA1  2AC8               	goto	l11270
 23941  2BA2  3A03               	xorlw	3	; case 2
 23942  2BA3  1903               	skipnz
 23943  2BA4  2B66               	goto	l11280
 23944  2BA5  2FDD               	goto	l11382
 23945  2BA6                     l1520:
 23946                           
 23947                           ;telas.c: 358: break;
 23948  2BA6  2FDD               	goto	l11382
 23949  2BA7                     l11290:
 23950                           
 23951                           ;telas.c: 361: bt.exec = 0;
 23952  2BA7  01A1               	clrf	(_bt^(0+256)+1)	;volatile
 23953                           
 23954                           ;telas.c: 362: switch(subTela){
 23955  2BA8  2D6F               	goto	l11326
 23956  2BA9                     l11292:
 23957                           
 23958                           ;telas.c: 364: mvTela->Pos -= soma;
 23959  2BA9  0142               	movlb	2	; select bank2
 23960  2BAA  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 23961  2BAB  0141               	movlb	1	; select bank1
 23962  2BAC  00A3               	movwf	(___flsub@a+3)^(0+128)
 23963  2BAD  0142               	movlb	2	; select bank2
 23964  2BAE  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 23965  2BAF  0141               	movlb	1	; select bank1
 23966  2BB0  00A2               	movwf	(___flsub@a+2)^(0+128)
 23967  2BB1  0142               	movlb	2	; select bank2
 23968  2BB2  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 23969  2BB3  0141               	movlb	1	; select bank1
 23970  2BB4  00A1               	movwf	(___flsub@a+1)^(0+128)
 23971  2BB5  0142               	movlb	2	; select bank2
 23972  2BB6  086C               	movf	navCfgMove@soma^(0+256),w
 23973  2BB7  0141               	movlb	1	; select bank1
 23974  2BB8  00A0               	movwf	___flsub@a^(0+128)
 23975  2BB9  0869               	movf	_mvTela^(0+128),w
 23976  2BBA  0086               	movwf	6
 23977  2BBB  086A               	movf	(_mvTela+1)^(0+128),w
 23978  2BBC  0087               	movwf	7
 23979  2BBD  3147               	addfsr 1,7
 23980  2BBE  3F40               	moviw [0]fsr1
 23981  2BBF  00A4               	movwf	___flsub@b^(0+128)
 23982  2BC0  3F41               	moviw [1]fsr1
 23983  2BC1  00A5               	movwf	(___flsub@b+1)^(0+128)
 23984  2BC2  3F42               	moviw [2]fsr1
 23985  2BC3  00A6               	movwf	(___flsub@b+2)^(0+128)
 23986  2BC4  3F43               	moviw [3]fsr1
 23987  2BC5  00A7               	movwf	(___flsub@b+3)^(0+128)
 23988  2BC6  31D2  227E  31A9   	fcall	___flsub
 23989  2BC9  0869               	movf	_mvTela^(0+128),w
 23990  2BCA  0086               	movwf	6
 23991  2BCB  086A               	movf	(_mvTela+1)^(0+128),w
 23992  2BCC  0087               	movwf	7
 23993  2BCD  3147               	addfsr 1,7
 23994  2BCE  0820               	movf	?___flsub^(0+128),w
 23995  2BCF  3FC0               	movwi [0]fsr1
 23996  2BD0  0821               	movf	(?___flsub+1)^(0+128),w
 23997  2BD1  3FC1               	movwi [1]fsr1
 23998  2BD2  0822               	movf	(?___flsub+2)^(0+128),w
 23999  2BD3  3FC2               	movwi [2]fsr1
 24000  2BD4  0823               	movf	(?___flsub+3)^(0+128),w
 24001  2BD5  3FC3               	movwi [3]fsr1
 24002                           
 24003                           ;telas.c: 365: if(mvTela->Pos < cnc.min.mm.Pos)
 24004  2BD6  0869               	movf	_mvTela^(0+128),w
 24005  2BD7  0086               	movwf	6
 24006  2BD8  086A               	movf	(_mvTela+1)^(0+128),w
 24007  2BD9  0087               	movwf	7
 24008  2BDA  3147               	addfsr 1,7
 24009  2BDB  3F40               	moviw [0]fsr1
 24010  2BDC  00A0               	movwf	___flge@ff1^(0+128)
 24011  2BDD  3F41               	moviw [1]fsr1
 24012  2BDE  00A1               	movwf	(___flge@ff1+1)^(0+128)
 24013  2BDF  3F42               	moviw [2]fsr1
 24014  2BE0  00A2               	movwf	(___flge@ff1+2)^(0+128)
 24015  2BE1  3F43               	moviw [3]fsr1
 24016  2BE2  00A3               	movwf	(___flge@ff1+3)^(0+128)
 24017  2BE3  3014               	movlw	20
 24018  2BE4  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24019  2BE5  0086               	movwf	6
 24020  2BE6  3001               	movlw	1	; select bank3/4
 24021  2BE7  0087               	movwf	7
 24022  2BE8  3F40               	moviw [0]fsr1
 24023  2BE9  00A4               	movwf	___flge@ff2^(0+128)
 24024  2BEA  3F41               	moviw [1]fsr1
 24025  2BEB  00A5               	movwf	(___flge@ff2+1)^(0+128)
 24026  2BEC  3F42               	moviw [2]fsr1
 24027  2BED  00A6               	movwf	(___flge@ff2+2)^(0+128)
 24028  2BEE  3F43               	moviw [3]fsr1
 24029  2BEF  00A7               	movwf	(___flge@ff2+3)^(0+128)
 24030  2BF0  31CD  2551  31A9   	fcall	___flge
 24031  2BF3  1803               	btfsc	3,0
 24032  2BF4  2C03               	goto	l11296
 24033                           
 24034                           ;telas.c: 366: mvTela->Pos = cnc.min.mm.Pos;
 24035  2BF5  0869               	movf	_mvTela^(0+128),w
 24036  2BF6  0086               	movwf	6
 24037  2BF7  086A               	movf	(_mvTela+1)^(0+128),w
 24038  2BF8  0087               	movwf	7
 24039  2BF9  3147               	addfsr 1,7
 24040  2BFA  0143               	movlb	3	; select bank3
 24041  2BFB  0834               	movf	(_cnc^(0+384)+20),w
 24042  2BFC  3FC0               	movwi [0]fsr1
 24043  2BFD  0835               	movf	((_cnc+1)^(0+384)+20),w
 24044  2BFE  3FC1               	movwi [1]fsr1
 24045  2BFF  0836               	movf	((_cnc+2)^(0+384)+20),w
 24046  2C00  3FC2               	movwi [2]fsr1
 24047  2C01  0837               	movf	((_cnc+3)^(0+384)+20),w
 24048  2C02  3FC3               	movwi [3]fsr1
 24049  2C03                     l11296:
 24050                           
 24051                           ;telas.c: 367: if(tela == TELA_DESCE) {
 24052  2C03  3002               	movlw	2
 24053  2C04  0141               	movlb	1	; select bank1
 24054  2C05  0664               	xorwf	navCfgMove@tela^(0+128),w
 24055  2C06  1D03               	btfss	3,2
 24056  2C07  2C56               	goto	l11302
 24057                           
 24058                           ;telas.c: 368: cncSetPos(cnc.pos.Home,mvTela->Pos,cnc.pos.Stop);
 24059  2C08  3038               	movlw	56
 24060  2C09  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24061  2C0A  0086               	movwf	6
 24062  2C0B  3001               	movlw	1	; select bank3/4
 24063  2C0C  0087               	movwf	7
 24064  2C0D  3F40               	moviw [0]fsr1
 24065  2C0E  00A8               	movwf	cncSetPos@home^(0+128)
 24066  2C0F  3F41               	moviw [1]fsr1
 24067  2C10  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 24068  2C11  3F42               	moviw [2]fsr1
 24069  2C12  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 24070  2C13  3F43               	moviw [3]fsr1
 24071  2C14  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 24072  2C15  0869               	movf	_mvTela^(0+128),w
 24073  2C16  0086               	movwf	6
 24074  2C17  086A               	movf	(_mvTela+1)^(0+128),w
 24075  2C18  0087               	movwf	7
 24076  2C19  3147               	addfsr 1,7
 24077  2C1A  3F40               	moviw [0]fsr1
 24078  2C1B  00AC               	movwf	cncSetPos@start^(0+128)
 24079  2C1C  3F41               	moviw [1]fsr1
 24080  2C1D  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 24081  2C1E  3F42               	moviw [2]fsr1
 24082  2C1F  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 24083  2C20  3F43               	moviw [3]fsr1
 24084  2C21  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 24085  2C22  3040               	movlw	64
 24086  2C23  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24087  2C24  0086               	movwf	6
 24088  2C25  3001               	movlw	1	; select bank3/4
 24089  2C26  0087               	movwf	7
 24090  2C27  3F40               	moviw [0]fsr1
 24091  2C28  00B0               	movwf	cncSetPos@stop^(0+128)
 24092  2C29  3F41               	moviw [1]fsr1
 24093  2C2A  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 24094  2C2B  3F42               	moviw [2]fsr1
 24095  2C2C  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 24096  2C2D  3F43               	moviw [3]fsr1
 24097  2C2E  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 24098  2C2F  31A8  200D  31A9   	fcall	_cncSetPos
 24099                           
 24100                           ;telas.c: 369: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 24101  2C32  086A               	movf	(_mvTela+1)^(0+128),w
 24102  2C33  0140               	movlb	0	; select bank0
 24103  2C34  00E5               	movwf	cncConfigMove@mv+1
 24104  2C35  0141               	movlb	1	; select bank1
 24105  2C36  0869               	movf	_mvTela^(0+128),w
 24106  2C37  0140               	movlb	0	; select bank0
 24107  2C38  00E4               	movwf	cncConfigMove@mv
 24108  2C39  0141               	movlb	1	; select bank1
 24109  2C3A  0869               	movf	_mvTela^(0+128),w
 24110  2C3B  0086               	movwf	6
 24111  2C3C  086A               	movf	(_mvTela+1)^(0+128),w
 24112  2C3D  0087               	movwf	7
 24113  2C3E  3143               	addfsr 1,3
 24114  2C3F  3F40               	moviw [0]fsr1
 24115  2C40  0140               	movlb	0	; select bank0
 24116  2C41  00E6               	movwf	cncConfigMove@speed
 24117  2C42  3F41               	moviw [1]fsr1
 24118  2C43  00E7               	movwf	cncConfigMove@speed+1
 24119  2C44  3F42               	moviw [2]fsr1
 24120  2C45  00E8               	movwf	cncConfigMove@speed+2
 24121  2C46  3F43               	moviw [3]fsr1
 24122  2C47  00E9               	movwf	cncConfigMove@speed+3
 24123  2C48  0141               	movlb	1	; select bank1
 24124  2C49  0869               	movf	_mvTela^(0+128),w
 24125  2C4A  0086               	movwf	6
 24126  2C4B  086A               	movf	(_mvTela+1)^(0+128),w
 24127  2C4C  0087               	movwf	7
 24128  2C4D  3142               	addfsr 1,2
 24129  2C4E  0801               	movf	1,w
 24130  2C4F  00DC               	movwf	??_navCfgMove^(0+128)
 24131  2C50  085C               	movf	??_navCfgMove^(0+128),w
 24132  2C51  0140               	movlb	0	; select bank0
 24133  2C52  00EA               	movwf	cncConfigMove@accel
 24134  2C53  31BC  2450  31A9   	fcall	_cncConfigMove
 24135  2C56                     l11302:
 24136                           
 24137                           ;telas.c: 370: };telas.c: 371: if(tela == TELA_SOLDA) {
 24138  2C56  3003               	movlw	3
 24139  2C57  0141               	movlb	1	; select bank1
 24140  2C58  0664               	xorwf	navCfgMove@tela^(0+128),w
 24141  2C59  1D03               	btfss	3,2
 24142  2C5A  2FDD               	goto	l11382
 24143                           
 24144                           ;telas.c: 372: cncSetPos(cnc.pos.Home,cnc.pos.Start,mvTela->Pos);
 24145  2C5B  3038               	movlw	56
 24146  2C5C  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24147  2C5D  0086               	movwf	6
 24148  2C5E  3001               	movlw	1	; select bank3/4
 24149  2C5F  0087               	movwf	7
 24150  2C60  3F40               	moviw [0]fsr1
 24151  2C61  00A8               	movwf	cncSetPos@home^(0+128)
 24152  2C62  3F41               	moviw [1]fsr1
 24153  2C63  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 24154  2C64  3F42               	moviw [2]fsr1
 24155  2C65  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 24156  2C66  3F43               	moviw [3]fsr1
 24157  2C67  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 24158  2C68  303C               	movlw	60
 24159  2C69  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24160  2C6A  0086               	movwf	6
 24161  2C6B  3001               	movlw	1	; select bank3/4
 24162  2C6C  0087               	movwf	7
 24163  2C6D  3F40               	moviw [0]fsr1
 24164  2C6E  00AC               	movwf	cncSetPos@start^(0+128)
 24165  2C6F  3F41               	moviw [1]fsr1
 24166  2C70  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 24167  2C71  3F42               	moviw [2]fsr1
 24168  2C72  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 24169  2C73  3F43               	moviw [3]fsr1
 24170  2C74  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 24171  2C75  0869               	movf	_mvTela^(0+128),w
 24172  2C76  0086               	movwf	6
 24173  2C77  086A               	movf	(_mvTela+1)^(0+128),w
 24174  2C78  0087               	movwf	7
 24175  2C79  3147               	addfsr 1,7
 24176  2C7A  3F40               	moviw [0]fsr1
 24177  2C7B  00B0               	movwf	cncSetPos@stop^(0+128)
 24178  2C7C  3F41               	moviw [1]fsr1
 24179  2C7D  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 24180  2C7E  3F42               	moviw [2]fsr1
 24181  2C7F  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 24182  2C80  3F43               	moviw [3]fsr1
 24183  2C81  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 24184  2C82  31A8  200D  31A9   	fcall	_cncSetPos
 24185                           
 24186                           ;telas.c: 373: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 24187  2C85  086A               	movf	(_mvTela+1)^(0+128),w
 24188  2C86  0140               	movlb	0	; select bank0
 24189  2C87  00E5               	movwf	cncConfigMove@mv+1
 24190  2C88  0141               	movlb	1	; select bank1
 24191  2C89  0869               	movf	_mvTela^(0+128),w
 24192  2C8A  0140               	movlb	0	; select bank0
 24193  2C8B  00E4               	movwf	cncConfigMove@mv
 24194  2C8C  0141               	movlb	1	; select bank1
 24195  2C8D  0869               	movf	_mvTela^(0+128),w
 24196  2C8E  0086               	movwf	6
 24197  2C8F  086A               	movf	(_mvTela+1)^(0+128),w
 24198  2C90  0087               	movwf	7
 24199  2C91  3143               	addfsr 1,3
 24200  2C92  3F40               	moviw [0]fsr1
 24201  2C93  0140               	movlb	0	; select bank0
 24202  2C94  00E6               	movwf	cncConfigMove@speed
 24203  2C95  3F41               	moviw [1]fsr1
 24204  2C96  00E7               	movwf	cncConfigMove@speed+1
 24205  2C97  3F42               	moviw [2]fsr1
 24206  2C98  00E8               	movwf	cncConfigMove@speed+2
 24207  2C99  3F43               	moviw [3]fsr1
 24208  2C9A  00E9               	movwf	cncConfigMove@speed+3
 24209  2C9B  0141               	movlb	1	; select bank1
 24210  2C9C  0869               	movf	_mvTela^(0+128),w
 24211  2C9D  0086               	movwf	6
 24212  2C9E  086A               	movf	(_mvTela+1)^(0+128),w
 24213  2C9F  0087               	movwf	7
 24214  2CA0  3142               	addfsr 1,2
 24215  2CA1  0801               	movf	1,w
 24216  2CA2  00DC               	movwf	??_navCfgMove^(0+128)
 24217  2CA3  085C               	movf	??_navCfgMove^(0+128),w
 24218  2CA4  0140               	movlb	0	; select bank0
 24219  2CA5  00EA               	movwf	cncConfigMove@accel
 24220  2CA6  31BC  2450  31A9   	fcall	_cncConfigMove
 24221  2CA9  2FDD               	goto	l11382
 24222  2CAA                     l11308:
 24223                           
 24224                           ;telas.c: 378: mvTela->toCruise = getBackTableSpeed(mvTela);
 24225  2CAA  086A               	movf	(_mvTela+1)^(0+128),w
 24226  2CAB  00F9               	movwf	getBackTableSpeed@mv+1
 24227  2CAC  0869               	movf	_mvTela^(0+128),w
 24228  2CAD  00F8               	movwf	getBackTableSpeed@mv
 24229  2CAE  31C9  21D6  31A9   	fcall	_getBackTableSpeed
 24230  2CB1  0141               	movlb	1	; select bank1
 24231  2CB2  0869               	movf	_mvTela^(0+128),w
 24232  2CB3  0086               	movwf	6
 24233  2CB4  086A               	movf	(_mvTela+1)^(0+128),w
 24234  2CB5  0087               	movwf	7
 24235  2CB6  315F               	addfsr 1,31
 24236  2CB7  0878               	movf	?_getBackTableSpeed,w
 24237  2CB8  3FC0               	movwi [0]fsr1
 24238  2CB9  0879               	movf	?_getBackTableSpeed+1,w
 24239  2CBA  3FC1               	movwi [1]fsr1
 24240  2CBB  087A               	movf	?_getBackTableSpeed+2,w
 24241  2CBC  3FC2               	movwi [2]fsr1
 24242  2CBD  087B               	movf	?_getBackTableSpeed+3,w
 24243  2CBE  3FC3               	movwi [3]fsr1
 24244                           
 24245                           ;telas.c: 379: mvTela->toBrake = mvTela->dist - mvTela->toCruise;
 24246  2CBF  0869               	movf	_mvTela^(0+128),w
 24247  2CC0  0086               	movwf	6
 24248  2CC1  086A               	movf	(_mvTela+1)^(0+128),w
 24249  2CC2  0087               	movwf	7
 24250  2CC3  315F               	addfsr 1,31
 24251  2CC4  3F40               	moviw [0]fsr1
 24252  2CC5  00DC               	movwf	??_navCfgMove^(0+128)
 24253  2CC6  3F41               	moviw [1]fsr1
 24254  2CC7  00DD               	movwf	(??_navCfgMove^(0+128)+1)
 24255  2CC8  3F42               	moviw [2]fsr1
 24256  2CC9  00DE               	movwf	(??_navCfgMove^(0+128)+2)
 24257  2CCA  3F43               	moviw [3]fsr1
 24258  2CCB  00DF               	movwf	(??_navCfgMove^(0+128)+3)
 24259  2CCC  0869               	movf	_mvTela^(0+128),w
 24260  2CCD  0086               	movwf	6
 24261  2CCE  086A               	movf	(_mvTela+1)^(0+128),w
 24262  2CCF  0087               	movwf	7
 24263  2CD0  315B               	addfsr 1,27
 24264  2CD1  3F40               	moviw [0]fsr1
 24265  2CD2  00E0               	movwf	(??_navCfgMove+4)^(0+128)
 24266  2CD3  3F41               	moviw [1]fsr1
 24267  2CD4  00E1               	movwf	((??_navCfgMove+4)^(0+128)+1)
 24268  2CD5  3F42               	moviw [2]fsr1
 24269  2CD6  00E2               	movwf	((??_navCfgMove+4)^(0+128)+2)
 24270  2CD7  3F43               	moviw [3]fsr1
 24271  2CD8  00E3               	movwf	((??_navCfgMove+4)^(0+128)+3)
 24272  2CD9  085C               	movf	??_navCfgMove^(0+128),w
 24273  2CDA  02E0               	subwf	(??_navCfgMove+4)^(0+128),f
 24274  2CDB  085D               	movf	(??_navCfgMove+1)^(0+128),w
 24275  2CDC  3BE1               	subwfb	((??_navCfgMove+4)^(0+128)+1),f
 24276  2CDD  085E               	movf	(??_navCfgMove+2)^(0+128),w
 24277  2CDE  3BE2               	subwfb	((??_navCfgMove+4)^(0+128)+2),f
 24278  2CDF  085F               	movf	(??_navCfgMove+3)^(0+128),w
 24279  2CE0  3BE3               	subwfb	((??_navCfgMove+4)^(0+128)+3),f
 24280  2CE1  0869               	movf	_mvTela^(0+128),w
 24281  2CE2  3E23               	addlw	35
 24282  2CE3  0086               	movwf	6
 24283  2CE4  3000               	movlw	0
 24284  2CE5  3D6A               	addwfc	(_mvTela+1)^(0+128),w
 24285  2CE6  0087               	movwf	7
 24286  2CE7  0860               	movf	(??_navCfgMove+4)^(0+128),w
 24287  2CE8  3FC0               	movwi [0]fsr1
 24288  2CE9  0861               	movf	(??_navCfgMove+5)^(0+128),w
 24289  2CEA  3FC1               	movwi [1]fsr1
 24290  2CEB  0862               	movf	(??_navCfgMove+6)^(0+128),w
 24291  2CEC  3FC2               	movwi [2]fsr1
 24292  2CED  0863               	movf	(??_navCfgMove+7)^(0+128),w
 24293  2CEE  3FC3               	movwi [3]fsr1
 24294                           
 24295                           ;telas.c: 380: mvTela->vCruise = getSpeedTable(mvTela->accel,mvTela->toCruise);
 24296  2CEF  0869               	movf	_mvTela^(0+128),w
 24297  2CF0  0086               	movwf	6
 24298  2CF1  086A               	movf	(_mvTela+1)^(0+128),w
 24299  2CF2  0087               	movwf	7
 24300  2CF3  315F               	addfsr 1,31
 24301  2CF4  3F40               	moviw [0]fsr1
 24302  2CF5  0140               	movlb	0	; select bank0
 24303  2CF6  00AE               	movwf	getSpeedTable@i
 24304  2CF7  3F41               	moviw [1]fsr1
 24305  2CF8  00AF               	movwf	getSpeedTable@i+1
 24306  2CF9  3F42               	moviw [2]fsr1
 24307  2CFA  00B0               	movwf	getSpeedTable@i+2
 24308  2CFB  3F43               	moviw [3]fsr1
 24309  2CFC  00B1               	movwf	getSpeedTable@i+3
 24310  2CFD  0141               	movlb	1	; select bank1
 24311  2CFE  0869               	movf	_mvTela^(0+128),w
 24312  2CFF  0086               	movwf	6
 24313  2D00  086A               	movf	(_mvTela+1)^(0+128),w
 24314  2D01  0087               	movwf	7
 24315  2D02  3142               	addfsr 1,2
 24316  2D03  0801               	movf	1,w
 24317  2D04  31D5  2534  31A9   	fcall	_getSpeedTable
 24318  2D07  0141               	movlb	1	; select bank1
 24319  2D08  0869               	movf	_mvTela^(0+128),w
 24320  2D09  0086               	movwf	6
 24321  2D0A  086A               	movf	(_mvTela+1)^(0+128),w
 24322  2D0B  0087               	movwf	7
 24323  2D0C  314B               	addfsr 1,11
 24324  2D0D  0140               	movlb	0	; select bank0
 24325  2D0E  082E               	movf	?_getSpeedTable,w
 24326  2D0F  3FC0               	movwi [0]fsr1
 24327  2D10  082F               	movf	?_getSpeedTable+1,w
 24328  2D11  3FC1               	movwi [1]fsr1
 24329  2D12  0830               	movf	?_getSpeedTable+2,w
 24330  2D13  3FC2               	movwi [2]fsr1
 24331  2D14  0831               	movf	?_getSpeedTable+3,w
 24332  2D15  3FC3               	movwi [3]fsr1
 24333                           
 24334                           ;telas.c: 381: mvTela->Speed = convertStepsToMM(mvTela->vCruise);
 24335  2D16  0141               	movlb	1	; select bank1
 24336  2D17  0869               	movf	_mvTela^(0+128),w
 24337  2D18  0086               	movwf	6
 24338  2D19  086A               	movf	(_mvTela+1)^(0+128),w
 24339  2D1A  0087               	movwf	7
 24340  2D1B  314B               	addfsr 1,11
 24341  2D1C  3F40               	moviw [0]fsr1
 24342  2D1D  0140               	movlb	0	; select bank0
 24343  2D1E  00C0               	movwf	convertStepsToMM@steps
 24344  2D1F  3F41               	moviw [1]fsr1
 24345  2D20  00C1               	movwf	convertStepsToMM@steps+1
 24346  2D21  3F42               	moviw [2]fsr1
 24347  2D22  00C2               	movwf	convertStepsToMM@steps+2
 24348  2D23  3F43               	moviw [3]fsr1
 24349  2D24  00C3               	movwf	convertStepsToMM@steps+3
 24350  2D25  31D1  21CB  31A9   	fcall	_convertStepsToMM
 24351  2D28  0141               	movlb	1	; select bank1
 24352  2D29  0869               	movf	_mvTela^(0+128),w
 24353  2D2A  0086               	movwf	6
 24354  2D2B  086A               	movf	(_mvTela+1)^(0+128),w
 24355  2D2C  0087               	movwf	7
 24356  2D2D  3143               	addfsr 1,3
 24357  2D2E  0140               	movlb	0	; select bank0
 24358  2D2F  0840               	movf	?_convertStepsToMM,w
 24359  2D30  3FC0               	movwi [0]fsr1
 24360  2D31  0841               	movf	?_convertStepsToMM+1,w
 24361  2D32  3FC1               	movwi [1]fsr1
 24362  2D33  0842               	movf	?_convertStepsToMM+2,w
 24363  2D34  3FC2               	movwi [2]fsr1
 24364  2D35  0843               	movf	?_convertStepsToMM+3,w
 24365  2D36  3FC3               	movwi [3]fsr1
 24366  2D37  2B5A               	goto	l11278
 24367  2D38                     l11318:
 24368                           
 24369                           ;telas.c: 387: if(mvTela->accel < ACC_MIN) {
 24370  2D38  0869               	movf	_mvTela^(0+128),w
 24371  2D39  0086               	movwf	6
 24372  2D3A  086A               	movf	(_mvTela+1)^(0+128),w
 24373  2D3B  0087               	movwf	7
 24374  2D3C  3142               	addfsr 1,2
 24375  2D3D  3006               	movlw	6
 24376  2D3E  0201               	subwf	1,w
 24377  2D3F  1803               	skipnc
 24378  2D40  2FDD               	goto	l11382
 24379                           
 24380                           ;telas.c: 388: mvTela->accel++;
 24381  2D41  3001               	movlw	1
 24382  2D42  00DC               	movwf	??_navCfgMove^(0+128)
 24383  2D43  0869               	movf	_mvTela^(0+128),w
 24384  2D44  0086               	movwf	6
 24385  2D45  086A               	movf	(_mvTela+1)^(0+128),w
 24386  2D46  0087               	movwf	7
 24387  2D47  3142               	addfsr 1,2
 24388  2D48  085C               	movf	??_navCfgMove^(0+128),w
 24389  2D49  0781               	addwf	1,f
 24390                           
 24391                           ;telas.c: 389: cncConfigMove(mvTela, mvTela->Speed, mvTela->accel);
 24392  2D4A  086A               	movf	(_mvTela+1)^(0+128),w
 24393  2D4B  0140               	movlb	0	; select bank0
 24394  2D4C  00E5               	movwf	cncConfigMove@mv+1
 24395  2D4D  0141               	movlb	1	; select bank1
 24396  2D4E  0869               	movf	_mvTela^(0+128),w
 24397  2D4F  0140               	movlb	0	; select bank0
 24398  2D50  00E4               	movwf	cncConfigMove@mv
 24399  2D51  0141               	movlb	1	; select bank1
 24400  2D52  0869               	movf	_mvTela^(0+128),w
 24401  2D53  0086               	movwf	6
 24402  2D54  086A               	movf	(_mvTela+1)^(0+128),w
 24403  2D55  0087               	movwf	7
 24404  2D56  3143               	addfsr 1,3
 24405  2D57  3F40               	moviw [0]fsr1
 24406  2D58  0140               	movlb	0	; select bank0
 24407  2D59  00E6               	movwf	cncConfigMove@speed
 24408  2D5A  3F41               	moviw [1]fsr1
 24409  2D5B  00E7               	movwf	cncConfigMove@speed+1
 24410  2D5C  3F42               	moviw [2]fsr1
 24411  2D5D  00E8               	movwf	cncConfigMove@speed+2
 24412  2D5E  3F43               	moviw [3]fsr1
 24413  2D5F  00E9               	movwf	cncConfigMove@speed+3
 24414  2D60  0141               	movlb	1	; select bank1
 24415  2D61  0869               	movf	_mvTela^(0+128),w
 24416  2D62  0086               	movwf	6
 24417  2D63  086A               	movf	(_mvTela+1)^(0+128),w
 24418  2D64  0087               	movwf	7
 24419  2D65  3142               	addfsr 1,2
 24420  2D66  0801               	movf	1,w
 24421  2D67  00DC               	movwf	??_navCfgMove^(0+128)
 24422  2D68  085C               	movf	??_navCfgMove^(0+128),w
 24423  2D69  0140               	movlb	0	; select bank0
 24424  2D6A  00EA               	movwf	cncConfigMove@accel
 24425  2D6B  31BC  2450  31A9   	fcall	_cncConfigMove
 24426  2D6E  2FDD               	goto	l11382
 24427  2D6F                     l11326:
 24428  2D6F  0141               	movlb	1	; select bank1
 24429  2D70  0865               	movf	navCfgMove@subTela^(0+128),w
 24430                           
 24431                           ; Switch size 1, requested type "simple"
 24432                           ; Number of cases is 3, Range of values is 0 to 2
 24433                           ; switch strategies available:
 24434                           ; Name         Instructions Cycles
 24435                           ; simple_byte           10     6 (average)
 24436                           ; direct_byte           12     6 (fixed)
 24437                           ; jumptable            260     6 (fixed)
 24438                           ;	Chosen strategy is simple_byte
 24439  2D71  3A00               	xorlw	0	; case 0
 24440  2D72  1903               	skipnz
 24441  2D73  2BA9               	goto	l11292
 24442  2D74  3A01               	xorlw	1	; case 1
 24443  2D75  1903               	skipnz
 24444  2D76  2CAA               	goto	l11308
 24445  2D77  3A03               	xorlw	3	; case 2
 24446  2D78  1903               	skipnz
 24447  2D79  2D38               	goto	l11318
 24448  2D7A  2BA6               	goto	l1520
 24449  2D7B                     l11328:
 24450                           
 24451                           ;telas.c: 397: if(subTela == TELA_CNC_POS){
 24452  2D7B  0141               	movlb	1	; select bank1
 24453  2D7C  0865               	movf	navCfgMove@subTela^(0+128),w
 24454  2D7D  1D03               	btfss	3,2
 24455  2D7E  2FDD               	goto	l11382
 24456                           
 24457                           ;telas.c: 399: escreve_LCD(1,1,"Moving to:");
 24458  2D7F  0140               	movlb	0	; select bank0
 24459  2D80  01A0               	clrf	escreve_LCD@coluna
 24460  2D81  0AA0               	incf	escreve_LCD@coluna,f
 24461  2D82  3028               	movlw	low (STR_27| (0+32768))
 24462  2D83  00A1               	movwf	escreve_LCD@str
 24463  2D84  30E1               	movlw	high (STR_27| (0+32768))
 24464  2D85  00A2               	movwf	escreve_LCD@str+1
 24465  2D86  3001               	movlw	1
 24466  2D87  31D2  22E7  31A9   	fcall	_escreve_LCD
 24467                           
 24468                           ;telas.c: 401: cncMoveTo(mvTela->toStop,20.0,ACC_12);
 24469  2D8A  0141               	movlb	1	; select bank1
 24470  2D8B  0869               	movf	_mvTela^(0+128),w
 24471  2D8C  0086               	movwf	6
 24472  2D8D  086A               	movf	(_mvTela+1)^(0+128),w
 24473  2D8E  0087               	movwf	7
 24474  2D8F  3153               	addfsr 1,19
 24475  2D90  3F40               	moviw [0]fsr1
 24476  2D91  00A9               	movwf	cncMoveTo@pos^(0+128)
 24477  2D92  3F41               	moviw [1]fsr1
 24478  2D93  00AA               	movwf	(cncMoveTo@pos+1)^(0+128)
 24479  2D94  3F42               	moviw [2]fsr1
 24480  2D95  00AB               	movwf	(cncMoveTo@pos+2)^(0+128)
 24481  2D96  3F43               	moviw [3]fsr1
 24482  2D97  00AC               	movwf	(cncMoveTo@pos+3)^(0+128)
 24483  2D98  3041               	movlw	65
 24484  2D99  00B0               	movwf	(cncMoveTo@speed+3)^(0+128)
 24485  2D9A  30A0               	movlw	160
 24486  2D9B  00AF               	movwf	(cncMoveTo@speed+2)^(0+128)
 24487  2D9C  3000               	movlw	0
 24488  2D9D  00AE               	movwf	(cncMoveTo@speed+1)^(0+128)
 24489  2D9E  3000               	movlw	0
 24490  2D9F  00AD               	movwf	cncMoveTo@speed^(0+128)
 24491  2DA0  3004               	movlw	4
 24492  2DA1  00DC               	movwf	??_navCfgMove^(0+128)
 24493  2DA2  085C               	movf	??_navCfgMove^(0+128),w
 24494  2DA3  00B1               	movwf	cncMoveTo@accel^(0+128)
 24495  2DA4  31D4  24E9  31A9   	fcall	_cncMoveTo
 24496  2DA7  2FDD               	goto	l11382
 24497  2DA8                     l11334:
 24498                           
 24499                           ;telas.c: 416: if(subTela == TELA_CNC_POS){
 24500  2DA8  0141               	movlb	1	; select bank1
 24501  2DA9  0865               	movf	navCfgMove@subTela^(0+128),w
 24502  2DAA  1D03               	btfss	3,2
 24503  2DAB  2FDD               	goto	l11382
 24504                           
 24505                           ;telas.c: 417: cncMoveTo(mvTela->toStart,50.0,ACC_12);
 24506  2DAC  0869               	movf	_mvTela^(0+128),w
 24507  2DAD  0086               	movwf	6
 24508  2DAE  086A               	movf	(_mvTela+1)^(0+128),w
 24509  2DAF  0087               	movwf	7
 24510  2DB0  314F               	addfsr 1,15
 24511  2DB1  3F40               	moviw [0]fsr1
 24512  2DB2  00A9               	movwf	cncMoveTo@pos^(0+128)
 24513  2DB3  3F41               	moviw [1]fsr1
 24514  2DB4  00AA               	movwf	(cncMoveTo@pos+1)^(0+128)
 24515  2DB5  3F42               	moviw [2]fsr1
 24516  2DB6  00AB               	movwf	(cncMoveTo@pos+2)^(0+128)
 24517  2DB7  3F43               	moviw [3]fsr1
 24518  2DB8  00AC               	movwf	(cncMoveTo@pos+3)^(0+128)
 24519  2DB9  3042               	movlw	66
 24520  2DBA  00B0               	movwf	(cncMoveTo@speed+3)^(0+128)
 24521  2DBB  3048               	movlw	72
 24522  2DBC  00AF               	movwf	(cncMoveTo@speed+2)^(0+128)
 24523  2DBD  3000               	movlw	0
 24524  2DBE  00AE               	movwf	(cncMoveTo@speed+1)^(0+128)
 24525  2DBF  3000               	movlw	0
 24526  2DC0  00AD               	movwf	cncMoveTo@speed^(0+128)
 24527  2DC1  3004               	movlw	4
 24528  2DC2  00DC               	movwf	??_navCfgMove^(0+128)
 24529  2DC3  085C               	movf	??_navCfgMove^(0+128),w
 24530  2DC4  00B1               	movwf	cncMoveTo@accel^(0+128)
 24531  2DC5  31D4  24E9  31A9   	fcall	_cncMoveTo
 24532  2DC8  2FDD               	goto	l11382
 24533  2DC9                     l11338:
 24534                           
 24535                           ;telas.c: 421: soma *= 10.0;
 24536  2DC9  3041               	movlw	65
 24537  2DCA  0140               	movlb	0	; select bank0
 24538  2DCB  00A9               	movwf	___flmul@b+3
 24539  2DCC  3020               	movlw	32
 24540  2DCD  00A8               	movwf	___flmul@b+2
 24541  2DCE  3000               	movlw	0
 24542  2DCF  00A7               	movwf	___flmul@b+1
 24543  2DD0  3000               	movlw	0
 24544  2DD1  00A6               	movwf	___flmul@b
 24545  2DD2  0142               	movlb	2	; select bank2
 24546  2DD3  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 24547  2DD4  0140               	movlb	0	; select bank0
 24548  2DD5  00AD               	movwf	___flmul@a+3
 24549  2DD6  0142               	movlb	2	; select bank2
 24550  2DD7  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 24551  2DD8  0140               	movlb	0	; select bank0
 24552  2DD9  00AC               	movwf	___flmul@a+2
 24553  2DDA  0142               	movlb	2	; select bank2
 24554  2DDB  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 24555  2DDC  0140               	movlb	0	; select bank0
 24556  2DDD  00AB               	movwf	___flmul@a+1
 24557  2DDE  0142               	movlb	2	; select bank2
 24558  2DDF  086C               	movf	navCfgMove@soma^(0+256),w
 24559  2DE0  0140               	movlb	0	; select bank0
 24560  2DE1  00AA               	movwf	___flmul@a
 24561  2DE2  31B1  2135  31A9   	fcall	___flmul
 24562  2DE5  0829               	movf	?___flmul+3,w
 24563  2DE6  0142               	movlb	2	; select bank2
 24564  2DE7  00EF               	movwf	(navCfgMove@soma+3)^(0+256)
 24565  2DE8  0140               	movlb	0	; select bank0
 24566  2DE9  0828               	movf	?___flmul+2,w
 24567  2DEA  0142               	movlb	2	; select bank2
 24568  2DEB  00EE               	movwf	(navCfgMove@soma+2)^(0+256)
 24569  2DEC  0140               	movlb	0	; select bank0
 24570  2DED  0827               	movf	?___flmul+1,w
 24571  2DEE  0142               	movlb	2	; select bank2
 24572  2DEF  00ED               	movwf	(navCfgMove@soma+1)^(0+256)
 24573  2DF0  0140               	movlb	0	; select bank0
 24574  2DF1  0826               	movf	?___flmul,w
 24575  2DF2  0142               	movlb	2	; select bank2
 24576  2DF3  00EC               	movwf	navCfgMove@soma^(0+256)
 24577                           
 24578                           ;telas.c: 422: if(soma > 100.0) soma = 100.0;
 24579  2DF4  3042               	movlw	66
 24580  2DF5  0141               	movlb	1	; select bank1
 24581  2DF6  00A3               	movwf	(___flge@ff1+3)^(0+128)
 24582  2DF7  30C8               	movlw	200
 24583  2DF8  00A2               	movwf	(___flge@ff1+2)^(0+128)
 24584  2DF9  3000               	movlw	0
 24585  2DFA  00A1               	movwf	(___flge@ff1+1)^(0+128)
 24586  2DFB  3000               	movlw	0
 24587  2DFC  00A0               	movwf	___flge@ff1^(0+128)
 24588  2DFD  0142               	movlb	2	; select bank2
 24589  2DFE  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 24590  2DFF  0141               	movlb	1	; select bank1
 24591  2E00  00A7               	movwf	(___flge@ff2+3)^(0+128)
 24592  2E01  0142               	movlb	2	; select bank2
 24593  2E02  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 24594  2E03  0141               	movlb	1	; select bank1
 24595  2E04  00A6               	movwf	(___flge@ff2+2)^(0+128)
 24596  2E05  0142               	movlb	2	; select bank2
 24597  2E06  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 24598  2E07  0141               	movlb	1	; select bank1
 24599  2E08  00A5               	movwf	(___flge@ff2+1)^(0+128)
 24600  2E09  0142               	movlb	2	; select bank2
 24601  2E0A  086C               	movf	navCfgMove@soma^(0+256),w
 24602  2E0B  0141               	movlb	1	; select bank1
 24603  2E0C  00A4               	movwf	___flge@ff2^(0+128)
 24604  2E0D  31CD  2551  31A9   	fcall	___flge
 24605  2E10  1803               	btfsc	3,0
 24606  2E11  2E1B               	goto	l11342
 24607  2E12  3042               	movlw	66
 24608  2E13  0142               	movlb	2	; select bank2
 24609  2E14  00EF               	movwf	(navCfgMove@soma+3)^(0+256)
 24610  2E15  30C8               	movlw	200
 24611  2E16  00EE               	movwf	(navCfgMove@soma+2)^(0+256)
 24612  2E17  3000               	movlw	0
 24613  2E18  00ED               	movwf	(navCfgMove@soma+1)^(0+256)
 24614  2E19  3000               	movlw	0
 24615  2E1A                     L6:
 24616  2E1A  00EC               	movwf	navCfgMove@soma^(0+256)
 24617  2E1B                     l11342:
 24618                           
 24619                           ;telas.c: 423: liberarTeclado(10);
 24620  2E1B  300A               	movlw	10
 24621  2E1C  00F1               	movwf	liberarTeclado@ms
 24622  2E1D  3000               	movlw	0
 24623  2E1E  00F2               	movwf	liberarTeclado@ms+1
 24624  2E1F  31D0  2007  31A9   	fcall	_liberarTeclado
 24625                           
 24626                           ;telas.c: 424: break;
 24627  2E22  2FDD               	goto	l11382
 24628  2E23                     l11344:
 24629                           
 24630                           ;telas.c: 426: soma /= 10.0;
 24631  2E23  3041               	movlw	65
 24632  2E24  0140               	movlb	0	; select bank0
 24633  2E25  00A9               	movwf	___fldiv@a+3
 24634  2E26  3020               	movlw	32
 24635  2E27  00A8               	movwf	___fldiv@a+2
 24636  2E28  3000               	movlw	0
 24637  2E29  00A7               	movwf	___fldiv@a+1
 24638  2E2A  3000               	movlw	0
 24639  2E2B  00A6               	movwf	___fldiv@a
 24640  2E2C  0142               	movlb	2	; select bank2
 24641  2E2D  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 24642  2E2E  0140               	movlb	0	; select bank0
 24643  2E2F  00AD               	movwf	___fldiv@b+3
 24644  2E30  0142               	movlb	2	; select bank2
 24645  2E31  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 24646  2E32  0140               	movlb	0	; select bank0
 24647  2E33  00AC               	movwf	___fldiv@b+2
 24648  2E34  0142               	movlb	2	; select bank2
 24649  2E35  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 24650  2E36  0140               	movlb	0	; select bank0
 24651  2E37  00AB               	movwf	___fldiv@b+1
 24652  2E38  0142               	movlb	2	; select bank2
 24653  2E39  086C               	movf	navCfgMove@soma^(0+256),w
 24654  2E3A  0140               	movlb	0	; select bank0
 24655  2E3B  00AA               	movwf	___fldiv@b
 24656  2E3C  31C6  2687  31A9   	fcall	___fldiv
 24657  2E3F  0829               	movf	?___fldiv+3,w
 24658  2E40  0142               	movlb	2	; select bank2
 24659  2E41  00EF               	movwf	(navCfgMove@soma+3)^(0+256)
 24660  2E42  0140               	movlb	0	; select bank0
 24661  2E43  0828               	movf	?___fldiv+2,w
 24662  2E44  0142               	movlb	2	; select bank2
 24663  2E45  00EE               	movwf	(navCfgMove@soma+2)^(0+256)
 24664  2E46  0140               	movlb	0	; select bank0
 24665  2E47  0827               	movf	?___fldiv+1,w
 24666  2E48  0142               	movlb	2	; select bank2
 24667  2E49  00ED               	movwf	(navCfgMove@soma+1)^(0+256)
 24668  2E4A  0140               	movlb	0	; select bank0
 24669  2E4B  0826               	movf	?___fldiv,w
 24670  2E4C  0142               	movlb	2	; select bank2
 24671  2E4D  00EC               	movwf	navCfgMove@soma^(0+256)
 24672                           
 24673                           ;telas.c: 427: if(soma < 0.01) soma = 0.01;
 24674  2E4E  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 24675  2E4F  0141               	movlb	1	; select bank1
 24676  2E50  00A3               	movwf	(___flge@ff1+3)^(0+128)
 24677  2E51  0142               	movlb	2	; select bank2
 24678  2E52  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 24679  2E53  0141               	movlb	1	; select bank1
 24680  2E54  00A2               	movwf	(___flge@ff1+2)^(0+128)
 24681  2E55  0142               	movlb	2	; select bank2
 24682  2E56  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 24683  2E57  0141               	movlb	1	; select bank1
 24684  2E58  00A1               	movwf	(___flge@ff1+1)^(0+128)
 24685  2E59  0142               	movlb	2	; select bank2
 24686  2E5A  086C               	movf	navCfgMove@soma^(0+256),w
 24687  2E5B  0141               	movlb	1	; select bank1
 24688  2E5C  00A0               	movwf	___flge@ff1^(0+128)
 24689  2E5D  303C               	movlw	60
 24690  2E5E  00A7               	movwf	(___flge@ff2+3)^(0+128)
 24691  2E5F  3023               	movlw	35
 24692  2E60  00A6               	movwf	(___flge@ff2+2)^(0+128)
 24693  2E61  30D7               	movlw	215
 24694  2E62  00A5               	movwf	(___flge@ff2+1)^(0+128)
 24695  2E63  300A               	movlw	10
 24696  2E64  00A4               	movwf	___flge@ff2^(0+128)
 24697  2E65  31CD  2551  31A9   	fcall	___flge
 24698  2E68  1803               	btfsc	3,0
 24699  2E69  2E1B               	goto	l11342
 24700  2E6A  303C               	movlw	60
 24701  2E6B  0142               	movlb	2	; select bank2
 24702  2E6C  00EF               	movwf	(navCfgMove@soma+3)^(0+256)
 24703  2E6D  3023               	movlw	35
 24704  2E6E  00EE               	movwf	(navCfgMove@soma+2)^(0+256)
 24705  2E6F  30D7               	movlw	215
 24706  2E70  00ED               	movwf	(navCfgMove@soma+1)^(0+256)
 24707  2E71  300A               	movlw	10
 24708  2E72  2E1A               	goto	L6
 24709  2E73                     l11350:
 24710                           
 24711                           ;telas.c: 431: cncSetPosStart(cnc.pos.Start);
 24712  2E73  303C               	movlw	60
 24713  2E74  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 24714  2E75  0086               	movwf	6
 24715  2E76  3001               	movlw	1	; select bank3/4
 24716  2E77  0087               	movwf	7
 24717  2E78  3F40               	moviw [0]fsr1
 24718  2E79  0141               	movlb	1	; select bank1
 24719  2E7A  00C4               	movwf	cncSetPosStart@start^(0+128)
 24720  2E7B  3F41               	moviw [1]fsr1
 24721  2E7C  00C5               	movwf	(cncSetPosStart@start+1)^(0+128)
 24722  2E7D  3F42               	moviw [2]fsr1
 24723  2E7E  00C6               	movwf	(cncSetPosStart@start+2)^(0+128)
 24724  2E7F  3F43               	moviw [3]fsr1
 24725  2E80  00C7               	movwf	(cncSetPosStart@start+3)^(0+128)
 24726  2E81  31C0  2031  31A9   	fcall	_cncSetPosStart
 24727                           
 24728                           ;telas.c: 432: liberarTeclado(10);
 24729  2E84  300A               	movlw	10
 24730  2E85  00F1               	movwf	liberarTeclado@ms
 24731  2E86  3000               	movlw	0
 24732  2E87  00F2               	movwf	liberarTeclado@ms+1
 24733  2E88  31D0  2007         	fcall	_liberarTeclado
 24734  2E8A  0008               	return
 24735  2E8B                     l11358:
 24736  2E8B  0820               	movf	_bt^(0+256),w	;volatile
 24737                           
 24738                           ; Switch size 1, requested type "simple"
 24739                           ; Number of cases is 9, Range of values is 9 to 36
 24740                           ; switch strategies available:
 24741                           ; Name         Instructions Cycles
 24742                           ; simple_byte           28    15 (average)
 24743                           ; direct_byte           65     9 (fixed)
 24744                           ; jumptable            263     9 (fixed)
 24745                           ;	Chosen strategy is simple_byte
 24746  2E8C  3A09               	xorlw	9	; case 9
 24747  2E8D  1903               	skipnz
 24748  2E8E  2E23               	goto	l11344
 24749  2E8F  3A03               	xorlw	3	; case 10
 24750  2E90  1903               	skipnz
 24751  2E91  2BA7               	goto	l11290
 24752  2E92  3A06               	xorlw	6	; case 12
 24753  2E93  1903               	skipnz
 24754  2E94  2DA8               	goto	l11334
 24755  2E95  3A1D               	xorlw	29	; case 17
 24756  2E96  1903               	skipnz
 24757  2E97  29A0               	goto	l11230
 24758  2E98  3A03               	xorlw	3	; case 18
 24759  2E99  1903               	skipnz
 24760  2E9A  2D7B               	goto	l11328
 24761  2E9B  3A06               	xorlw	6	; case 20
 24762  2E9C  1903               	skipnz
 24763  2E9D  29B1               	goto	l11238
 24764  2E9E  3A35               	xorlw	53	; case 33
 24765  2E9F  1903               	skipnz
 24766  2EA0  2DC9               	goto	l11338
 24767  2EA1  3A03               	xorlw	3	; case 34
 24768  2EA2  1903               	skipnz
 24769  2EA3  29BC               	goto	l11246
 24770  2EA4  3A06               	xorlw	6	; case 36
 24771  2EA5  1903               	skipnz
 24772  2EA6  2E73               	goto	l11350
 24773  2EA7  2FDD               	goto	l11382
 24774  2EA8                     l11360:
 24775                           
 24776                           ;telas.c: 438: sprintf(str1," Tmp:%.2fs(%.2f)",getMoveTime(mvTela),soma);
 24777  2EA8  3054               	movlw	low _str1
 24778  2EA9  00CA               	movwf	sprintf@wh^(0+128)
 24779  2EAA  3002               	movlw	high _str1
 24780  2EAB  00CB               	movwf	(sprintf@wh+1)^(0+128)
 24781  2EAC  3015               	movlw	low (STR_28| (0+32768))
 24782  2EAD  00CC               	movwf	sprintf@f^(0+128)
 24783  2EAE  30E0               	movlw	high (STR_28| (0+32768))
 24784  2EAF  00CD               	movwf	(sprintf@f^(0+128)+1)
 24785  2EB0  086A               	movf	(_mvTela+1)^(0+128),w
 24786  2EB1  0140               	movlb	0	; select bank0
 24787  2EB2  00C1               	movwf	getMoveTime@mv+1
 24788  2EB3  0141               	movlb	1	; select bank1
 24789  2EB4  0869               	movf	_mvTela^(0+128),w
 24790  2EB5  0140               	movlb	0	; select bank0
 24791  2EB6  00C0               	movwf	getMoveTime@mv
 24792  2EB7  319C  2491  31A9   	fcall	_getMoveTime
 24793  2EBA  0843               	movf	?_getMoveTime+3,w
 24794  2EBB  0141               	movlb	1	; select bank1
 24795  2EBC  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 24796  2EBD  0140               	movlb	0	; select bank0
 24797  2EBE  0842               	movf	?_getMoveTime+2,w
 24798  2EBF  0141               	movlb	1	; select bank1
 24799  2EC0  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 24800  2EC1  0140               	movlb	0	; select bank0
 24801  2EC2  0841               	movf	?_getMoveTime+1,w
 24802  2EC3  0141               	movlb	1	; select bank1
 24803  2EC4  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 24804  2EC5  0140               	movlb	0	; select bank0
 24805  2EC6  0840               	movf	?_getMoveTime,w
 24806  2EC7  0141               	movlb	1	; select bank1
 24807  2EC8  00CE               	movwf	(?_sprintf^(0+128)+4)
 24808  2EC9  0142               	movlb	2	; select bank2
 24809  2ECA  086F               	movf	(navCfgMove@soma+3)^(0+256),w
 24810  2ECB  0141               	movlb	1	; select bank1
 24811  2ECC  00D5               	movwf	((?_sprintf+3)^(0+128)+8)
 24812  2ECD  0142               	movlb	2	; select bank2
 24813  2ECE  086E               	movf	(navCfgMove@soma+2)^(0+256),w
 24814  2ECF  0141               	movlb	1	; select bank1
 24815  2ED0  00D4               	movwf	((?_sprintf+2)^(0+128)+8)
 24816  2ED1  0142               	movlb	2	; select bank2
 24817  2ED2  086D               	movf	(navCfgMove@soma+1)^(0+256),w
 24818  2ED3  0141               	movlb	1	; select bank1
 24819  2ED4  00D3               	movwf	((?_sprintf+1)^(0+128)+8)
 24820  2ED5  0142               	movlb	2	; select bank2
 24821  2ED6  086C               	movf	navCfgMove@soma^(0+256),w
 24822  2ED7  0141               	movlb	1	; select bank1
 24823  2ED8  00D2               	movwf	(?_sprintf^(0+128)+8)
 24824  2ED9  31B8  2002  31A9   	fcall	_sprintf
 24825                           
 24826                           ;telas.c: 439: str[0] = ' ';str[1] = 0;
 24827  2EDC  3020               	movlw	32
 24828  2EDD  00DC               	movwf	??_navCfgMove^(0+128)
 24829  2EDE  085C               	movf	??_navCfgMove^(0+128),w
 24830  2EDF  0145               	movlb	5	; select bank5
 24831  2EE0  00C6               	movwf	_str^(0+640)
 24832  2EE1  01C7               	clrf	(_str^(0+640)+1)
 24833                           
 24834                           ;telas.c: 440: if(mvTela->toStop != step.ref){
 24835  2EE2  30E8               	movlw	232
 24836  2EE3  0086               	movwf	6
 24837  2EE4  302F               	movlw	47
 24838  2EE5  0087               	movwf	7
 24839  2EE6  3F40               	moviw [0]fsr1
 24840  2EE7  0141               	movlb	1	; select bank1
 24841  2EE8  00DC               	movwf	??_navCfgMove^(0+128)
 24842  2EE9  3F41               	moviw [1]fsr1
 24843  2EEA  00DD               	movwf	(??_navCfgMove^(0+128)+1)
 24844  2EEB  3F42               	moviw [2]fsr1
 24845  2EEC  00DE               	movwf	(??_navCfgMove^(0+128)+2)
 24846  2EED  3F43               	moviw [3]fsr1
 24847  2EEE  00DF               	movwf	(??_navCfgMove^(0+128)+3)
 24848  2EEF  0869               	movf	_mvTela^(0+128),w
 24849  2EF0  0086               	movwf	6
 24850  2EF1  086A               	movf	(_mvTela+1)^(0+128),w
 24851  2EF2  0087               	movwf	7
 24852  2EF3  3153               	addfsr 1,19
 24853  2EF4  3F40               	moviw [0]fsr1
 24854  2EF5  00E0               	movwf	(??_navCfgMove+4)^(0+128)
 24855  2EF6  3F41               	moviw [1]fsr1
 24856  2EF7  00E1               	movwf	((??_navCfgMove+4)^(0+128)+1)
 24857  2EF8  3F42               	moviw [2]fsr1
 24858  2EF9  00E2               	movwf	((??_navCfgMove+4)^(0+128)+2)
 24859  2EFA  3F43               	moviw [3]fsr1
 24860  2EFB  00E3               	movwf	((??_navCfgMove+4)^(0+128)+3)
 24861  2EFC  085F               	movf	(??_navCfgMove+3)^(0+128),w
 24862  2EFD  0663               	xorwf	(??_navCfgMove+7)^(0+128),w
 24863  2EFE  1D03               	skipz
 24864  2EFF  2F0A               	goto	u12715
 24865  2F00  085E               	movf	(??_navCfgMove+2)^(0+128),w
 24866  2F01  0662               	xorwf	(??_navCfgMove+6)^(0+128),w
 24867  2F02  1D03               	skipz
 24868  2F03  2F0A               	goto	u12715
 24869  2F04  085D               	movf	(??_navCfgMove+1)^(0+128),w
 24870  2F05  0661               	xorwf	(??_navCfgMove+5)^(0+128),w
 24871  2F06  1D03               	skipz
 24872  2F07  2F0A               	goto	u12715
 24873  2F08  085C               	movf	??_navCfgMove^(0+128),w
 24874  2F09  0660               	xorwf	(??_navCfgMove+4)^(0+128),w
 24875  2F0A                     u12715:
 24876  2F0A  1903               	skipnz
 24877  2F0B  2F11               	goto	l11370
 24878                           
 24879                           ;telas.c: 441: str[0] = '*';
 24880  2F0C  302A               	movlw	42
 24881  2F0D  00DC               	movwf	??_navCfgMove^(0+128)
 24882  2F0E  085C               	movf	??_navCfgMove^(0+128),w
 24883  2F0F  0145               	movlb	5	; select bank5
 24884  2F10  00C6               	movwf	_str^(0+640)
 24885  2F11                     l11370:
 24886                           
 24887                           ;telas.c: 442: };telas.c: 443: if(tela == TELA_SOLDA){
 24888  2F11  3003               	movlw	3
 24889  2F12  0141               	movlb	1	; select bank1
 24890  2F13  0664               	xorwf	navCfgMove@tela^(0+128),w
 24891  2F14  1D03               	btfss	3,2
 24892  2F15  2F46               	goto	l11374
 24893                           
 24894                           ;telas.c: 444: sprintf(str2,"%sDist: %.2f mm",str,convertStepsToMM(mvTela->dist));
 24895  2F16  304D               	movlw	low _str2
 24896  2F17  00CA               	movwf	sprintf@wh^(0+128)
 24897  2F18  3001               	movlw	high _str2
 24898  2F19  00CB               	movwf	(sprintf@wh+1)^(0+128)
 24899  2F1A  3048               	movlw	low (STR_29| (0+32768))
 24900  2F1B  00CC               	movwf	sprintf@f^(0+128)
 24901  2F1C  30E0               	movlw	high (STR_29| (0+32768))
 24902  2F1D  00CD               	movwf	(sprintf@f^(0+128)+1)
 24903  2F1E  30C6               	movlw	low _str
 24904  2F1F  00CE               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
 24905  2F20  3002               	movlw	high _str
 24906  2F21  00CF               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
 24907  2F22  0869               	movf	_mvTela^(0+128),w
 24908  2F23  0086               	movwf	6
 24909  2F24  086A               	movf	(_mvTela+1)^(0+128),w
 24910  2F25  0087               	movwf	7
 24911  2F26  315B               	addfsr 1,27
 24912  2F27  3F40               	moviw [0]fsr1
 24913  2F28  0140               	movlb	0	; select bank0
 24914  2F29  00C0               	movwf	convertStepsToMM@steps
 24915  2F2A  3F41               	moviw [1]fsr1
 24916  2F2B  00C1               	movwf	convertStepsToMM@steps+1
 24917  2F2C  3F42               	moviw [2]fsr1
 24918  2F2D  00C2               	movwf	convertStepsToMM@steps+2
 24919  2F2E  3F43               	moviw [3]fsr1
 24920  2F2F  00C3               	movwf	convertStepsToMM@steps+3
 24921  2F30  31D1  21CB  31A9   	fcall	_convertStepsToMM
 24922  2F33  0843               	movf	?_convertStepsToMM+3,w
 24923  2F34  0141               	movlb	1	; select bank1
 24924  2F35  00D3               	movwf	((?_sprintf+3)^(0+128)+6)
 24925  2F36  0140               	movlb	0	; select bank0
 24926  2F37  0842               	movf	?_convertStepsToMM+2,w
 24927  2F38  0141               	movlb	1	; select bank1
 24928  2F39  00D2               	movwf	((?_sprintf+2)^(0+128)+6)
 24929  2F3A  0140               	movlb	0	; select bank0
 24930  2F3B  0841               	movf	?_convertStepsToMM+1,w
 24931  2F3C  0141               	movlb	1	; select bank1
 24932  2F3D  00D1               	movwf	((?_sprintf+1)^(0+128)+6)
 24933  2F3E  0140               	movlb	0	; select bank0
 24934  2F3F  0840               	movf	?_convertStepsToMM,w
 24935  2F40  0141               	movlb	1	; select bank1
 24936  2F41  00D0               	movwf	(?_sprintf^(0+128)+6)
 24937  2F42  31B8  2002  31A9   	fcall	_sprintf
 24938                           
 24939                           ;telas.c: 445: }
 24940  2F45  2FE9               	goto	l11384
 24941  2F46                     l11374:
 24942                           
 24943                           ;telas.c: 446: else{;telas.c: 447: sprintf(str2,"%sPos: %.2f mm",str,mvTela->Pos);
 24944  2F46  304D               	movlw	low _str2
 24945  2F47  00CA               	movwf	sprintf@wh^(0+128)
 24946  2F48  3001               	movlw	high _str2
 24947  2F49  00CB               	movwf	(sprintf@wh+1)^(0+128)
 24948  2F4A  3097               	movlw	low (STR_30| (0+32768))
 24949  2F4B  00CC               	movwf	sprintf@f^(0+128)
 24950  2F4C  30E0               	movlw	high (STR_30| (0+32768))
 24951  2F4D  00CD               	movwf	(sprintf@f^(0+128)+1)
 24952  2F4E  30C6               	movlw	low _str
 24953  2F4F  00CE               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
 24954  2F50  3002               	movlw	high _str
 24955  2F51  00CF               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
 24956  2F52  0869               	movf	_mvTela^(0+128),w
 24957  2F53  0086               	movwf	6
 24958  2F54  086A               	movf	(_mvTela+1)^(0+128),w
 24959  2F55  0087               	movwf	7
 24960  2F56  3147               	addfsr 1,7
 24961  2F57  3F40               	moviw [0]fsr1
 24962  2F58  00D0               	movwf	(?_sprintf^(0+128)+6)
 24963  2F59  3F41               	moviw [1]fsr1
 24964  2F5A  00D1               	movwf	((?_sprintf+1)^(0+128)+6)
 24965  2F5B  3F42               	moviw [2]fsr1
 24966  2F5C  00D2               	movwf	((?_sprintf+2)^(0+128)+6)
 24967  2F5D  3F43               	moviw [3]fsr1
 24968  2F5E  00D3               	movwf	((?_sprintf+3)^(0+128)+6)
 24969  2F5F  31B8  2002  31A9   	fcall	_sprintf
 24970  2F62  2FE9               	goto	l11384
 24971  2F63                     l11376:
 24972                           
 24973                           ;telas.c: 451: sprintf(str1," Tmp:%.2fs",getMoveTime(mvTela));
 24974  2F63  3054               	movlw	low _str1
 24975  2F64  00CA               	movwf	sprintf@wh^(0+128)
 24976  2F65  3002               	movlw	high _str1
 24977  2F66  00CB               	movwf	(sprintf@wh+1)^(0+128)
 24978  2F67  3033               	movlw	low (STR_31| (0+32768))
 24979  2F68  00CC               	movwf	sprintf@f^(0+128)
 24980  2F69  30E1               	movlw	high (STR_31| (0+32768))
 24981  2F6A  00CD               	movwf	(sprintf@f^(0+128)+1)
 24982  2F6B  086A               	movf	(_mvTela+1)^(0+128),w
 24983  2F6C  0140               	movlb	0	; select bank0
 24984  2F6D  00C1               	movwf	getMoveTime@mv+1
 24985  2F6E  0141               	movlb	1	; select bank1
 24986  2F6F  0869               	movf	_mvTela^(0+128),w
 24987  2F70  0140               	movlb	0	; select bank0
 24988  2F71  00C0               	movwf	getMoveTime@mv
 24989  2F72  319C  2491  31A9   	fcall	_getMoveTime
 24990  2F75  0843               	movf	?_getMoveTime+3,w
 24991  2F76  0141               	movlb	1	; select bank1
 24992  2F77  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 24993  2F78  0140               	movlb	0	; select bank0
 24994  2F79  0842               	movf	?_getMoveTime+2,w
 24995  2F7A  0141               	movlb	1	; select bank1
 24996  2F7B  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 24997  2F7C  0140               	movlb	0	; select bank0
 24998  2F7D  0841               	movf	?_getMoveTime+1,w
 24999  2F7E  0141               	movlb	1	; select bank1
 25000  2F7F  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 25001  2F80  0140               	movlb	0	; select bank0
 25002  2F81  0840               	movf	?_getMoveTime,w
 25003  2F82  0141               	movlb	1	; select bank1
 25004  2F83  00CE               	movwf	(?_sprintf^(0+128)+4)
 25005  2F84  31B8  2002  31A9   	fcall	_sprintf
 25006                           
 25007                           ;telas.c: 452: sprintf(str2," Vel: %.2f mm/s",mvTela->Speed);
 25008  2F87  304D               	movlw	low _str2
 25009  2F88  00CA               	movwf	sprintf@wh^(0+128)
 25010  2F89  3001               	movlw	high _str2
 25011  2F8A  00CB               	movwf	(sprintf@wh+1)^(0+128)
 25012  2F8B  3058               	movlw	low (STR_32| (0+32768))
 25013  2F8C  00CC               	movwf	sprintf@f^(0+128)
 25014  2F8D  30E0               	movlw	high (STR_32| (0+32768))
 25015  2F8E  00CD               	movwf	(sprintf@f^(0+128)+1)
 25016  2F8F  0869               	movf	_mvTela^(0+128),w
 25017  2F90  0086               	movwf	6
 25018  2F91  086A               	movf	(_mvTela+1)^(0+128),w
 25019  2F92  0087               	movwf	7
 25020  2F93  3143               	addfsr 1,3
 25021  2F94  3F40               	moviw [0]fsr1
 25022  2F95  00CE               	movwf	(?_sprintf^(0+128)+4)
 25023  2F96  3F41               	moviw [1]fsr1
 25024  2F97  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 25025  2F98  3F42               	moviw [2]fsr1
 25026  2F99  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 25027  2F9A  3F43               	moviw [3]fsr1
 25028  2F9B  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 25029  2F9C  31B8  2002  31A9   	fcall	_sprintf
 25030                           
 25031                           ;telas.c: 453: break;
 25032  2F9F  2FE9               	goto	l11384
 25033  2FA0                     l11378:
 25034                           
 25035                           ;telas.c: 455: sprintf(str1," Tmp:%.2fs",getMoveTime(mvTela));
 25036  2FA0  3054               	movlw	low _str1
 25037  2FA1  00CA               	movwf	sprintf@wh^(0+128)
 25038  2FA2  3002               	movlw	high _str1
 25039  2FA3  00CB               	movwf	(sprintf@wh+1)^(0+128)
 25040  2FA4  3033               	movlw	low (STR_31| (0+32768))
 25041  2FA5  00CC               	movwf	sprintf@f^(0+128)
 25042  2FA6  30E1               	movlw	high (STR_31| (0+32768))
 25043  2FA7  00CD               	movwf	(sprintf@f^(0+128)+1)
 25044  2FA8  086A               	movf	(_mvTela+1)^(0+128),w
 25045  2FA9  0140               	movlb	0	; select bank0
 25046  2FAA  00C1               	movwf	getMoveTime@mv+1
 25047  2FAB  0141               	movlb	1	; select bank1
 25048  2FAC  0869               	movf	_mvTela^(0+128),w
 25049  2FAD  0140               	movlb	0	; select bank0
 25050  2FAE  00C0               	movwf	getMoveTime@mv
 25051  2FAF  319C  2491  31A9   	fcall	_getMoveTime
 25052  2FB2  0843               	movf	?_getMoveTime+3,w
 25053  2FB3  0141               	movlb	1	; select bank1
 25054  2FB4  00D1               	movwf	((?_sprintf+3)^(0+128)+4)
 25055  2FB5  0140               	movlb	0	; select bank0
 25056  2FB6  0842               	movf	?_getMoveTime+2,w
 25057  2FB7  0141               	movlb	1	; select bank1
 25058  2FB8  00D0               	movwf	((?_sprintf+2)^(0+128)+4)
 25059  2FB9  0140               	movlb	0	; select bank0
 25060  2FBA  0841               	movf	?_getMoveTime+1,w
 25061  2FBB  0141               	movlb	1	; select bank1
 25062  2FBC  00CF               	movwf	((?_sprintf+1)^(0+128)+4)
 25063  2FBD  0140               	movlb	0	; select bank0
 25064  2FBE  0840               	movf	?_getMoveTime,w
 25065  2FBF  0141               	movlb	1	; select bank1
 25066  2FC0  00CE               	movwf	(?_sprintf^(0+128)+4)
 25067  2FC1  31B8  2002  31A9   	fcall	_sprintf
 25068                           
 25069                           ;telas.c: 456: sprintf(str2," Acel: %i",(int)(ACC_MIN - mvTela->accel));
 25070  2FC4  304D               	movlw	low _str2
 25071  2FC5  00CA               	movwf	sprintf@wh^(0+128)
 25072  2FC6  3001               	movlw	high _str2
 25073  2FC7  00CB               	movwf	(sprintf@wh+1)^(0+128)
 25074  2FC8  3053               	movlw	low (STR_34| (0+32768))
 25075  2FC9  00CC               	movwf	sprintf@f^(0+128)
 25076  2FCA  30E1               	movlw	high (STR_34| (0+32768))
 25077  2FCB  00CD               	movwf	(sprintf@f^(0+128)+1)
 25078  2FCC  0869               	movf	_mvTela^(0+128),w
 25079  2FCD  0086               	movwf	6
 25080  2FCE  086A               	movf	(_mvTela+1)^(0+128),w
 25081  2FCF  0087               	movwf	7
 25082  2FD0  3142               	addfsr 1,2
 25083  2FD1  3006               	movlw	6
 25084  2FD2  00DC               	movwf	??_navCfgMove^(0+128)
 25085  2FD3  0801               	movf	1,w
 25086  2FD4  025C               	subwf	??_navCfgMove^(0+128),w
 25087  2FD5  00CE               	movwf	(?_sprintf^(0+128)+4)
 25088  2FD6  01CF               	clrf	(?_sprintf^(0+128)+5)
 25089  2FD7  1C03               	skipc
 25090  2FD8  03CF               	decf	((?_sprintf+1)^(0+128)+4),f
 25091  2FD9  31B8  2002  31A9   	fcall	_sprintf
 25092                           
 25093                           ;telas.c: 457: break;
 25094  2FDC  2FE9               	goto	l11384
 25095  2FDD                     l11382:
 25096  2FDD  0141               	movlb	1	; select bank1
 25097  2FDE  0865               	movf	navCfgMove@subTela^(0+128),w
 25098                           
 25099                           ; Switch size 1, requested type "simple"
 25100                           ; Number of cases is 3, Range of values is 0 to 2
 25101                           ; switch strategies available:
 25102                           ; Name         Instructions Cycles
 25103                           ; simple_byte           10     6 (average)
 25104                           ; direct_byte           12     6 (fixed)
 25105                           ; jumptable            260     6 (fixed)
 25106                           ;	Chosen strategy is simple_byte
 25107  2FDF  3A00               	xorlw	0	; case 0
 25108  2FE0  1903               	skipnz
 25109  2FE1  2EA8               	goto	l11360
 25110  2FE2  3A01               	xorlw	1	; case 1
 25111  2FE3  1903               	skipnz
 25112  2FE4  2F63               	goto	l11376
 25113  2FE5  3A03               	xorlw	3	; case 2
 25114  2FE6  1903               	skipnz
 25115  2FE7  2FA0               	goto	l11378
 25116  2FE8  2FE9               	goto	l11384
 25117  2FE9                     l11384:
 25118                           
 25119                           ;telas.c: 459: escreve_LCD(1,1,str1);
 25120  2FE9  0140               	movlb	0	; select bank0
 25121  2FEA  01A0               	clrf	escreve_LCD@coluna
 25122  2FEB  0AA0               	incf	escreve_LCD@coluna,f
 25123  2FEC  3054               	movlw	low _str1
 25124  2FED  00A1               	movwf	escreve_LCD@str
 25125  2FEE  3002               	movlw	high _str1
 25126  2FEF  00A2               	movwf	escreve_LCD@str+1
 25127  2FF0  3001               	movlw	1
 25128  2FF1  31D2  22E7  31A9   	fcall	_escreve_LCD
 25129                           
 25130                           ;telas.c: 460: escreve_LCD(2,1,str2);
 25131  2FF4  0140               	movlb	0	; select bank0
 25132  2FF5  01A0               	clrf	escreve_LCD@coluna
 25133  2FF6  0AA0               	incf	escreve_LCD@coluna,f
 25134  2FF7  304D               	movlw	low _str2
 25135  2FF8  00A1               	movwf	escreve_LCD@str
 25136  2FF9  3001               	movlw	high _str2
 25137  2FFA  00A2               	movwf	escreve_LCD@str+1
 25138  2FFB  3002               	movlw	2
 25139  2FFC  31D2  22E7  31A9   	fcall	_escreve_LCD
 25140  2FFF  299C               	goto	l11226
 25141  3000                     __end_of_navCfgMove:
 25142                           
 25143                           	psect	text3
 25144  3802                     __ptext3:	
 25145 ;; *************** function _sprintf *****************
 25146 ;; Defined at:
 25147 ;;		line 13 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\sprintf.c"
 25148 ;; Parameters:    Size  Location     Type
 25149 ;;  wh              2   42[BANK1 ] PTR unsigned char 
 25150 ;;		 -> str2(20), str1(20), str(20), 
 25151 ;;  f               2   44[BANK1 ] PTR const unsigned char 
 25152 ;;		 -> STR_48(2), STR_47(15), STR_46(2), STR_45(10), 
 25153 ;;		 -> STR_44(6), STR_43(13), STR_42(15), STR_41(11), 
 25154 ;;		 -> STR_40(15), STR_39(12), STR_38(15), STR_37(14), 
 25155 ;;		 -> STR_36(15), STR_35(14), STR_34(10), STR_33(11), 
 25156 ;;		 -> STR_32(16), STR_31(11), STR_30(15), STR_29(16), 
 25157 ;;		 -> STR_28(17), STR_26(12), STR_25(21), STR_9(14), 
 25158 ;;		 -> STR_7(12), STR_6(12), STR_3(13), 
 25159 ;; Auto vars:     Size  Location     Type
 25160 ;;  pb              4   56[BANK1 ] struct __prbuf
 25161 ;;  ap              1   55[BANK1 ] PTR void [1]
 25162 ;;		 -> ?_sprintf(2), ?_printf(2), 
 25163 ;; Return value:  Size  Location     Type
 25164 ;;                  2   42[BANK1 ] int 
 25165 ;; Registers used:
 25166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25167 ;; Tracked objects:
 25168 ;;		On entry : 3F/1
 25169 ;;		On exit  : 3F/1
 25170 ;;		Unchanged: 0/0
 25171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25172 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25173 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25174 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25175 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25176 ;;Total ram usage:       18 bytes
 25177 ;; Hardware stack levels used: 1
 25178 ;; Hardware stack levels required when called: unknown (due to recursion)
 25179 ;; This function calls:
 25180 ;;		__doprnt
 25181 ;; This function is called by:
 25182 ;;		_main
 25183 ;;		_navCfgMove
 25184 ;;		_navTelas
 25185 ;; This function uses a non-reentrant model
 25186 ;;
 25187                           
 25188  3802                     _sprintf:	
 25189                           ;psect for function _sprintf
 25190                           
 25191                           
 25192                           ;incstack = 0
 25193                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25194  3802  084B               	movf	(sprintf@wh+1)^(0+128),w
 25195  3803  00D9               	movwf	(sprintf@pb+1)^(0+128)
 25196  3804  084A               	movf	sprintf@wh^(0+128),w
 25197  3805  00D8               	movwf	sprintf@pb^(0+128)
 25198  3806  01DA               	clrf	(low ((sprintf@pb| 0+2)))^(0+128)
 25199  3807  01DB               	clrf	((low ((sprintf@pb| 0+2))+1))^(0+128)
 25200  3808  30CE               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 25201  3809  00D6               	movwf	??_sprintf^(0+128)
 25202  380A  0856               	movf	??_sprintf^(0+128),w
 25203  380B  00D7               	movwf	sprintf@ap^(0+128)
 25204  380C  084D               	movf	(sprintf@f+1)^(0+128),w
 25205  380D  0140               	movlb	0	; select bank0
 25206  380E  00EE               	movwf	__doprnt@f+1
 25207  380F  0141               	movlb	1	; select bank1
 25208  3810  084C               	movf	sprintf@f^(0+128),w
 25209  3811  0140               	movlb	0	; select bank0
 25210  3812  00ED               	movwf	__doprnt@f
 25211  3813  30D7               	movlw	(low (sprintf@ap| 0))& (0+255)
 25212  3814  0141               	movlb	1	; select bank1
 25213  3815  00D6               	movwf	??_sprintf^(0+128)
 25214  3816  0856               	movf	??_sprintf^(0+128),w
 25215  3817  0140               	movlb	0	; select bank0
 25216  3818  00EF               	movwf	__doprnt@ap
 25217  3819  30D8               	movlw	(low (sprintf@pb| 0))& (0+255)
 25218  381A  31A0  205D         	fcall	__doprnt
 25219  381C  0141               	movlb	1	; select bank1
 25220  381D  0858               	movf	sprintf@pb^(0+128),w
 25221  381E  0086               	movwf	6
 25222  381F  0859               	movf	(sprintf@pb+1)^(0+128),w
 25223  3820  0087               	movwf	7
 25224  3821  0181               	clrf	1
 25225  3822  0008               	return
 25226  3823                     __end_of_sprintf:
 25227                           
 25228                           	psect	text4
 25229  3823                     __ptext4:	
 25230 ;; *************** function _getFrontTableSpeed *****************
 25231 ;; Defined at:
 25232 ;;		line 586 in file "cnc.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;  mv              2   14[BANK0 ] PTR struct .
 25235 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 25236 ;;		 -> step(248), 
 25237 ;; Auto vars:     Size  Location     Type
 25238 ;;  count           4   34[BANK0 ] long 
 25239 ;;  ini             4   30[BANK0 ] long 
 25240 ;;  len             4   26[BANK0 ] long 
 25241 ;;  i               4   22[BANK0 ] long 
 25242 ;; Return value:  Size  Location     Type
 25243 ;;                  4   14[BANK0 ] long 
 25244 ;; Registers used:
 25245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25246 ;; Tracked objects:
 25247 ;;		On entry : 3F/0
 25248 ;;		On exit  : 3F/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25252 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25254 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25255 ;;Total ram usage:       24 bytes
 25256 ;; Hardware stack levels used: 1
 25257 ;; Hardware stack levels required when called: unknown (due to recursion)
 25258 ;; This function calls:
 25259 ;;		___aldiv
 25260 ;;		_getAccelTable
 25261 ;; This function is called by:
 25262 ;;		_navCfgMove
 25263 ;; This function uses a non-reentrant model
 25264 ;;
 25265                           
 25266  3823                     _getFrontTableSpeed:	
 25267                           ;psect for function _getFrontTableSpeed
 25268                           
 25269                           
 25270                           ;cnc.c: 588: long count = mv->toCruise;
 25271                           
 25272                           ;incstack = 0
 25273                           ; Regs used in _getFrontTableSpeed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25274  3823  082E               	movf	getFrontTableSpeed@mv,w
 25275  3824  0086               	movwf	6
 25276  3825  082F               	movf	getFrontTableSpeed@mv+1,w
 25277  3826  0087               	movwf	7
 25278  3827  315F               	addfsr 1,31
 25279  3828  3F40               	moviw [0]fsr1
 25280  3829  00C2               	movwf	getFrontTableSpeed@count
 25281  382A  3F41               	moviw [1]fsr1
 25282  382B  00C3               	movwf	getFrontTableSpeed@count+1
 25283  382C  3F42               	moviw [2]fsr1
 25284  382D  00C4               	movwf	getFrontTableSpeed@count+2
 25285  382E  3F43               	moviw [3]fsr1
 25286  382F  00C5               	movwf	getFrontTableSpeed@count+3
 25287                           
 25288                           ;cnc.c: 589: long ini = (long)getAccelTable(&mv->accel, &count);
 25289  3830  082E               	movf	getFrontTableSpeed@mv,w
 25290  3831  3E02               	addlw	2
 25291  3832  00F1               	movwf	getAccelTable@accel
 25292  3833  3000               	movlw	0
 25293  3834  3D2F               	addwfc	getFrontTableSpeed@mv+1,w
 25294  3835  00F2               	movwf	getAccelTable@accel+1
 25295  3836  3042               	movlw	(low (getFrontTableSpeed@count| 0))& (0+255)
 25296  3837  00B2               	movwf	??_getFrontTableSpeed
 25297  3838  0832               	movf	??_getFrontTableSpeed,w
 25298  3839  00F3               	movwf	getAccelTable@i
 25299  383A  31C8  205A  31B8   	fcall	_getAccelTable
 25300  383D  0871               	movf	?_getAccelTable,w
 25301  383E  0140               	movlb	0	; select bank0
 25302  383F  00BE               	movwf	getFrontTableSpeed@ini
 25303  3840  0872               	movf	?_getAccelTable+1,w
 25304  3841  00BF               	movwf	getFrontTableSpeed@ini+1
 25305  3842  01C0               	clrf	getFrontTableSpeed@ini+2
 25306  3843  01C1               	clrf	getFrontTableSpeed@ini+3
 25307                           
 25308                           ;cnc.c: 590: long i = ini;
 25309  3844  0841               	movf	getFrontTableSpeed@ini+3,w
 25310  3845  00B9               	movwf	getFrontTableSpeed@i+3
 25311  3846  0840               	movf	getFrontTableSpeed@ini+2,w
 25312  3847  00B8               	movwf	getFrontTableSpeed@i+2
 25313  3848  083F               	movf	getFrontTableSpeed@ini+1,w
 25314  3849  00B7               	movwf	getFrontTableSpeed@i+1
 25315  384A  083E               	movf	getFrontTableSpeed@ini,w
 25316  384B  00B6               	movwf	getFrontTableSpeed@i
 25317                           
 25318                           ;cnc.c: 591: long len = (((3560) < (mv->dist/2)) ? (3560) : (mv->dist/2));
 25319  384C  3000               	movlw	0
 25320  384D  00A3               	movwf	___aldiv@divisor+3
 25321  384E  3000               	movlw	0
 25322  384F  00A2               	movwf	___aldiv@divisor+2
 25323  3850  3000               	movlw	0
 25324  3851  00A1               	movwf	___aldiv@divisor+1
 25325  3852  3002               	movlw	2
 25326  3853  00A0               	movwf	___aldiv@divisor
 25327  3854  082E               	movf	getFrontTableSpeed@mv,w
 25328  3855  0086               	movwf	6
 25329  3856  082F               	movf	getFrontTableSpeed@mv+1,w
 25330  3857  0087               	movwf	7
 25331  3858  315B               	addfsr 1,27
 25332  3859  3F40               	moviw [0]fsr1
 25333  385A  00A4               	movwf	___aldiv@dividend
 25334  385B  3F41               	moviw [1]fsr1
 25335  385C  00A5               	movwf	___aldiv@dividend+1
 25336  385D  3F42               	moviw [2]fsr1
 25337  385E  00A6               	movwf	___aldiv@dividend+2
 25338  385F  3F43               	moviw [3]fsr1
 25339  3860  00A7               	movwf	___aldiv@dividend+3
 25340  3861  31C9  2155  31B8   	fcall	___aldiv
 25341  3864  1BA3               	btfsc	?___aldiv+3,7
 25342  3865  2872               	goto	l10734
 25343  3866  0823               	movf	?___aldiv+3,w
 25344  3867  1D03               	btfss	3,2
 25345  3868  2893               	goto	l10736
 25346  3869  0822               	movf	?___aldiv+2,w
 25347  386A  1D03               	btfss	3,2
 25348  386B  2893               	goto	l10736
 25349  386C  30E9               	movlw	233
 25350  386D  0220               	subwf	?___aldiv,w
 25351  386E  300D               	movlw	13
 25352  386F  3B21               	subwfb	?___aldiv+1,w
 25353  3870  1803               	btfsc	3,0
 25354  3871  2893               	goto	l10736
 25355  3872                     l10734:
 25356  3872  3000               	movlw	0
 25357  3873  0140               	movlb	0	; select bank0
 25358  3874  00A3               	movwf	___aldiv@divisor+3
 25359  3875  3000               	movlw	0
 25360  3876  00A2               	movwf	___aldiv@divisor+2
 25361  3877  3000               	movlw	0
 25362  3878  00A1               	movwf	___aldiv@divisor+1
 25363  3879  3002               	movlw	2
 25364  387A  00A0               	movwf	___aldiv@divisor
 25365  387B  082E               	movf	getFrontTableSpeed@mv,w
 25366  387C  0086               	movwf	6
 25367  387D  082F               	movf	getFrontTableSpeed@mv+1,w
 25368  387E  0087               	movwf	7
 25369  387F  315B               	addfsr 1,27
 25370  3880  3F40               	moviw [0]fsr1
 25371  3881  00A4               	movwf	___aldiv@dividend
 25372  3882  3F41               	moviw [1]fsr1
 25373  3883  00A5               	movwf	___aldiv@dividend+1
 25374  3884  3F42               	moviw [2]fsr1
 25375  3885  00A6               	movwf	___aldiv@dividend+2
 25376  3886  3F43               	moviw [3]fsr1
 25377  3887  00A7               	movwf	___aldiv@dividend+3
 25378  3888  31C9  2155  31B8   	fcall	___aldiv
 25379  388B  0823               	movf	?___aldiv+3,w
 25380  388C  00BD               	movwf	getFrontTableSpeed@len+3
 25381  388D  0822               	movf	?___aldiv+2,w
 25382  388E  00BC               	movwf	getFrontTableSpeed@len+2
 25383  388F  0821               	movf	?___aldiv+1,w
 25384  3890  00BB               	movwf	getFrontTableSpeed@len+1
 25385  3891  0820               	movf	?___aldiv,w
 25386  3892  289B               	goto	L7
 25387  3893                     l10736:
 25388  3893  3000               	movlw	0
 25389  3894  0140               	movlb	0	; select bank0
 25390  3895  00BD               	movwf	getFrontTableSpeed@len+3
 25391  3896  3000               	movlw	0
 25392  3897  00BC               	movwf	getFrontTableSpeed@len+2
 25393  3898  300D               	movlw	13
 25394  3899  00BB               	movwf	getFrontTableSpeed@len+1
 25395  389A  30E8               	movlw	232
 25396  389B                     L7:
 25397  389B  00BA               	movwf	getFrontTableSpeed@len
 25398  389C  28DD               	goto	l10742
 25399  389D                     l10744:
 25400  389D  0845               	movf	getFrontTableSpeed@count+3,w
 25401  389E  3A80               	xorlw	128
 25402  389F  00B2               	movwf	??_getFrontTableSpeed
 25403  38A0  083D               	movf	getFrontTableSpeed@len+3,w
 25404  38A1  3A80               	xorlw	128
 25405  38A2  0232               	subwf	??_getFrontTableSpeed,w
 25406  38A3  1D03               	skipz
 25407  38A4  28AF               	goto	u12373
 25408  38A5  083C               	movf	getFrontTableSpeed@len+2,w
 25409  38A6  0244               	subwf	getFrontTableSpeed@count+2,w
 25410  38A7  1D03               	skipz
 25411  38A8  28AF               	goto	u12373
 25412  38A9  083B               	movf	getFrontTableSpeed@len+1,w
 25413  38AA  0243               	subwf	getFrontTableSpeed@count+1,w
 25414  38AB  1D03               	skipz
 25415  38AC  28AF               	goto	u12373
 25416  38AD  083A               	movf	getFrontTableSpeed@len,w
 25417  38AE  0242               	subwf	getFrontTableSpeed@count,w
 25418  38AF                     u12373:
 25419  38AF  1803               	btfsc	3,0
 25420  38B0  28ED               	goto	l10746
 25421                           
 25422                           ;cnc.c: 594: count = count + 1;
 25423  38B1  3001               	movlw	1
 25424  38B2  00B2               	movwf	??_getFrontTableSpeed
 25425  38B3  3000               	movlw	0
 25426  38B4  00B3               	movwf	??_getFrontTableSpeed+1
 25427  38B5  3000               	movlw	0
 25428  38B6  00B4               	movwf	??_getFrontTableSpeed+2
 25429  38B7  3000               	movlw	0
 25430  38B8  00B5               	movwf	??_getFrontTableSpeed+3
 25431  38B9  0842               	movf	getFrontTableSpeed@count,w
 25432  38BA  07B2               	addwf	??_getFrontTableSpeed,f
 25433  38BB  0843               	movf	getFrontTableSpeed@count+1,w
 25434  38BC  3DB3               	addwfc	??_getFrontTableSpeed+1,f
 25435  38BD  0844               	movf	getFrontTableSpeed@count+2,w
 25436  38BE  3DB4               	addwfc	??_getFrontTableSpeed+2,f
 25437  38BF  0845               	movf	getFrontTableSpeed@count+3,w
 25438  38C0  3DB5               	addwfc	??_getFrontTableSpeed+3,f
 25439  38C1  0835               	movf	??_getFrontTableSpeed+3,w
 25440  38C2  00C5               	movwf	getFrontTableSpeed@count+3
 25441  38C3  0834               	movf	??_getFrontTableSpeed+2,w
 25442  38C4  00C4               	movwf	getFrontTableSpeed@count+2
 25443  38C5  0833               	movf	??_getFrontTableSpeed+1,w
 25444  38C6  00C3               	movwf	getFrontTableSpeed@count+1
 25445  38C7  0832               	movf	??_getFrontTableSpeed,w
 25446  38C8  00C2               	movwf	getFrontTableSpeed@count
 25447                           
 25448                           ;cnc.c: 595: i = (long)getAccelTable(&mv->accel, &count);
 25449  38C9  082E               	movf	getFrontTableSpeed@mv,w
 25450  38CA  3E02               	addlw	2
 25451  38CB  00F1               	movwf	getAccelTable@accel
 25452  38CC  3000               	movlw	0
 25453  38CD  3D2F               	addwfc	getFrontTableSpeed@mv+1,w
 25454  38CE  00F2               	movwf	getAccelTable@accel+1
 25455  38CF  3042               	movlw	(low (getFrontTableSpeed@count| 0))& (0+255)
 25456  38D0  00B2               	movwf	??_getFrontTableSpeed
 25457  38D1  0832               	movf	??_getFrontTableSpeed,w
 25458  38D2  00F3               	movwf	getAccelTable@i
 25459  38D3  31C8  205A  31B8   	fcall	_getAccelTable
 25460  38D6  0871               	movf	?_getAccelTable,w
 25461  38D7  0140               	movlb	0	; select bank0
 25462  38D8  00B6               	movwf	getFrontTableSpeed@i
 25463  38D9  0872               	movf	?_getAccelTable+1,w
 25464  38DA  00B7               	movwf	getFrontTableSpeed@i+1
 25465  38DB  01B8               	clrf	getFrontTableSpeed@i+2
 25466  38DC  01B9               	clrf	getFrontTableSpeed@i+3
 25467  38DD                     l10742:
 25468  38DD  0841               	movf	getFrontTableSpeed@ini+3,w
 25469  38DE  0639               	xorwf	getFrontTableSpeed@i+3,w
 25470  38DF  1D03               	skipz
 25471  38E0  28EB               	goto	u12365
 25472  38E1  0840               	movf	getFrontTableSpeed@ini+2,w
 25473  38E2  0638               	xorwf	getFrontTableSpeed@i+2,w
 25474  38E3  1D03               	skipz
 25475  38E4  28EB               	goto	u12365
 25476  38E5  083F               	movf	getFrontTableSpeed@ini+1,w
 25477  38E6  0637               	xorwf	getFrontTableSpeed@i+1,w
 25478  38E7  1D03               	skipz
 25479  38E8  28EB               	goto	u12365
 25480  38E9  083E               	movf	getFrontTableSpeed@ini,w
 25481  38EA  0636               	xorwf	getFrontTableSpeed@i,w
 25482  38EB                     u12365:
 25483  38EB  1903               	btfsc	3,2
 25484  38EC  289D               	goto	l10744
 25485  38ED                     l10746:
 25486                           
 25487                           ;cnc.c: 596: };cnc.c: 598: return count;
 25488  38ED  0845               	movf	getFrontTableSpeed@count+3,w
 25489  38EE  00B1               	movwf	?_getFrontTableSpeed+3
 25490  38EF  0844               	movf	getFrontTableSpeed@count+2,w
 25491  38F0  00B0               	movwf	?_getFrontTableSpeed+2
 25492  38F1  0843               	movf	getFrontTableSpeed@count+1,w
 25493  38F2  00AF               	movwf	?_getFrontTableSpeed+1
 25494  38F3  0842               	movf	getFrontTableSpeed@count,w
 25495  38F4  00AE               	movwf	?_getFrontTableSpeed
 25496  38F5  0008               	return
 25497  38F6                     __end_of_getFrontTableSpeed:
 25498                           
 25499                           	psect	text5
 25500  49D6                     __ptext5:	
 25501 ;; *************** function _getBackTableSpeed *****************
 25502 ;; Defined at:
 25503 ;;		line 602 in file "cnc.c"
 25504 ;; Parameters:    Size  Location     Type
 25505 ;;  mv              2    8[COMMON] PTR struct .
 25506 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 25507 ;;		 -> step(248), 
 25508 ;; Auto vars:     Size  Location     Type
 25509 ;;  count           4   12[BANK0 ] long 
 25510 ;;  ini             4    8[BANK0 ] long 
 25511 ;;  i               4    4[BANK0 ] long 
 25512 ;; Return value:  Size  Location     Type
 25513 ;;                  4    8[COMMON] long 
 25514 ;; Registers used:
 25515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25516 ;; Tracked objects:
 25517 ;;		On entry : 3F/1
 25518 ;;		On exit  : 3F/0
 25519 ;;		Unchanged: 0/0
 25520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25522 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25524 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25525 ;;Total ram usage:       20 bytes
 25526 ;; Hardware stack levels used: 1
 25527 ;; Hardware stack levels required when called: unknown (due to recursion)
 25528 ;; This function calls:
 25529 ;;		_getAccelTable
 25530 ;; This function is called by:
 25531 ;;		_navCfgMove
 25532 ;; This function uses a non-reentrant model
 25533 ;;
 25534                           
 25535  49D6                     _getBackTableSpeed:	
 25536                           ;psect for function _getBackTableSpeed
 25537                           
 25538                           
 25539                           ;cnc.c: 604: long count = mv->toCruise;
 25540                           
 25541                           ;incstack = 0
 25542                           ; Regs used in _getBackTableSpeed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25543  49D6  0878               	movf	getBackTableSpeed@mv,w
 25544  49D7  0086               	movwf	6
 25545  49D8  0879               	movf	getBackTableSpeed@mv+1,w
 25546  49D9  0087               	movwf	7
 25547  49DA  315F               	addfsr 1,31
 25548  49DB  3F40               	moviw [0]fsr1
 25549  49DC  0140               	movlb	0	; select bank0
 25550  49DD  00AC               	movwf	getBackTableSpeed@count
 25551  49DE  3F41               	moviw [1]fsr1
 25552  49DF  00AD               	movwf	getBackTableSpeed@count+1
 25553  49E0  3F42               	moviw [2]fsr1
 25554  49E1  00AE               	movwf	getBackTableSpeed@count+2
 25555  49E2  3F43               	moviw [3]fsr1
 25556  49E3  00AF               	movwf	getBackTableSpeed@count+3
 25557                           
 25558                           ;cnc.c: 605: long ini = (long)getAccelTable(&mv->accel, &count);
 25559  49E4  0878               	movf	getBackTableSpeed@mv,w
 25560  49E5  3E02               	addlw	2
 25561  49E6  00F1               	movwf	getAccelTable@accel
 25562  49E7  3000               	movlw	0
 25563  49E8  3D79               	addwfc	getBackTableSpeed@mv+1,w
 25564  49E9  00F2               	movwf	getAccelTable@accel+1
 25565  49EA  302C               	movlw	(low (getBackTableSpeed@count| 0))& (0+255)
 25566  49EB  00A0               	movwf	??_getBackTableSpeed
 25567  49EC  0820               	movf	??_getBackTableSpeed,w
 25568  49ED  00F3               	movwf	getAccelTable@i
 25569  49EE  31C8  205A  31C9   	fcall	_getAccelTable
 25570  49F1  0871               	movf	?_getAccelTable,w
 25571  49F2  0140               	movlb	0	; select bank0
 25572  49F3  00A8               	movwf	getBackTableSpeed@ini
 25573  49F4  0872               	movf	?_getAccelTable+1,w
 25574  49F5  00A9               	movwf	getBackTableSpeed@ini+1
 25575  49F6  01AA               	clrf	getBackTableSpeed@ini+2
 25576  49F7  01AB               	clrf	getBackTableSpeed@ini+3
 25577                           
 25578                           ;cnc.c: 606: long i = ini;
 25579  49F8  082B               	movf	getBackTableSpeed@ini+3,w
 25580  49F9  00A7               	movwf	getBackTableSpeed@i+3
 25581  49FA  082A               	movf	getBackTableSpeed@ini+2,w
 25582  49FB  00A6               	movwf	getBackTableSpeed@i+2
 25583  49FC  0829               	movf	getBackTableSpeed@ini+1,w
 25584  49FD  00A5               	movwf	getBackTableSpeed@i+1
 25585  49FE  0828               	movf	getBackTableSpeed@ini,w
 25586  49FF  00A4               	movwf	getBackTableSpeed@i
 25587                           
 25588                           ;cnc.c: 608: while(i == ini && count > 0){
 25589  4A00  2A3D               	goto	l10760
 25590  4A01                     l10762:
 25591  4A01  1BAF               	btfsc	getBackTableSpeed@count+3,7
 25592  4A02  2A4D               	goto	l10764
 25593  4A03  082F               	movf	getBackTableSpeed@count+3,w
 25594  4A04  1D03               	btfss	3,2
 25595  4A05  2A10               	goto	l10756
 25596  4A06  082E               	movf	getBackTableSpeed@count+2,w
 25597  4A07  1D03               	btfss	3,2
 25598  4A08  2A10               	goto	l10756
 25599  4A09  082D               	movf	getBackTableSpeed@count+1,w
 25600  4A0A  1D03               	btfss	3,2
 25601  4A0B  2A10               	goto	l10756
 25602  4A0C  3001               	movlw	1
 25603  4A0D  022C               	subwf	getBackTableSpeed@count,w
 25604  4A0E  1C03               	btfss	3,0
 25605  4A0F  2A4D               	goto	l10764
 25606  4A10                     l10756:
 25607                           
 25608                           ;cnc.c: 609: count = count - 1;
 25609  4A10  30FF               	movlw	255
 25610  4A11  0140               	movlb	0	; select bank0
 25611  4A12  00A0               	movwf	??_getBackTableSpeed
 25612  4A13  30FF               	movlw	255
 25613  4A14  00A1               	movwf	??_getBackTableSpeed+1
 25614  4A15  30FF               	movlw	255
 25615  4A16  00A2               	movwf	??_getBackTableSpeed+2
 25616  4A17  30FF               	movlw	255
 25617  4A18  00A3               	movwf	??_getBackTableSpeed+3
 25618  4A19  082C               	movf	getBackTableSpeed@count,w
 25619  4A1A  07A0               	addwf	??_getBackTableSpeed,f
 25620  4A1B  082D               	movf	getBackTableSpeed@count+1,w
 25621  4A1C  3DA1               	addwfc	??_getBackTableSpeed+1,f
 25622  4A1D  082E               	movf	getBackTableSpeed@count+2,w
 25623  4A1E  3DA2               	addwfc	??_getBackTableSpeed+2,f
 25624  4A1F  082F               	movf	getBackTableSpeed@count+3,w
 25625  4A20  3DA3               	addwfc	??_getBackTableSpeed+3,f
 25626  4A21  0823               	movf	??_getBackTableSpeed+3,w
 25627  4A22  00AF               	movwf	getBackTableSpeed@count+3
 25628  4A23  0822               	movf	??_getBackTableSpeed+2,w
 25629  4A24  00AE               	movwf	getBackTableSpeed@count+2
 25630  4A25  0821               	movf	??_getBackTableSpeed+1,w
 25631  4A26  00AD               	movwf	getBackTableSpeed@count+1
 25632  4A27  0820               	movf	??_getBackTableSpeed,w
 25633  4A28  00AC               	movwf	getBackTableSpeed@count
 25634                           
 25635                           ;cnc.c: 610: i = (long)getAccelTable(&mv->accel, &count);
 25636  4A29  0878               	movf	getBackTableSpeed@mv,w
 25637  4A2A  3E02               	addlw	2
 25638  4A2B  00F1               	movwf	getAccelTable@accel
 25639  4A2C  3000               	movlw	0
 25640  4A2D  3D79               	addwfc	getBackTableSpeed@mv+1,w
 25641  4A2E  00F2               	movwf	getAccelTable@accel+1
 25642  4A2F  302C               	movlw	(low (getBackTableSpeed@count| 0))& (0+255)
 25643  4A30  00A0               	movwf	??_getBackTableSpeed
 25644  4A31  0820               	movf	??_getBackTableSpeed,w
 25645  4A32  00F3               	movwf	getAccelTable@i
 25646  4A33  31C8  205A  31C9   	fcall	_getAccelTable
 25647  4A36  0871               	movf	?_getAccelTable,w
 25648  4A37  0140               	movlb	0	; select bank0
 25649  4A38  00A4               	movwf	getBackTableSpeed@i
 25650  4A39  0872               	movf	?_getAccelTable+1,w
 25651  4A3A  00A5               	movwf	getBackTableSpeed@i+1
 25652  4A3B  01A6               	clrf	getBackTableSpeed@i+2
 25653  4A3C  01A7               	clrf	getBackTableSpeed@i+3
 25654  4A3D                     l10760:
 25655  4A3D  082B               	movf	getBackTableSpeed@ini+3,w
 25656  4A3E  0627               	xorwf	getBackTableSpeed@i+3,w
 25657  4A3F  1D03               	skipz
 25658  4A40  2A4B               	goto	u12385
 25659  4A41  082A               	movf	getBackTableSpeed@ini+2,w
 25660  4A42  0626               	xorwf	getBackTableSpeed@i+2,w
 25661  4A43  1D03               	skipz
 25662  4A44  2A4B               	goto	u12385
 25663  4A45  0829               	movf	getBackTableSpeed@ini+1,w
 25664  4A46  0625               	xorwf	getBackTableSpeed@i+1,w
 25665  4A47  1D03               	skipz
 25666  4A48  2A4B               	goto	u12385
 25667  4A49  0828               	movf	getBackTableSpeed@ini,w
 25668  4A4A  0624               	xorwf	getBackTableSpeed@i,w
 25669  4A4B                     u12385:
 25670  4A4B  1903               	btfsc	3,2
 25671  4A4C  2A01               	goto	l10762
 25672  4A4D                     l10764:
 25673                           
 25674                           ;cnc.c: 612: };cnc.c: 614: return count;
 25675  4A4D  0140               	movlb	0	; select bank0
 25676  4A4E  082F               	movf	getBackTableSpeed@count+3,w
 25677  4A4F  00FB               	movwf	?_getBackTableSpeed+3
 25678  4A50  082E               	movf	getBackTableSpeed@count+2,w
 25679  4A51  00FA               	movwf	?_getBackTableSpeed+2
 25680  4A52  082D               	movf	getBackTableSpeed@count+1,w
 25681  4A53  00F9               	movwf	?_getBackTableSpeed+1
 25682  4A54  082C               	movf	getBackTableSpeed@count,w
 25683  4A55  00F8               	movwf	?_getBackTableSpeed
 25684  4A56  0008               	return
 25685  4A57                     __end_of_getBackTableSpeed:
 25686                           
 25687                           	psect	text6
 25688  578D                     __ptext6:	
 25689 ;; *************** function _cncSetPosStop *****************
 25690 ;; Defined at:
 25691 ;;		line 131 in file "cnc.c"
 25692 ;; Parameters:    Size  Location     Type
 25693 ;;  stop            4   36[BANK1 ] float 
 25694 ;; Auto vars:     Size  Location     Type
 25695 ;;		None
 25696 ;; Return value:  Size  Location     Type
 25697 ;;                  1    wreg      void 
 25698 ;; Registers used:
 25699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25700 ;; Tracked objects:
 25701 ;;		On entry : 3F/1
 25702 ;;		On exit  : 3F/1
 25703 ;;		Unchanged: 0/0
 25704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25705 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25708 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25709 ;;Total ram usage:        4 bytes
 25710 ;; Hardware stack levels used: 1
 25711 ;; Hardware stack levels required when called: unknown (due to recursion)
 25712 ;; This function calls:
 25713 ;;		___flge
 25714 ;;		_cncSetPos
 25715 ;; This function is called by:
 25716 ;;		_navCfgMove
 25717 ;; This function uses a non-reentrant model
 25718 ;;
 25719                           
 25720  578D                     _cncSetPosStop:	
 25721                           ;psect for function _cncSetPosStop
 25722                           
 25723                           
 25724                           ;cnc.c: 132: if(stop > cnc.max.mm.Pos)
 25725                           
 25726                           ;incstack = 0
 25727                           ; Regs used in _cncSetPosStop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25728  578D  3028               	movlw	40
 25729  578E  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25730  578F  0086               	movwf	6
 25731  5790  3001               	movlw	1	; select bank3/4
 25732  5791  0087               	movwf	7
 25733  5792  3F40               	moviw [0]fsr1
 25734  5793  00A0               	movwf	___flge@ff1^(0+128)
 25735  5794  3F41               	moviw [1]fsr1
 25736  5795  00A1               	movwf	(___flge@ff1+1)^(0+128)
 25737  5796  3F42               	moviw [2]fsr1
 25738  5797  00A2               	movwf	(___flge@ff1+2)^(0+128)
 25739  5798  3F43               	moviw [3]fsr1
 25740  5799  00A3               	movwf	(___flge@ff1+3)^(0+128)
 25741  579A  0847               	movf	(cncSetPosStop@stop+3)^(0+128),w
 25742  579B  00A7               	movwf	(___flge@ff2+3)^(0+128)
 25743  579C  0846               	movf	(cncSetPosStop@stop+2)^(0+128),w
 25744  579D  00A6               	movwf	(___flge@ff2+2)^(0+128)
 25745  579E  0845               	movf	(cncSetPosStop@stop+1)^(0+128),w
 25746  579F  00A5               	movwf	(___flge@ff2+1)^(0+128)
 25747  57A0  0844               	movf	cncSetPosStop@stop^(0+128),w
 25748  57A1  00A4               	movwf	___flge@ff2^(0+128)
 25749  57A2  31CD  2551  31D7   	fcall	___flge
 25750  57A5  1803               	btfsc	3,0
 25751  57A6  2FB4               	goto	l10720
 25752                           
 25753                           ;cnc.c: 133: stop = cnc.max.mm.Pos;
 25754  57A7  3028               	movlw	40
 25755  57A8  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25756  57A9  0086               	movwf	6
 25757  57AA  3001               	movlw	1	; select bank3/4
 25758  57AB  0087               	movwf	7
 25759  57AC  3F40               	moviw [0]fsr1
 25760  57AD  00C4               	movwf	cncSetPosStop@stop^(0+128)
 25761  57AE  3F41               	moviw [1]fsr1
 25762  57AF  00C5               	movwf	(cncSetPosStop@stop+1)^(0+128)
 25763  57B0  3F42               	moviw [2]fsr1
 25764  57B1  00C6               	movwf	(cncSetPosStop@stop+2)^(0+128)
 25765  57B2  3F43               	moviw [3]fsr1
 25766  57B3  00C7               	movwf	(cncSetPosStop@stop+3)^(0+128)
 25767  57B4                     l10720:
 25768                           
 25769                           ;cnc.c: 134: if(stop < cnc.pos.Start)
 25770  57B4  0847               	movf	(cncSetPosStop@stop+3)^(0+128),w
 25771  57B5  00A3               	movwf	(___flge@ff1+3)^(0+128)
 25772  57B6  0846               	movf	(cncSetPosStop@stop+2)^(0+128),w
 25773  57B7  00A2               	movwf	(___flge@ff1+2)^(0+128)
 25774  57B8  0845               	movf	(cncSetPosStop@stop+1)^(0+128),w
 25775  57B9  00A1               	movwf	(___flge@ff1+1)^(0+128)
 25776  57BA  0844               	movf	cncSetPosStop@stop^(0+128),w
 25777  57BB  00A0               	movwf	___flge@ff1^(0+128)
 25778  57BC  303C               	movlw	60
 25779  57BD  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25780  57BE  0086               	movwf	6
 25781  57BF  3001               	movlw	1	; select bank3/4
 25782  57C0  0087               	movwf	7
 25783  57C1  3F40               	moviw [0]fsr1
 25784  57C2  00A4               	movwf	___flge@ff2^(0+128)
 25785  57C3  3F41               	moviw [1]fsr1
 25786  57C4  00A5               	movwf	(___flge@ff2+1)^(0+128)
 25787  57C5  3F42               	moviw [2]fsr1
 25788  57C6  00A6               	movwf	(___flge@ff2+2)^(0+128)
 25789  57C7  3F43               	moviw [3]fsr1
 25790  57C8  00A7               	movwf	(___flge@ff2+3)^(0+128)
 25791  57C9  31CD  2551  31D7   	fcall	___flge
 25792  57CC  1803               	btfsc	3,0
 25793  57CD  2FDB               	goto	l10724
 25794                           
 25795                           ;cnc.c: 135: stop = cnc.pos.Start;
 25796  57CE  303C               	movlw	60
 25797  57CF  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25798  57D0  0086               	movwf	6
 25799  57D1  3001               	movlw	1	; select bank3/4
 25800  57D2  0087               	movwf	7
 25801  57D3  3F40               	moviw [0]fsr1
 25802  57D4  00C4               	movwf	cncSetPosStop@stop^(0+128)
 25803  57D5  3F41               	moviw [1]fsr1
 25804  57D6  00C5               	movwf	(cncSetPosStop@stop+1)^(0+128)
 25805  57D7  3F42               	moviw [2]fsr1
 25806  57D8  00C6               	movwf	(cncSetPosStop@stop+2)^(0+128)
 25807  57D9  3F43               	moviw [3]fsr1
 25808  57DA  00C7               	movwf	(cncSetPosStop@stop+3)^(0+128)
 25809  57DB                     l10724:
 25810                           
 25811                           ;cnc.c: 137: cncSetPos(cnc.pos.Home, cnc.pos.Start, stop);
 25812  57DB  3038               	movlw	56
 25813  57DC  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25814  57DD  0086               	movwf	6
 25815  57DE  3001               	movlw	1	; select bank3/4
 25816  57DF  0087               	movwf	7
 25817  57E0  3F40               	moviw [0]fsr1
 25818  57E1  00A8               	movwf	cncSetPos@home^(0+128)
 25819  57E2  3F41               	moviw [1]fsr1
 25820  57E3  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 25821  57E4  3F42               	moviw [2]fsr1
 25822  57E5  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 25823  57E6  3F43               	moviw [3]fsr1
 25824  57E7  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 25825  57E8  303C               	movlw	60
 25826  57E9  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25827  57EA  0086               	movwf	6
 25828  57EB  3001               	movlw	1	; select bank3/4
 25829  57EC  0087               	movwf	7
 25830  57ED  3F40               	moviw [0]fsr1
 25831  57EE  00AC               	movwf	cncSetPos@start^(0+128)
 25832  57EF  3F41               	moviw [1]fsr1
 25833  57F0  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 25834  57F1  3F42               	moviw [2]fsr1
 25835  57F2  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 25836  57F3  3F43               	moviw [3]fsr1
 25837  57F4  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 25838  57F5  0847               	movf	(cncSetPosStop@stop+3)^(0+128),w
 25839  57F6  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 25840  57F7  0846               	movf	(cncSetPosStop@stop+2)^(0+128),w
 25841  57F8  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 25842  57F9  0845               	movf	(cncSetPosStop@stop+1)^(0+128),w
 25843  57FA  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 25844  57FB  0844               	movf	cncSetPosStop@stop^(0+128),w
 25845  57FC  00B0               	movwf	cncSetPos@stop^(0+128)
 25846  57FD  31A8  200D         	fcall	_cncSetPos
 25847  57FF  0008               	return
 25848  5800                     __end_of_cncSetPosStop:
 25849                           
 25850                           	psect	text7
 25851  4031                     __ptext7:	
 25852 ;; *************** function _cncSetPosStart *****************
 25853 ;; Defined at:
 25854 ;;		line 112 in file "cnc.c"
 25855 ;; Parameters:    Size  Location     Type
 25856 ;;  start           4   36[BANK1 ] float 
 25857 ;; Auto vars:     Size  Location     Type
 25858 ;;  diff            4   40[BANK1 ] float 
 25859 ;; Return value:  Size  Location     Type
 25860 ;;                  1    wreg      void 
 25861 ;; Registers used:
 25862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25863 ;; Tracked objects:
 25864 ;;		On entry : 3F/1
 25865 ;;		On exit  : 3F/1
 25866 ;;		Unchanged: 0/0
 25867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25868 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25869 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25871 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25872 ;;Total ram usage:        8 bytes
 25873 ;; Hardware stack levels used: 1
 25874 ;; Hardware stack levels required when called: unknown (due to recursion)
 25875 ;; This function calls:
 25876 ;;		___fladd
 25877 ;;		___flge
 25878 ;;		___flsub
 25879 ;;		_cncSetPos
 25880 ;; This function is called by:
 25881 ;;		_navCfgMove
 25882 ;; This function uses a non-reentrant model
 25883 ;;
 25884                           
 25885  4031                     _cncSetPosStart:	
 25886                           ;psect for function _cncSetPosStart
 25887                           
 25888                           
 25889                           ;cnc.c: 114: float diff;;cnc.c: 116: if(start < cnc.pos.Home)
 25890                           
 25891                           ;incstack = 0
 25892                           ; Regs used in _cncSetPosStart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25893  4031  0847               	movf	(cncSetPosStart@start+3)^(0+128),w
 25894  4032  00A3               	movwf	(___flge@ff1+3)^(0+128)
 25895  4033  0846               	movf	(cncSetPosStart@start+2)^(0+128),w
 25896  4034  00A2               	movwf	(___flge@ff1+2)^(0+128)
 25897  4035  0845               	movf	(cncSetPosStart@start+1)^(0+128),w
 25898  4036  00A1               	movwf	(___flge@ff1+1)^(0+128)
 25899  4037  0844               	movf	cncSetPosStart@start^(0+128),w
 25900  4038  00A0               	movwf	___flge@ff1^(0+128)
 25901  4039  3038               	movlw	56
 25902  403A  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25903  403B  0086               	movwf	6
 25904  403C  3001               	movlw	1	; select bank3/4
 25905  403D  0087               	movwf	7
 25906  403E  3F40               	moviw [0]fsr1
 25907  403F  00A4               	movwf	___flge@ff2^(0+128)
 25908  4040  3F41               	moviw [1]fsr1
 25909  4041  00A5               	movwf	(___flge@ff2+1)^(0+128)
 25910  4042  3F42               	moviw [2]fsr1
 25911  4043  00A6               	movwf	(___flge@ff2+2)^(0+128)
 25912  4044  3F43               	moviw [3]fsr1
 25913  4045  00A7               	movwf	(___flge@ff2+3)^(0+128)
 25914  4046  31CD  2551  31C0   	fcall	___flge
 25915  4049  1803               	btfsc	3,0
 25916  404A  2858               	goto	l10706
 25917                           
 25918                           ;cnc.c: 117: start = cnc.pos.Home;
 25919  404B  3038               	movlw	56
 25920  404C  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25921  404D  0086               	movwf	6
 25922  404E  3001               	movlw	1	; select bank3/4
 25923  404F  0087               	movwf	7
 25924  4050  3F40               	moviw [0]fsr1
 25925  4051  00C4               	movwf	cncSetPosStart@start^(0+128)
 25926  4052  3F41               	moviw [1]fsr1
 25927  4053  00C5               	movwf	(cncSetPosStart@start+1)^(0+128)
 25928  4054  3F42               	moviw [2]fsr1
 25929  4055  00C6               	movwf	(cncSetPosStart@start+2)^(0+128)
 25930  4056  3F43               	moviw [3]fsr1
 25931  4057  00C7               	movwf	(cncSetPosStart@start+3)^(0+128)
 25932  4058                     l10706:
 25933                           
 25934                           ;cnc.c: 119: diff = start - cnc.pos.Start;
 25935  4058  303C               	movlw	60
 25936  4059  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25937  405A  0086               	movwf	6
 25938  405B  3001               	movlw	1	; select bank3/4
 25939  405C  0087               	movwf	7
 25940  405D  3F40               	moviw [0]fsr1
 25941  405E  00A0               	movwf	___flsub@a^(0+128)
 25942  405F  3F41               	moviw [1]fsr1
 25943  4060  00A1               	movwf	(___flsub@a+1)^(0+128)
 25944  4061  3F42               	moviw [2]fsr1
 25945  4062  00A2               	movwf	(___flsub@a+2)^(0+128)
 25946  4063  3F43               	moviw [3]fsr1
 25947  4064  00A3               	movwf	(___flsub@a+3)^(0+128)
 25948  4065  0847               	movf	(cncSetPosStart@start+3)^(0+128),w
 25949  4066  00A7               	movwf	(___flsub@b+3)^(0+128)
 25950  4067  0846               	movf	(cncSetPosStart@start+2)^(0+128),w
 25951  4068  00A6               	movwf	(___flsub@b+2)^(0+128)
 25952  4069  0845               	movf	(cncSetPosStart@start+1)^(0+128),w
 25953  406A  00A5               	movwf	(___flsub@b+1)^(0+128)
 25954  406B  0844               	movf	cncSetPosStart@start^(0+128),w
 25955  406C  00A4               	movwf	___flsub@b^(0+128)
 25956  406D  31D2  227E  31C0   	fcall	___flsub
 25957  4070  0823               	movf	(?___flsub+3)^(0+128),w
 25958  4071  00CB               	movwf	(cncSetPosStart@diff+3)^(0+128)
 25959  4072  0822               	movf	(?___flsub+2)^(0+128),w
 25960  4073  00CA               	movwf	(cncSetPosStart@diff+2)^(0+128)
 25961  4074  0821               	movf	(?___flsub+1)^(0+128),w
 25962  4075  00C9               	movwf	(cncSetPosStart@diff+1)^(0+128)
 25963  4076  0820               	movf	?___flsub^(0+128),w
 25964  4077  00C8               	movwf	cncSetPosStart@diff^(0+128)
 25965                           
 25966                           ;cnc.c: 121: if(cnc.pos.Stop + diff < cnc.max.mm.Pos){
 25967  4078  084B               	movf	(cncSetPosStart@diff+3)^(0+128),w
 25968  4079  0140               	movlb	0	; select bank0
 25969  407A  00D8               	movwf	___fladd@b+3
 25970  407B  0141               	movlb	1	; select bank1
 25971  407C  084A               	movf	(cncSetPosStart@diff+2)^(0+128),w
 25972  407D  0140               	movlb	0	; select bank0
 25973  407E  00D7               	movwf	___fladd@b+2
 25974  407F  0141               	movlb	1	; select bank1
 25975  4080  0849               	movf	(cncSetPosStart@diff+1)^(0+128),w
 25976  4081  0140               	movlb	0	; select bank0
 25977  4082  00D6               	movwf	___fladd@b+1
 25978  4083  0141               	movlb	1	; select bank1
 25979  4084  0848               	movf	cncSetPosStart@diff^(0+128),w
 25980  4085  0140               	movlb	0	; select bank0
 25981  4086  00D5               	movwf	___fladd@b
 25982  4087  3040               	movlw	64
 25983  4088  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 25984  4089  0086               	movwf	6
 25985  408A  3001               	movlw	1	; select bank3/4
 25986  408B  0087               	movwf	7
 25987  408C  3F40               	moviw [0]fsr1
 25988  408D  00D9               	movwf	___fladd@a
 25989  408E  3F41               	moviw [1]fsr1
 25990  408F  00DA               	movwf	___fladd@a+1
 25991  4090  3F42               	moviw [2]fsr1
 25992  4091  00DB               	movwf	___fladd@a+2
 25993  4092  3F43               	moviw [3]fsr1
 25994  4093  00DC               	movwf	___fladd@a+3
 25995  4094  31BE  261F  31C0   	fcall	___fladd
 25996  4097  0858               	movf	?___fladd+3,w
 25997  4098  0141               	movlb	1	; select bank1
 25998  4099  00A3               	movwf	(___flge@ff1+3)^(0+128)
 25999  409A  0140               	movlb	0	; select bank0
 26000  409B  0857               	movf	?___fladd+2,w
 26001  409C  0141               	movlb	1	; select bank1
 26002  409D  00A2               	movwf	(___flge@ff1+2)^(0+128)
 26003  409E  0140               	movlb	0	; select bank0
 26004  409F  0856               	movf	?___fladd+1,w
 26005  40A0  0141               	movlb	1	; select bank1
 26006  40A1  00A1               	movwf	(___flge@ff1+1)^(0+128)
 26007  40A2  0140               	movlb	0	; select bank0
 26008  40A3  0855               	movf	?___fladd,w
 26009  40A4  0141               	movlb	1	; select bank1
 26010  40A5  00A0               	movwf	___flge@ff1^(0+128)
 26011  40A6  3028               	movlw	40
 26012  40A7  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26013  40A8  0086               	movwf	6
 26014  40A9  3001               	movlw	1	; select bank3/4
 26015  40AA  0087               	movwf	7
 26016  40AB  3F40               	moviw [0]fsr1
 26017  40AC  00A4               	movwf	___flge@ff2^(0+128)
 26018  40AD  3F41               	moviw [1]fsr1
 26019  40AE  00A5               	movwf	(___flge@ff2+1)^(0+128)
 26020  40AF  3F42               	moviw [2]fsr1
 26021  40B0  00A6               	movwf	(___flge@ff2+2)^(0+128)
 26022  40B1  3F43               	moviw [3]fsr1
 26023  40B2  00A7               	movwf	(___flge@ff2+3)^(0+128)
 26024  40B3  31CD  2551  31C0   	fcall	___flge
 26025  40B6  1803               	btfsc	3,0
 26026  40B7  28E7               	goto	l10712
 26027                           
 26028                           ;cnc.c: 122: cnc.pos.Stop += diff;
 26029  40B8  084B               	movf	(cncSetPosStart@diff+3)^(0+128),w
 26030  40B9  0140               	movlb	0	; select bank0
 26031  40BA  00D8               	movwf	___fladd@b+3
 26032  40BB  0141               	movlb	1	; select bank1
 26033  40BC  084A               	movf	(cncSetPosStart@diff+2)^(0+128),w
 26034  40BD  0140               	movlb	0	; select bank0
 26035  40BE  00D7               	movwf	___fladd@b+2
 26036  40BF  0141               	movlb	1	; select bank1
 26037  40C0  0849               	movf	(cncSetPosStart@diff+1)^(0+128),w
 26038  40C1  0140               	movlb	0	; select bank0
 26039  40C2  00D6               	movwf	___fladd@b+1
 26040  40C3  0141               	movlb	1	; select bank1
 26041  40C4  0848               	movf	cncSetPosStart@diff^(0+128),w
 26042  40C5  0140               	movlb	0	; select bank0
 26043  40C6  00D5               	movwf	___fladd@b
 26044  40C7  3040               	movlw	64
 26045  40C8  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26046  40C9  0086               	movwf	6
 26047  40CA  3001               	movlw	1	; select bank3/4
 26048  40CB  0087               	movwf	7
 26049  40CC  3F40               	moviw [0]fsr1
 26050  40CD  00D9               	movwf	___fladd@a
 26051  40CE  3F41               	moviw [1]fsr1
 26052  40CF  00DA               	movwf	___fladd@a+1
 26053  40D0  3F42               	moviw [2]fsr1
 26054  40D1  00DB               	movwf	___fladd@a+2
 26055  40D2  3F43               	moviw [3]fsr1
 26056  40D3  00DC               	movwf	___fladd@a+3
 26057  40D4  31BE  261F  31C0   	fcall	___fladd
 26058  40D7  0858               	movf	?___fladd+3,w
 26059  40D8  0143               	movlb	3	; select bank3
 26060  40D9  00E3               	movwf	((_cnc+3)^(0+384)+64)
 26061  40DA  0140               	movlb	0	; select bank0
 26062  40DB  0857               	movf	?___fladd+2,w
 26063  40DC  0143               	movlb	3	; select bank3
 26064  40DD  00E2               	movwf	((_cnc+2)^(0+384)+64)
 26065  40DE  0140               	movlb	0	; select bank0
 26066  40DF  0856               	movf	?___fladd+1,w
 26067  40E0  0143               	movlb	3	; select bank3
 26068  40E1  00E1               	movwf	((_cnc+1)^(0+384)+64)
 26069  40E2  0140               	movlb	0	; select bank0
 26070  40E3  0855               	movf	?___fladd,w
 26071  40E4  0143               	movlb	3	; select bank3
 26072  40E5  00E0               	movwf	(_cnc^(0+384)+64)
 26073                           
 26074                           ;cnc.c: 123: }
 26075  40E6  2903               	goto	l10714
 26076  40E7                     l10712:
 26077                           
 26078                           ;cnc.c: 124: else{;cnc.c: 125: cnc.pos.Stop = cnc.max.mm.Pos;
 26079  40E7  3028               	movlw	40
 26080  40E8  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26081  40E9  0086               	movwf	6
 26082  40EA  3001               	movlw	1	; select bank3/4
 26083  40EB  0087               	movwf	7
 26084  40EC  3F40               	moviw [0]fsr1
 26085  40ED  0143               	movlb	3	; select bank3
 26086  40EE  00E0               	movwf	(_cnc^(0+384)+64)
 26087  40EF  3F41               	moviw [1]fsr1
 26088  40F0  00E1               	movwf	((_cnc+1)^(0+384)+64)
 26089  40F1  3F42               	moviw [2]fsr1
 26090  40F2  00E2               	movwf	((_cnc+2)^(0+384)+64)
 26091  40F3  3F43               	moviw [3]fsr1
 26092  40F4  00E3               	movwf	((_cnc+3)^(0+384)+64)
 26093                           
 26094                           ;cnc.c: 126: start = cnc.pos.Start;
 26095  40F5  303C               	movlw	60
 26096  40F6  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26097  40F7  0086               	movwf	6
 26098  40F8  3001               	movlw	1	; select bank3/4
 26099  40F9  0087               	movwf	7
 26100  40FA  3F40               	moviw [0]fsr1
 26101  40FB  0141               	movlb	1	; select bank1
 26102  40FC  00C4               	movwf	cncSetPosStart@start^(0+128)
 26103  40FD  3F41               	moviw [1]fsr1
 26104  40FE  00C5               	movwf	(cncSetPosStart@start+1)^(0+128)
 26105  40FF  3F42               	moviw [2]fsr1
 26106  4100  00C6               	movwf	(cncSetPosStart@start+2)^(0+128)
 26107  4101  3F43               	moviw [3]fsr1
 26108  4102  00C7               	movwf	(cncSetPosStart@start+3)^(0+128)
 26109  4103                     l10714:
 26110                           
 26111                           ;cnc.c: 127: };cnc.c: 128: cncSetPos(cnc.pos.Home, start, cnc.pos.Stop);
 26112  4103  3038               	movlw	56
 26113  4104  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26114  4105  0086               	movwf	6
 26115  4106  3001               	movlw	1	; select bank3/4
 26116  4107  0087               	movwf	7
 26117  4108  3F40               	moviw [0]fsr1
 26118  4109  0141               	movlb	1	; select bank1
 26119  410A  00A8               	movwf	cncSetPos@home^(0+128)
 26120  410B  3F41               	moviw [1]fsr1
 26121  410C  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 26122  410D  3F42               	moviw [2]fsr1
 26123  410E  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 26124  410F  3F43               	moviw [3]fsr1
 26125  4110  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 26126  4111  0847               	movf	(cncSetPosStart@start+3)^(0+128),w
 26127  4112  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 26128  4113  0846               	movf	(cncSetPosStart@start+2)^(0+128),w
 26129  4114  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 26130  4115  0845               	movf	(cncSetPosStart@start+1)^(0+128),w
 26131  4116  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 26132  4117  0844               	movf	cncSetPosStart@start^(0+128),w
 26133  4118  00AC               	movwf	cncSetPos@start^(0+128)
 26134  4119  3040               	movlw	64
 26135  411A  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26136  411B  0086               	movwf	6
 26137  411C  3001               	movlw	1	; select bank3/4
 26138  411D  0087               	movwf	7
 26139  411E  3F40               	moviw [0]fsr1
 26140  411F  00B0               	movwf	cncSetPos@stop^(0+128)
 26141  4120  3F41               	moviw [1]fsr1
 26142  4121  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 26143  4122  3F42               	moviw [2]fsr1
 26144  4123  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 26145  4124  3F43               	moviw [3]fsr1
 26146  4125  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 26147  4126  31A8  200D         	fcall	_cncSetPos
 26148  4128  0008               	return
 26149  4129                     __end_of_cncSetPosStart:
 26150                           
 26151                           	psect	text8
 26152  4CA8                     __ptext8:	
 26153 ;; *************** function _cncSetPosHome *****************
 26154 ;; Defined at:
 26155 ;;		line 104 in file "cnc.c"
 26156 ;; Parameters:    Size  Location     Type
 26157 ;;  home            4   36[BANK1 ] float 
 26158 ;; Auto vars:     Size  Location     Type
 26159 ;;		None
 26160 ;; Return value:  Size  Location     Type
 26161 ;;                  1    wreg      void 
 26162 ;; Registers used:
 26163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26164 ;; Tracked objects:
 26165 ;;		On entry : 3F/1
 26166 ;;		On exit  : 3F/1
 26167 ;;		Unchanged: 0/0
 26168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26169 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26172 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26173 ;;Total ram usage:        4 bytes
 26174 ;; Hardware stack levels used: 1
 26175 ;; Hardware stack levels required when called: unknown (due to recursion)
 26176 ;; This function calls:
 26177 ;;		___fladd
 26178 ;;		___flge
 26179 ;;		_cncSetPos
 26180 ;; This function is called by:
 26181 ;;		_navCfgMove
 26182 ;; This function uses a non-reentrant model
 26183 ;;
 26184                           
 26185  4CA8                     _cncSetPosHome:	
 26186                           ;psect for function _cncSetPosHome
 26187                           
 26188                           
 26189                           ;cnc.c: 105: if(home < cnc.min.mm.Pos)
 26190                           
 26191                           ;incstack = 0
 26192                           ; Regs used in _cncSetPosHome: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 26193  4CA8  0847               	movf	(cncSetPosHome@home+3)^(0+128),w
 26194  4CA9  00A3               	movwf	(___flge@ff1+3)^(0+128)
 26195  4CAA  0846               	movf	(cncSetPosHome@home+2)^(0+128),w
 26196  4CAB  00A2               	movwf	(___flge@ff1+2)^(0+128)
 26197  4CAC  0845               	movf	(cncSetPosHome@home+1)^(0+128),w
 26198  4CAD  00A1               	movwf	(___flge@ff1+1)^(0+128)
 26199  4CAE  0844               	movf	cncSetPosHome@home^(0+128),w
 26200  4CAF  00A0               	movwf	___flge@ff1^(0+128)
 26201  4CB0  3014               	movlw	20
 26202  4CB1  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26203  4CB2  0086               	movwf	6
 26204  4CB3  3001               	movlw	1	; select bank3/4
 26205  4CB4  0087               	movwf	7
 26206  4CB5  3F40               	moviw [0]fsr1
 26207  4CB6  00A4               	movwf	___flge@ff2^(0+128)
 26208  4CB7  3F41               	moviw [1]fsr1
 26209  4CB8  00A5               	movwf	(___flge@ff2+1)^(0+128)
 26210  4CB9  3F42               	moviw [2]fsr1
 26211  4CBA  00A6               	movwf	(___flge@ff2+2)^(0+128)
 26212  4CBB  3F43               	moviw [3]fsr1
 26213  4CBC  00A7               	movwf	(___flge@ff2+3)^(0+128)
 26214  4CBD  31CD  2551  31CC   	fcall	___flge
 26215  4CC0  1803               	btfsc	3,0
 26216  4CC1  2CCF               	goto	l10698
 26217                           
 26218                           ;cnc.c: 106: home = cnc.min.mm.Pos;
 26219  4CC2  3014               	movlw	20
 26220  4CC3  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26221  4CC4  0086               	movwf	6
 26222  4CC5  3001               	movlw	1	; select bank3/4
 26223  4CC6  0087               	movwf	7
 26224  4CC7  3F40               	moviw [0]fsr1
 26225  4CC8  00C4               	movwf	cncSetPosHome@home^(0+128)
 26226  4CC9  3F41               	moviw [1]fsr1
 26227  4CCA  00C5               	movwf	(cncSetPosHome@home+1)^(0+128)
 26228  4CCB  3F42               	moviw [2]fsr1
 26229  4CCC  00C6               	movwf	(cncSetPosHome@home+2)^(0+128)
 26230  4CCD  3F43               	moviw [3]fsr1
 26231  4CCE  00C7               	movwf	(cncSetPosHome@home+3)^(0+128)
 26232  4CCF                     l10698:
 26233                           
 26234                           ;cnc.c: 107: if(home > cnc.pos.Start - 10.0)
 26235  4CCF  30C1               	movlw	193
 26236  4CD0  0140               	movlb	0	; select bank0
 26237  4CD1  00D8               	movwf	___fladd@b+3
 26238  4CD2  3020               	movlw	32
 26239  4CD3  00D7               	movwf	___fladd@b+2
 26240  4CD4  3000               	movlw	0
 26241  4CD5  00D6               	movwf	___fladd@b+1
 26242  4CD6  3000               	movlw	0
 26243  4CD7  00D5               	movwf	___fladd@b
 26244  4CD8  303C               	movlw	60
 26245  4CD9  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26246  4CDA  0086               	movwf	6
 26247  4CDB  3001               	movlw	1	; select bank3/4
 26248  4CDC  0087               	movwf	7
 26249  4CDD  3F40               	moviw [0]fsr1
 26250  4CDE  00D9               	movwf	___fladd@a
 26251  4CDF  3F41               	moviw [1]fsr1
 26252  4CE0  00DA               	movwf	___fladd@a+1
 26253  4CE1  3F42               	moviw [2]fsr1
 26254  4CE2  00DB               	movwf	___fladd@a+2
 26255  4CE3  3F43               	moviw [3]fsr1
 26256  4CE4  00DC               	movwf	___fladd@a+3
 26257  4CE5  31BE  261F  31CC   	fcall	___fladd
 26258  4CE8  0858               	movf	?___fladd+3,w
 26259  4CE9  0141               	movlb	1	; select bank1
 26260  4CEA  00A3               	movwf	(___flge@ff1+3)^(0+128)
 26261  4CEB  0140               	movlb	0	; select bank0
 26262  4CEC  0857               	movf	?___fladd+2,w
 26263  4CED  0141               	movlb	1	; select bank1
 26264  4CEE  00A2               	movwf	(___flge@ff1+2)^(0+128)
 26265  4CEF  0140               	movlb	0	; select bank0
 26266  4CF0  0856               	movf	?___fladd+1,w
 26267  4CF1  0141               	movlb	1	; select bank1
 26268  4CF2  00A1               	movwf	(___flge@ff1+1)^(0+128)
 26269  4CF3  0140               	movlb	0	; select bank0
 26270  4CF4  0855               	movf	?___fladd,w
 26271  4CF5  0141               	movlb	1	; select bank1
 26272  4CF6  00A0               	movwf	___flge@ff1^(0+128)
 26273  4CF7  0847               	movf	(cncSetPosHome@home+3)^(0+128),w
 26274  4CF8  00A7               	movwf	(___flge@ff2+3)^(0+128)
 26275  4CF9  0846               	movf	(cncSetPosHome@home+2)^(0+128),w
 26276  4CFA  00A6               	movwf	(___flge@ff2+2)^(0+128)
 26277  4CFB  0845               	movf	(cncSetPosHome@home+1)^(0+128),w
 26278  4CFC  00A5               	movwf	(___flge@ff2+1)^(0+128)
 26279  4CFD  0844               	movf	cncSetPosHome@home^(0+128),w
 26280  4CFE  00A4               	movwf	___flge@ff2^(0+128)
 26281  4CFF  31CD  2551  31CC   	fcall	___flge
 26282  4D02  1803               	btfsc	3,0
 26283  4D03  2D2C               	goto	l918
 26284                           
 26285                           ;cnc.c: 108: home = cnc.pos.Start - 10.0;
 26286  4D04  30C1               	movlw	193
 26287  4D05  0140               	movlb	0	; select bank0
 26288  4D06  00D8               	movwf	___fladd@b+3
 26289  4D07  3020               	movlw	32
 26290  4D08  00D7               	movwf	___fladd@b+2
 26291  4D09  3000               	movlw	0
 26292  4D0A  00D6               	movwf	___fladd@b+1
 26293  4D0B  3000               	movlw	0
 26294  4D0C  00D5               	movwf	___fladd@b
 26295  4D0D  303C               	movlw	60
 26296  4D0E  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26297  4D0F  0086               	movwf	6
 26298  4D10  3001               	movlw	1	; select bank3/4
 26299  4D11  0087               	movwf	7
 26300  4D12  3F40               	moviw [0]fsr1
 26301  4D13  00D9               	movwf	___fladd@a
 26302  4D14  3F41               	moviw [1]fsr1
 26303  4D15  00DA               	movwf	___fladd@a+1
 26304  4D16  3F42               	moviw [2]fsr1
 26305  4D17  00DB               	movwf	___fladd@a+2
 26306  4D18  3F43               	moviw [3]fsr1
 26307  4D19  00DC               	movwf	___fladd@a+3
 26308  4D1A  31BE  261F  31CC   	fcall	___fladd
 26309  4D1D  0858               	movf	?___fladd+3,w
 26310  4D1E  0141               	movlb	1	; select bank1
 26311  4D1F  00C7               	movwf	(cncSetPosHome@home+3)^(0+128)
 26312  4D20  0140               	movlb	0	; select bank0
 26313  4D21  0857               	movf	?___fladd+2,w
 26314  4D22  0141               	movlb	1	; select bank1
 26315  4D23  00C6               	movwf	(cncSetPosHome@home+2)^(0+128)
 26316  4D24  0140               	movlb	0	; select bank0
 26317  4D25  0856               	movf	?___fladd+1,w
 26318  4D26  0141               	movlb	1	; select bank1
 26319  4D27  00C5               	movwf	(cncSetPosHome@home+1)^(0+128)
 26320  4D28  0140               	movlb	0	; select bank0
 26321  4D29  0855               	movf	?___fladd,w
 26322  4D2A  0141               	movlb	1	; select bank1
 26323  4D2B  00C4               	movwf	cncSetPosHome@home^(0+128)
 26324  4D2C                     l918:
 26325                           
 26326                           ;cnc.c: 109: cncSetPos(home, cnc.pos.Start, cnc.pos.Stop);
 26327  4D2C  0847               	movf	(cncSetPosHome@home+3)^(0+128),w
 26328  4D2D  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 26329  4D2E  0846               	movf	(cncSetPosHome@home+2)^(0+128),w
 26330  4D2F  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 26331  4D30  0845               	movf	(cncSetPosHome@home+1)^(0+128),w
 26332  4D31  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 26333  4D32  0844               	movf	cncSetPosHome@home^(0+128),w
 26334  4D33  00A8               	movwf	cncSetPos@home^(0+128)
 26335  4D34  303C               	movlw	60
 26336  4D35  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26337  4D36  0086               	movwf	6
 26338  4D37  3001               	movlw	1	; select bank3/4
 26339  4D38  0087               	movwf	7
 26340  4D39  3F40               	moviw [0]fsr1
 26341  4D3A  00AC               	movwf	cncSetPos@start^(0+128)
 26342  4D3B  3F41               	moviw [1]fsr1
 26343  4D3C  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 26344  4D3D  3F42               	moviw [2]fsr1
 26345  4D3E  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 26346  4D3F  3F43               	moviw [3]fsr1
 26347  4D40  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 26348  4D41  3040               	movlw	64
 26349  4D42  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 26350  4D43  0086               	movwf	6
 26351  4D44  3001               	movlw	1	; select bank3/4
 26352  4D45  0087               	movwf	7
 26353  4D46  3F40               	moviw [0]fsr1
 26354  4D47  00B0               	movwf	cncSetPos@stop^(0+128)
 26355  4D48  3F41               	moviw [1]fsr1
 26356  4D49  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 26357  4D4A  3F42               	moviw [2]fsr1
 26358  4D4B  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 26359  4D4C  3F43               	moviw [3]fsr1
 26360  4D4D  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 26361  4D4E  31A8  200D         	fcall	_cncSetPos
 26362  4D50  0008               	return
 26363  4D51                     __end_of_cncSetPosHome:
 26364                           
 26365                           	psect	text9
 26366  0003                     __ptext9:	
 26367 ;; *************** function _navCfgEspera *****************
 26368 ;; Defined at:
 26369 ;;		line 294 in file "telas.c"
 26370 ;; Parameters:    Size  Location     Type
 26371 ;;  tela            1    wreg     enum E12771
 26372 ;; Auto vars:     Size  Location     Type
 26373 ;;  tela            1    0[COMMON] enum E12771
 26374 ;; Return value:  Size  Location     Type
 26375 ;;                  1    wreg      void 
 26376 ;; Registers used:
 26377 ;;		wreg
 26378 ;; Tracked objects:
 26379 ;;		On entry : 3F/1
 26380 ;;		On exit  : 3F/1
 26381 ;;		Unchanged: 3F/0
 26382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26387 ;;Total ram usage:        0 bytes
 26388 ;; Hardware stack levels used: 1
 26389 ;; Hardware stack levels required when called: unknown (due to recursion)
 26390 ;; This function calls:
 26391 ;;		Nothing
 26392 ;; This function is called by:
 26393 ;;		_navTelas
 26394 ;; This function uses a non-reentrant model
 26395 ;;
 26396                           
 26397  0003                     _navCfgEspera:	
 26398                           ;psect for function _navCfgEspera
 26399                           
 26400                           
 26401                           ;incstack = 0
 26402                           ; Regs used in _navCfgEspera: [wreg]
 26403  0003  0008               	return
 26404  0004                     __end_of_navCfgEspera:
 26405                           
 26406                           	psect	text10
 26407  0002                     __ptext10:	
 26408 ;; *************** function _navCfgControl *****************
 26409 ;; Defined at:
 26410 ;;		line 290 in file "telas.c"
 26411 ;; Parameters:    Size  Location     Type
 26412 ;;  tela            1    wreg     enum E12771
 26413 ;; Auto vars:     Size  Location     Type
 26414 ;;  tela            1    0[COMMON] enum E12771
 26415 ;; Return value:  Size  Location     Type
 26416 ;;                  1    wreg      void 
 26417 ;; Registers used:
 26418 ;;		wreg
 26419 ;; Tracked objects:
 26420 ;;		On entry : 3F/1
 26421 ;;		On exit  : 3F/1
 26422 ;;		Unchanged: 3F/0
 26423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26428 ;;Total ram usage:        0 bytes
 26429 ;; Hardware stack levels used: 1
 26430 ;; Hardware stack levels required when called: unknown (due to recursion)
 26431 ;; This function calls:
 26432 ;;		Nothing
 26433 ;; This function is called by:
 26434 ;;		_navTelas
 26435 ;; This function uses a non-reentrant model
 26436 ;;
 26437                           
 26438  0002                     _navCfgControl:	
 26439                           ;psect for function _navCfgControl
 26440                           
 26441                           
 26442                           ;incstack = 0
 26443                           ; Regs used in _navCfgControl: [wreg]
 26444  0002  0008               	return
 26445  0003                     __end_of_navCfgControl:
 26446                           
 26447                           	psect	text11
 26448  5720                     __ptext11:	
 26449 ;; *************** function _getSerial *****************
 26450 ;; Defined at:
 26451 ;;		line 119 in file "com.c"
 26452 ;; Parameters:    Size  Location     Type
 26453 ;;		None
 26454 ;; Auto vars:     Size  Location     Type
 26455 ;;		None
 26456 ;; Return value:  Size  Location     Type
 26457 ;;                  1    wreg      void 
 26458 ;; Registers used:
 26459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26460 ;; Tracked objects:
 26461 ;;		On entry : 38/4
 26462 ;;		On exit  : 3C/0
 26463 ;;		Unchanged: 0/0
 26464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26469 ;;Total ram usage:        1 bytes
 26470 ;; Hardware stack levels used: 1
 26471 ;; Hardware stack levels required when called: unknown (due to recursion)
 26472 ;; This function calls:
 26473 ;;		_atol
 26474 ;;		_getch
 26475 ;; This function is called by:
 26476 ;;		_main
 26477 ;; This function uses a non-reentrant model
 26478 ;;
 26479                           
 26480  5720                     _getSerial:	
 26481                           ;psect for function _getSerial
 26482                           
 26483                           
 26484                           ;com.c: 120: static uint8_t data;;com.c: 121: serial.flag.err = 0;
 26485                           
 26486                           ;incstack = 0
 26487                           ; Regs used in _getSerial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 26488  5720  0142               	movlb	2	; select bank2
 26489  5721  12CC               	bcf	(_serial^(0+256)+26),5	;volatile
 26490                           
 26491                           ;com.c: 123: if(eusartRxCount == 0) return;
 26492  5722  0141               	movlb	1	; select bank1
 26493  5723  086C               	movf	_eusartRxCount^(0+128),w	;volatile
 26494  5724  1903               	btfsc	3,2
 26495  5725  0008               	return
 26496  5726                     l11498:
 26497                           
 26498                           ;com.c: 126: data = getch();
 26499  5726  31DE  264E  31D7   	fcall	_getch
 26500  5729  00F9               	movwf	??_getSerial
 26501  572A  0879               	movf	??_getSerial,w
 26502  572B  0142               	movlb	2	; select bank2
 26503  572C  00AC               	movwf	getSerial@data^(0+256)
 26504                           
 26505                           ;com.c: 129: if(!serial.flag.startCmd){
 26506  572D  194C               	btfsc	(_serial^(0+256)+26),2	;volatile
 26507  572E  2F41               	goto	l1291
 26508                           
 26509                           ;com.c: 130: if(data == '['){
 26510  572F  305B               	movlw	91
 26511  5730  062C               	xorwf	getSerial@data^(0+256),w
 26512  5731  1D03               	btfss	3,2
 26513  5732  2F85               	goto	l11540
 26514                           
 26515                           ;com.c: 131: serial.flag.startCmd = 1;
 26516  5733  154C               	bsf	(_serial^(0+256)+26),2	;volatile
 26517                           
 26518                           ;com.c: 132: serial.flag.endCmd = 0;
 26519  5734  11CC               	bcf	(_serial^(0+256)+26),3	;volatile
 26520                           
 26521                           ;com.c: 133: serial.flag.cmd = 0;
 26522  5735  10CC               	bcf	(_serial^(0+256)+26),1	;volatile
 26523                           
 26524                           ;com.c: 134: serial.flag.err = 0;
 26525  5736  12CC               	bcf	(_serial^(0+256)+26),5	;volatile
 26526                           
 26527                           ;com.c: 135: serial.countData = 0;
 26528  5737  01CB               	clrf	(_serial^(0+256)+25)	;volatile
 26529                           
 26530                           ;com.c: 136: serial.value = 0;
 26531  5738  3000               	movlw	0
 26532  5739  00CA               	movwf	((_serial+3)^(0+256)+21)	;volatile
 26533  573A  3000               	movlw	0
 26534  573B  00C9               	movwf	((_serial+2)^(0+256)+21)	;volatile
 26535  573C  3000               	movlw	0
 26536  573D  00C8               	movwf	((_serial+1)^(0+256)+21)	;volatile
 26537  573E  3000               	movlw	0
 26538  573F  00C7               	movwf	(_serial^(0+256)+21)	;volatile
 26539                           
 26540                           ;com.c: 138: };com.c: 139: }
 26541  5740  2F85               	goto	l11540
 26542  5741                     l1291:
 26543                           
 26544                           ;com.c: 140: else {;com.c: 141: if(!serial.flag.endCmd && data == ']'){
 26545  5741  19CC               	btfsc	(_serial^(0+256)+26),3	;volatile
 26546  5742  2F63               	goto	l1294
 26547  5743  305D               	movlw	93
 26548  5744  062C               	xorwf	getSerial@data^(0+256),w
 26549  5745  1D03               	btfss	3,2
 26550  5746  2F63               	goto	l1294
 26551                           
 26552                           ;com.c: 143: serial.flag.startCmd = 0;
 26553  5747  114C               	bcf	(_serial^(0+256)+26),2	;volatile
 26554                           
 26555                           ;com.c: 144: serial.flag.endCmd = 1;
 26556  5748  15CC               	bsf	(_serial^(0+256)+26),3	;volatile
 26557                           
 26558                           ;com.c: 145: serial.data[serial.countData] = '\0';
 26559  5749  084B               	movf	(_serial^(0+256)+25),w	;volatile
 26560  574A  3E32               	addlw	(low (_serial| (0+256)))& (0+255)
 26561  574B  0086               	movwf	6
 26562  574C  3001               	movlw	1	; select bank2/3
 26563  574D  0087               	movwf	7
 26564  574E  0181               	clrf	1
 26565                           
 26566                           ;com.c: 146: serial.value = (ulong)atol(serial.data);
 26567  574F  3032               	movlw	(low (_serial| (0+256)))& (0+255)
 26568  5750  31CA  2257         	fcall	_atol
 26569  5752  0827               	movf	?_atol+3,w
 26570  5753  0142               	movlb	2	; select bank2
 26571  5754  00CA               	movwf	((_serial+3)^(0+256)+21)	;volatile
 26572  5755  0140               	movlb	0	; select bank0
 26573  5756  0826               	movf	?_atol+2,w
 26574  5757  0142               	movlb	2	; select bank2
 26575  5758  00C9               	movwf	((_serial+2)^(0+256)+21)	;volatile
 26576  5759  0140               	movlb	0	; select bank0
 26577  575A  0825               	movf	?_atol+1,w
 26578  575B  0142               	movlb	2	; select bank2
 26579  575C  00C8               	movwf	((_serial+1)^(0+256)+21)	;volatile
 26580  575D  0140               	movlb	0	; select bank0
 26581  575E  0824               	movf	?_atol,w
 26582  575F  0142               	movlb	2	; select bank2
 26583  5760  00C7               	movwf	(_serial^(0+256)+21)	;volatile
 26584                           
 26585                           ;com.c: 148: serial.flag.exec = 1;
 26586  5761  144C               	bsf	(_serial^(0+256)+26),0	;volatile
 26587  5762  0008               	return
 26588  5763                     l1294:
 26589                           
 26590                           ;com.c: 152: else if(!serial.flag.cmd){
 26591  5763  18CC               	btfsc	(_serial^(0+256)+26),1	;volatile
 26592  5764  2F6B               	goto	l11528
 26593                           
 26594                           ;com.c: 153: serial.flag.cmd = 1;
 26595  5765  14CC               	bsf	(_serial^(0+256)+26),1	;volatile
 26596                           
 26597                           ;com.c: 154: serial.cmd = data;
 26598  5766  082C               	movf	getSerial@data^(0+256),w
 26599  5767  00F9               	movwf	??_getSerial
 26600  5768  0879               	movf	??_getSerial,w
 26601  5769  00C6               	movwf	(_serial^(0+256)+20)	;volatile
 26602                           
 26603                           ;com.c: 155: }
 26604  576A  2F85               	goto	l11540
 26605  576B                     l11528:
 26606                           
 26607                           ;com.c: 156: else if (serial.countData < 20){
 26608  576B  3014               	movlw	20
 26609  576C  024B               	subwf	(_serial^(0+256)+25),w	;volatile
 26610  576D  1803               	skipnc
 26611  576E  2F7D               	goto	l1298
 26612                           
 26613                           ;com.c: 157: serial.data[serial.countData++] = data;
 26614  576F  082C               	movf	getSerial@data^(0+256),w
 26615  5770  00F9               	movwf	??_getSerial
 26616  5771  084B               	movf	(_serial^(0+256)+25),w	;volatile
 26617  5772  3E32               	addlw	(low (_serial| (0+256)))& (0+255)
 26618  5773  0086               	movwf	6
 26619  5774  3001               	movlw	1	; select bank2/3
 26620  5775  0087               	movwf	7
 26621  5776  0879               	movf	??_getSerial,w
 26622  5777  0081               	movwf	1
 26623  5778  3001               	movlw	1
 26624  5779  00F9               	movwf	??_getSerial
 26625  577A  0879               	movf	??_getSerial,w
 26626  577B  07CB               	addwf	(_serial^(0+256)+25),f	;volatile
 26627                           
 26628                           ;com.c: 158: }
 26629  577C  2F85               	goto	l11540
 26630  577D                     l1298:
 26631                           
 26632                           ;com.c: 159: else if(serial.flag.startCmd){
 26633  577D  1D4C               	btfss	(_serial^(0+256)+26),2	;volatile
 26634  577E  2F85               	goto	l11540
 26635                           
 26636                           ;com.c: 160: serial.flag.err = 1;
 26637  577F  16CC               	bsf	(_serial^(0+256)+26),5	;volatile
 26638                           
 26639                           ;com.c: 161: serial.cmd = CMD_ERRO;
 26640  5780  3057               	movlw	87
 26641  5781  00F9               	movwf	??_getSerial
 26642  5782  0879               	movf	??_getSerial,w
 26643  5783  00C6               	movwf	(_serial^(0+256)+20)	;volatile
 26644  5784  0008               	return
 26645  5785                     l11540:
 26646                           
 26647                           ;com.c: 163: };com.c: 164: };com.c: 165: }while(eusartRxCount > 0 || serial.flag.startCm
      +                          d == 1);
 26648  5785  0141               	movlb	1	; select bank1
 26649  5786  086C               	movf	_eusartRxCount^(0+128),w	;volatile
 26650  5787  1D03               	btfss	3,2
 26651  5788  2F26               	goto	l11498
 26652  5789  0142               	movlb	2	; select bank2
 26653  578A  1D4C               	btfss	(_serial^(0+256)+26),2	;volatile
 26654  578B  0008               	return
 26655  578C  2F26               	goto	l11498
 26656  578D                     __end_of_getSerial:
 26657                           
 26658                           	psect	text12
 26659  5E4E                     __ptext12:	
 26660 ;; *************** function _getch *****************
 26661 ;; Defined at:
 26662 ;;		line 196 in file "mcc_generated_files/eusart.c"
 26663 ;; Parameters:    Size  Location     Type
 26664 ;;		None
 26665 ;; Auto vars:     Size  Location     Type
 26666 ;;		None
 26667 ;; Return value:  Size  Location     Type
 26668 ;;                  1    wreg      unsigned char 
 26669 ;; Registers used:
 26670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26671 ;; Tracked objects:
 26672 ;;		On entry : 38/1
 26673 ;;		On exit  : 3F/E
 26674 ;;		Unchanged: 0/0
 26675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26680 ;;Total ram usage:        0 bytes
 26681 ;; Hardware stack levels used: 1
 26682 ;; Hardware stack levels required when called: unknown (due to recursion)
 26683 ;; This function calls:
 26684 ;;		_EUSART_Read
 26685 ;; This function is called by:
 26686 ;;		_getSerial
 26687 ;; This function uses a non-reentrant model
 26688 ;;
 26689                           
 26690  5E4E                     _getch:	
 26691                           ;psect for function _getch
 26692                           
 26693                           
 26694                           ;eusart.c: 198: return EUSART_Read();
 26695                           
 26696                           ;incstack = 0
 26697                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 26698  5E4E  31D1  2177         	fcall	_EUSART_Read
 26699  5E50  0008               	return
 26700  5E51                     __end_of_getch:
 26701                           
 26702                           	psect	text13
 26703  5177                     __ptext13:	
 26704 ;; *************** function _EUSART_Read *****************
 26705 ;; Defined at:
 26706 ;;		line 151 in file "mcc_generated_files/eusart.c"
 26707 ;; Parameters:    Size  Location     Type
 26708 ;;		None
 26709 ;; Auto vars:     Size  Location     Type
 26710 ;;  readValue       1    2[COMMON] unsigned char 
 26711 ;; Return value:  Size  Location     Type
 26712 ;;                  1    wreg      unsigned char 
 26713 ;; Registers used:
 26714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26715 ;; Tracked objects:
 26716 ;;		On entry : 38/1
 26717 ;;		On exit  : 3F/E
 26718 ;;		Unchanged: 0/0
 26719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26724 ;;Total ram usage:        2 bytes
 26725 ;; Hardware stack levels used: 1
 26726 ;; Hardware stack levels required when called: unknown (due to recursion)
 26727 ;; This function calls:
 26728 ;;		Nothing
 26729 ;; This function is called by:
 26730 ;;		_getch
 26731 ;; This function uses a non-reentrant model
 26732 ;;
 26733                           
 26734  5177                     _EUSART_Read:	
 26735                           ;psect for function _EUSART_Read
 26736                           
 26737  5177                     l10616:	
 26738                           ;eusart.c: 155: while(0 == eusartRxCount)
 26739                           
 26740                           ;incstack = 0
 26741                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 26742                           
 26743  5177  0141               	movlb	1	; select bank1
 26744  5178  086C               	movf	_eusartRxCount^(0+128),w	;volatile
 26745  5179  1903               	btfsc	3,2
 26746  517A  2977               	goto	l10616
 26747                           
 26748                           ;eusart.c: 157: };eusart.c: 159: eusartRxLastError = eusartRxStatusBuffer[eusartRxTail];
 26749  517B  086D               	movf	_eusartRxTail^(0+128),w	;volatile
 26750  517C  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 26751  517D  0086               	movwf	6
 26752  517E  3003               	movlw	3	; select bank6/7
 26753  517F  0087               	movwf	7
 26754  5180  0801               	movf	1,w
 26755  5181  00F1               	movwf	??_EUSART_Read
 26756  5182  0871               	movf	??_EUSART_Read,w
 26757  5183  0142               	movlb	2	; select bank2
 26758  5184  00B1               	movwf	_eusartRxLastError^(0+256)	;volatile
 26759                           
 26760                           ;eusart.c: 161: readValue = eusartRxBuffer[eusartRxTail++];
 26761  5185  0141               	movlb	1	; select bank1
 26762  5186  086D               	movf	_eusartRxTail^(0+128),w
 26763  5187  3EA0               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 26764  5188  0086               	movwf	6
 26765  5189  3003               	movlw	3	; select bank7/8
 26766  518A  0087               	movwf	7
 26767  518B  0801               	movf	1,w
 26768  518C  00F1               	movwf	??_EUSART_Read
 26769  518D  0871               	movf	??_EUSART_Read,w
 26770  518E  00F2               	movwf	EUSART_Read@readValue
 26771  518F  3001               	movlw	1
 26772  5190  00F1               	movwf	??_EUSART_Read
 26773  5191  0871               	movf	??_EUSART_Read,w
 26774  5192  07ED               	addwf	_eusartRxTail^(0+128),f	;volatile
 26775                           
 26776                           ;eusart.c: 162: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 26777  5193  3020               	movlw	32
 26778  5194  026D               	subwf	_eusartRxTail^(0+128),w
 26779  5195  1803               	btfsc	3,0
 26780                           
 26781                           ;eusart.c: 163: {;eusart.c: 164: eusartRxTail = 0;
 26782  5196  01ED               	clrf	_eusartRxTail^(0+128)	;volatile
 26783                           
 26784                           ;eusart.c: 165: };eusart.c: 166: PIE3bits.RCIE = 0;
 26785  5197  014E               	movlb	14	; select bank14
 26786  5198  1299               	bcf	25,5	;volatile
 26787                           
 26788                           ;eusart.c: 167: eusartRxCount--;
 26789  5199  3001               	movlw	1
 26790  519A  0141               	movlb	1	; select bank1
 26791  519B  02EC               	subwf	_eusartRxCount^(0+128),f	;volatile
 26792                           
 26793                           ;eusart.c: 168: PIE3bits.RCIE = 1;
 26794  519C  014E               	movlb	14	; select bank14
 26795  519D  1699               	bsf	25,5	;volatile
 26796                           
 26797                           ;eusart.c: 170: return readValue;
 26798  519E  0872               	movf	EUSART_Read@readValue,w
 26799  519F  0008               	return
 26800  51A0                     __end_of_EUSART_Read:
 26801                           
 26802                           	psect	text14
 26803  4A57                     __ptext14:	
 26804 ;; *************** function _atol *****************
 26805 ;; Defined at:
 26806 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\atol.c"
 26807 ;; Parameters:    Size  Location     Type
 26808 ;;  s               1    wreg     PTR const unsigned char 
 26809 ;;		 -> serial.data(20), serial(27), 
 26810 ;; Auto vars:     Size  Location     Type
 26811 ;;  s               1   17[BANK0 ] PTR const unsigned char 
 26812 ;;		 -> serial.data(20), serial(27), 
 26813 ;;  a               4   13[BANK0 ] long 
 26814 ;;  c               1   18[BANK0 ] unsigned char 
 26815 ;;  sign            1   12[BANK0 ] unsigned char 
 26816 ;; Return value:  Size  Location     Type
 26817 ;;                  4    4[BANK0 ] long 
 26818 ;; Registers used:
 26819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26820 ;; Tracked objects:
 26821 ;;		On entry : 3F/2
 26822 ;;		On exit  : 3F/0
 26823 ;;		Unchanged: 0/0
 26824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26826 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26827 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26828 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26829 ;;Total ram usage:       15 bytes
 26830 ;; Hardware stack levels used: 1
 26831 ;; Hardware stack levels required when called: unknown (due to recursion)
 26832 ;; This function calls:
 26833 ;;		___lmul
 26834 ;;		_isdigit
 26835 ;; This function is called by:
 26836 ;;		_getSerial
 26837 ;; This function uses a non-reentrant model
 26838 ;;
 26839                           
 26840  4A57                     _atol:	
 26841                           ;psect for function _atol
 26842                           
 26843                           
 26844                           ;incstack = 0
 26845                           ; Regs used in _atol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 26846                           ;atol@s stored from wreg
 26847  4A57  0140               	movlb	0	; select bank0
 26848  4A58  00B1               	movwf	atol@s
 26849  4A59                     l2190:
 26850  4A59  0831               	movf	atol@s,w
 26851  4A5A  0086               	movwf	6
 26852  4A5B  3001               	movlw	1	; select bank2/3
 26853  4A5C  0087               	movwf	7
 26854  4A5D  0801               	movf	1,w
 26855  4A5E  00A8               	movwf	??_atol
 26856  4A5F  0828               	movf	??_atol,w
 26857  4A60  00B2               	movwf	atol@c
 26858  4A61  3001               	movlw	1
 26859  4A62  00A8               	movwf	??_atol
 26860  4A63  0828               	movf	??_atol,w
 26861  4A64  07B1               	addwf	atol@s,f
 26862  4A65  3020               	movlw	32
 26863  4A66  0632               	xorwf	atol@c,w
 26864  4A67  1903               	btfsc	3,2
 26865  4A68  2A59               	goto	l2190
 26866  4A69  3009               	movlw	9
 26867  4A6A  0632               	xorwf	atol@c,w
 26868  4A6B  1903               	btfsc	3,2
 26869  4A6C  2A59               	goto	l2190
 26870  4A6D  3000               	movlw	0
 26871  4A6E  00B0               	movwf	atol@a+3
 26872  4A6F  3000               	movlw	0
 26873  4A70  00AF               	movwf	atol@a+2
 26874  4A71  3000               	movlw	0
 26875  4A72  00AE               	movwf	atol@a+1
 26876  4A73  3000               	movlw	0
 26877  4A74  00AD               	movwf	atol@a
 26878  4A75  01AC               	clrf	atol@sign
 26879  4A76  302D               	movlw	45
 26880  4A77  0632               	xorwf	atol@c,w
 26881  4A78  1D03               	btfss	3,2
 26882  4A79  2A7F               	goto	l11198
 26883  4A7A  3001               	movlw	1
 26884  4A7B  00A8               	movwf	??_atol
 26885  4A7C  0828               	movf	??_atol,w
 26886  4A7D  07AC               	addwf	atol@sign,f
 26887  4A7E  2AB2               	goto	l11194
 26888  4A7F                     l11198:
 26889  4A7F  302B               	movlw	43
 26890  4A80  0632               	xorwf	atol@c,w
 26891  4A81  1903               	btfsc	3,2
 26892  4A82  2AB2               	goto	l11194
 26893  4A83                     l11210:
 26894  4A83  0832               	movf	atol@c,w
 26895  4A84  31DE  26E1  31CA   	fcall	_isdigit
 26896  4A87  1C03               	btfss	3,0
 26897  4A88  2ABF               	goto	l11212
 26898  4A89  0832               	movf	atol@c,w
 26899  4A8A  3ED0               	addlw	208
 26900  4A8B  00A8               	movwf	??_atol
 26901  4A8C  01A9               	clrf	??_atol+1
 26902  4A8D  01AA               	clrf	??_atol+2
 26903  4A8E  01AB               	clrf	??_atol+3
 26904  4A8F  0830               	movf	atol@a+3,w
 26905  4A90  00F4               	movwf	___lmul@multiplier+3
 26906  4A91  082F               	movf	atol@a+2,w
 26907  4A92  00F3               	movwf	___lmul@multiplier+2
 26908  4A93  082E               	movf	atol@a+1,w
 26909  4A94  00F2               	movwf	___lmul@multiplier+1
 26910  4A95  082D               	movf	atol@a,w
 26911  4A96  00F1               	movwf	___lmul@multiplier
 26912  4A97  3000               	movlw	0
 26913  4A98  00F8               	movwf	___lmul@multiplicand+3
 26914  4A99  3000               	movlw	0
 26915  4A9A  00F7               	movwf	___lmul@multiplicand+2
 26916  4A9B  3000               	movlw	0
 26917  4A9C  00F6               	movwf	___lmul@multiplicand+1
 26918  4A9D  300A               	movlw	10
 26919  4A9E  00F5               	movwf	___lmul@multiplicand
 26920  4A9F  31C0  2002  31CA   	fcall	___lmul
 26921  4AA2  0871               	movf	?___lmul,w
 26922  4AA3  07A8               	addwf	??_atol,f
 26923  4AA4  0872               	movf	?___lmul+1,w
 26924  4AA5  3DA9               	addwfc	??_atol+1,f
 26925  4AA6  0873               	movf	?___lmul+2,w
 26926  4AA7  3DAA               	addwfc	??_atol+2,f
 26927  4AA8  0874               	movf	?___lmul+3,w
 26928  4AA9  3DAB               	addwfc	??_atol+3,f
 26929  4AAA  082B               	movf	??_atol+3,w
 26930  4AAB  00B0               	movwf	atol@a+3
 26931  4AAC  082A               	movf	??_atol+2,w
 26932  4AAD  00AF               	movwf	atol@a+2
 26933  4AAE  0829               	movf	??_atol+1,w
 26934  4AAF  00AE               	movwf	atol@a+1
 26935  4AB0  0828               	movf	??_atol,w
 26936  4AB1  00AD               	movwf	atol@a
 26937  4AB2                     l11194:
 26938  4AB2  0831               	movf	atol@s,w
 26939  4AB3  0086               	movwf	6
 26940  4AB4  3001               	movlw	1	; select bank2/3
 26941  4AB5  0087               	movwf	7
 26942  4AB6  0801               	movf	1,w
 26943  4AB7  00A8               	movwf	??_atol
 26944  4AB8  0828               	movf	??_atol,w
 26945  4AB9  00B2               	movwf	atol@c
 26946  4ABA  3001               	movlw	1
 26947  4ABB  00A8               	movwf	??_atol
 26948  4ABC  0828               	movf	??_atol,w
 26949  4ABD  07B1               	addwf	atol@s,f
 26950  4ABE  2A83               	goto	l11210
 26951  4ABF                     l11212:
 26952  4ABF  082C               	movf	atol@sign,w
 26953  4AC0  1903               	btfsc	3,2
 26954  4AC1  2AD2               	goto	l11218
 26955  4AC2  092D               	comf	atol@a,w
 26956  4AC3  00A4               	movwf	?_atol
 26957  4AC4  092E               	comf	atol@a+1,w
 26958  4AC5  00A5               	movwf	?_atol+1
 26959  4AC6  092F               	comf	atol@a+2,w
 26960  4AC7  00A6               	movwf	?_atol+2
 26961  4AC8  0930               	comf	atol@a+3,w
 26962  4AC9  00A7               	movwf	?_atol+3
 26963  4ACA  0AA4               	incf	?_atol,f
 26964  4ACB  1903               	skipnz
 26965  4ACC  0AA5               	incf	?_atol+1,f
 26966  4ACD  1903               	skipnz
 26967  4ACE  0AA6               	incf	?_atol+2,f
 26968  4ACF  1903               	skipnz
 26969  4AD0  0AA7               	incf	?_atol+3,f
 26970  4AD1  0008               	return
 26971  4AD2                     l11218:
 26972  4AD2  0830               	movf	atol@a+3,w
 26973  4AD3  00A7               	movwf	?_atol+3
 26974  4AD4  082F               	movf	atol@a+2,w
 26975  4AD5  00A6               	movwf	?_atol+2
 26976  4AD6  082E               	movf	atol@a+1,w
 26977  4AD7  00A5               	movwf	?_atol+1
 26978  4AD8  082D               	movf	atol@a,w
 26979  4AD9  00A4               	movwf	?_atol
 26980  4ADA  0008               	return
 26981  4ADB                     __end_of_atol:
 26982                           
 26983                           	psect	text15
 26984  48D7                     __ptext15:	
 26985 ;; *************** function _exeSerial *****************
 26986 ;; Defined at:
 26987 ;;		line 168 in file "com.c"
 26988 ;; Parameters:    Size  Location     Type
 26989 ;;		None
 26990 ;; Auto vars:     Size  Location     Type
 26991 ;;  cmd             1   69[BANK1 ] enum E12787
 26992 ;; Return value:  Size  Location     Type
 26993 ;;                  1    wreg      void 
 26994 ;; Registers used:
 26995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26996 ;; Tracked objects:
 26997 ;;		On entry : 3C/0
 26998 ;;		On exit  : 38/0
 26999 ;;		Unchanged: 0/0
 27000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27002 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27003 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27004 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27005 ;;Total ram usage:        2 bytes
 27006 ;; Hardware stack levels used: 1
 27007 ;; Hardware stack levels required when called: unknown (due to recursion)
 27008 ;; This function calls:
 27009 ;;		_getValueCMD
 27010 ;;		_sendCMD
 27011 ;;		_sendCMDValue
 27012 ;; This function is called by:
 27013 ;;		_main
 27014 ;; This function uses a non-reentrant model
 27015 ;;
 27016                           
 27017  48D7                     _exeSerial:	
 27018                           ;psect for function _exeSerial
 27019                           
 27020                           
 27021                           ;com.c: 169: if(!serial.flag.exec) return;
 27022                           
 27023                           ;incstack = 0
 27024                           ; Regs used in _exeSerial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27025  48D7  0142               	movlb	2	; select bank2
 27026  48D8  1C4C               	btfss	(_serial^(0+256)+26),0	;volatile
 27027  48D9  0008               	return
 27028                           
 27029                           ;com.c: 171: serial.flag.exec = 0;
 27030  48DA  104C               	bcf	(_serial^(0+256)+26),0	;volatile
 27031                           
 27032                           ;com.c: 173: if(serial.value > CMD_CTRL_LAST){
 27033  48DB  084A               	movf	((_serial+3)^(0+256)+21),w	;volatile
 27034  48DC  1D03               	btfss	3,2
 27035  48DD  28E8               	goto	l11550
 27036  48DE  0849               	movf	((_serial+2)^(0+256)+21),w	;volatile
 27037  48DF  1D03               	btfss	3,2
 27038  48E0  28E8               	goto	l11550
 27039  48E1  0848               	movf	((_serial+1)^(0+256)+21),w	;volatile
 27040  48E2  1D03               	btfss	3,2
 27041  48E3  28E8               	goto	l11550
 27042  48E4  305C               	movlw	92
 27043  48E5  0247               	subwf	(_serial^(0+256)+21),w	;volatile
 27044  48E6  1C03               	btfss	3,0
 27045  48E7  291B               	goto	l11564
 27046  48E8                     l11550:
 27047                           
 27048                           ;com.c: 175: Cmd_t cmd = (serial.value - 32);
 27049  48E8  0142               	movlb	2	; select bank2
 27050  48E9  0847               	movf	(_serial^(0+256)+21),w	;volatile
 27051  48EA  3EE0               	addlw	224
 27052  48EB  0141               	movlb	1	; select bank1
 27053  48EC  00E4               	movwf	??_exeSerial^(0+128)
 27054  48ED  0864               	movf	??_exeSerial^(0+128),w
 27055  48EE  00E5               	movwf	exeSerial@cmd^(0+128)
 27056                           
 27057                           ;com.c: 176: sendCMDValue((Cmd_t)serial.value,getValueCMD(cmd));
 27058  48EF  0865               	movf	exeSerial@cmd^(0+128),w
 27059  48F0  31C3  23BC  31C8   	fcall	_getValueCMD
 27060  48F3  0863               	movf	?_getValueCMD+3,w
 27061  48F4  0141               	movlb	1	; select bank1
 27062  48F5  00DB               	movwf	(sendCMDValue@value+3)^(0+128)
 27063  48F6  0140               	movlb	0	; select bank0
 27064  48F7  0862               	movf	?_getValueCMD+2,w
 27065  48F8  0141               	movlb	1	; select bank1
 27066  48F9  00DA               	movwf	(sendCMDValue@value+2)^(0+128)
 27067  48FA  0140               	movlb	0	; select bank0
 27068  48FB  0861               	movf	?_getValueCMD+1,w
 27069  48FC  0141               	movlb	1	; select bank1
 27070  48FD  00D9               	movwf	(sendCMDValue@value+1)^(0+128)
 27071  48FE  0140               	movlb	0	; select bank0
 27072  48FF  0860               	movf	?_getValueCMD,w
 27073  4900  0141               	movlb	1	; select bank1
 27074  4901  00D8               	movwf	sendCMDValue@value^(0+128)
 27075  4902  0142               	movlb	2	; select bank2
 27076  4903  0847               	movf	(_serial^(0+256)+21),w	;volatile
 27077  4904  31DF  27CF         	fcall	_sendCMDValue
 27078  4906  0008               	return
 27079  4907                     l11556:
 27080                           
 27081                           ;com.c: 184: oscCfg.status.INV.set.value = (uint)serial.value;
 27082  4907  0848               	movf	((_serial+1)^(0+256)+21),w	;volatile
 27083  4908  0145               	movlb	5	; select bank5
 27084  4909  00BF               	movwf	((_oscCfg+1)^(0+640)+30)
 27085  490A  0142               	movlb	2	; select bank2
 27086  490B  0847               	movf	(_serial^(0+256)+21),w	;volatile
 27087  490C  0145               	movlb	5	; select bank5
 27088  490D  00BE               	movwf	(_oscCfg^(0+640)+30)
 27089                           
 27090                           ;com.c: 186: break;
 27091  490E  0008               	return
 27092  490F                     l11558:
 27093                           
 27094                           ;com.c: 188: sendCMD((Cmd_t)serial.value);
 27095  490F  0847               	movf	(_serial^(0+256)+21),w	;volatile
 27096  4910  31D1  2131         	fcall	_sendCMD
 27097                           
 27098                           ;com.c: 189: break;
 27099  4912  0008               	return
 27100  4913                     l11560:
 27101                           
 27102                           ;com.c: 191: oscCfg.Freq = (uint16_t)serial.value;
 27103  4913  0848               	movf	((_serial+1)^(0+256)+21),w	;volatile
 27104  4914  0145               	movlb	5	; select bank5
 27105  4915  00A1               	movwf	(_oscCfg+1)^(0+640)
 27106  4916  0142               	movlb	2	; select bank2
 27107  4917  0847               	movf	(_serial^(0+256)+21),w	;volatile
 27108  4918  0145               	movlb	5	; select bank5
 27109  4919  00A0               	movwf	_oscCfg^(0+640)
 27110                           
 27111                           ;com.c: 192: break;
 27112  491A  0008               	return
 27113  491B                     l11564:
 27114  491B  0142               	movlb	2	; select bank2
 27115  491C  0846               	movf	(_serial^(0+256)+20),w	;volatile
 27116                           
 27117                           ; Switch size 1, requested type "simple"
 27118                           ; Number of cases is 18, Range of values is 65 to 86
 27119                           ; switch strategies available:
 27120                           ; Name         Instructions Cycles
 27121                           ; direct_byte           53     9 (fixed)
 27122                           ; simple_byte           55    28 (average)
 27123                           ; jumptable            263     9 (fixed)
 27124                           ;	Chosen strategy is simple_byte
 27125  491D  3A41               	xorlw	65	; case 65
 27126  491E  1903               	skipnz
 27127  491F  2907               	goto	l11556
 27128  4920  3A03               	xorlw	3	; case 66
 27129  4921  1903               	skipnz
 27130  4922  290F               	goto	l11558
 27131  4923  3A01               	xorlw	1	; case 67
 27132  4924  1903               	skipnz
 27133  4925  2913               	goto	l11560
 27134  4926  3A06               	xorlw	6	; case 69
 27135  4927  1903               	skipnz
 27136  4928  2954               	goto	l1305
 27137  4929  3A03               	xorlw	3	; case 70
 27138  492A  1903               	skipnz
 27139  492B  2954               	goto	l1305
 27140  492C  3A01               	xorlw	1	; case 71
 27141  492D  1903               	skipnz
 27142  492E  2954               	goto	l1305
 27143  492F  3A0F               	xorlw	15	; case 72
 27144  4930  1903               	skipnz
 27145  4931  2954               	goto	l1305
 27146  4932  3A01               	xorlw	1	; case 73
 27147  4933  1903               	skipnz
 27148  4934  2954               	goto	l1305
 27149  4935  3A03               	xorlw	3	; case 74
 27150  4936  1903               	skipnz
 27151  4937  2954               	goto	l1305
 27152  4938  3A01               	xorlw	1	; case 75
 27153  4939  1903               	skipnz
 27154  493A  2954               	goto	l1305
 27155  493B  3A07               	xorlw	7	; case 76
 27156  493C  1903               	skipnz
 27157  493D  2954               	goto	l1305
 27158  493E  3A1C               	xorlw	28	; case 80
 27159  493F  1903               	skipnz
 27160  4940  2954               	goto	l1305
 27161  4941  3A01               	xorlw	1	; case 81
 27162  4942  1903               	skipnz
 27163  4943  2954               	goto	l1305
 27164  4944  3A03               	xorlw	3	; case 82
 27165  4945  1903               	skipnz
 27166  4946  2954               	goto	l1305
 27167  4947  3A01               	xorlw	1	; case 83
 27168  4948  1903               	skipnz
 27169  4949  2954               	goto	l1305
 27170  494A  3A07               	xorlw	7	; case 84
 27171  494B  1903               	skipnz
 27172  494C  2954               	goto	l1305
 27173  494D  3A01               	xorlw	1	; case 85
 27174  494E  1903               	skipnz
 27175  494F  2954               	goto	l1305
 27176  4950  3A03               	xorlw	3	; case 86
 27177  4951  1903               	skipnz
 27178  4952  2954               	goto	l1305
 27179  4953  2954               	goto	l1305
 27180  4954                     l1305:
 27181  4954  0008               	return
 27182  4955                     __end_of_exeSerial:
 27183                           
 27184                           	psect	text16
 27185  5131                     __ptext16:	
 27186 ;; *************** function _sendCMD *****************
 27187 ;; Defined at:
 27188 ;;		line 114 in file "com.c"
 27189 ;; Parameters:    Size  Location     Type
 27190 ;;  cmd             1    wreg     enum E12787
 27191 ;; Auto vars:     Size  Location     Type
 27192 ;;  cmd             1   67[BANK1 ] enum E12787
 27193 ;;  value           4   63[BANK1 ] unsigned long 
 27194 ;; Return value:  Size  Location     Type
 27195 ;;                  1    wreg      void 
 27196 ;; Registers used:
 27197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27198 ;; Tracked objects:
 27199 ;;		On entry : 3F/2
 27200 ;;		On exit  : 3F/0
 27201 ;;		Unchanged: 0/0
 27202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27204 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27206 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27207 ;;Total ram usage:        5 bytes
 27208 ;; Hardware stack levels used: 1
 27209 ;; Hardware stack levels required when called: unknown (due to recursion)
 27210 ;; This function calls:
 27211 ;;		_getValueCMD
 27212 ;;		_sendCMDValue
 27213 ;; This function is called by:
 27214 ;;		_exeSerial
 27215 ;; This function uses a non-reentrant model
 27216 ;;
 27217                           
 27218  5131                     _sendCMD:	
 27219                           ;psect for function _sendCMD
 27220                           
 27221                           
 27222                           ;incstack = 0
 27223                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27224                           ;sendCMD@cmd stored from wreg
 27225  5131  0141               	movlb	1	; select bank1
 27226  5132  00E3               	movwf	sendCMD@cmd^(0+128)
 27227                           
 27228                           ;com.c: 115: ulong value = getValueCMD(cmd);
 27229  5133  0863               	movf	sendCMD@cmd^(0+128),w
 27230  5134  31C3  23BC  31D1   	fcall	_getValueCMD
 27231  5137  0863               	movf	?_getValueCMD+3,w
 27232  5138  0141               	movlb	1	; select bank1
 27233  5139  00E2               	movwf	(sendCMD@value+3)^(0+128)
 27234  513A  0140               	movlb	0	; select bank0
 27235  513B  0862               	movf	?_getValueCMD+2,w
 27236  513C  0141               	movlb	1	; select bank1
 27237  513D  00E1               	movwf	(sendCMD@value+2)^(0+128)
 27238  513E  0140               	movlb	0	; select bank0
 27239  513F  0861               	movf	?_getValueCMD+1,w
 27240  5140  0141               	movlb	1	; select bank1
 27241  5141  00E0               	movwf	(sendCMD@value+1)^(0+128)
 27242  5142  0140               	movlb	0	; select bank0
 27243  5143  0860               	movf	?_getValueCMD,w
 27244  5144  0141               	movlb	1	; select bank1
 27245  5145  00DF               	movwf	sendCMD@value^(0+128)
 27246                           
 27247                           ;com.c: 116: sendCMDValue(cmd,value);
 27248  5146  0862               	movf	(sendCMD@value+3)^(0+128),w
 27249  5147  00DB               	movwf	(sendCMDValue@value+3)^(0+128)
 27250  5148  0861               	movf	(sendCMD@value+2)^(0+128),w
 27251  5149  00DA               	movwf	(sendCMDValue@value+2)^(0+128)
 27252  514A  0860               	movf	(sendCMD@value+1)^(0+128),w
 27253  514B  00D9               	movwf	(sendCMDValue@value+1)^(0+128)
 27254  514C  085F               	movf	sendCMD@value^(0+128),w
 27255  514D  00D8               	movwf	sendCMDValue@value^(0+128)
 27256  514E  0863               	movf	sendCMD@cmd^(0+128),w
 27257  514F  31DF  27CF         	fcall	_sendCMDValue
 27258  5151  0008               	return
 27259  5152                     __end_of_sendCMD:
 27260                           
 27261                           	psect	text17
 27262  5FCF                     __ptext17:	
 27263 ;; *************** function _sendCMDValue *****************
 27264 ;; Defined at:
 27265 ;;		line 38 in file "com.c"
 27266 ;; Parameters:    Size  Location     Type
 27267 ;;  cmd             1    wreg     unsigned char 
 27268 ;;  value           4   56[BANK1 ] unsigned long 
 27269 ;; Auto vars:     Size  Location     Type
 27270 ;;  cmd             1   62[BANK1 ] unsigned char 
 27271 ;; Return value:  Size  Location     Type
 27272 ;;                  1    wreg      void 
 27273 ;; Registers used:
 27274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27275 ;; Tracked objects:
 27276 ;;		On entry : 3C/2
 27277 ;;		On exit  : 3F/0
 27278 ;;		Unchanged: 0/0
 27279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27280 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27281 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27282 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27283 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27284 ;;Total ram usage:        7 bytes
 27285 ;; Hardware stack levels used: 1
 27286 ;; Hardware stack levels required when called: unknown (due to recursion)
 27287 ;; This function calls:
 27288 ;;		_printf
 27289 ;; This function is called by:
 27290 ;;		_sendCMD
 27291 ;;		_exeSerial
 27292 ;; This function uses a non-reentrant model
 27293 ;;
 27294                           
 27295  5FCF                     _sendCMDValue:	
 27296                           ;psect for function _sendCMDValue
 27297                           
 27298                           
 27299                           ;incstack = 0
 27300                           ; Regs used in _sendCMDValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27301                           ;sendCMDValue@cmd stored from wreg
 27302  5FCF  0141               	movlb	1	; select bank1
 27303  5FD0  00DE               	movwf	sendCMDValue@cmd^(0+128)
 27304                           
 27305                           ;com.c: 39: printf("[%c%lu]\n",cmd,value);
 27306  5FD1  3067               	movlw	low (STR_24| (0+32768))
 27307  5FD2  00CA               	movwf	printf@f^(0+128)
 27308  5FD3  30E1               	movlw	high (STR_24| (0+32768))
 27309  5FD4  00CB               	movwf	(printf@f^(0+128)+1)
 27310  5FD5  085E               	movf	sendCMDValue@cmd^(0+128),w
 27311  5FD6  00DC               	movwf	??_sendCMDValue^(0+128)
 27312  5FD7  01DD               	clrf	(??_sendCMDValue^(0+128)+1)
 27313  5FD8  085C               	movf	??_sendCMDValue^(0+128),w
 27314  5FD9  00CC               	movwf	(?_printf^(0+128)+2)
 27315  5FDA  085D               	movf	(??_sendCMDValue+1)^(0+128),w
 27316  5FDB  00CD               	movwf	((?_printf+1)^(0+128)+2)
 27317  5FDC  085B               	movf	(sendCMDValue@value+3)^(0+128),w
 27318  5FDD  00D1               	movwf	((?_printf+3)^(0+128)+4)
 27319  5FDE  085A               	movf	(sendCMDValue@value+2)^(0+128),w
 27320  5FDF  00D0               	movwf	((?_printf+2)^(0+128)+4)
 27321  5FE0  0859               	movf	(sendCMDValue@value+1)^(0+128),w
 27322  5FE1  00CF               	movwf	((?_printf+1)^(0+128)+4)
 27323  5FE2  0858               	movf	sendCMDValue@value^(0+128),w
 27324  5FE3  00CE               	movwf	(?_printf^(0+128)+4)
 27325  5FE4  31D0  203B         	fcall	_printf
 27326  5FE6  0008               	return
 27327  5FE7                     __end_of_sendCMDValue:
 27328                           
 27329                           	psect	text18
 27330  503B                     __ptext18:	
 27331 ;; *************** function _printf *****************
 27332 ;; Defined at:
 27333 ;;		line 13 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\printf.c"
 27334 ;; Parameters:    Size  Location     Type
 27335 ;;  f               2   42[BANK1 ] PTR const unsigned char 
 27336 ;;		 -> STR_24(9), STR_5(6), STR_2(6), 
 27337 ;; Auto vars:     Size  Location     Type
 27338 ;;  pb              4   52[BANK1 ] struct __prbuf
 27339 ;;  ap              1   51[BANK1 ] PTR void [1]
 27340 ;;		 -> ?_sprintf(2), ?_printf(2), 
 27341 ;; Return value:  Size  Location     Type
 27342 ;;                  2   42[BANK1 ] int 
 27343 ;; Registers used:
 27344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27345 ;; Tracked objects:
 27346 ;;		On entry : 3F/1
 27347 ;;		On exit  : 3F/0
 27348 ;;		Unchanged: 0/0
 27349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27350 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27351 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27352 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27353 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27354 ;;Total ram usage:       14 bytes
 27355 ;; Hardware stack levels used: 1
 27356 ;; Hardware stack levels required when called: unknown (due to recursion)
 27357 ;; This function calls:
 27358 ;;		__doprnt
 27359 ;; This function is called by:
 27360 ;;		_main
 27361 ;;		_sendCMDValue
 27362 ;; This function uses a non-reentrant model
 27363 ;;
 27364                           
 27365  503B                     _printf:	
 27366                           ;psect for function _printf
 27367                           
 27368                           
 27369                           ;incstack = 0
 27370                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27371  503B  01D4               	clrf	printf@pb^(0+128)
 27372  503C  01D5               	clrf	(printf@pb+1)^(0+128)
 27373  503D  3059               	movlw	low _putch
 27374  503E  00D6               	movwf	(low ((printf@pb| 0+2)))^(0+128)
 27375  503F  305E               	movlw	high _putch
 27376  5040  00D7               	movwf	((low ((printf@pb| 0+2)))^(0+128)+1)
 27377  5041  30CC               	movlw	(low ((?_printf| 0+2)))& (0+255)
 27378  5042  00D2               	movwf	??_printf^(0+128)
 27379  5043  0852               	movf	??_printf^(0+128),w
 27380  5044  00D3               	movwf	printf@ap^(0+128)
 27381                           
 27382                           ;	Return value of _printf is never used
 27383  5045  084B               	movf	(printf@f+1)^(0+128),w
 27384  5046  0140               	movlb	0	; select bank0
 27385  5047  00EE               	movwf	__doprnt@f+1
 27386  5048  0141               	movlb	1	; select bank1
 27387  5049  084A               	movf	printf@f^(0+128),w
 27388  504A  0140               	movlb	0	; select bank0
 27389  504B  00ED               	movwf	__doprnt@f
 27390  504C  30D3               	movlw	(low (printf@ap| 0))& (0+255)
 27391  504D  0141               	movlb	1	; select bank1
 27392  504E  00D2               	movwf	??_printf^(0+128)
 27393  504F  0852               	movf	??_printf^(0+128),w
 27394  5050  0140               	movlb	0	; select bank0
 27395  5051  00EF               	movwf	__doprnt@ap
 27396  5052  30D4               	movlw	(low (printf@pb| 0))& (0+255)
 27397  5053  31A0  205D         	fcall	__doprnt
 27398  5055  0008               	return
 27399  5056                     __end_of_printf:
 27400                           
 27401                           	psect	text19
 27402  205D                     __ptext19:	
 27403 ;; *************** function __doprnt *****************
 27404 ;; Defined at:
 27405 ;;		line 471 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;  pb              1    wreg     PTR struct __prbuf
 27408 ;;		 -> sprintf@pb(4), printf@pb(4), 
 27409 ;;  f               2   77[BANK0 ] PTR const unsigned char 
 27410 ;;		 -> STR_48(2), STR_47(15), STR_46(2), STR_45(10), 
 27411 ;;		 -> STR_44(6), STR_43(13), STR_42(15), STR_41(11), 
 27412 ;;		 -> STR_40(15), STR_39(12), STR_38(15), STR_37(14), 
 27413 ;;		 -> STR_36(15), STR_35(14), STR_34(10), STR_33(11), 
 27414 ;;		 -> STR_32(16), STR_31(11), STR_30(15), STR_29(16), 
 27415 ;;		 -> STR_28(17), STR_26(12), STR_25(21), STR_24(9), 
 27416 ;;		 -> STR_9(14), STR_7(12), STR_6(12), STR_5(6), 
 27417 ;;		 -> STR_3(13), STR_2(6), 
 27418 ;;  ap              1   79[BANK0 ] PTR PTR void 
 27419 ;;		 -> sprintf@ap(1), printf@ap(1), 
 27420 ;; Auto vars:     Size  Location     Type
 27421 ;;  pb              1   41[BANK1 ] PTR struct __prbuf
 27422 ;;		 -> sprintf@pb(4), printf@pb(4), 
 27423 ;;  fval            4   34[BANK1 ] PTR struct __prbuf
 27424 ;;  tmpval          4   30[BANK1 ] struct .
 27425 ;;  val             4   26[BANK1 ] unsigned long 
 27426 ;;  prec            2   38[BANK1 ] int 
 27427 ;;  eexp            2   24[BANK1 ] int 
 27428 ;;  flag            2   22[BANK1 ] unsigned short 
 27429 ;;  cp              2   20[BANK1 ] PTR const unsigned char 
 27430 ;;		 -> step.Pos(4), step.Speed(4), ?_sprintf(2), STR_49(7), 
 27431 ;;		 -> _doprnt@c(1), ?_printf(2), NULL(0), str2(20), 
 27432 ;;		 -> str1(20), str(20), 
 27433 ;;  len             2   18[BANK1 ] unsigned int 
 27434 ;;  width           2    0        int 
 27435 ;;  c               1   40[BANK1 ] unsigned char 
 27436 ;;  d               1    0        unsigned char 
 27437 ;; Return value:  Size  Location     Type
 27438 ;;                  2   77[BANK0 ] int 
 27439 ;; Registers used:
 27440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27441 ;; Tracked objects:
 27442 ;;		On entry : 3F/0
 27443 ;;		On exit  : 3F/0
 27444 ;;		Unchanged: 0/0
 27445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27446 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27447 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27448 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27449 ;;      Totals:         0       3      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27450 ;;Total ram usage:       37 bytes
 27451 ;; Hardware stack levels used: 1
 27452 ;; Hardware stack levels required when called: unknown (due to recursion)
 27453 ;; This function calls:
 27454 ;;		Absolute function
 27455 ;;		___awdiv
 27456 ;;		___fladd
 27457 ;;		___fleq
 27458 ;;		___flge
 27459 ;;		___flmul
 27460 ;;		___flneg
 27461 ;;		___flsub
 27462 ;;		___fltol
 27463 ;;		___lldiv
 27464 ;;		___llmod
 27465 ;;		___wmul
 27466 ;;		___xxtofl
 27467 ;;		__div_to_l_
 27468 ;;		__tdiv_to_l_
 27469 ;;		_fround
 27470 ;;		_isdigit
 27471 ;;		_putch
 27472 ;;		_scale
 27473 ;; This function is called by:
 27474 ;;		_printf
 27475 ;;		_sprintf
 27476 ;; This function uses a non-reentrant model
 27477 ;;
 27478                           
 27479  205D                     __doprnt:	
 27480                           ;psect for function __doprnt
 27481                           
 27482                           
 27483                           ;incstack = 0
 27484                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27485                           ;__doprnt@pb stored from wreg
 27486  205D  0141               	movlb	1	; select bank1
 27487  205E  00C9               	movwf	__doprnt@pb^(0+128)
 27488  205F                     l10392:	
 27489                           ;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 517: int prec;;doprnt.c: 525
      +                          : unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534:
      +                           int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double
      +                           integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsign
      +                          ed len;;doprnt.c: 547: const char * cp;;doprnt.c: 553: while((c = *f++)) {
 27490                           
 27491  205F  0140               	movlb	0	; select bank0
 27492  2060  086E               	movf	__doprnt@f+1,w
 27493  2061  0141               	movlb	1	; select bank1
 27494  2062  00A9               	movwf	(??__doprnt^(0+128)+1)
 27495  2063  0140               	movlb	0	; select bank0
 27496  2064  086D               	movf	__doprnt@f,w
 27497  2065  0141               	movlb	1	; select bank1
 27498  2066  00A8               	movwf	??__doprnt^(0+128)
 27499  2067  0140               	movlb	0	; select bank0
 27500  2068  0AED               	incf	__doprnt@f,f
 27501  2069  1903               	skipnz
 27502  206A  0AEE               	incf	__doprnt@f+1,f
 27503  206B  0141               	movlb	1	; select bank1
 27504  206C  0828               	movf	??__doprnt^(0+128),w
 27505  206D  0084               	movwf	4
 27506  206E  0829               	movf	(??__doprnt+1)^(0+128),w
 27507  206F  0085               	movwf	5
 27508  2070  0800               	movf	0,w	;code access
 27509  2071  00AA               	movwf	(??__doprnt+2)^(0+128)
 27510  2072  082A               	movf	(??__doprnt+2)^(0+128),w
 27511  2073  00C8               	movwf	__doprnt@c^(0+128)
 27512  2074  0848               	movf	__doprnt@c^(0+128),w
 27513  2075  1903               	btfsc	3,2
 27514  2076  2FFC               	goto	l10394
 27515                           
 27516                           ;doprnt.c: 555: if(c != '%')
 27517  2077  3025               	movlw	37
 27518  2078  0648               	xorwf	__doprnt@c^(0+128),w
 27519  2079  1903               	btfsc	3,2
 27520  207A  28A8               	goto	l10104
 27521  207B  0849               	movf	__doprnt@pb^(0+128),w
 27522  207C  3E02               	addlw	2
 27523  207D  0086               	movwf	6
 27524  207E  0187               	clrf	7
 27525  207F  0016               	moviw fsr1++
 27526  2080  0401               	iorwf	1,w
 27527  2081  1903               	btfsc	3,2
 27528  2082  2892               	goto	l10100
 27529  2083  0848               	movf	__doprnt@c^(0+128),w
 27530  2084  00A8               	movwf	??__doprnt^(0+128)
 27531  2085  0828               	movf	??__doprnt^(0+128),w
 27532  2086  00F3               	movwf	putch@txData
 27533  2087  0849               	movf	__doprnt@pb^(0+128),w
 27534  2088  3E02               	addlw	2
 27535  2089  0086               	movwf	6
 27536  208A  0187               	clrf	7
 27537  208B  3F41               	moviw [1]fsr1
 27538  208C  008A               	movwf	10
 27539  208D  3F40               	moviw [0]fsr1
 27540  208E  000A               	callw
 27541  208F  31A0               	pagesel	$
 27542  2090  0141               	movlb	1	; select bank1
 27543  2091  285F               	goto	l10392
 27544  2092                     l10100:
 27545  2092  0849               	movf	__doprnt@pb^(0+128),w
 27546  2093  0086               	movwf	6
 27547  2094  0187               	clrf	7
 27548  2095  3F40               	moviw [0]fsr1
 27549  2096  00A8               	movwf	??__doprnt^(0+128)
 27550  2097  3F41               	moviw [1]fsr1
 27551  2098  00A9               	movwf	(??__doprnt^(0+128)+1)
 27552  2099  0828               	movf	??__doprnt^(0+128),w
 27553  209A  0086               	movwf	6
 27554  209B  0829               	movf	(??__doprnt+1)^(0+128),w
 27555  209C  0087               	movwf	7
 27556  209D  0848               	movf	__doprnt@c^(0+128),w
 27557  209E  0081               	movwf	1
 27558  209F  0849               	movf	__doprnt@pb^(0+128),w
 27559  20A0  0086               	movwf	6
 27560  20A1  0187               	clrf	7
 27561  20A2  3001               	movlw	1
 27562  20A3  0781               	addwf	1,f
 27563  20A4  3141               	addfsr 1,1
 27564  20A5  1803               	skipnc
 27565  20A6  0A81               	incf	1,f
 27566  20A7  285F               	goto	l10392
 27567  20A8                     l10104:
 27568                           
 27569                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
 27570  20A8  01B6               	clrf	__doprnt@flag^(0+128)
 27571  20A9  01B7               	clrf	(__doprnt@flag+1)^(0+128)
 27572                           
 27573                           ;doprnt.c: 628: if(*f == '.') {
 27574  20AA  0140               	movlb	0	; select bank0
 27575  20AB  086D               	movf	__doprnt@f,w
 27576  20AC  0084               	movwf	4
 27577  20AD  086E               	movf	__doprnt@f+1,w
 27578  20AE  0085               	movwf	5
 27579  20AF  0012               	moviw fsr0++
 27580  20B0  3A2E               	xorlw	46
 27581  20B1  1D03               	btfss	3,2
 27582  20B2  28EF               	goto	l10122
 27583                           
 27584                           ;doprnt.c: 629: flag |= 0x4000;
 27585  20B3  0141               	movlb	1	; select bank1
 27586  20B4  1737               	bsf	(__doprnt@flag^(0+128)+1),6
 27587                           
 27588                           ;doprnt.c: 630: f++;
 27589  20B5  3001               	movlw	1
 27590  20B6  0140               	movlb	0	; select bank0
 27591  20B7  07ED               	addwf	__doprnt@f,f
 27592  20B8  3000               	movlw	0
 27593  20B9  3DEE               	addwfc	__doprnt@f+1,f
 27594                           
 27595                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 27596  20BA  0141               	movlb	1	; select bank1
 27597  20BB  01C6               	clrf	__doprnt@prec^(0+128)
 27598  20BC  01C7               	clrf	(__doprnt@prec+1)^(0+128)
 27599  20BD                     l10120:	
 27600                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 27601                           
 27602  20BD  0140               	movlb	0	; select bank0
 27603  20BE  086D               	movf	__doprnt@f,w
 27604  20BF  0084               	movwf	4
 27605  20C0  086E               	movf	__doprnt@f+1,w
 27606  20C1  0085               	movwf	5
 27607  20C2  0800               	movf	0,w	;code access
 27608  20C3  31DE  26E1  31A0   	fcall	_isdigit
 27609  20C6  1C03               	btfss	3,0
 27610  20C7  2995               	goto	l10166
 27611                           
 27612                           ;doprnt.c: 647: prec *= 10;
 27613  20C8  300A               	movlw	10
 27614  20C9  00F1               	movwf	___wmul@multiplier
 27615  20CA  3000               	movlw	0
 27616  20CB  00F2               	movwf	___wmul@multiplier+1
 27617  20CC  0141               	movlb	1	; select bank1
 27618  20CD  0847               	movf	(__doprnt@prec+1)^(0+128),w
 27619  20CE  00F4               	movwf	___wmul@multiplicand+1
 27620  20CF  0846               	movf	__doprnt@prec^(0+128),w
 27621  20D0  00F3               	movwf	___wmul@multiplicand
 27622  20D1  31D0  2020  31A0   	fcall	___wmul
 27623  20D4  0872               	movf	?___wmul+1,w
 27624  20D5  00C7               	movwf	(__doprnt@prec+1)^(0+128)
 27625  20D6  0871               	movf	?___wmul,w
 27626  20D7  00C6               	movwf	__doprnt@prec^(0+128)
 27627                           
 27628                           ;doprnt.c: 648: prec += *f++ - '0';
 27629  20D8  0140               	movlb	0	; select bank0
 27630  20D9  086D               	movf	__doprnt@f,w
 27631  20DA  0084               	movwf	4
 27632  20DB  086E               	movf	__doprnt@f+1,w
 27633  20DC  0085               	movwf	5
 27634  20DD  0800               	movf	0,w	;code access
 27635  20DE  3ED0               	addlw	208
 27636  20DF  0141               	movlb	1	; select bank1
 27637  20E0  00A8               	movwf	??__doprnt^(0+128)
 27638  20E1  30FF               	movlw	255
 27639  20E2  1803               	skipnc
 27640  20E3  3000               	movlw	0
 27641  20E4  00A9               	movwf	(??__doprnt^(0+128)+1)
 27642  20E5  0828               	movf	??__doprnt^(0+128),w
 27643  20E6  07C6               	addwf	__doprnt@prec^(0+128),f
 27644  20E7  0829               	movf	(??__doprnt+1)^(0+128),w
 27645  20E8  3DC7               	addwfc	(__doprnt@prec+1)^(0+128),f
 27646  20E9  3001               	movlw	1
 27647  20EA  0140               	movlb	0	; select bank0
 27648  20EB  07ED               	addwf	__doprnt@f,f
 27649  20EC  3000               	movlw	0
 27650  20ED  3DEE               	addwfc	__doprnt@f+1,f
 27651  20EE  28BD               	goto	l10120
 27652  20EF                     l10122:
 27653                           
 27654                           ;doprnt.c: 652: prec = 0;
 27655  20EF  0141               	movlb	1	; select bank1
 27656  20F0  01C6               	clrf	__doprnt@prec^(0+128)
 27657  20F1  01C7               	clrf	(__doprnt@prec+1)^(0+128)
 27658                           
 27659                           ;doprnt.c: 654: flag |= 0x1000;
 27660  20F2  1637               	bsf	(__doprnt@flag^(0+128)+1),4
 27661  20F3  2995               	goto	l10166
 27662  20F4                     l2266:	
 27663                           ;doprnt.c: 667: case 'l':
 27664                           
 27665                           
 27666                           ;doprnt.c: 669: flag |= 0x10;
 27667  20F4  1636               	bsf	__doprnt@flag^(0+128),4
 27668                           
 27669                           ;doprnt.c: 670: goto loop;
 27670  20F5  2995               	goto	l10166
 27671  20F6                     l2267:	
 27672                           ;doprnt.c: 688: case 'f':
 27673                           
 27674                           
 27675                           ;doprnt.c: 689: flag |= 0x400;
 27676  20F6  1537               	bsf	(__doprnt@flag^(0+128)+1),2
 27677                           
 27678                           ;doprnt.c: 690: break;
 27679  20F7  29C1               	goto	l10168
 27680  20F8                     l10126:
 27681                           
 27682                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 27683  20F8  0140               	movlb	0	; select bank0
 27684  20F9  086F               	movf	__doprnt@ap,w
 27685  20FA  0086               	movwf	6
 27686  20FB  0187               	clrf	7
 27687  20FC  0801               	movf	1,w
 27688  20FD  0084               	movwf	4
 27689  20FE  0185               	clrf	5
 27690  20FF  3002               	movlw	2
 27691  2100  0781               	addwf	1,f
 27692  2101  3F00               	moviw [0]fsr0
 27693  2102  0141               	movlb	1	; select bank1
 27694  2103  00B4               	movwf	__doprnt@cp^(0+128)
 27695  2104  3F01               	moviw [1]fsr0
 27696  2105  00B5               	movwf	(__doprnt@cp+1)^(0+128)
 27697                           
 27698                           ;doprnt.c: 766: if(!cp)
 27699  2106  0834               	movf	__doprnt@cp^(0+128),w
 27700  2107  0435               	iorwf	(__doprnt@cp+1)^(0+128),w
 27701  2108  1D03               	btfss	3,2
 27702  2109  290E               	goto	l10132
 27703                           
 27704                           ;doprnt.c: 767: cp = "(null)";
 27705  210A  3092               	movlw	low (STR_49| (0+32768))
 27706  210B  00B4               	movwf	__doprnt@cp^(0+128)
 27707  210C  30E1               	movlw	high (STR_49| (0+32768))
 27708  210D  00B5               	movwf	(__doprnt@cp^(0+128)+1)
 27709  210E                     l10132:
 27710                           
 27711                           ;doprnt.c: 771: len = 0;
 27712  210E  01B2               	clrf	__doprnt@len^(0+128)
 27713  210F  01B3               	clrf	(__doprnt@len+1)^(0+128)
 27714  2110                     l10136:	
 27715                           ;doprnt.c: 772: while(cp[len])
 27716                           
 27717  2110  0834               	movf	__doprnt@cp^(0+128),w
 27718  2111  0732               	addwf	__doprnt@len^(0+128),w
 27719  2112  0084               	movwf	4
 27720  2113  0835               	movf	(__doprnt@cp+1)^(0+128),w
 27721  2114  3D33               	addwfc	(__doprnt@len+1)^(0+128),w
 27722  2115  0085               	movwf	5
 27723  2116  0012               	moviw fsr0++
 27724  2117  1903               	btfsc	3,2
 27725  2118  291E               	goto	l10138
 27726                           
 27727                           ;doprnt.c: 773: len++;
 27728  2119  3001               	movlw	1
 27729  211A  07B2               	addwf	__doprnt@len^(0+128),f
 27730  211B  3000               	movlw	0
 27731  211C  3DB3               	addwfc	(__doprnt@len+1)^(0+128),f
 27732  211D  2910               	goto	l10136
 27733  211E                     l10138:
 27734                           
 27735                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
 27736  211E  0846               	movf	__doprnt@prec^(0+128),w
 27737  211F  0447               	iorwf	(__doprnt@prec+1)^(0+128),w
 27738  2120  1903               	btfsc	3,2
 27739  2121  2933               	goto	l10156
 27740  2122  0847               	movf	(__doprnt@prec+1)^(0+128),w
 27741  2123  3A80               	xorlw	128
 27742  2124  00A8               	movwf	??__doprnt^(0+128)
 27743  2125  0833               	movf	(__doprnt@len+1)^(0+128),w
 27744  2126  3A80               	xorlw	128
 27745  2127  0228               	subwf	??__doprnt^(0+128),w
 27746  2128  1D03               	skipz
 27747  2129  292C               	goto	u11475
 27748  212A  0832               	movf	__doprnt@len^(0+128),w
 27749  212B  0246               	subwf	__doprnt@prec^(0+128),w
 27750  212C                     u11475:
 27751  212C  1803               	skipnc
 27752  212D  2933               	goto	l10156
 27753                           
 27754                           ;doprnt.c: 780: len = (unsigned int)prec;
 27755  212E  0141               	movlb	1	; select bank1
 27756  212F  0847               	movf	(__doprnt@prec+1)^(0+128),w
 27757  2130  00B3               	movwf	(__doprnt@len+1)^(0+128)
 27758  2131  0846               	movf	__doprnt@prec^(0+128),w
 27759  2132  00B2               	movwf	__doprnt@len^(0+128)
 27760  2133                     l10156:
 27761  2133  3001               	movlw	1
 27762  2134  0141               	movlb	1	; select bank1
 27763  2135  02B2               	subwf	__doprnt@len^(0+128),f
 27764  2136  3000               	movlw	0
 27765  2137  3BB3               	subwfb	(__doprnt@len+1)^(0+128),f
 27766  2138  0A32               	incf	__doprnt@len^(0+128),w
 27767  2139  1903               	btfsc	3,2
 27768  213A  0A33               	incf	(__doprnt@len+1)^(0+128),w
 27769  213B  1903               	btfsc	3,2
 27770  213C  285F               	goto	l10392
 27771  213D  0849               	movf	__doprnt@pb^(0+128),w
 27772  213E  3E02               	addlw	2
 27773  213F  0086               	movwf	6
 27774  2140  0187               	clrf	7
 27775  2141  0016               	moviw fsr1++
 27776  2142  0401               	iorwf	1,w
 27777  2143  1903               	btfsc	3,2
 27778  2144  295C               	goto	l10150
 27779  2145  0834               	movf	__doprnt@cp^(0+128),w
 27780  2146  0084               	movwf	4
 27781  2147  0835               	movf	(__doprnt@cp+1)^(0+128),w
 27782  2148  0085               	movwf	5
 27783  2149  0800               	movf	0,w	;code access
 27784  214A  00A8               	movwf	??__doprnt^(0+128)
 27785  214B  0828               	movf	??__doprnt^(0+128),w
 27786  214C  00F3               	movwf	putch@txData
 27787  214D  0849               	movf	__doprnt@pb^(0+128),w
 27788  214E  3E02               	addlw	2
 27789  214F  0086               	movwf	6
 27790  2150  0187               	clrf	7
 27791  2151  3F41               	moviw [1]fsr1
 27792  2152  008A               	movwf	10
 27793  2153  3F40               	moviw [0]fsr1
 27794  2154  000A               	callw
 27795  2155  31A0               	pagesel	$
 27796  2156  3001               	movlw	1
 27797  2157  0141               	movlb	1	; select bank1
 27798  2158  07B4               	addwf	__doprnt@cp^(0+128),f
 27799  2159  3000               	movlw	0
 27800  215A  3DB5               	addwfc	(__doprnt@cp+1)^(0+128),f
 27801  215B  2933               	goto	l10156
 27802  215C                     l10150:
 27803  215C  0834               	movf	__doprnt@cp^(0+128),w
 27804  215D  0084               	movwf	4
 27805  215E  0835               	movf	(__doprnt@cp+1)^(0+128),w
 27806  215F  0085               	movwf	5
 27807  2160  0800               	movf	0,w	;code access
 27808  2161  00A8               	movwf	??__doprnt^(0+128)
 27809  2162  0849               	movf	__doprnt@pb^(0+128),w
 27810  2163  0086               	movwf	6
 27811  2164  0187               	clrf	7
 27812  2165  3F40               	moviw [0]fsr1
 27813  2166  00A9               	movwf	(??__doprnt+1)^(0+128)
 27814  2167  3F41               	moviw [1]fsr1
 27815  2168  00AA               	movwf	((??__doprnt+1)^(0+128)+1)
 27816  2169  0829               	movf	(??__doprnt+1)^(0+128),w
 27817  216A  0086               	movwf	6
 27818  216B  082A               	movf	(??__doprnt+2)^(0+128),w
 27819  216C  0087               	movwf	7
 27820  216D  0828               	movf	??__doprnt^(0+128),w
 27821  216E  0081               	movwf	1
 27822  216F  3001               	movlw	1
 27823  2170  07B4               	addwf	__doprnt@cp^(0+128),f
 27824  2171  3000               	movlw	0
 27825  2172  3DB5               	addwfc	(__doprnt@cp+1)^(0+128),f
 27826  2173  0849               	movf	__doprnt@pb^(0+128),w
 27827  2174  0086               	movwf	6
 27828  2175  0187               	clrf	7
 27829  2176  3001               	movlw	1
 27830  2177  0781               	addwf	1,f
 27831  2178  3141               	addfsr 1,1
 27832  2179  1803               	skipnc
 27833  217A  0A81               	incf	1,f
 27834  217B  2933               	goto	l10156
 27835  217C                     l10158:
 27836                           
 27837                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 27838  217C  0140               	movlb	0	; select bank0
 27839  217D  086F               	movf	__doprnt@ap,w
 27840  217E  0086               	movwf	6
 27841  217F  0187               	clrf	7
 27842  2180  0801               	movf	1,w
 27843  2181  0084               	movwf	4
 27844  2182  0185               	clrf	5
 27845  2183  3002               	movlw	2
 27846  2184  0781               	addwf	1,f
 27847  2185  0800               	movf	0,w
 27848  2186  0141               	movlb	1	; select bank1
 27849  2187  00A8               	movwf	??__doprnt^(0+128)
 27850  2188  0828               	movf	??__doprnt^(0+128),w
 27851  2189  00C8               	movwf	__doprnt@c^(0+128)
 27852  218A                     l10160:
 27853                           
 27854                           ;doprnt.c: 831: cp = (char *)&c;
 27855  218A  30C8               	movlw	low __doprnt@c
 27856  218B  00B4               	movwf	__doprnt@cp^(0+128)
 27857  218C  3000               	movlw	high __doprnt@c
 27858  218D  00B5               	movwf	(__doprnt@cp+1)^(0+128)
 27859                           
 27860                           ;doprnt.c: 832: len = 1;
 27861  218E  3001               	movlw	1
 27862  218F  00B2               	movwf	__doprnt@len^(0+128)
 27863  2190  3000               	movlw	0
 27864  2191  00B3               	movwf	(__doprnt@len^(0+128)+1)
 27865                           
 27866                           ;doprnt.c: 833: goto dostring;
 27867  2192  291E               	goto	l10138
 27868  2193                     l2287:	
 27869                           ;doprnt.c: 843: case 'u':
 27870                           
 27871                           
 27872                           ;doprnt.c: 844: flag |= 0x40;
 27873  2193  1736               	bsf	__doprnt@flag^(0+128),6
 27874                           
 27875                           ;doprnt.c: 845: break;
 27876  2194  29C1               	goto	l10168
 27877  2195                     l10166:
 27878  2195  0140               	movlb	0	; select bank0
 27879  2196  086E               	movf	__doprnt@f+1,w
 27880  2197  0141               	movlb	1	; select bank1
 27881  2198  00A9               	movwf	(??__doprnt^(0+128)+1)
 27882  2199  0140               	movlb	0	; select bank0
 27883  219A  086D               	movf	__doprnt@f,w
 27884  219B  0141               	movlb	1	; select bank1
 27885  219C  00A8               	movwf	??__doprnt^(0+128)
 27886  219D  0140               	movlb	0	; select bank0
 27887  219E  0AED               	incf	__doprnt@f,f
 27888  219F  1903               	skipnz
 27889  21A0  0AEE               	incf	__doprnt@f+1,f
 27890  21A1  0141               	movlb	1	; select bank1
 27891  21A2  0828               	movf	??__doprnt^(0+128),w
 27892  21A3  0084               	movwf	4
 27893  21A4  0829               	movf	(??__doprnt+1)^(0+128),w
 27894  21A5  0085               	movwf	5
 27895  21A6  0800               	movf	0,w	;code access
 27896  21A7  00C8               	movwf	__doprnt@c^(0+128)
 27897                           
 27898                           ; Switch size 1, requested type "simple"
 27899                           ; Number of cases is 8, Range of values is 0 to 117
 27900                           ; switch strategies available:
 27901                           ; Name         Instructions Cycles
 27902                           ; simple_byte           25    13 (average)
 27903                           ; direct_byte          242     6 (fixed)
 27904                           ; jumptable            260     6 (fixed)
 27905                           ;	Chosen strategy is simple_byte
 27906  21A8  3A00               	xorlw	0	; case 0
 27907  21A9  1903               	skipnz
 27908  21AA  2FFC               	goto	l10394
 27909  21AB  3A63               	xorlw	99	; case 99
 27910  21AC  1903               	skipnz
 27911  21AD  297C               	goto	l10158
 27912  21AE  3A07               	xorlw	7	; case 100
 27913  21AF  1903               	skipnz
 27914  21B0  29C1               	goto	l10168
 27915  21B1  3A02               	xorlw	2	; case 102
 27916  21B2  1903               	skipnz
 27917  21B3  28F6               	goto	l2267
 27918  21B4  3A0F               	xorlw	15	; case 105
 27919  21B5  1903               	skipnz
 27920  21B6  29C1               	goto	l10168
 27921  21B7  3A05               	xorlw	5	; case 108
 27922  21B8  1903               	skipnz
 27923  21B9  28F4               	goto	l2266
 27924  21BA  3A1F               	xorlw	31	; case 115
 27925  21BB  1903               	skipnz
 27926  21BC  28F8               	goto	l10126
 27927  21BD  3A06               	xorlw	6	; case 117
 27928  21BE  1903               	skipnz
 27929  21BF  2993               	goto	l2287
 27930  21C0  298A               	goto	l10160
 27931  21C1                     l10168:
 27932                           
 27933                           ;doprnt.c: 851: if(flag & (0x700)) {
 27934  21C1  3000               	movlw	0
 27935  21C2  0536               	andwf	__doprnt@flag^(0+128),w
 27936  21C3  00A8               	movwf	??__doprnt^(0+128)
 27937  21C4  3007               	movlw	7
 27938  21C5  0537               	andwf	(__doprnt@flag+1)^(0+128),w
 27939  21C6  00A9               	movwf	(??__doprnt+1)^(0+128)
 27940  21C7  0828               	movf	??__doprnt^(0+128),w
 27941  21C8  0429               	iorwf	(??__doprnt^(0+128)+1),w
 27942  21C9  1903               	btfsc	3,2
 27943  21CA  2E9F               	goto	l2288
 27944                           
 27945                           ;doprnt.c: 853: if(flag & 0x1000)
 27946  21CB  1E37               	btfss	(__doprnt@flag+1)^(0+128),4
 27947  21CC  29D1               	goto	l10174
 27948                           
 27949                           ;doprnt.c: 855: prec = 6;
 27950  21CD  3006               	movlw	6
 27951  21CE  00C6               	movwf	__doprnt@prec^(0+128)
 27952  21CF  3000               	movlw	0
 27953  21D0  00C7               	movwf	(__doprnt@prec^(0+128)+1)
 27954  21D1                     l10174:
 27955                           
 27956                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 27957  21D1  0140               	movlb	0	; select bank0
 27958  21D2  086F               	movf	__doprnt@ap,w
 27959  21D3  0086               	movwf	6
 27960  21D4  0187               	clrf	7
 27961  21D5  0801               	movf	1,w
 27962  21D6  0084               	movwf	4
 27963  21D7  0185               	clrf	5
 27964  21D8  3004               	movlw	4
 27965  21D9  0781               	addwf	1,f
 27966  21DA  3F00               	moviw [0]fsr0
 27967  21DB  0141               	movlb	1	; select bank1
 27968  21DC  00C2               	movwf	__doprnt@fval^(0+128)
 27969  21DD  3F01               	moviw [1]fsr0
 27970  21DE  00C3               	movwf	(__doprnt@fval+1)^(0+128)
 27971  21DF  3F02               	moviw [2]fsr0
 27972  21E0  00C4               	movwf	(__doprnt@fval+2)^(0+128)
 27973  21E1  3F03               	moviw [3]fsr0
 27974  21E2  00C5               	movwf	(__doprnt@fval+3)^(0+128)
 27975                           
 27976                           ;doprnt.c: 857: if(fval < 0.0) {
 27977  21E3  0845               	movf	(__doprnt@fval+3)^(0+128),w
 27978  21E4  00A3               	movwf	(___flge@ff1+3)^(0+128)
 27979  21E5  0844               	movf	(__doprnt@fval+2)^(0+128),w
 27980  21E6  00A2               	movwf	(___flge@ff1+2)^(0+128)
 27981  21E7  0843               	movf	(__doprnt@fval+1)^(0+128),w
 27982  21E8  00A1               	movwf	(___flge@ff1+1)^(0+128)
 27983  21E9  0842               	movf	__doprnt@fval^(0+128),w
 27984  21EA  00A0               	movwf	___flge@ff1^(0+128)
 27985  21EB  3000               	movlw	0
 27986  21EC  00A7               	movwf	(___flge@ff2+3)^(0+128)
 27987  21ED  3000               	movlw	0
 27988  21EE  00A6               	movwf	(___flge@ff2+2)^(0+128)
 27989  21EF  3000               	movlw	0
 27990  21F0  00A5               	movwf	(___flge@ff2+1)^(0+128)
 27991  21F1  3000               	movlw	0
 27992  21F2  00A4               	movwf	___flge@ff2^(0+128)
 27993  21F3  31CD  2551  31A0   	fcall	___flge
 27994  21F6  1803               	btfsc	3,0
 27995  21F7  2A0F               	goto	l10182
 27996                           
 27997                           ;doprnt.c: 858: fval = -fval;
 27998  21F8  0845               	movf	(__doprnt@fval+3)^(0+128),w
 27999  21F9  00F4               	movwf	___flneg@f1+3
 28000  21FA  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28001  21FB  00F3               	movwf	___flneg@f1+2
 28002  21FC  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28003  21FD  00F2               	movwf	___flneg@f1+1
 28004  21FE  0842               	movf	__doprnt@fval^(0+128),w
 28005  21FF  00F1               	movwf	___flneg@f1
 28006  2200  319C  2488  31A0   	fcall	___flneg
 28007  2203  0874               	movf	?___flneg+3,w
 28008  2204  00C5               	movwf	(__doprnt@fval+3)^(0+128)
 28009  2205  0873               	movf	?___flneg+2,w
 28010  2206  00C4               	movwf	(__doprnt@fval+2)^(0+128)
 28011  2207  0872               	movf	?___flneg+1,w
 28012  2208  00C3               	movwf	(__doprnt@fval+1)^(0+128)
 28013  2209  0871               	movf	?___flneg,w
 28014  220A  00C2               	movwf	__doprnt@fval^(0+128)
 28015                           
 28016                           ;doprnt.c: 859: flag |= 0x03;
 28017  220B  3003               	movlw	3
 28018  220C  04B6               	iorwf	__doprnt@flag^(0+128),f
 28019  220D  3000               	movlw	0
 28020  220E  04B7               	iorwf	(__doprnt@flag+1)^(0+128),f
 28021  220F                     l10182:
 28022                           
 28023                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 28024  220F  01B8               	clrf	__doprnt@eexp^(0+128)
 28025  2210  01B9               	clrf	(__doprnt@eexp+1)^(0+128)
 28026                           
 28027                           ;doprnt.c: 862: if( fval!=0) {
 28028  2211  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28029  2212  00F4               	movwf	___fleq@ff1+3
 28030  2213  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28031  2214  00F3               	movwf	___fleq@ff1+2
 28032  2215  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28033  2216  00F2               	movwf	___fleq@ff1+1
 28034  2217  0842               	movf	__doprnt@fval^(0+128),w
 28035  2218  00F1               	movwf	___fleq@ff1
 28036  2219  3000               	movlw	0
 28037  221A  00F8               	movwf	___fleq@ff2+3
 28038  221B  3000               	movlw	0
 28039  221C  00F7               	movwf	___fleq@ff2+2
 28040  221D  3000               	movlw	0
 28041  221E  00F6               	movwf	___fleq@ff2+1
 28042  221F  3000               	movlw	0
 28043  2220  00F5               	movwf	___fleq@ff2
 28044  2221  31D4  24A0  31A0   	fcall	___fleq
 28045  2224  1803               	btfsc	3,0
 28046  2225  2AD0               	goto	l2291
 28047                           
 28048                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 28049  2226  1003               	clrc
 28050  2227  0141               	movlb	1	; select bank1
 28051  2228  0D44               	rlf	(__doprnt@fval+2)^(0+128),w
 28052  2229  0D45               	rlf	(__doprnt@fval+3)^(0+128),w
 28053  222A  3E82               	addlw	130
 28054  222B  00B8               	movwf	__doprnt@eexp^(0+128)
 28055  222C  30FF               	movlw	255
 28056  222D  1803               	skipnc
 28057  222E  3000               	movlw	0
 28058  222F  00B9               	movwf	(__doprnt@eexp^(0+128)+1)
 28059                           
 28060                           ;doprnt.c: 864: eexp--;
 28061  2230  30FF               	movlw	255
 28062  2231  07B8               	addwf	__doprnt@eexp^(0+128),f
 28063  2232  30FF               	movlw	255
 28064  2233  3DB9               	addwfc	(__doprnt@eexp+1)^(0+128),f
 28065                           
 28066                           ;doprnt.c: 865: eexp *= 3;
 28067  2234  3003               	movlw	3
 28068  2235  00F1               	movwf	___wmul@multiplier
 28069  2236  3000               	movlw	0
 28070  2237  00F2               	movwf	___wmul@multiplier+1
 28071  2238  0839               	movf	(__doprnt@eexp+1)^(0+128),w
 28072  2239  00F4               	movwf	___wmul@multiplicand+1
 28073  223A  0838               	movf	__doprnt@eexp^(0+128),w
 28074  223B  00F3               	movwf	___wmul@multiplicand
 28075  223C  31D0  2020  31A0   	fcall	___wmul
 28076  223F  0872               	movf	?___wmul+1,w
 28077  2240  00B9               	movwf	(__doprnt@eexp+1)^(0+128)
 28078  2241  0871               	movf	?___wmul,w
 28079  2242  00B8               	movwf	__doprnt@eexp^(0+128)
 28080                           
 28081                           ;doprnt.c: 866: eexp /= 10;
 28082  2243  300A               	movlw	10
 28083  2244  00F8               	movwf	___awdiv@divisor
 28084  2245  3000               	movlw	0
 28085  2246  00F9               	movwf	___awdiv@divisor+1
 28086  2247  0839               	movf	(__doprnt@eexp+1)^(0+128),w
 28087  2248  00FB               	movwf	___awdiv@dividend+1
 28088  2249  0838               	movf	__doprnt@eexp^(0+128),w
 28089  224A  00FA               	movwf	___awdiv@dividend
 28090  224B  31C8  2008  31A0   	fcall	___awdiv
 28091  224E  0879               	movf	?___awdiv+1,w
 28092  224F  0141               	movlb	1	; select bank1
 28093  2250  00B9               	movwf	(__doprnt@eexp+1)^(0+128)
 28094  2251  0878               	movf	?___awdiv,w
 28095  2252  00B8               	movwf	__doprnt@eexp^(0+128)
 28096                           
 28097                           ;doprnt.c: 867: if(eexp < 0)
 28098  2253  1FB9               	btfss	(__doprnt@eexp+1)^(0+128),7
 28099  2254  2A59               	goto	l10198
 28100                           
 28101                           ;doprnt.c: 868: eexp--;
 28102  2255  30FF               	movlw	255
 28103  2256  07B8               	addwf	__doprnt@eexp^(0+128),f
 28104  2257  30FF               	movlw	255
 28105  2258  3DB9               	addwfc	(__doprnt@eexp+1)^(0+128),f
 28106  2259                     l10198:
 28107                           
 28108                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 28109  2259  0338               	decf	__doprnt@eexp^(0+128),w
 28110  225A  3AFF               	xorlw	255
 28111  225B  31B5  25A2  31A0   	fcall	_scale
 28112  225E  0843               	movf	?_scale+3,w
 28113  225F  0141               	movlb	1	; select bank1
 28114  2260  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 28115  2261  0140               	movlb	0	; select bank0
 28116  2262  0842               	movf	?_scale+2,w
 28117  2263  0141               	movlb	1	; select bank1
 28118  2264  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 28119  2265  0140               	movlb	0	; select bank0
 28120  2266  0841               	movf	?_scale+1,w
 28121  2267  0141               	movlb	1	; select bank1
 28122  2268  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 28123  2269  0140               	movlb	0	; select bank0
 28124  226A  0840               	movf	?_scale,w
 28125  226B  0141               	movlb	1	; select bank1
 28126  226C  00BE               	movwf	__doprnt@tmpval^(0+128)
 28127                           
 28128                           ;doprnt.c: 873: tmpval.integ *= fval;
 28129  226D  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28130  226E  0140               	movlb	0	; select bank0
 28131  226F  00A9               	movwf	___flmul@b+3
 28132  2270  0141               	movlb	1	; select bank1
 28133  2271  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28134  2272  0140               	movlb	0	; select bank0
 28135  2273  00A8               	movwf	___flmul@b+2
 28136  2274  0141               	movlb	1	; select bank1
 28137  2275  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28138  2276  0140               	movlb	0	; select bank0
 28139  2277  00A7               	movwf	___flmul@b+1
 28140  2278  0141               	movlb	1	; select bank1
 28141  2279  0842               	movf	__doprnt@fval^(0+128),w
 28142  227A  0140               	movlb	0	; select bank0
 28143  227B  00A6               	movwf	___flmul@b
 28144  227C  0141               	movlb	1	; select bank1
 28145  227D  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28146  227E  0140               	movlb	0	; select bank0
 28147  227F  00AD               	movwf	___flmul@a+3
 28148  2280  0141               	movlb	1	; select bank1
 28149  2281  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28150  2282  0140               	movlb	0	; select bank0
 28151  2283  00AC               	movwf	___flmul@a+2
 28152  2284  0141               	movlb	1	; select bank1
 28153  2285  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28154  2286  0140               	movlb	0	; select bank0
 28155  2287  00AB               	movwf	___flmul@a+1
 28156  2288  0141               	movlb	1	; select bank1
 28157  2289  083E               	movf	__doprnt@tmpval^(0+128),w
 28158  228A  0140               	movlb	0	; select bank0
 28159  228B  00AA               	movwf	___flmul@a
 28160  228C  31B1  2135  31A0   	fcall	___flmul
 28161  228F  0829               	movf	?___flmul+3,w
 28162  2290  0141               	movlb	1	; select bank1
 28163  2291  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 28164  2292  0140               	movlb	0	; select bank0
 28165  2293  0828               	movf	?___flmul+2,w
 28166  2294  0141               	movlb	1	; select bank1
 28167  2295  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 28168  2296  0140               	movlb	0	; select bank0
 28169  2297  0827               	movf	?___flmul+1,w
 28170  2298  0141               	movlb	1	; select bank1
 28171  2299  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 28172  229A  0140               	movlb	0	; select bank0
 28173  229B  0826               	movf	?___flmul,w
 28174  229C  0141               	movlb	1	; select bank1
 28175  229D  00BE               	movwf	__doprnt@tmpval^(0+128)
 28176                           
 28177                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 28178  229E  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28179  229F  00A3               	movwf	(___flge@ff1+3)^(0+128)
 28180  22A0  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28181  22A1  00A2               	movwf	(___flge@ff1+2)^(0+128)
 28182  22A2  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28183  22A3  00A1               	movwf	(___flge@ff1+1)^(0+128)
 28184  22A4  083E               	movf	__doprnt@tmpval^(0+128),w
 28185  22A5  00A0               	movwf	___flge@ff1^(0+128)
 28186  22A6  303F               	movlw	63
 28187  22A7  00A7               	movwf	(___flge@ff2+3)^(0+128)
 28188  22A8  3080               	movlw	128
 28189  22A9  00A6               	movwf	(___flge@ff2+2)^(0+128)
 28190  22AA  3000               	movlw	0
 28191  22AB  00A5               	movwf	(___flge@ff2+1)^(0+128)
 28192  22AC  3000               	movlw	0
 28193  22AD  00A4               	movwf	___flge@ff2^(0+128)
 28194  22AE  31CD  2551  31A0   	fcall	___flge
 28195  22B1  1803               	btfsc	3,0
 28196  22B2  2AB7               	goto	l10206
 28197                           
 28198                           ;doprnt.c: 875: eexp--;
 28199  22B3  30FF               	movlw	255
 28200  22B4  07B8               	addwf	__doprnt@eexp^(0+128),f
 28201  22B5  30FF               	movlw	255
 28202  22B6  2ACF               	goto	L8
 28203  22B7                     l10206:
 28204                           
 28205                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 28206  22B7  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28207  22B8  00A3               	movwf	(___flge@ff1+3)^(0+128)
 28208  22B9  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28209  22BA  00A2               	movwf	(___flge@ff1+2)^(0+128)
 28210  22BB  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28211  22BC  00A1               	movwf	(___flge@ff1+1)^(0+128)
 28212  22BD  083E               	movf	__doprnt@tmpval^(0+128),w
 28213  22BE  00A0               	movwf	___flge@ff1^(0+128)
 28214  22BF  3041               	movlw	65
 28215  22C0  00A7               	movwf	(___flge@ff2+3)^(0+128)
 28216  22C1  3020               	movlw	32
 28217  22C2  00A6               	movwf	(___flge@ff2+2)^(0+128)
 28218  22C3  3000               	movlw	0
 28219  22C4  00A5               	movwf	(___flge@ff2+1)^(0+128)
 28220  22C5  3000               	movlw	0
 28221  22C6  00A4               	movwf	___flge@ff2^(0+128)
 28222  22C7  31CD  2551  31A0   	fcall	___flge
 28223  22CA  1C03               	btfss	3,0
 28224  22CB  2AD0               	goto	l2291
 28225                           
 28226                           ;doprnt.c: 877: eexp++;
 28227  22CC  3001               	movlw	1
 28228  22CD  07B8               	addwf	__doprnt@eexp^(0+128),f
 28229  22CE  3000               	movlw	0
 28230  22CF                     L8:
 28231  22CF  3DB9               	addwfc	(__doprnt@eexp+1)^(0+128),f
 28232  22D0                     l2291:
 28233                           
 28234                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 28235  22D0  0141               	movlb	1	; select bank1
 28236  22D1  0847               	movf	(__doprnt@prec+1)^(0+128),w
 28237  22D2  3A80               	xorlw	128
 28238  22D3  00A8               	movwf	??__doprnt^(0+128)
 28239  22D4  3080               	movlw	128
 28240  22D5  0228               	subwf	??__doprnt^(0+128),w
 28241  22D6  1D03               	skipz
 28242  22D7  2ADA               	goto	u11575
 28243  22D8  300D               	movlw	13
 28244  22D9  0246               	subwf	__doprnt@prec^(0+128),w
 28245  22DA                     u11575:
 28246  22DA  1803               	skipnc
 28247  22DB  2B0B               	goto	l10212
 28248                           
 28249                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 28250  22DC  0141               	movlb	1	; select bank1
 28251  22DD  0846               	movf	__doprnt@prec^(0+128),w
 28252  22DE  31C2  2268  31A0   	fcall	_fround
 28253  22E1  0843               	movf	?_fround+3,w
 28254  22E2  00D8               	movwf	___fladd@b+3
 28255  22E3  0842               	movf	?_fround+2,w
 28256  22E4  00D7               	movwf	___fladd@b+2
 28257  22E5  0841               	movf	?_fround+1,w
 28258  22E6  00D6               	movwf	___fladd@b+1
 28259  22E7  0840               	movf	?_fround,w
 28260  22E8  00D5               	movwf	___fladd@b
 28261  22E9  0141               	movlb	1	; select bank1
 28262  22EA  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28263  22EB  0140               	movlb	0	; select bank0
 28264  22EC  00DC               	movwf	___fladd@a+3
 28265  22ED  0141               	movlb	1	; select bank1
 28266  22EE  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28267  22EF  0140               	movlb	0	; select bank0
 28268  22F0  00DB               	movwf	___fladd@a+2
 28269  22F1  0141               	movlb	1	; select bank1
 28270  22F2  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28271  22F3  0140               	movlb	0	; select bank0
 28272  22F4  00DA               	movwf	___fladd@a+1
 28273  22F5  0141               	movlb	1	; select bank1
 28274  22F6  0842               	movf	__doprnt@fval^(0+128),w
 28275  22F7  0140               	movlb	0	; select bank0
 28276  22F8  00D9               	movwf	___fladd@a
 28277  22F9  31BE  261F  31A0   	fcall	___fladd
 28278  22FC  0858               	movf	?___fladd+3,w
 28279  22FD  0141               	movlb	1	; select bank1
 28280  22FE  00C5               	movwf	(__doprnt@fval+3)^(0+128)
 28281  22FF  0140               	movlb	0	; select bank0
 28282  2300  0857               	movf	?___fladd+2,w
 28283  2301  0141               	movlb	1	; select bank1
 28284  2302  00C4               	movwf	(__doprnt@fval+2)^(0+128)
 28285  2303  0140               	movlb	0	; select bank0
 28286  2304  0856               	movf	?___fladd+1,w
 28287  2305  0141               	movlb	1	; select bank1
 28288  2306  00C3               	movwf	(__doprnt@fval+1)^(0+128)
 28289  2307  0140               	movlb	0	; select bank0
 28290  2308  0855               	movf	?___fladd,w
 28291  2309  0141               	movlb	1	; select bank1
 28292  230A  00C2               	movwf	__doprnt@fval^(0+128)
 28293  230B                     l10212:
 28294                           
 28295                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 28296  230B  0141               	movlb	1	; select bank1
 28297  230C  0839               	movf	(__doprnt@eexp+1)^(0+128),w
 28298  230D  3A80               	xorlw	128
 28299  230E  00A8               	movwf	??__doprnt^(0+128)
 28300  230F  3080               	movlw	128
 28301  2310  0228               	subwf	??__doprnt^(0+128),w
 28302  2311  1D03               	skipz
 28303  2312  2B15               	goto	u11585
 28304  2313  300A               	movlw	10
 28305  2314  0238               	subwf	__doprnt@eexp^(0+128),w
 28306  2315                     u11585:
 28307  2315  1803               	skipnc
 28308  2316  2B52               	goto	l10220
 28309  2317  0141               	movlb	1	; select bank1
 28310  2318  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28311  2319  00F4               	movwf	___fleq@ff1+3
 28312  231A  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28313  231B  00F3               	movwf	___fleq@ff1+2
 28314  231C  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28315  231D  00F2               	movwf	___fleq@ff1+1
 28316  231E  0842               	movf	__doprnt@fval^(0+128),w
 28317  231F  00F1               	movwf	___fleq@ff1
 28318  2320  3000               	movlw	0
 28319  2321  00F8               	movwf	___fleq@ff2+3
 28320  2322  3000               	movlw	0
 28321  2323  00F7               	movwf	___fleq@ff2+2
 28322  2324  3000               	movlw	0
 28323  2325  00F6               	movwf	___fleq@ff2+1
 28324  2326  3000               	movlw	0
 28325  2327  00F5               	movwf	___fleq@ff2
 28326  2328  31D4  24A0  31A0   	fcall	___fleq
 28327  232B  1803               	btfsc	3,0
 28328  232C  2BA6               	goto	l10234
 28329  232D  0141               	movlb	1	; select bank1
 28330  232E  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28331  232F  0140               	movlb	0	; select bank0
 28332  2330  00D8               	movwf	___fltol@f1+3
 28333  2331  0141               	movlb	1	; select bank1
 28334  2332  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28335  2333  0140               	movlb	0	; select bank0
 28336  2334  00D7               	movwf	___fltol@f1+2
 28337  2335  0141               	movlb	1	; select bank1
 28338  2336  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28339  2337  0140               	movlb	0	; select bank0
 28340  2338  00D6               	movwf	___fltol@f1+1
 28341  2339  0141               	movlb	1	; select bank1
 28342  233A  0842               	movf	__doprnt@fval^(0+128),w
 28343  233B  0140               	movlb	0	; select bank0
 28344  233C  00D5               	movwf	___fltol@f1
 28345  233D  31D5  25E8  31A0   	fcall	___fltol
 28346  2340  0858               	movf	?___fltol+3,w
 28347  2341  0457               	iorwf	?___fltol+2,w
 28348  2342  0456               	iorwf	?___fltol+1,w
 28349  2343  0455               	iorwf	?___fltol,w
 28350  2344  1D03               	skipz
 28351  2345  2BA6               	goto	l10234
 28352  2346  0141               	movlb	1	; select bank1
 28353  2347  0839               	movf	(__doprnt@eexp+1)^(0+128),w
 28354  2348  3A80               	xorlw	128
 28355  2349  00A8               	movwf	??__doprnt^(0+128)
 28356  234A  3080               	movlw	128
 28357  234B  0228               	subwf	??__doprnt^(0+128),w
 28358  234C  1D03               	skipz
 28359  234D  2B50               	goto	u11615
 28360  234E  3002               	movlw	2
 28361  234F  0238               	subwf	__doprnt@eexp^(0+128),w
 28362  2350                     u11615:
 28363  2350  1C03               	skipc
 28364  2351  2BA6               	goto	l10234
 28365  2352                     l10220:
 28366                           
 28367                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 28368  2352  0141               	movlb	1	; select bank1
 28369  2353  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28370  2354  00A3               	movwf	(___flge@ff1+3)^(0+128)
 28371  2355  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28372  2356  00A2               	movwf	(___flge@ff1+2)^(0+128)
 28373  2357  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28374  2358  00A1               	movwf	(___flge@ff1+1)^(0+128)
 28375  2359  083E               	movf	__doprnt@tmpval^(0+128),w
 28376  235A  00A0               	movwf	___flge@ff1^(0+128)
 28377  235B  3040               	movlw	64
 28378  235C  00A7               	movwf	(___flge@ff2+3)^(0+128)
 28379  235D  3089               	movlw	137
 28380  235E  00A6               	movwf	(___flge@ff2+2)^(0+128)
 28381  235F  3070               	movlw	112
 28382  2360  00A5               	movwf	(___flge@ff2+1)^(0+128)
 28383  2361  305F               	movlw	95
 28384  2362  00A4               	movwf	___flge@ff2^(0+128)
 28385  2363  31CD  2551  31A0   	fcall	___flge
 28386  2366  1803               	btfsc	3,0
 28387  2367  2B6A               	goto	l10224
 28388                           
 28389                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 28390  2368  30F7               	movlw	247
 28391  2369  2B6B               	goto	L9
 28392  236A                     l10224:	
 28393                           ;doprnt.c: 1148: }else{
 28394                           
 28395                           
 28396                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 28397  236A  30F8               	movlw	248
 28398  236B                     L9:
 28399  236B  07B8               	addwf	__doprnt@eexp^(0+128),f
 28400  236C  30FF               	movlw	255
 28401  236D  3DB9               	addwfc	(__doprnt@eexp+1)^(0+128),f
 28402                           
 28403                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 28404  236E  0838               	movf	__doprnt@eexp^(0+128),w
 28405  236F  31B5  25A2  31A0   	fcall	_scale
 28406  2372  0843               	movf	?_scale+3,w
 28407  2373  0141               	movlb	1	; select bank1
 28408  2374  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 28409  2375  0140               	movlb	0	; select bank0
 28410  2376  0842               	movf	?_scale+2,w
 28411  2377  0141               	movlb	1	; select bank1
 28412  2378  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 28413  2379  0140               	movlb	0	; select bank0
 28414  237A  0841               	movf	?_scale+1,w
 28415  237B  0141               	movlb	1	; select bank1
 28416  237C  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 28417  237D  0140               	movlb	0	; select bank0
 28418  237E  0840               	movf	?_scale,w
 28419  237F  0141               	movlb	1	; select bank1
 28420  2380  00BE               	movwf	__doprnt@tmpval^(0+128)
 28421  2381  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28422  2382  00F4               	movwf	__div_to_l_@f1+3
 28423  2383  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28424  2384  00F3               	movwf	__div_to_l_@f1+2
 28425  2385  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28426  2386  00F2               	movwf	__div_to_l_@f1+1
 28427  2387  0842               	movf	__doprnt@fval^(0+128),w
 28428  2388  00F1               	movwf	__div_to_l_@f1
 28429  2389  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28430  238A  00F8               	movwf	__div_to_l_@f2+3
 28431  238B  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28432  238C  00F7               	movwf	__div_to_l_@f2+2
 28433  238D  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28434  238E  00F6               	movwf	__div_to_l_@f2+1
 28435  238F  083E               	movf	__doprnt@tmpval^(0+128),w
 28436  2390  00F5               	movwf	__div_to_l_@f2
 28437  2391  31CB  2371  31A0   	fcall	__div_to_l_
 28438  2394  0874               	movf	?__div_to_l_+3,w
 28439  2395  0141               	movlb	1	; select bank1
 28440  2396  00BD               	movwf	(__doprnt@val+3)^(0+128)
 28441  2397  0873               	movf	?__div_to_l_+2,w
 28442  2398  00BC               	movwf	(__doprnt@val+2)^(0+128)
 28443  2399  0872               	movf	?__div_to_l_+1,w
 28444  239A  00BB               	movwf	(__doprnt@val+1)^(0+128)
 28445  239B  0871               	movf	?__div_to_l_,w
 28446  239C  00BA               	movwf	__doprnt@val^(0+128)
 28447                           
 28448                           ;doprnt.c: 1155: fval = 0.0;
 28449  239D  3000               	movlw	0
 28450  239E  00C5               	movwf	(__doprnt@fval+3)^(0+128)
 28451  239F  3000               	movlw	0
 28452  23A0  00C4               	movwf	(__doprnt@fval+2)^(0+128)
 28453  23A1  3000               	movlw	0
 28454  23A2  00C3               	movwf	(__doprnt@fval+1)^(0+128)
 28455  23A3  3000               	movlw	0
 28456  23A4  00C2               	movwf	__doprnt@fval^(0+128)
 28457                           
 28458                           ;doprnt.c: 1156: } else {
 28459  23A5  2BF2               	goto	l10238
 28460  23A6                     l10234:
 28461                           
 28462                           ;doprnt.c: 1157: val = (unsigned long)fval;
 28463  23A6  0141               	movlb	1	; select bank1
 28464  23A7  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28465  23A8  0140               	movlb	0	; select bank0
 28466  23A9  00D8               	movwf	___fltol@f1+3
 28467  23AA  0141               	movlb	1	; select bank1
 28468  23AB  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28469  23AC  0140               	movlb	0	; select bank0
 28470  23AD  00D7               	movwf	___fltol@f1+2
 28471  23AE  0141               	movlb	1	; select bank1
 28472  23AF  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28473  23B0  0140               	movlb	0	; select bank0
 28474  23B1  00D6               	movwf	___fltol@f1+1
 28475  23B2  0141               	movlb	1	; select bank1
 28476  23B3  0842               	movf	__doprnt@fval^(0+128),w
 28477  23B4  0140               	movlb	0	; select bank0
 28478  23B5  00D5               	movwf	___fltol@f1
 28479  23B6  31D5  25E8  31A0   	fcall	___fltol
 28480  23B9  0858               	movf	?___fltol+3,w
 28481  23BA  0141               	movlb	1	; select bank1
 28482  23BB  00BD               	movwf	(__doprnt@val+3)^(0+128)
 28483  23BC  0140               	movlb	0	; select bank0
 28484  23BD  0857               	movf	?___fltol+2,w
 28485  23BE  0141               	movlb	1	; select bank1
 28486  23BF  00BC               	movwf	(__doprnt@val+2)^(0+128)
 28487  23C0  0140               	movlb	0	; select bank0
 28488  23C1  0856               	movf	?___fltol+1,w
 28489  23C2  0141               	movlb	1	; select bank1
 28490  23C3  00BB               	movwf	(__doprnt@val+1)^(0+128)
 28491  23C4  0140               	movlb	0	; select bank0
 28492  23C5  0855               	movf	?___fltol,w
 28493  23C6  0141               	movlb	1	; select bank1
 28494  23C7  00BA               	movwf	__doprnt@val^(0+128)
 28495                           
 28496                           ;doprnt.c: 1158: fval -= (double)val;
 28497  23C8  083D               	movf	(__doprnt@val+3)^(0+128),w
 28498  23C9  00F4               	movwf	___xxtofl@val+3
 28499  23CA  083C               	movf	(__doprnt@val+2)^(0+128),w
 28500  23CB  00F3               	movwf	___xxtofl@val+2
 28501  23CC  083B               	movf	(__doprnt@val+1)^(0+128),w
 28502  23CD  00F2               	movwf	___xxtofl@val+1
 28503  23CE  083A               	movf	__doprnt@val^(0+128),w
 28504  23CF  00F1               	movwf	___xxtofl@val
 28505  23D0  3000               	movlw	0
 28506  23D1  31CA  22DB  31A0   	fcall	___xxtofl
 28507  23D4  0874               	movf	?___xxtofl+3,w
 28508  23D5  0141               	movlb	1	; select bank1
 28509  23D6  00A3               	movwf	(___flsub@a+3)^(0+128)
 28510  23D7  0873               	movf	?___xxtofl+2,w
 28511  23D8  00A2               	movwf	(___flsub@a+2)^(0+128)
 28512  23D9  0872               	movf	?___xxtofl+1,w
 28513  23DA  00A1               	movwf	(___flsub@a+1)^(0+128)
 28514  23DB  0871               	movf	?___xxtofl,w
 28515  23DC  00A0               	movwf	___flsub@a^(0+128)
 28516  23DD  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28517  23DE  00A7               	movwf	(___flsub@b+3)^(0+128)
 28518  23DF  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28519  23E0  00A6               	movwf	(___flsub@b+2)^(0+128)
 28520  23E1  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28521  23E2  00A5               	movwf	(___flsub@b+1)^(0+128)
 28522  23E3  0842               	movf	__doprnt@fval^(0+128),w
 28523  23E4  00A4               	movwf	___flsub@b^(0+128)
 28524  23E5  31D2  227E  31A0   	fcall	___flsub
 28525  23E8  0823               	movf	(?___flsub+3)^(0+128),w
 28526  23E9  00C5               	movwf	(__doprnt@fval+3)^(0+128)
 28527  23EA  0822               	movf	(?___flsub+2)^(0+128),w
 28528  23EB  00C4               	movwf	(__doprnt@fval+2)^(0+128)
 28529  23EC  0821               	movf	(?___flsub+1)^(0+128),w
 28530  23ED  00C3               	movwf	(__doprnt@fval+1)^(0+128)
 28531  23EE  0820               	movf	?___flsub^(0+128),w
 28532  23EF  00C2               	movwf	__doprnt@fval^(0+128)
 28533                           
 28534                           ;doprnt.c: 1159: eexp = 0;
 28535  23F0  01B8               	clrf	__doprnt@eexp^(0+128)
 28536  23F1  01B9               	clrf	(__doprnt@eexp+1)^(0+128)
 28537  23F2                     l10238:
 28538                           
 28539                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 28540  23F2  01C8               	clrf	__doprnt@c^(0+128)
 28541  23F3  0AC8               	incf	__doprnt@c^(0+128),f
 28542  23F4  300A               	movlw	10
 28543  23F5  0648               	xorwf	__doprnt@c^(0+128),w
 28544  23F6  1903               	btfsc	3,2
 28545  23F7  2C25               	goto	l10250
 28546  23F8                     l10244:
 28547                           
 28548                           ;doprnt.c: 1163: if(val < dpowers[c])
 28549  23F8  0848               	movf	__doprnt@c^(0+128),w
 28550  23F9  00A8               	movwf	??__doprnt^(0+128)
 28551  23FA  01A9               	clrf	(??__doprnt^(0+128)+1)
 28552  23FB  35A8               	lslf	??__doprnt^(0+128),f
 28553  23FC  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 28554  23FD  35A8               	lslf	??__doprnt^(0+128),f
 28555  23FE  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 28556  23FF  3068               	movlw	low (_dpowers| (0+32768))
 28557  2400  0728               	addwf	??__doprnt^(0+128),w
 28558  2401  0084               	movwf	4
 28559  2402  30D8               	movlw	high (_dpowers| (0+32768))
 28560  2403  3D29               	addwfc	(??__doprnt+1)^(0+128),w
 28561  2404  0085               	movwf	5
 28562  2405  3F00               	moviw [0]fsr0
 28563  2406  00AA               	movwf	(??__doprnt+2)^(0+128)
 28564  2407  3F01               	moviw [1]fsr0
 28565  2408  00AB               	movwf	((??__doprnt+2)^(0+128)+1)
 28566  2409  3F02               	moviw [2]fsr0
 28567  240A  00AC               	movwf	((??__doprnt+2)^(0+128)+2)
 28568  240B  3F03               	moviw [3]fsr0
 28569  240C  00AD               	movwf	((??__doprnt+2)^(0+128)+3)
 28570  240D  082D               	movf	(??__doprnt+5)^(0+128),w
 28571  240E  023D               	subwf	(__doprnt@val+3)^(0+128),w
 28572  240F  1D03               	skipz
 28573  2410  2C1B               	goto	u11645
 28574  2411  082C               	movf	(??__doprnt+4)^(0+128),w
 28575  2412  023C               	subwf	(__doprnt@val+2)^(0+128),w
 28576  2413  1D03               	skipz
 28577  2414  2C1B               	goto	u11645
 28578  2415  082B               	movf	(??__doprnt+3)^(0+128),w
 28579  2416  023B               	subwf	(__doprnt@val+1)^(0+128),w
 28580  2417  1D03               	skipz
 28581  2418  2C1B               	goto	u11645
 28582  2419  082A               	movf	(??__doprnt+2)^(0+128),w
 28583  241A  023A               	subwf	__doprnt@val^(0+128),w
 28584  241B                     u11645:
 28585  241B  1C03               	btfss	3,0
 28586  241C  2C25               	goto	l10250
 28587  241D  3001               	movlw	1
 28588  241E  00A8               	movwf	??__doprnt^(0+128)
 28589  241F  0828               	movf	??__doprnt^(0+128),w
 28590  2420  07C8               	addwf	__doprnt@c^(0+128),f
 28591  2421  300A               	movlw	10
 28592  2422  0648               	xorwf	__doprnt@c^(0+128),w
 28593  2423  1D03               	btfss	3,2
 28594  2424  2BF8               	goto	l10244
 28595  2425                     l10250:
 28596                           
 28597                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
 28598  2425  0836               	movf	__doprnt@flag^(0+128),w
 28599  2426  3903               	andlw	3
 28600  2427  1903               	btfsc	3,2
 28601  2428  2C54               	goto	l10270
 28602  2429  0849               	movf	__doprnt@pb^(0+128),w
 28603  242A  3E02               	addlw	2
 28604  242B  0086               	movwf	6
 28605  242C  0187               	clrf	7
 28606  242D  0016               	moviw fsr1++
 28607  242E  0401               	iorwf	1,w
 28608  242F  1903               	btfsc	3,2
 28609  2430  2C3F               	goto	l10256
 28610  2431  302D               	movlw	45
 28611  2432  00A8               	movwf	??__doprnt^(0+128)
 28612  2433  0828               	movf	??__doprnt^(0+128),w
 28613  2434  00F3               	movwf	putch@txData
 28614  2435  0849               	movf	__doprnt@pb^(0+128),w
 28615  2436  3E02               	addlw	2
 28616  2437  0086               	movwf	6
 28617  2438  0187               	clrf	7
 28618  2439  3F41               	moviw [1]fsr1
 28619  243A  008A               	movwf	10
 28620  243B  3F40               	moviw [0]fsr1
 28621  243C  000A               	callw
 28622  243D  31A0               	pagesel	$
 28623  243E  2C54               	goto	l10270
 28624  243F                     l10256:
 28625  243F  0849               	movf	__doprnt@pb^(0+128),w
 28626  2440  0086               	movwf	6
 28627  2441  0187               	clrf	7
 28628  2442  3F40               	moviw [0]fsr1
 28629  2443  00A8               	movwf	??__doprnt^(0+128)
 28630  2444  3F41               	moviw [1]fsr1
 28631  2445  00A9               	movwf	(??__doprnt^(0+128)+1)
 28632  2446  0828               	movf	??__doprnt^(0+128),w
 28633  2447  0086               	movwf	6
 28634  2448  0829               	movf	(??__doprnt+1)^(0+128),w
 28635  2449  0087               	movwf	7
 28636  244A  302D               	movlw	45
 28637  244B                     L10:
 28638  244B  0081               	movwf	1
 28639  244C  0849               	movf	__doprnt@pb^(0+128),w
 28640  244D  0086               	movwf	6
 28641  244E  0187               	clrf	7
 28642  244F  3001               	movlw	1
 28643  2450  0781               	addwf	1,f
 28644  2451  3141               	addfsr 1,1
 28645  2452  1803               	skipnc
 28646  2453  0A81               	incf	1,f
 28647  2454                     l10270:
 28648  2454  3001               	movlw	1
 28649  2455  0141               	movlb	1	; select bank1
 28650  2456  02C8               	subwf	__doprnt@c^(0+128),f
 28651  2457  0A48               	incf	__doprnt@c^(0+128),w
 28652  2458  1903               	btfsc	3,2
 28653  2459  2D06               	goto	l10282
 28654                           
 28655                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 28656  245A  0848               	movf	__doprnt@c^(0+128),w
 28657  245B  00A8               	movwf	??__doprnt^(0+128)
 28658  245C  01A9               	clrf	(??__doprnt^(0+128)+1)
 28659  245D  35A8               	lslf	??__doprnt^(0+128),f
 28660  245E  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 28661  245F  35A8               	lslf	??__doprnt^(0+128),f
 28662  2460  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 28663  2461  3068               	movlw	low (_dpowers| (0+32768))
 28664  2462  0728               	addwf	??__doprnt^(0+128),w
 28665  2463  0084               	movwf	4
 28666  2464  30D8               	movlw	high (_dpowers| (0+32768))
 28667  2465  3D29               	addwfc	(??__doprnt+1)^(0+128),w
 28668  2466  0085               	movwf	5
 28669  2467  3F00               	moviw [0]fsr0
 28670  2468  00F1               	movwf	___lldiv@divisor
 28671  2469  3F01               	moviw [1]fsr0
 28672  246A  00F2               	movwf	___lldiv@divisor+1
 28673  246B  3F02               	moviw [2]fsr0
 28674  246C  00F3               	movwf	___lldiv@divisor+2
 28675  246D  3F03               	moviw [3]fsr0
 28676  246E  00F4               	movwf	___lldiv@divisor+3
 28677  246F  083D               	movf	(__doprnt@val+3)^(0+128),w
 28678  2470  00F8               	movwf	___lldiv@dividend+3
 28679  2471  083C               	movf	(__doprnt@val+2)^(0+128),w
 28680  2472  00F7               	movwf	___lldiv@dividend+2
 28681  2473  083B               	movf	(__doprnt@val+1)^(0+128),w
 28682  2474  00F6               	movwf	___lldiv@dividend+1
 28683  2475  083A               	movf	__doprnt@val^(0+128),w
 28684  2476  00F5               	movwf	___lldiv@dividend
 28685  2477  31A0  200A  31A0   	fcall	___lldiv
 28686  247A  0874               	movf	?___lldiv+3,w
 28687  247B  0141               	movlb	1	; select bank1
 28688  247C  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 28689  247D  0873               	movf	?___lldiv+2,w
 28690  247E  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 28691  247F  0872               	movf	?___lldiv+1,w
 28692  2480  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 28693  2481  0871               	movf	?___lldiv,w
 28694  2482  00BE               	movwf	__doprnt@tmpval^(0+128)
 28695                           
 28696                           ;doprnt.c: 1228: tmpval.vd %= 10;
 28697  2483  3000               	movlw	0
 28698  2484  0140               	movlb	0	; select bank0
 28699  2485  00A8               	movwf	___llmod@divisor+3
 28700  2486  3000               	movlw	0
 28701  2487  00A7               	movwf	___llmod@divisor+2
 28702  2488  3000               	movlw	0
 28703  2489  00A6               	movwf	___llmod@divisor+1
 28704  248A  300A               	movlw	10
 28705  248B  00A5               	movwf	___llmod@divisor
 28706  248C  0141               	movlb	1	; select bank1
 28707  248D  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 28708  248E  0140               	movlb	0	; select bank0
 28709  248F  00AC               	movwf	___llmod@dividend+3
 28710  2490  0141               	movlb	1	; select bank1
 28711  2491  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 28712  2492  0140               	movlb	0	; select bank0
 28713  2493  00AB               	movwf	___llmod@dividend+2
 28714  2494  0141               	movlb	1	; select bank1
 28715  2495  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 28716  2496  0140               	movlb	0	; select bank0
 28717  2497  00AA               	movwf	___llmod@dividend+1
 28718  2498  0141               	movlb	1	; select bank1
 28719  2499  083E               	movf	__doprnt@tmpval^(0+128),w
 28720  249A  0140               	movlb	0	; select bank0
 28721  249B  00A9               	movwf	___llmod@dividend
 28722  249C  31D3  23D6  31A0   	fcall	___llmod
 28723  249F  0828               	movf	?___llmod+3,w
 28724  24A0  0141               	movlb	1	; select bank1
 28725  24A1  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 28726  24A2  0140               	movlb	0	; select bank0
 28727  24A3  0827               	movf	?___llmod+2,w
 28728  24A4  0141               	movlb	1	; select bank1
 28729  24A5  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 28730  24A6  0140               	movlb	0	; select bank0
 28731  24A7  0826               	movf	?___llmod+1,w
 28732  24A8  0141               	movlb	1	; select bank1
 28733  24A9  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 28734  24AA  0140               	movlb	0	; select bank0
 28735  24AB  0825               	movf	?___llmod,w
 28736  24AC  0141               	movlb	1	; select bank1
 28737  24AD  00BE               	movwf	__doprnt@tmpval^(0+128)
 28738  24AE  0849               	movf	__doprnt@pb^(0+128),w
 28739  24AF  3E02               	addlw	2
 28740  24B0  0086               	movwf	6
 28741  24B1  0187               	clrf	7
 28742  24B2  0016               	moviw fsr1++
 28743  24B3  0401               	iorwf	1,w
 28744  24B4  1903               	btfsc	3,2
 28745  24B5  2CC5               	goto	l10268
 28746  24B6  083E               	movf	__doprnt@tmpval^(0+128),w
 28747  24B7  3E30               	addlw	48
 28748  24B8  00A8               	movwf	??__doprnt^(0+128)
 28749  24B9  0828               	movf	??__doprnt^(0+128),w
 28750  24BA  00F3               	movwf	putch@txData
 28751  24BB  0849               	movf	__doprnt@pb^(0+128),w
 28752  24BC  3E02               	addlw	2
 28753  24BD  0086               	movwf	6
 28754  24BE  0187               	clrf	7
 28755  24BF  3F41               	moviw [1]fsr1
 28756  24C0  008A               	movwf	10
 28757  24C1  3F40               	moviw [0]fsr1
 28758  24C2  000A               	callw
 28759  24C3  31A0               	pagesel	$
 28760  24C4  2C54               	goto	l10270
 28761  24C5                     l10268:
 28762  24C5  083E               	movf	__doprnt@tmpval^(0+128),w
 28763  24C6  3E30               	addlw	48
 28764  24C7  00A8               	movwf	??__doprnt^(0+128)
 28765  24C8  0849               	movf	__doprnt@pb^(0+128),w
 28766  24C9  0086               	movwf	6
 28767  24CA  0187               	clrf	7
 28768  24CB  3F40               	moviw [0]fsr1
 28769  24CC  00A9               	movwf	(??__doprnt+1)^(0+128)
 28770  24CD  3F41               	moviw [1]fsr1
 28771  24CE  00AA               	movwf	((??__doprnt+1)^(0+128)+1)
 28772  24CF  0829               	movf	(??__doprnt+1)^(0+128),w
 28773  24D0  0086               	movwf	6
 28774  24D1  082A               	movf	(??__doprnt+2)^(0+128),w
 28775  24D2  0087               	movwf	7
 28776  24D3  0828               	movf	??__doprnt^(0+128),w
 28777  24D4  2C4B               	goto	L10
 28778  24D5                     l10272:
 28779  24D5  0141               	movlb	1	; select bank1
 28780  24D6  0849               	movf	__doprnt@pb^(0+128),w
 28781  24D7  3E02               	addlw	2
 28782  24D8  0086               	movwf	6
 28783  24D9  0187               	clrf	7
 28784  24DA  0016               	moviw fsr1++
 28785  24DB  0401               	iorwf	1,w
 28786  24DC  1903               	btfsc	3,2
 28787  24DD  2CEC               	goto	l10276
 28788  24DE  3030               	movlw	48
 28789  24DF  00A8               	movwf	??__doprnt^(0+128)
 28790  24E0  0828               	movf	??__doprnt^(0+128),w
 28791  24E1  00F3               	movwf	putch@txData
 28792  24E2  0849               	movf	__doprnt@pb^(0+128),w
 28793  24E3  3E02               	addlw	2
 28794  24E4  0086               	movwf	6
 28795  24E5  0187               	clrf	7
 28796  24E6  3F41               	moviw [1]fsr1
 28797  24E7  008A               	movwf	10
 28798  24E8  3F40               	moviw [0]fsr1
 28799  24E9  000A               	callw
 28800  24EA  31A0               	pagesel	$
 28801  24EB  2D01               	goto	l10280
 28802  24EC                     l10276:
 28803  24EC  0849               	movf	__doprnt@pb^(0+128),w
 28804  24ED  0086               	movwf	6
 28805  24EE  0187               	clrf	7
 28806  24EF  3F40               	moviw [0]fsr1
 28807  24F0  00A8               	movwf	??__doprnt^(0+128)
 28808  24F1  3F41               	moviw [1]fsr1
 28809  24F2  00A9               	movwf	(??__doprnt^(0+128)+1)
 28810  24F3  0828               	movf	??__doprnt^(0+128),w
 28811  24F4  0086               	movwf	6
 28812  24F5  0829               	movf	(??__doprnt+1)^(0+128),w
 28813  24F6  0087               	movwf	7
 28814  24F7  3030               	movlw	48
 28815  24F8  0081               	movwf	1
 28816  24F9  0849               	movf	__doprnt@pb^(0+128),w
 28817  24FA  0086               	movwf	6
 28818  24FB  0187               	clrf	7
 28819  24FC  3001               	movlw	1
 28820  24FD  0781               	addwf	1,f
 28821  24FE  3141               	addfsr 1,1
 28822  24FF  1803               	skipnc
 28823  2500  0A81               	incf	1,f
 28824  2501                     l10280:
 28825                           
 28826                           ;doprnt.c: 1235: eexp--;
 28827  2501  30FF               	movlw	255
 28828  2502  0141               	movlb	1	; select bank1
 28829  2503  07B8               	addwf	__doprnt@eexp^(0+128),f
 28830  2504  30FF               	movlw	255
 28831  2505  3DB9               	addwfc	(__doprnt@eexp+1)^(0+128),f
 28832  2506                     l10282:
 28833  2506  0839               	movf	(__doprnt@eexp+1)^(0+128),w
 28834  2507  3A80               	xorlw	128
 28835  2508  00A8               	movwf	??__doprnt^(0+128)
 28836  2509  3080               	movlw	128
 28837  250A  0228               	subwf	??__doprnt^(0+128),w
 28838  250B  1D03               	skipz
 28839  250C  2D0F               	goto	u11715
 28840  250D  3001               	movlw	1
 28841  250E  0238               	subwf	__doprnt@eexp^(0+128),w
 28842  250F                     u11715:
 28843  250F  1803               	skipnc
 28844  2510  2CD5               	goto	l10272
 28845                           
 28846                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 28847  2511  0141               	movlb	1	; select bank1
 28848  2512  0847               	movf	(__doprnt@prec+1)^(0+128),w
 28849  2513  3A80               	xorlw	128
 28850  2514  00A8               	movwf	??__doprnt^(0+128)
 28851  2515  3080               	movlw	128
 28852  2516  0228               	subwf	??__doprnt^(0+128),w
 28853  2517  1D03               	skipz
 28854  2518  2D1B               	goto	u11725
 28855  2519  3009               	movlw	9
 28856  251A  0246               	subwf	__doprnt@prec^(0+128),w
 28857  251B                     u11725:
 28858  251B  1C03               	skipc
 28859  251C  2D20               	goto	l10288
 28860                           
 28861                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 28862  251D  3008               	movlw	8
 28863  251E  0141               	movlb	1	; select bank1
 28864  251F  2D22               	goto	L11
 28865  2520                     l10288:
 28866                           
 28867                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 28868  2520  0141               	movlb	1	; select bank1
 28869  2521  0846               	movf	__doprnt@prec^(0+128),w
 28870  2522                     L11:
 28871  2522  00A8               	movwf	??__doprnt^(0+128)
 28872  2523  0828               	movf	??__doprnt^(0+128),w
 28873  2524  00C8               	movwf	__doprnt@c^(0+128)
 28874                           
 28875                           ;doprnt.c: 1241: prec -= (int)c;
 28876  2525  0848               	movf	__doprnt@c^(0+128),w
 28877  2526  00A8               	movwf	??__doprnt^(0+128)
 28878  2527  01A9               	clrf	(??__doprnt^(0+128)+1)
 28879  2528  0828               	movf	??__doprnt^(0+128),w
 28880  2529  02C6               	subwf	__doprnt@prec^(0+128),f
 28881  252A  0829               	movf	(??__doprnt+1)^(0+128),w
 28882  252B  3BC7               	subwfb	(__doprnt@prec+1)^(0+128),f
 28883                           
 28884                           ;doprnt.c: 1245: if(c)
 28885  252C  0848               	movf	__doprnt@c^(0+128),w
 28886  252D  1903               	btfsc	3,2
 28887  252E  2D5A               	goto	l10300
 28888  252F  0849               	movf	__doprnt@pb^(0+128),w
 28889  2530  3E02               	addlw	2
 28890  2531  0086               	movwf	6
 28891  2532  0187               	clrf	7
 28892  2533  0016               	moviw fsr1++
 28893  2534  0401               	iorwf	1,w
 28894  2535  1903               	btfsc	3,2
 28895  2536  2D45               	goto	l10296
 28896  2537  302E               	movlw	46
 28897  2538  00A8               	movwf	??__doprnt^(0+128)
 28898  2539  0828               	movf	??__doprnt^(0+128),w
 28899  253A  00F3               	movwf	putch@txData
 28900  253B  0849               	movf	__doprnt@pb^(0+128),w
 28901  253C  3E02               	addlw	2
 28902  253D  0086               	movwf	6
 28903  253E  0187               	clrf	7
 28904  253F  3F41               	moviw [1]fsr1
 28905  2540  008A               	movwf	10
 28906  2541  3F40               	moviw [0]fsr1
 28907  2542  000A               	callw
 28908  2543  31A0               	pagesel	$
 28909  2544  2D5A               	goto	l10300
 28910  2545                     l10296:
 28911  2545  0849               	movf	__doprnt@pb^(0+128),w
 28912  2546  0086               	movwf	6
 28913  2547  0187               	clrf	7
 28914  2548  3F40               	moviw [0]fsr1
 28915  2549  00A8               	movwf	??__doprnt^(0+128)
 28916  254A  3F41               	moviw [1]fsr1
 28917  254B  00A9               	movwf	(??__doprnt^(0+128)+1)
 28918  254C  0828               	movf	??__doprnt^(0+128),w
 28919  254D  0086               	movwf	6
 28920  254E  0829               	movf	(??__doprnt+1)^(0+128),w
 28921  254F  0087               	movwf	7
 28922  2550  302E               	movlw	46
 28923  2551  0081               	movwf	1
 28924  2552  0849               	movf	__doprnt@pb^(0+128),w
 28925  2553  0086               	movwf	6
 28926  2554  0187               	clrf	7
 28927  2555  3001               	movlw	1
 28928  2556  0781               	addwf	1,f
 28929  2557  3141               	addfsr 1,1
 28930  2558  1803               	skipnc
 28931  2559  0A81               	incf	1,f
 28932  255A                     l10300:
 28933                           
 28934                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 28935  255A  0141               	movlb	1	; select bank1
 28936  255B  0848               	movf	__doprnt@c^(0+128),w
 28937  255C  31B5  25A2  31A0   	fcall	_scale
 28938  255F  0843               	movf	?_scale+3,w
 28939  2560  0141               	movlb	1	; select bank1
 28940  2561  00B1               	movwf	(__doprnt$4358+3)^(0+128)
 28941  2562  0140               	movlb	0	; select bank0
 28942  2563  0842               	movf	?_scale+2,w
 28943  2564  0141               	movlb	1	; select bank1
 28944  2565  00B0               	movwf	(__doprnt$4358+2)^(0+128)
 28945  2566  0140               	movlb	0	; select bank0
 28946  2567  0841               	movf	?_scale+1,w
 28947  2568  0141               	movlb	1	; select bank1
 28948  2569  00AF               	movwf	(__doprnt$4358+1)^(0+128)
 28949  256A  0140               	movlb	0	; select bank0
 28950  256B  0840               	movf	?_scale,w
 28951  256C  0141               	movlb	1	; select bank1
 28952  256D  00AE               	movwf	__doprnt$4358^(0+128)
 28953                           
 28954                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 28955  256E  0831               	movf	(__doprnt$4358+3)^(0+128),w
 28956  256F  0140               	movlb	0	; select bank0
 28957  2570  00AD               	movwf	___flmul@a+3
 28958  2571  0141               	movlb	1	; select bank1
 28959  2572  0830               	movf	(__doprnt$4358+2)^(0+128),w
 28960  2573  0140               	movlb	0	; select bank0
 28961  2574  00AC               	movwf	___flmul@a+2
 28962  2575  0141               	movlb	1	; select bank1
 28963  2576  082F               	movf	(__doprnt$4358+1)^(0+128),w
 28964  2577  0140               	movlb	0	; select bank0
 28965  2578  00AB               	movwf	___flmul@a+1
 28966  2579  0141               	movlb	1	; select bank1
 28967  257A  082E               	movf	__doprnt$4358^(0+128),w
 28968  257B  0140               	movlb	0	; select bank0
 28969  257C  00AA               	movwf	___flmul@a
 28970  257D  0141               	movlb	1	; select bank1
 28971  257E  0845               	movf	(__doprnt@fval+3)^(0+128),w
 28972  257F  0140               	movlb	0	; select bank0
 28973  2580  00A9               	movwf	___flmul@b+3
 28974  2581  0141               	movlb	1	; select bank1
 28975  2582  0844               	movf	(__doprnt@fval+2)^(0+128),w
 28976  2583  0140               	movlb	0	; select bank0
 28977  2584  00A8               	movwf	___flmul@b+2
 28978  2585  0141               	movlb	1	; select bank1
 28979  2586  0843               	movf	(__doprnt@fval+1)^(0+128),w
 28980  2587  0140               	movlb	0	; select bank0
 28981  2588  00A7               	movwf	___flmul@b+1
 28982  2589  0141               	movlb	1	; select bank1
 28983  258A  0842               	movf	__doprnt@fval^(0+128),w
 28984  258B  0140               	movlb	0	; select bank0
 28985  258C  00A6               	movwf	___flmul@b
 28986  258D  31B1  2135  31A0   	fcall	___flmul
 28987  2590  0829               	movf	?___flmul+3,w
 28988  2591  00D8               	movwf	___fltol@f1+3
 28989  2592  0828               	movf	?___flmul+2,w
 28990  2593  00D7               	movwf	___fltol@f1+2
 28991  2594  0827               	movf	?___flmul+1,w
 28992  2595  00D6               	movwf	___fltol@f1+1
 28993  2596  0826               	movf	?___flmul,w
 28994  2597  00D5               	movwf	___fltol@f1
 28995  2598  31D5  25E8  31A0   	fcall	___fltol
 28996  259B  0858               	movf	?___fltol+3,w
 28997  259C  0141               	movlb	1	; select bank1
 28998  259D  00BD               	movwf	(__doprnt@val+3)^(0+128)
 28999  259E  0140               	movlb	0	; select bank0
 29000  259F  0857               	movf	?___fltol+2,w
 29001  25A0  0141               	movlb	1	; select bank1
 29002  25A1  00BC               	movwf	(__doprnt@val+2)^(0+128)
 29003  25A2  0140               	movlb	0	; select bank0
 29004  25A3  0856               	movf	?___fltol+1,w
 29005  25A4  0141               	movlb	1	; select bank1
 29006  25A5  00BB               	movwf	(__doprnt@val+1)^(0+128)
 29007  25A6  0140               	movlb	0	; select bank0
 29008  25A7  0855               	movf	?___fltol,w
 29009  25A8                     L12:
 29010  25A8  0141               	movlb	1	; select bank1
 29011  25A9  00BA               	movwf	__doprnt@val^(0+128)
 29012  25AA  3001               	movlw	1
 29013  25AB  02C8               	subwf	__doprnt@c^(0+128),f
 29014  25AC  0A48               	incf	__doprnt@c^(0+128),w
 29015  25AD  1903               	btfsc	3,2
 29016  25AE  2E9A               	goto	l2343
 29017                           
 29018                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 29019                           
 29020                           ;doprnt.c: 1254: while(c--) {
 29021  25AF  0848               	movf	__doprnt@c^(0+128),w
 29022  25B0  00A8               	movwf	??__doprnt^(0+128)
 29023  25B1  01A9               	clrf	(??__doprnt^(0+128)+1)
 29024  25B2  35A8               	lslf	??__doprnt^(0+128),f
 29025  25B3  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29026  25B4  35A8               	lslf	??__doprnt^(0+128),f
 29027  25B5  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29028  25B6  3068               	movlw	low (_dpowers| (0+32768))
 29029  25B7  0728               	addwf	??__doprnt^(0+128),w
 29030  25B8  0084               	movwf	4
 29031  25B9  30D8               	movlw	high (_dpowers| (0+32768))
 29032  25BA  3D29               	addwfc	(??__doprnt+1)^(0+128),w
 29033  25BB  0085               	movwf	5
 29034  25BC  3F00               	moviw [0]fsr0
 29035  25BD  00F1               	movwf	___lldiv@divisor
 29036  25BE  3F01               	moviw [1]fsr0
 29037  25BF  00F2               	movwf	___lldiv@divisor+1
 29038  25C0  3F02               	moviw [2]fsr0
 29039  25C1  00F3               	movwf	___lldiv@divisor+2
 29040  25C2  3F03               	moviw [3]fsr0
 29041  25C3  00F4               	movwf	___lldiv@divisor+3
 29042  25C4  083D               	movf	(__doprnt@val+3)^(0+128),w
 29043  25C5  00F8               	movwf	___lldiv@dividend+3
 29044  25C6  083C               	movf	(__doprnt@val+2)^(0+128),w
 29045  25C7  00F7               	movwf	___lldiv@dividend+2
 29046  25C8  083B               	movf	(__doprnt@val+1)^(0+128),w
 29047  25C9  00F6               	movwf	___lldiv@dividend+1
 29048  25CA  083A               	movf	__doprnt@val^(0+128),w
 29049  25CB  00F5               	movwf	___lldiv@dividend
 29050  25CC  31A0  200A  31A0   	fcall	___lldiv
 29051  25CF  0874               	movf	?___lldiv+3,w
 29052  25D0  0141               	movlb	1	; select bank1
 29053  25D1  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 29054  25D2  0873               	movf	?___lldiv+2,w
 29055  25D3  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 29056  25D4  0872               	movf	?___lldiv+1,w
 29057  25D5  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 29058  25D6  0871               	movf	?___lldiv,w
 29059  25D7  00BE               	movwf	__doprnt@tmpval^(0+128)
 29060                           
 29061                           ;doprnt.c: 1256: tmpval.vd %= 10;
 29062  25D8  3000               	movlw	0
 29063  25D9  0140               	movlb	0	; select bank0
 29064  25DA  00A8               	movwf	___llmod@divisor+3
 29065  25DB  3000               	movlw	0
 29066  25DC  00A7               	movwf	___llmod@divisor+2
 29067  25DD  3000               	movlw	0
 29068  25DE  00A6               	movwf	___llmod@divisor+1
 29069  25DF  300A               	movlw	10
 29070  25E0  00A5               	movwf	___llmod@divisor
 29071  25E1  0141               	movlb	1	; select bank1
 29072  25E2  0841               	movf	(__doprnt@tmpval+3)^(0+128),w
 29073  25E3  0140               	movlb	0	; select bank0
 29074  25E4  00AC               	movwf	___llmod@dividend+3
 29075  25E5  0141               	movlb	1	; select bank1
 29076  25E6  0840               	movf	(__doprnt@tmpval+2)^(0+128),w
 29077  25E7  0140               	movlb	0	; select bank0
 29078  25E8  00AB               	movwf	___llmod@dividend+2
 29079  25E9  0141               	movlb	1	; select bank1
 29080  25EA  083F               	movf	(__doprnt@tmpval+1)^(0+128),w
 29081  25EB  0140               	movlb	0	; select bank0
 29082  25EC  00AA               	movwf	___llmod@dividend+1
 29083  25ED  0141               	movlb	1	; select bank1
 29084  25EE  083E               	movf	__doprnt@tmpval^(0+128),w
 29085  25EF  0140               	movlb	0	; select bank0
 29086  25F0  00A9               	movwf	___llmod@dividend
 29087  25F1  31D3  23D6  31A0   	fcall	___llmod
 29088  25F4  0828               	movf	?___llmod+3,w
 29089  25F5  0141               	movlb	1	; select bank1
 29090  25F6  00C1               	movwf	(__doprnt@tmpval+3)^(0+128)
 29091  25F7  0140               	movlb	0	; select bank0
 29092  25F8  0827               	movf	?___llmod+2,w
 29093  25F9  0141               	movlb	1	; select bank1
 29094  25FA  00C0               	movwf	(__doprnt@tmpval+2)^(0+128)
 29095  25FB  0140               	movlb	0	; select bank0
 29096  25FC  0826               	movf	?___llmod+1,w
 29097  25FD  0141               	movlb	1	; select bank1
 29098  25FE  00BF               	movwf	(__doprnt@tmpval+1)^(0+128)
 29099  25FF  0140               	movlb	0	; select bank0
 29100  2600  0825               	movf	?___llmod,w
 29101  2601  0141               	movlb	1	; select bank1
 29102  2602  00BE               	movwf	__doprnt@tmpval^(0+128)
 29103  2603  0849               	movf	__doprnt@pb^(0+128),w
 29104  2604  3E02               	addlw	2
 29105  2605  0086               	movwf	6
 29106  2606  0187               	clrf	7
 29107  2607  0016               	moviw fsr1++
 29108  2608  0401               	iorwf	1,w
 29109  2609  1903               	btfsc	3,2
 29110  260A  2E1A               	goto	l10312
 29111  260B  083E               	movf	__doprnt@tmpval^(0+128),w
 29112  260C  3E30               	addlw	48
 29113  260D  00A8               	movwf	??__doprnt^(0+128)
 29114  260E  0828               	movf	??__doprnt^(0+128),w
 29115  260F  00F3               	movwf	putch@txData
 29116  2610  0849               	movf	__doprnt@pb^(0+128),w
 29117  2611  3E02               	addlw	2
 29118  2612  0086               	movwf	6
 29119  2613  0187               	clrf	7
 29120  2614  3F41               	moviw [1]fsr1
 29121  2615  008A               	movwf	10
 29122  2616  3F40               	moviw [0]fsr1
 29123  2617  000A               	callw
 29124  2618  31A0               	pagesel	$
 29125  2619  2E32               	goto	l10314
 29126  261A                     l10312:
 29127  261A  083E               	movf	__doprnt@tmpval^(0+128),w
 29128  261B  3E30               	addlw	48
 29129  261C  00A8               	movwf	??__doprnt^(0+128)
 29130  261D  0849               	movf	__doprnt@pb^(0+128),w
 29131  261E  0086               	movwf	6
 29132  261F  0187               	clrf	7
 29133  2620  3F40               	moviw [0]fsr1
 29134  2621  00A9               	movwf	(??__doprnt+1)^(0+128)
 29135  2622  3F41               	moviw [1]fsr1
 29136  2623  00AA               	movwf	((??__doprnt+1)^(0+128)+1)
 29137  2624  0829               	movf	(??__doprnt+1)^(0+128),w
 29138  2625  0086               	movwf	6
 29139  2626  082A               	movf	(??__doprnt+2)^(0+128),w
 29140  2627  0087               	movwf	7
 29141  2628  0828               	movf	??__doprnt^(0+128),w
 29142  2629  0081               	movwf	1
 29143  262A  0849               	movf	__doprnt@pb^(0+128),w
 29144  262B  0086               	movwf	6
 29145  262C  0187               	clrf	7
 29146  262D  3001               	movlw	1
 29147  262E  0781               	addwf	1,f
 29148  262F  3141               	addfsr 1,1
 29149  2630  1803               	skipnc
 29150  2631  0A81               	incf	1,f
 29151  2632                     l10314:
 29152                           
 29153                           ;doprnt.c: 1258: val %= dpowers[c];
 29154  2632  0141               	movlb	1	; select bank1
 29155  2633  0848               	movf	__doprnt@c^(0+128),w
 29156  2634  00A8               	movwf	??__doprnt^(0+128)
 29157  2635  01A9               	clrf	(??__doprnt^(0+128)+1)
 29158  2636  35A8               	lslf	??__doprnt^(0+128),f
 29159  2637  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29160  2638  35A8               	lslf	??__doprnt^(0+128),f
 29161  2639  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29162  263A  3068               	movlw	low (_dpowers| (0+32768))
 29163  263B  0728               	addwf	??__doprnt^(0+128),w
 29164  263C  0084               	movwf	4
 29165  263D  30D8               	movlw	high (_dpowers| (0+32768))
 29166  263E  3D29               	addwfc	(??__doprnt+1)^(0+128),w
 29167  263F  0085               	movwf	5
 29168  2640  3F00               	moviw [0]fsr0
 29169  2641  0140               	movlb	0	; select bank0
 29170  2642  00A5               	movwf	___llmod@divisor
 29171  2643  3F01               	moviw [1]fsr0
 29172  2644  00A6               	movwf	___llmod@divisor+1
 29173  2645  3F02               	moviw [2]fsr0
 29174  2646  00A7               	movwf	___llmod@divisor+2
 29175  2647  3F03               	moviw [3]fsr0
 29176  2648  00A8               	movwf	___llmod@divisor+3
 29177  2649  0141               	movlb	1	; select bank1
 29178  264A  083D               	movf	(__doprnt@val+3)^(0+128),w
 29179  264B  0140               	movlb	0	; select bank0
 29180  264C  00AC               	movwf	___llmod@dividend+3
 29181  264D  0141               	movlb	1	; select bank1
 29182  264E  083C               	movf	(__doprnt@val+2)^(0+128),w
 29183  264F  0140               	movlb	0	; select bank0
 29184  2650  00AB               	movwf	___llmod@dividend+2
 29185  2651  0141               	movlb	1	; select bank1
 29186  2652  083B               	movf	(__doprnt@val+1)^(0+128),w
 29187  2653  0140               	movlb	0	; select bank0
 29188  2654  00AA               	movwf	___llmod@dividend+1
 29189  2655  0141               	movlb	1	; select bank1
 29190  2656  083A               	movf	__doprnt@val^(0+128),w
 29191  2657  0140               	movlb	0	; select bank0
 29192  2658  00A9               	movwf	___llmod@dividend
 29193  2659  31D3  23D6  31A0   	fcall	___llmod
 29194  265C  0828               	movf	?___llmod+3,w
 29195  265D  0141               	movlb	1	; select bank1
 29196  265E  00BD               	movwf	(__doprnt@val+3)^(0+128)
 29197  265F  0140               	movlb	0	; select bank0
 29198  2660  0827               	movf	?___llmod+2,w
 29199  2661  0141               	movlb	1	; select bank1
 29200  2662  00BC               	movwf	(__doprnt@val+2)^(0+128)
 29201  2663  0140               	movlb	0	; select bank0
 29202  2664  0826               	movf	?___llmod+1,w
 29203  2665  0141               	movlb	1	; select bank1
 29204  2666  00BB               	movwf	(__doprnt@val+1)^(0+128)
 29205  2667  0140               	movlb	0	; select bank0
 29206  2668  0825               	movf	?___llmod,w
 29207  2669  2DA8               	goto	L12
 29208  266A                     l10318:
 29209  266A  0849               	movf	__doprnt@pb^(0+128),w
 29210  266B  3E02               	addlw	2
 29211  266C  0086               	movwf	6
 29212  266D  0187               	clrf	7
 29213  266E  0016               	moviw fsr1++
 29214  266F  0401               	iorwf	1,w
 29215  2670  1903               	btfsc	3,2
 29216  2671  2E80               	goto	l10322
 29217  2672  3030               	movlw	48
 29218  2673  00A8               	movwf	??__doprnt^(0+128)
 29219  2674  0828               	movf	??__doprnt^(0+128),w
 29220  2675  00F3               	movwf	putch@txData
 29221  2676  0849               	movf	__doprnt@pb^(0+128),w
 29222  2677  3E02               	addlw	2
 29223  2678  0086               	movwf	6
 29224  2679  0187               	clrf	7
 29225  267A  3F41               	moviw [1]fsr1
 29226  267B  008A               	movwf	10
 29227  267C  3F40               	moviw [0]fsr1
 29228  267D  000A               	callw
 29229  267E  31A0               	pagesel	$
 29230  267F  2E95               	goto	l10326
 29231  2680                     l10322:
 29232  2680  0849               	movf	__doprnt@pb^(0+128),w
 29233  2681  0086               	movwf	6
 29234  2682  0187               	clrf	7
 29235  2683  3F40               	moviw [0]fsr1
 29236  2684  00A8               	movwf	??__doprnt^(0+128)
 29237  2685  3F41               	moviw [1]fsr1
 29238  2686  00A9               	movwf	(??__doprnt^(0+128)+1)
 29239  2687  0828               	movf	??__doprnt^(0+128),w
 29240  2688  0086               	movwf	6
 29241  2689  0829               	movf	(??__doprnt+1)^(0+128),w
 29242  268A  0087               	movwf	7
 29243  268B  3030               	movlw	48
 29244  268C  0081               	movwf	1
 29245  268D  0849               	movf	__doprnt@pb^(0+128),w
 29246  268E  0086               	movwf	6
 29247  268F  0187               	clrf	7
 29248  2690  3001               	movlw	1
 29249  2691  0781               	addwf	1,f
 29250  2692  3141               	addfsr 1,1
 29251  2693  1803               	skipnc
 29252  2694  0A81               	incf	1,f
 29253  2695                     l10326:
 29254                           
 29255                           ;doprnt.c: 1263: prec--;
 29256  2695  30FF               	movlw	255
 29257  2696  0141               	movlb	1	; select bank1
 29258  2697  07C6               	addwf	__doprnt@prec^(0+128),f
 29259  2698  30FF               	movlw	255
 29260  2699  3DC7               	addwfc	(__doprnt@prec+1)^(0+128),f
 29261  269A                     l2343:
 29262  269A  0846               	movf	__doprnt@prec^(0+128),w
 29263  269B  0447               	iorwf	(__doprnt@prec+1)^(0+128),w
 29264  269C  1903               	btfsc	3,2
 29265  269D  285F               	goto	l10392
 29266  269E  2E6A               	goto	l10318
 29267  269F                     l2288:
 29268                           
 29269                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x40) == 0x00)
 29270  269F  1B36               	btfsc	__doprnt@flag^(0+128),6
 29271  26A0  2EDE               	goto	l2350
 29272                           
 29273                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
 29274  26A1  1E36               	btfss	__doprnt@flag^(0+128),4
 29275  26A2  2EB5               	goto	l10332
 29276                           
 29277                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
 29278  26A3  0140               	movlb	0	; select bank0
 29279  26A4  086F               	movf	__doprnt@ap,w
 29280  26A5  0086               	movwf	6
 29281  26A6  0187               	clrf	7
 29282  26A7  0801               	movf	1,w
 29283  26A8  0084               	movwf	4
 29284  26A9  0185               	clrf	5
 29285  26AA  3004               	movlw	4
 29286  26AB  0781               	addwf	1,f
 29287  26AC  3F00               	moviw [0]fsr0
 29288  26AD  0141               	movlb	1	; select bank1
 29289  26AE  00BA               	movwf	__doprnt@val^(0+128)
 29290  26AF  3F01               	moviw [1]fsr0
 29291  26B0  00BB               	movwf	(__doprnt@val+1)^(0+128)
 29292  26B1  3F02               	moviw [2]fsr0
 29293  26B2  00BC               	movwf	(__doprnt@val+2)^(0+128)
 29294  26B3  3F03               	moviw [3]fsr0
 29295  26B4  2ECB               	goto	L13
 29296  26B5                     l10332:
 29297                           
 29298                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
 29299  26B5  0140               	movlb	0	; select bank0
 29300  26B6  086F               	movf	__doprnt@ap,w
 29301  26B7  0086               	movwf	6
 29302  26B8  0187               	clrf	7
 29303  26B9  0801               	movf	1,w
 29304  26BA  0084               	movwf	4
 29305  26BB  0185               	clrf	5
 29306  26BC  3002               	movlw	2
 29307  26BD  0781               	addwf	1,f
 29308  26BE  3F00               	moviw [0]fsr0
 29309  26BF  0141               	movlb	1	; select bank1
 29310  26C0  00A8               	movwf	??__doprnt^(0+128)
 29311  26C1  3F01               	moviw [1]fsr0
 29312  26C2  00A9               	movwf	(??__doprnt^(0+128)+1)
 29313  26C3  0828               	movf	??__doprnt^(0+128),w
 29314  26C4  00BA               	movwf	__doprnt@val^(0+128)
 29315  26C5  0829               	movf	(??__doprnt+1)^(0+128),w
 29316  26C6  00BB               	movwf	(__doprnt@val+1)^(0+128)
 29317  26C7  0D89               	rlf	9,f
 29318  26C8  3B89               	subwfb	9,f
 29319  26C9  0989               	comf	9,f
 29320  26CA  00BC               	movwf	(__doprnt@val+2)^(0+128)
 29321  26CB                     L13:
 29322  26CB  00BD               	movwf	(__doprnt@val+3)^(0+128)
 29323                           
 29324                           ;doprnt.c: 1287: if((long)val < 0) {
 29325  26CC  1FBD               	btfss	(__doprnt@val+3)^(0+128),7
 29326  26CD  2F07               	goto	l10344
 29327                           
 29328                           ;doprnt.c: 1288: flag |= 0x03;
 29329  26CE  3003               	movlw	3
 29330  26CF  04B6               	iorwf	__doprnt@flag^(0+128),f
 29331  26D0  3000               	movlw	0
 29332  26D1  04B7               	iorwf	(__doprnt@flag+1)^(0+128),f
 29333                           
 29334                           ;doprnt.c: 1289: val = -val;
 29335  26D2  09BA               	comf	__doprnt@val^(0+128),f
 29336  26D3  09BB               	comf	(__doprnt@val+1)^(0+128),f
 29337  26D4  09BC               	comf	(__doprnt@val+2)^(0+128),f
 29338  26D5  09BD               	comf	(__doprnt@val+3)^(0+128),f
 29339  26D6  0ABA               	incf	__doprnt@val^(0+128),f
 29340  26D7  1903               	skipnz
 29341  26D8  0ABB               	incf	(__doprnt@val+1)^(0+128),f
 29342  26D9  1903               	skipnz
 29343  26DA  0ABC               	incf	(__doprnt@val+2)^(0+128),f
 29344  26DB  1903               	skipnz
 29345  26DC  0ABD               	incf	(__doprnt@val+3)^(0+128),f
 29346  26DD  2F07               	goto	l10344
 29347  26DE                     l2350:
 29348                           
 29349                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
 29350  26DE  1E36               	btfss	__doprnt@flag^(0+128),4
 29351  26DF  2EF3               	goto	l10342
 29352                           
 29353                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 29354  26E0  0140               	movlb	0	; select bank0
 29355  26E1  086F               	movf	__doprnt@ap,w
 29356  26E2  0086               	movwf	6
 29357  26E3  0187               	clrf	7
 29358  26E4  0801               	movf	1,w
 29359  26E5  0084               	movwf	4
 29360  26E6  0185               	clrf	5
 29361  26E7  3004               	movlw	4
 29362  26E8  0781               	addwf	1,f
 29363  26E9  3F00               	moviw [0]fsr0
 29364  26EA  0141               	movlb	1	; select bank1
 29365  26EB  00BA               	movwf	__doprnt@val^(0+128)
 29366  26EC  3F01               	moviw [1]fsr0
 29367  26ED  00BB               	movwf	(__doprnt@val+1)^(0+128)
 29368  26EE  3F02               	moviw [2]fsr0
 29369  26EF  00BC               	movwf	(__doprnt@val+2)^(0+128)
 29370  26F0  3F03               	moviw [3]fsr0
 29371  26F1  00BD               	movwf	(__doprnt@val+3)^(0+128)
 29372  26F2  2F07               	goto	l10344
 29373  26F3                     l10342:
 29374                           
 29375                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 29376  26F3  0140               	movlb	0	; select bank0
 29377  26F4  086F               	movf	__doprnt@ap,w
 29378  26F5  0086               	movwf	6
 29379  26F6  0187               	clrf	7
 29380  26F7  0801               	movf	1,w
 29381  26F8  0084               	movwf	4
 29382  26F9  0185               	clrf	5
 29383  26FA  3002               	movlw	2
 29384  26FB  0781               	addwf	1,f
 29385  26FC  3F00               	moviw [0]fsr0
 29386  26FD  0141               	movlb	1	; select bank1
 29387  26FE  00A8               	movwf	??__doprnt^(0+128)
 29388  26FF  3F01               	moviw [1]fsr0
 29389  2700  00A9               	movwf	(??__doprnt^(0+128)+1)
 29390  2701  0828               	movf	??__doprnt^(0+128),w
 29391  2702  00BA               	movwf	__doprnt@val^(0+128)
 29392  2703  0829               	movf	(??__doprnt+1)^(0+128),w
 29393  2704  00BB               	movwf	(__doprnt@val^(0+128)+1)
 29394  2705  01BC               	clrf	(__doprnt@val^(0+128)+2)
 29395  2706  01BD               	clrf	(__doprnt@val^(0+128)+3)
 29396  2707                     l10344:
 29397                           
 29398                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
 29399  2707  0846               	movf	__doprnt@prec^(0+128),w
 29400  2708  0447               	iorwf	(__doprnt@prec+1)^(0+128),w
 29401  2709  1D03               	btfss	3,2
 29402  270A  2F15               	goto	l10350
 29403  270B  083D               	movf	(__doprnt@val+3)^(0+128),w
 29404  270C  043C               	iorwf	(__doprnt@val+2)^(0+128),w
 29405  270D  043B               	iorwf	(__doprnt@val+1)^(0+128),w
 29406  270E  043A               	iorwf	__doprnt@val^(0+128),w
 29407  270F  1D03               	skipz
 29408  2710  2F15               	goto	l10350
 29409                           
 29410                           ;doprnt.c: 1317: prec++;
 29411  2711  3001               	movlw	1
 29412  2712  07C6               	addwf	__doprnt@prec^(0+128),f
 29413  2713  3000               	movlw	0
 29414  2714  3DC7               	addwfc	(__doprnt@prec+1)^(0+128),f
 29415  2715                     l10350:
 29416                           
 29417                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 29418  2715  01C8               	clrf	__doprnt@c^(0+128)
 29419  2716  0AC8               	incf	__doprnt@c^(0+128),f
 29420  2717  300A               	movlw	10
 29421  2718  0648               	xorwf	__doprnt@c^(0+128),w
 29422  2719  1903               	btfsc	3,2
 29423  271A  2F48               	goto	l10362
 29424  271B                     l10356:
 29425                           
 29426                           ;doprnt.c: 1332: if(val < dpowers[c])
 29427  271B  0848               	movf	__doprnt@c^(0+128),w
 29428  271C  00A8               	movwf	??__doprnt^(0+128)
 29429  271D  01A9               	clrf	(??__doprnt^(0+128)+1)
 29430  271E  35A8               	lslf	??__doprnt^(0+128),f
 29431  271F  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29432  2720  35A8               	lslf	??__doprnt^(0+128),f
 29433  2721  0DA9               	rlf	(??__doprnt^(0+128)+1),f
 29434  2722  3068               	movlw	low (_dpowers| (0+32768))
 29435  2723  0728               	addwf	??__doprnt^(0+128),w
 29436  2724  0084               	movwf	4
 29437  2725  30D8               	movlw	high (_dpowers| (0+32768))
 29438  2726  3D29               	addwfc	(??__doprnt+1)^(0+128),w
 29439  2727  0085               	movwf	5
 29440  2728  3F00               	moviw [0]fsr0
 29441  2729  00AA               	movwf	(??__doprnt+2)^(0+128)
 29442  272A  3F01               	moviw [1]fsr0
 29443  272B  00AB               	movwf	((??__doprnt+2)^(0+128)+1)
 29444  272C  3F02               	moviw [2]fsr0
 29445  272D  00AC               	movwf	((??__doprnt+2)^(0+128)+2)
 29446  272E  3F03               	moviw [3]fsr0
 29447  272F  00AD               	movwf	((??__doprnt+2)^(0+128)+3)
 29448  2730  082D               	movf	(??__doprnt+5)^(0+128),w
 29449  2731  023D               	subwf	(__doprnt@val+3)^(0+128),w
 29450  2732  1D03               	skipz
 29451  2733  2F3E               	goto	u11865
 29452  2734  082C               	movf	(??__doprnt+4)^(0+128),w
 29453  2735  023C               	subwf	(__doprnt@val+2)^(0+128),w
 29454  2736  1D03               	skipz
 29455  2737  2F3E               	goto	u11865
 29456  2738  082B               	movf	(??__doprnt+3)^(0+128),w
 29457  2739  023B               	subwf	(__doprnt@val+1)^(0+128),w
 29458  273A  1D03               	skipz
 29459  273B  2F3E               	goto	u11865
 29460  273C  082A               	movf	(??__doprnt+2)^(0+128),w
 29461  273D  023A               	subwf	__doprnt@val^(0+128),w
 29462  273E                     u11865:
 29463  273E  1C03               	btfss	3,0
 29464  273F  2F48               	goto	l10362
 29465  2740  3001               	movlw	1
 29466  2741  00A8               	movwf	??__doprnt^(0+128)
 29467  2742  0828               	movf	??__doprnt^(0+128),w
 29468  2743  07C8               	addwf	__doprnt@c^(0+128),f
 29469  2744  300A               	movlw	10
 29470  2745  0648               	xorwf	__doprnt@c^(0+128),w
 29471  2746  1D03               	btfss	3,2
 29472  2747  2F1B               	goto	l10356
 29473  2748                     l10362:
 29474                           
 29475                           ;doprnt.c: 1365: if(c < prec)
 29476  2748  0847               	movf	(__doprnt@prec+1)^(0+128),w
 29477  2749  3A80               	xorlw	128
 29478  274A  3C80               	sublw	128
 29479  274B  1D03               	skipz
 29480  274C  2F4F               	goto	u11885
 29481  274D  0846               	movf	__doprnt@prec^(0+128),w
 29482  274E  0248               	subwf	__doprnt@c^(0+128),w
 29483  274F                     u11885:
 29484  274F  1C03               	btfss	3,0
 29485  2750  2F65               	goto	l10370
 29486                           
 29487                           ;doprnt.c: 1367: else if(prec < c)
 29488  2751  0141               	movlb	1	; select bank1
 29489  2752  0847               	movf	(__doprnt@prec+1)^(0+128),w
 29490  2753  3A80               	xorlw	128
 29491  2754  00A8               	movwf	??__doprnt^(0+128)
 29492  2755  3080               	movlw	128
 29493  2756  0228               	subwf	??__doprnt^(0+128),w
 29494  2757  1D03               	skipz
 29495  2758  2F5B               	goto	u11895
 29496  2759  0848               	movf	__doprnt@c^(0+128),w
 29497  275A  0246               	subwf	__doprnt@prec^(0+128),w
 29498  275B                     u11895:
 29499  275B  1803               	skipnc
 29500  275C  2F65               	goto	l10370
 29501                           
 29502                           ;doprnt.c: 1368: prec = c;
 29503  275D  0141               	movlb	1	; select bank1
 29504  275E  0848               	movf	__doprnt@c^(0+128),w
 29505  275F  00A8               	movwf	??__doprnt^(0+128)
 29506  2760  01A9               	clrf	(??__doprnt^(0+128)+1)
 29507  2761  0828               	movf	??__doprnt^(0+128),w
 29508  2762  00C6               	movwf	__doprnt@prec^(0+128)
 29509  2763  0829               	movf	(??__doprnt+1)^(0+128),w
 29510  2764  00C7               	movwf	(__doprnt@prec+1)^(0+128)
 29511  2765                     l10370:
 29512                           
 29513                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
 29514  2765  0141               	movlb	1	; select bank1
 29515  2766  0836               	movf	__doprnt@flag^(0+128),w
 29516  2767  3903               	andlw	3
 29517  2768  1903               	btfsc	3,2
 29518  2769  2F95               	goto	l10390
 29519  276A  0849               	movf	__doprnt@pb^(0+128),w
 29520  276B  3E02               	addlw	2
 29521  276C  0086               	movwf	6
 29522  276D  0187               	clrf	7
 29523  276E  0016               	moviw fsr1++
 29524  276F  0401               	iorwf	1,w
 29525  2770  1903               	btfsc	3,2
 29526  2771  2F80               	goto	l10376
 29527  2772  302D               	movlw	45
 29528  2773  00A8               	movwf	??__doprnt^(0+128)
 29529  2774  0828               	movf	??__doprnt^(0+128),w
 29530  2775  00F3               	movwf	putch@txData
 29531  2776  0849               	movf	__doprnt@pb^(0+128),w
 29532  2777  3E02               	addlw	2
 29533  2778  0086               	movwf	6
 29534  2779  0187               	clrf	7
 29535  277A  3F41               	moviw [1]fsr1
 29536  277B  008A               	movwf	10
 29537  277C  3F40               	moviw [0]fsr1
 29538  277D  000A               	callw
 29539  277E  31A0               	pagesel	$
 29540  277F  2F95               	goto	l10390
 29541  2780                     l10376:
 29542  2780  0849               	movf	__doprnt@pb^(0+128),w
 29543  2781  0086               	movwf	6
 29544  2782  0187               	clrf	7
 29545  2783  3F40               	moviw [0]fsr1
 29546  2784  00A8               	movwf	??__doprnt^(0+128)
 29547  2785  3F41               	moviw [1]fsr1
 29548  2786  00A9               	movwf	(??__doprnt^(0+128)+1)
 29549  2787  0828               	movf	??__doprnt^(0+128),w
 29550  2788  0086               	movwf	6
 29551  2789  0829               	movf	(??__doprnt+1)^(0+128),w
 29552  278A  0087               	movwf	7
 29553  278B  302D               	movlw	45
 29554  278C                     L14:
 29555  278C  0081               	movwf	1
 29556  278D  0849               	movf	__doprnt@pb^(0+128),w
 29557  278E  0086               	movwf	6
 29558  278F  0187               	clrf	7
 29559  2790  3001               	movlw	1
 29560  2791  0781               	addwf	1,f
 29561  2792  3141               	addfsr 1,1
 29562  2793  1803               	skipnc
 29563  2794  0A81               	incf	1,f
 29564  2795                     l10390:
 29565  2795  30FF               	movlw	255
 29566  2796  0141               	movlb	1	; select bank1
 29567  2797  07C6               	addwf	__doprnt@prec^(0+128),f
 29568  2798  30FF               	movlw	255
 29569  2799  3DC7               	addwfc	(__doprnt@prec+1)^(0+128),f
 29570  279A  0A46               	incf	__doprnt@prec^(0+128),w
 29571  279B  1903               	btfsc	3,2
 29572  279C  0A47               	incf	(__doprnt@prec+1)^(0+128),w
 29573  279D  1903               	btfsc	3,2
 29574  279E  285F               	goto	l10392
 29575                           
 29576                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 29577  279F  3000               	movlw	0
 29578  27A0  0140               	movlb	0	; select bank0
 29579  27A1  00A8               	movwf	___llmod@divisor+3
 29580  27A2  3000               	movlw	0
 29581  27A3  00A7               	movwf	___llmod@divisor+2
 29582  27A4  3000               	movlw	0
 29583  27A5  00A6               	movwf	___llmod@divisor+1
 29584  27A6  300A               	movlw	10
 29585  27A7  00A5               	movwf	___llmod@divisor
 29586  27A8  0141               	movlb	1	; select bank1
 29587  27A9  0847               	movf	(__doprnt@prec+1)^(0+128),w
 29588  27AA  0085               	movwf	5
 29589  27AB  0846               	movf	__doprnt@prec^(0+128),w
 29590  27AC  0084               	movwf	4
 29591  27AD  3584               	lslf	4,f
 29592  27AE  0D85               	rlf	5,f
 29593  27AF  3584               	lslf	4,f
 29594  27B0  0D85               	rlf	5,f
 29595  27B1  3068               	movlw	low (_dpowers| (0+32768))
 29596  27B2  0784               	addwf	4,f
 29597  27B3  30D8               	movlw	high (_dpowers| (0+32768))
 29598  27B4  3D85               	addwfc	5,f
 29599  27B5  3F00               	moviw [0]fsr0
 29600  27B6  00F1               	movwf	___lldiv@divisor
 29601  27B7  3F01               	moviw [1]fsr0
 29602  27B8  00F2               	movwf	___lldiv@divisor+1
 29603  27B9  3F02               	moviw [2]fsr0
 29604  27BA  00F3               	movwf	___lldiv@divisor+2
 29605  27BB  3F03               	moviw [3]fsr0
 29606  27BC  00F4               	movwf	___lldiv@divisor+3
 29607  27BD  083D               	movf	(__doprnt@val+3)^(0+128),w
 29608  27BE  00F8               	movwf	___lldiv@dividend+3
 29609  27BF  083C               	movf	(__doprnt@val+2)^(0+128),w
 29610  27C0  00F7               	movwf	___lldiv@dividend+2
 29611  27C1  083B               	movf	(__doprnt@val+1)^(0+128),w
 29612  27C2  00F6               	movwf	___lldiv@dividend+1
 29613  27C3  083A               	movf	__doprnt@val^(0+128),w
 29614  27C4  00F5               	movwf	___lldiv@dividend
 29615  27C5  31A0  200A  31A0   	fcall	___lldiv
 29616  27C8  0874               	movf	?___lldiv+3,w
 29617  27C9  00AC               	movwf	___llmod@dividend+3
 29618  27CA  0873               	movf	?___lldiv+2,w
 29619  27CB  00AB               	movwf	___llmod@dividend+2
 29620  27CC  0872               	movf	?___lldiv+1,w
 29621  27CD  00AA               	movwf	___llmod@dividend+1
 29622  27CE  0871               	movf	?___lldiv,w
 29623  27CF  00A9               	movwf	___llmod@dividend
 29624  27D0  31D3  23D6  31A0   	fcall	___llmod
 29625  27D3  0825               	movf	?___llmod,w
 29626  27D4  3E30               	addlw	48
 29627  27D5  0141               	movlb	1	; select bank1
 29628  27D6  00A8               	movwf	??__doprnt^(0+128)
 29629  27D7  0828               	movf	??__doprnt^(0+128),w
 29630  27D8  00C8               	movwf	__doprnt@c^(0+128)
 29631  27D9  0849               	movf	__doprnt@pb^(0+128),w
 29632  27DA  3E02               	addlw	2
 29633  27DB  0086               	movwf	6
 29634  27DC  0187               	clrf	7
 29635  27DD  0016               	moviw fsr1++
 29636  27DE  0401               	iorwf	1,w
 29637  27DF  1903               	btfsc	3,2
 29638  27E0  2FEF               	goto	l10386
 29639  27E1  0848               	movf	__doprnt@c^(0+128),w
 29640  27E2  00A8               	movwf	??__doprnt^(0+128)
 29641  27E3  0828               	movf	??__doprnt^(0+128),w
 29642  27E4  00F3               	movwf	putch@txData
 29643  27E5  0849               	movf	__doprnt@pb^(0+128),w
 29644  27E6  3E02               	addlw	2
 29645  27E7  0086               	movwf	6
 29646  27E8  0187               	clrf	7
 29647  27E9  3F41               	moviw [1]fsr1
 29648  27EA  008A               	movwf	10
 29649  27EB  3F40               	moviw [0]fsr1
 29650  27EC  000A               	callw
 29651  27ED  31A0               	pagesel	$
 29652  27EE  2F95               	goto	l10390
 29653  27EF                     l10386:
 29654  27EF  0849               	movf	__doprnt@pb^(0+128),w
 29655  27F0  0086               	movwf	6
 29656  27F1  0187               	clrf	7
 29657  27F2  3F40               	moviw [0]fsr1
 29658  27F3  00A8               	movwf	??__doprnt^(0+128)
 29659  27F4  3F41               	moviw [1]fsr1
 29660  27F5  00A9               	movwf	(??__doprnt^(0+128)+1)
 29661  27F6  0828               	movf	??__doprnt^(0+128),w
 29662  27F7  0086               	movwf	6
 29663  27F8  0829               	movf	(??__doprnt+1)^(0+128),w
 29664  27F9  0087               	movwf	7
 29665  27FA  0848               	movf	__doprnt@c^(0+128),w
 29666  27FB  2F8C               	goto	L14
 29667  27FC                     l10394:
 29668                           
 29669                           ;doprnt.c: 1566: return 0;
 29670  27FC  0140               	movlb	0	; select bank0
 29671  27FD  01ED               	clrf	?__doprnt
 29672  27FE  01EE               	clrf	?__doprnt+1
 29673  27FF  0008               	return
 29674  2800                     __end_of__doprnt:
 29675                           
 29676                           	psect	text20
 29677  35A2                     __ptext20:	
 29678 ;; *************** function _scale *****************
 29679 ;; Defined at:
 29680 ;;		line 433 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
 29681 ;; Parameters:    Size  Location     Type
 29682 ;;  scl             1    wreg     char 
 29683 ;; Auto vars:     Size  Location     Type
 29684 ;;  scl             1   52[BANK0 ] char 
 29685 ;; Return value:  Size  Location     Type
 29686 ;;                  4   32[BANK0 ] char 
 29687 ;; Registers used:
 29688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 29689 ;; Tracked objects:
 29690 ;;		On entry : 3F/1
 29691 ;;		On exit  : 3F/0
 29692 ;;		Unchanged: 0/0
 29693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 29694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29695 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29696 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29697 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29698 ;;Total ram usage:       21 bytes
 29699 ;; Hardware stack levels used: 1
 29700 ;; Hardware stack levels required when called: unknown (due to recursion)
 29701 ;; This function calls:
 29702 ;;		___awdiv
 29703 ;;		___awmod
 29704 ;;		___flmul
 29705 ;; This function is called by:
 29706 ;;		__doprnt
 29707 ;; This function uses a non-reentrant model
 29708 ;;
 29709                           
 29710  35A2                     _scale:	
 29711                           ;psect for function _scale
 29712                           
 29713                           
 29714                           ;incstack = 0
 29715                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 29716                           ;scale@scl stored from wreg
 29717  35A2  0140               	movlb	0	; select bank0
 29718  35A3  00D4               	movwf	scale@scl
 29719                           
 29720                           ;doprnt.c: 436: if(scl < 0) {
 29721  35A4  1FD4               	btfss	scale@scl,7
 29722  35A5  2ED4               	goto	l9804
 29723                           
 29724                           ;doprnt.c: 437: scl = -scl;
 29725  35A6  09D4               	comf	scale@scl,f
 29726  35A7  0AD4               	incf	scale@scl,f
 29727                           
 29728                           ;doprnt.c: 438: if(scl>=110)
 29729  35A8  0854               	movf	scale@scl,w
 29730  35A9  3A80               	xorlw	128
 29731  35AA  3E12               	addlw	-238
 29732  35AB  1C03               	skipc
 29733  35AC  2E53               	goto	l9794
 29734                           
 29735                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 29736  35AD  300A               	movlw	10
 29737  35AE  00F8               	movwf	___awdiv@divisor
 29738  35AF  3000               	movlw	0
 29739  35B0  00F9               	movwf	___awdiv@divisor+1
 29740  35B1  0854               	movf	scale@scl,w
 29741  35B2  00F3               	movwf	___awmod@dividend
 29742  35B3  01F4               	clrf	___awmod@dividend+1
 29743  35B4  1BF3               	btfsc	___awmod@dividend,7
 29744  35B5  03F4               	decf	___awmod@dividend+1,f
 29745  35B6  3064               	movlw	100
 29746  35B7  00F1               	movwf	___awmod@divisor
 29747  35B8  3000               	movlw	0
 29748  35B9  00F2               	movwf	___awmod@divisor+1
 29749  35BA  31D4  245B  31B5   	fcall	___awmod
 29750  35BD  0872               	movf	?___awmod+1,w
 29751  35BE  00FB               	movwf	___awdiv@dividend+1
 29752  35BF  0871               	movf	?___awmod,w
 29753  35C0  00FA               	movwf	___awdiv@dividend
 29754  35C1  31C8  2008  31B5   	fcall	___awdiv
 29755  35C4  0878               	movf	?___awdiv,w
 29756  35C5  3E09               	addlw	9
 29757  35C6  00C4               	movwf	??_scale
 29758  35C7  01C5               	clrf	??_scale+1
 29759  35C8  35C4               	lslf	??_scale,f
 29760  35C9  0DC5               	rlf	??_scale+1,f
 29761  35CA  35C4               	lslf	??_scale,f
 29762  35CB  0DC5               	rlf	??_scale+1,f
 29763  35CC  3034               	movlw	low (__npowers_| (0+32768))
 29764  35CD  0744               	addwf	??_scale,w
 29765  35CE  0084               	movwf	4
 29766  35CF  30D8               	movlw	high (__npowers_| (0+32768))
 29767  35D0  3D45               	addwfc	??_scale+1,w
 29768  35D1  0085               	movwf	5
 29769  35D2  3F00               	moviw [0]fsr0
 29770  35D3  00C6               	movwf	??_scale+2
 29771  35D4  3F01               	moviw [1]fsr0
 29772  35D5  00C7               	movwf	??_scale+3
 29773  35D6  3F02               	moviw [2]fsr0
 29774  35D7  00C8               	movwf	??_scale+4
 29775  35D8  3F03               	moviw [3]fsr0
 29776  35D9  00C9               	movwf	??_scale+5
 29777  35DA  0849               	movf	??_scale+5,w
 29778  35DB  00A9               	movwf	___flmul@b+3
 29779  35DC  0848               	movf	??_scale+4,w
 29780  35DD  00A8               	movwf	___flmul@b+2
 29781  35DE  0847               	movf	??_scale+3,w
 29782  35DF  00A7               	movwf	___flmul@b+1
 29783  35E0  0846               	movf	??_scale+2,w
 29784  35E1  00A6               	movwf	___flmul@b
 29785  35E2  3064               	movlw	100
 29786  35E3  00F8               	movwf	___awdiv@divisor
 29787  35E4  3000               	movlw	0
 29788  35E5  00F9               	movwf	___awdiv@divisor+1
 29789  35E6  0854               	movf	scale@scl,w
 29790  35E7  00FA               	movwf	___awdiv@dividend
 29791  35E8  01FB               	clrf	___awdiv@dividend+1
 29792  35E9  1BFA               	btfsc	___awdiv@dividend,7
 29793  35EA  03FB               	decf	___awdiv@dividend+1,f
 29794  35EB  31C8  2008  31B5   	fcall	___awdiv
 29795  35EE  0878               	movf	?___awdiv,w
 29796  35EF  3E12               	addlw	18
 29797  35F0  00CA               	movwf	??_scale+6
 29798  35F1  01CB               	clrf	??_scale+7
 29799  35F2  35CA               	lslf	??_scale+6,f
 29800  35F3  0DCB               	rlf	??_scale+7,f
 29801  35F4  35CA               	lslf	??_scale+6,f
 29802  35F5  0DCB               	rlf	??_scale+7,f
 29803  35F6  3034               	movlw	low (__npowers_| (0+32768))
 29804  35F7  074A               	addwf	??_scale+6,w
 29805  35F8  0084               	movwf	4
 29806  35F9  30D8               	movlw	high (__npowers_| (0+32768))
 29807  35FA  3D4B               	addwfc	??_scale+7,w
 29808  35FB  0085               	movwf	5
 29809  35FC  3F00               	moviw [0]fsr0
 29810  35FD  00CC               	movwf	??_scale+8
 29811  35FE  3F01               	moviw [1]fsr0
 29812  35FF  00CD               	movwf	??_scale+9
 29813  3600  3F02               	moviw [2]fsr0
 29814  3601  00CE               	movwf	??_scale+10
 29815  3602  3F03               	moviw [3]fsr0
 29816  3603  00CF               	movwf	??_scale+11
 29817  3604  084F               	movf	??_scale+11,w
 29818  3605  00AD               	movwf	___flmul@a+3
 29819  3606  084E               	movf	??_scale+10,w
 29820  3607  00AC               	movwf	___flmul@a+2
 29821  3608  084D               	movf	??_scale+9,w
 29822  3609  00AB               	movwf	___flmul@a+1
 29823  360A  084C               	movf	??_scale+8,w
 29824  360B  00AA               	movwf	___flmul@a
 29825  360C  31B1  2135  31B5   	fcall	___flmul
 29826  360F  0829               	movf	?___flmul+3,w
 29827  3610  00D3               	movwf	_scale$4357+3
 29828  3611  0828               	movf	?___flmul+2,w
 29829  3612  00D2               	movwf	_scale$4357+2
 29830  3613  0827               	movf	?___flmul+1,w
 29831  3614  00D1               	movwf	_scale$4357+1
 29832  3615  0826               	movf	?___flmul,w
 29833  3616  00D0               	movwf	_scale$4357
 29834                           
 29835                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 29836  3617  300A               	movlw	10
 29837  3618  00F1               	movwf	___awmod@divisor
 29838  3619  3000               	movlw	0
 29839  361A  00F2               	movwf	___awmod@divisor+1
 29840  361B  0854               	movf	scale@scl,w
 29841  361C  00F3               	movwf	___awmod@dividend
 29842  361D  01F4               	clrf	___awmod@dividend+1
 29843  361E  1BF3               	btfsc	___awmod@dividend,7
 29844  361F  03F4               	decf	___awmod@dividend+1,f
 29845  3620  31D4  245B  31B5   	fcall	___awmod
 29846  3623  0871               	movf	?___awmod,w
 29847  3624  00C4               	movwf	??_scale
 29848  3625  01C5               	clrf	??_scale+1
 29849  3626  35C4               	lslf	??_scale,f
 29850  3627  0DC5               	rlf	??_scale+1,f
 29851  3628  35C4               	lslf	??_scale,f
 29852  3629  0DC5               	rlf	??_scale+1,f
 29853  362A  3034               	movlw	low (__npowers_| (0+32768))
 29854  362B  0744               	addwf	??_scale,w
 29855  362C  0084               	movwf	4
 29856  362D  30D8               	movlw	high (__npowers_| (0+32768))
 29857  362E  3D45               	addwfc	??_scale+1,w
 29858  362F  0085               	movwf	5
 29859  3630  3F00               	moviw [0]fsr0
 29860  3631  00C6               	movwf	??_scale+2
 29861  3632  3F01               	moviw [1]fsr0
 29862  3633  00C7               	movwf	??_scale+3
 29863  3634  3F02               	moviw [2]fsr0
 29864  3635  00C8               	movwf	??_scale+4
 29865  3636  3F03               	moviw [3]fsr0
 29866  3637  00C9               	movwf	??_scale+5
 29867  3638  0849               	movf	??_scale+5,w
 29868  3639  00A9               	movwf	___flmul@b+3
 29869  363A  0848               	movf	??_scale+4,w
 29870  363B  00A8               	movwf	___flmul@b+2
 29871  363C  0847               	movf	??_scale+3,w
 29872  363D  00A7               	movwf	___flmul@b+1
 29873  363E  0846               	movf	??_scale+2,w
 29874  363F  00A6               	movwf	___flmul@b
 29875  3640  0853               	movf	_scale$4357+3,w
 29876  3641  00AD               	movwf	___flmul@a+3
 29877  3642  0852               	movf	_scale$4357+2,w
 29878  3643  00AC               	movwf	___flmul@a+2
 29879  3644  0851               	movf	_scale$4357+1,w
 29880  3645  00AB               	movwf	___flmul@a+1
 29881  3646  0850               	movf	_scale$4357,w
 29882  3647  00AA               	movwf	___flmul@a
 29883  3648  31B1  2135         	fcall	___flmul
 29884  364A  0829               	movf	?___flmul+3,w
 29885  364B  00C3               	movwf	?_scale+3
 29886  364C  0828               	movf	?___flmul+2,w
 29887  364D  00C2               	movwf	?_scale+2
 29888  364E  0827               	movf	?___flmul+1,w
 29889  364F  00C1               	movwf	?_scale+1
 29890  3650  0826               	movf	?___flmul,w
 29891  3651  00C0               	movwf	?_scale
 29892  3652  0008               	return
 29893  3653                     l9794:
 29894                           
 29895                           ;doprnt.c: 440: else if(scl > 10)
 29896  3653  0854               	movf	scale@scl,w
 29897  3654  3A80               	xorlw	128
 29898  3655  3E75               	addlw	-139
 29899  3656  1C03               	skipc
 29900  3657  2EB6               	goto	l9800
 29901                           
 29902                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 29903  3658  300A               	movlw	10
 29904  3659  00F1               	movwf	___awmod@divisor
 29905  365A  3000               	movlw	0
 29906  365B  00F2               	movwf	___awmod@divisor+1
 29907  365C  0854               	movf	scale@scl,w
 29908  365D  00F3               	movwf	___awmod@dividend
 29909  365E  01F4               	clrf	___awmod@dividend+1
 29910  365F  1BF3               	btfsc	___awmod@dividend,7
 29911  3660  03F4               	decf	___awmod@dividend+1,f
 29912  3661  31D4  245B  31B5   	fcall	___awmod
 29913  3664  0871               	movf	?___awmod,w
 29914  3665  00C4               	movwf	??_scale
 29915  3666  01C5               	clrf	??_scale+1
 29916  3667  35C4               	lslf	??_scale,f
 29917  3668  0DC5               	rlf	??_scale+1,f
 29918  3669  35C4               	lslf	??_scale,f
 29919  366A  0DC5               	rlf	??_scale+1,f
 29920  366B  3034               	movlw	low (__npowers_| (0+32768))
 29921  366C  0744               	addwf	??_scale,w
 29922  366D  0084               	movwf	4
 29923  366E  30D8               	movlw	high (__npowers_| (0+32768))
 29924  366F  3D45               	addwfc	??_scale+1,w
 29925  3670  0085               	movwf	5
 29926  3671  3F00               	moviw [0]fsr0
 29927  3672  00C6               	movwf	??_scale+2
 29928  3673  3F01               	moviw [1]fsr0
 29929  3674  00C7               	movwf	??_scale+3
 29930  3675  3F02               	moviw [2]fsr0
 29931  3676  00C8               	movwf	??_scale+4
 29932  3677  3F03               	moviw [3]fsr0
 29933  3678  00C9               	movwf	??_scale+5
 29934  3679  0849               	movf	??_scale+5,w
 29935  367A  00A9               	movwf	___flmul@b+3
 29936  367B  0848               	movf	??_scale+4,w
 29937  367C  00A8               	movwf	___flmul@b+2
 29938  367D  0847               	movf	??_scale+3,w
 29939  367E  00A7               	movwf	___flmul@b+1
 29940  367F  0846               	movf	??_scale+2,w
 29941  3680  00A6               	movwf	___flmul@b
 29942  3681  300A               	movlw	10
 29943  3682  00F8               	movwf	___awdiv@divisor
 29944  3683  3000               	movlw	0
 29945  3684  00F9               	movwf	___awdiv@divisor+1
 29946  3685  0854               	movf	scale@scl,w
 29947  3686  00FA               	movwf	___awdiv@dividend
 29948  3687  01FB               	clrf	___awdiv@dividend+1
 29949  3688  1BFA               	btfsc	___awdiv@dividend,7
 29950  3689  03FB               	decf	___awdiv@dividend+1,f
 29951  368A  31C8  2008  31B5   	fcall	___awdiv
 29952  368D  0878               	movf	?___awdiv,w
 29953  368E  3E09               	addlw	9
 29954  368F  00CA               	movwf	??_scale+6
 29955  3690  01CB               	clrf	??_scale+7
 29956  3691  35CA               	lslf	??_scale+6,f
 29957  3692  0DCB               	rlf	??_scale+7,f
 29958  3693  35CA               	lslf	??_scale+6,f
 29959  3694  0DCB               	rlf	??_scale+7,f
 29960  3695  3034               	movlw	low (__npowers_| (0+32768))
 29961  3696  074A               	addwf	??_scale+6,w
 29962  3697  0084               	movwf	4
 29963  3698  30D8               	movlw	high (__npowers_| (0+32768))
 29964  3699  3D4B               	addwfc	??_scale+7,w
 29965  369A  0085               	movwf	5
 29966  369B  3F00               	moviw [0]fsr0
 29967  369C  00CC               	movwf	??_scale+8
 29968  369D  3F01               	moviw [1]fsr0
 29969  369E  00CD               	movwf	??_scale+9
 29970  369F  3F02               	moviw [2]fsr0
 29971  36A0  00CE               	movwf	??_scale+10
 29972  36A1  3F03               	moviw [3]fsr0
 29973  36A2  00CF               	movwf	??_scale+11
 29974  36A3  084F               	movf	??_scale+11,w
 29975  36A4  00AD               	movwf	___flmul@a+3
 29976  36A5  084E               	movf	??_scale+10,w
 29977  36A6  00AC               	movwf	___flmul@a+2
 29978  36A7  084D               	movf	??_scale+9,w
 29979  36A8  00AB               	movwf	___flmul@a+1
 29980  36A9  084C               	movf	??_scale+8,w
 29981  36AA  00AA               	movwf	___flmul@a
 29982  36AB  31B1  2135         	fcall	___flmul
 29983  36AD  0829               	movf	?___flmul+3,w
 29984  36AE  00C3               	movwf	?_scale+3
 29985  36AF  0828               	movf	?___flmul+2,w
 29986  36B0  00C2               	movwf	?_scale+2
 29987  36B1  0827               	movf	?___flmul+1,w
 29988  36B2  00C1               	movwf	?_scale+1
 29989  36B3  0826               	movf	?___flmul,w
 29990  36B4  00C0               	movwf	?_scale
 29991  36B5  0008               	return
 29992  36B6                     l9800:
 29993                           
 29994                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 29995  36B6  0854               	movf	scale@scl,w
 29996  36B7  00C4               	movwf	??_scale
 29997  36B8  01C5               	clrf	??_scale+1
 29998  36B9  35C4               	lslf	??_scale,f
 29999  36BA  0DC5               	rlf	??_scale+1,f
 30000  36BB  35C4               	lslf	??_scale,f
 30001  36BC  0DC5               	rlf	??_scale+1,f
 30002  36BD  3034               	movlw	low (__npowers_| (0+32768))
 30003  36BE  0744               	addwf	??_scale,w
 30004  36BF  0084               	movwf	4
 30005  36C0  30D8               	movlw	high (__npowers_| (0+32768))
 30006  36C1  3D45               	addwfc	??_scale+1,w
 30007  36C2  0085               	movwf	5
 30008  36C3  3F00               	moviw [0]fsr0
 30009  36C4  00C6               	movwf	??_scale+2
 30010  36C5  3F01               	moviw [1]fsr0
 30011  36C6  00C7               	movwf	??_scale+3
 30012  36C7  3F02               	moviw [2]fsr0
 30013  36C8  00C8               	movwf	??_scale+4
 30014  36C9  3F03               	moviw [3]fsr0
 30015  36CA  00C9               	movwf	??_scale+5
 30016  36CB  0849               	movf	??_scale+5,w
 30017  36CC  00C3               	movwf	?_scale+3
 30018  36CD  0848               	movf	??_scale+4,w
 30019  36CE  00C2               	movwf	?_scale+2
 30020  36CF  0847               	movf	??_scale+3,w
 30021  36D0  00C1               	movwf	?_scale+1
 30022  36D1  0846               	movf	??_scale+2,w
 30023  36D2  00C0               	movwf	?_scale
 30024  36D3  0008               	return
 30025  36D4                     l9804:
 30026                           
 30027                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 30028  36D4  0854               	movf	scale@scl,w
 30029  36D5  3A80               	xorlw	128
 30030  36D6  3E12               	addlw	-238
 30031  36D7  1C03               	skipc
 30032  36D8  2F7F               	goto	l9812
 30033                           
 30034                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 30035  36D9  300A               	movlw	10
 30036  36DA  00F8               	movwf	___awdiv@divisor
 30037  36DB  3000               	movlw	0
 30038  36DC  00F9               	movwf	___awdiv@divisor+1
 30039  36DD  0854               	movf	scale@scl,w
 30040  36DE  00F3               	movwf	___awmod@dividend
 30041  36DF  01F4               	clrf	___awmod@dividend+1
 30042  36E0  1BF3               	btfsc	___awmod@dividend,7
 30043  36E1  03F4               	decf	___awmod@dividend+1,f
 30044  36E2  3064               	movlw	100
 30045  36E3  00F1               	movwf	___awmod@divisor
 30046  36E4  3000               	movlw	0
 30047  36E5  00F2               	movwf	___awmod@divisor+1
 30048  36E6  31D4  245B  31B5   	fcall	___awmod
 30049  36E9  0872               	movf	?___awmod+1,w
 30050  36EA  00FB               	movwf	___awdiv@dividend+1
 30051  36EB  0871               	movf	?___awmod,w
 30052  36EC  00FA               	movwf	___awdiv@dividend
 30053  36ED  31C8  2008  31B5   	fcall	___awdiv
 30054  36F0  0878               	movf	?___awdiv,w
 30055  36F1  3E09               	addlw	9
 30056  36F2  00C4               	movwf	??_scale
 30057  36F3  01C5               	clrf	??_scale+1
 30058  36F4  35C4               	lslf	??_scale,f
 30059  36F5  0DC5               	rlf	??_scale+1,f
 30060  36F6  35C4               	lslf	??_scale,f
 30061  36F7  0DC5               	rlf	??_scale+1,f
 30062  36F8  3000               	movlw	low (__powers_| (0+32768))
 30063  36F9  0744               	addwf	??_scale,w
 30064  36FA  0084               	movwf	4
 30065  36FB  30D8               	movlw	high (__powers_| (0+32768))
 30066  36FC  3D45               	addwfc	??_scale+1,w
 30067  36FD  0085               	movwf	5
 30068  36FE  3F00               	moviw [0]fsr0
 30069  36FF  00C6               	movwf	??_scale+2
 30070  3700  3F01               	moviw [1]fsr0
 30071  3701  00C7               	movwf	??_scale+3
 30072  3702  3F02               	moviw [2]fsr0
 30073  3703  00C8               	movwf	??_scale+4
 30074  3704  3F03               	moviw [3]fsr0
 30075  3705  00C9               	movwf	??_scale+5
 30076  3706  0849               	movf	??_scale+5,w
 30077  3707  00A9               	movwf	___flmul@b+3
 30078  3708  0848               	movf	??_scale+4,w
 30079  3709  00A8               	movwf	___flmul@b+2
 30080  370A  0847               	movf	??_scale+3,w
 30081  370B  00A7               	movwf	___flmul@b+1
 30082  370C  0846               	movf	??_scale+2,w
 30083  370D  00A6               	movwf	___flmul@b
 30084  370E  3064               	movlw	100
 30085  370F  00F8               	movwf	___awdiv@divisor
 30086  3710  3000               	movlw	0
 30087  3711  00F9               	movwf	___awdiv@divisor+1
 30088  3712  0854               	movf	scale@scl,w
 30089  3713  00FA               	movwf	___awdiv@dividend
 30090  3714  01FB               	clrf	___awdiv@dividend+1
 30091  3715  1BFA               	btfsc	___awdiv@dividend,7
 30092  3716  03FB               	decf	___awdiv@dividend+1,f
 30093  3717  31C8  2008  31B5   	fcall	___awdiv
 30094  371A  0878               	movf	?___awdiv,w
 30095  371B  3E12               	addlw	18
 30096  371C  00CA               	movwf	??_scale+6
 30097  371D  01CB               	clrf	??_scale+7
 30098  371E  35CA               	lslf	??_scale+6,f
 30099  371F  0DCB               	rlf	??_scale+7,f
 30100  3720  35CA               	lslf	??_scale+6,f
 30101  3721  0DCB               	rlf	??_scale+7,f
 30102  3722  3000               	movlw	low (__powers_| (0+32768))
 30103  3723  074A               	addwf	??_scale+6,w
 30104  3724  0084               	movwf	4
 30105  3725  30D8               	movlw	high (__powers_| (0+32768))
 30106  3726  3D4B               	addwfc	??_scale+7,w
 30107  3727  0085               	movwf	5
 30108  3728  3F00               	moviw [0]fsr0
 30109  3729  00CC               	movwf	??_scale+8
 30110  372A  3F01               	moviw [1]fsr0
 30111  372B  00CD               	movwf	??_scale+9
 30112  372C  3F02               	moviw [2]fsr0
 30113  372D  00CE               	movwf	??_scale+10
 30114  372E  3F03               	moviw [3]fsr0
 30115  372F  00CF               	movwf	??_scale+11
 30116  3730  084F               	movf	??_scale+11,w
 30117  3731  00AD               	movwf	___flmul@a+3
 30118  3732  084E               	movf	??_scale+10,w
 30119  3733  00AC               	movwf	___flmul@a+2
 30120  3734  084D               	movf	??_scale+9,w
 30121  3735  00AB               	movwf	___flmul@a+1
 30122  3736  084C               	movf	??_scale+8,w
 30123  3737  00AA               	movwf	___flmul@a
 30124  3738  31B1  2135  31B5   	fcall	___flmul
 30125  373B  0829               	movf	?___flmul+3,w
 30126  373C  00D3               	movwf	_scale$4357+3
 30127  373D  0828               	movf	?___flmul+2,w
 30128  373E  00D2               	movwf	_scale$4357+2
 30129  373F  0827               	movf	?___flmul+1,w
 30130  3740  00D1               	movwf	_scale$4357+1
 30131  3741  0826               	movf	?___flmul,w
 30132  3742  00D0               	movwf	_scale$4357
 30133                           
 30134                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 30135  3743  300A               	movlw	10
 30136  3744  00F1               	movwf	___awmod@divisor
 30137  3745  3000               	movlw	0
 30138  3746  00F2               	movwf	___awmod@divisor+1
 30139  3747  0854               	movf	scale@scl,w
 30140  3748  00F3               	movwf	___awmod@dividend
 30141  3749  01F4               	clrf	___awmod@dividend+1
 30142  374A  1BF3               	btfsc	___awmod@dividend,7
 30143  374B  03F4               	decf	___awmod@dividend+1,f
 30144  374C  31D4  245B  31B5   	fcall	___awmod
 30145  374F  0871               	movf	?___awmod,w
 30146  3750  00C4               	movwf	??_scale
 30147  3751  01C5               	clrf	??_scale+1
 30148  3752  35C4               	lslf	??_scale,f
 30149  3753  0DC5               	rlf	??_scale+1,f
 30150  3754  35C4               	lslf	??_scale,f
 30151  3755  0DC5               	rlf	??_scale+1,f
 30152  3756  3000               	movlw	low (__powers_| (0+32768))
 30153  3757  0744               	addwf	??_scale,w
 30154  3758  0084               	movwf	4
 30155  3759  30D8               	movlw	high (__powers_| (0+32768))
 30156  375A  3D45               	addwfc	??_scale+1,w
 30157  375B  0085               	movwf	5
 30158  375C  3F00               	moviw [0]fsr0
 30159  375D  00C6               	movwf	??_scale+2
 30160  375E  3F01               	moviw [1]fsr0
 30161  375F  00C7               	movwf	??_scale+3
 30162  3760  3F02               	moviw [2]fsr0
 30163  3761  00C8               	movwf	??_scale+4
 30164  3762  3F03               	moviw [3]fsr0
 30165  3763  00C9               	movwf	??_scale+5
 30166  3764  0849               	movf	??_scale+5,w
 30167  3765  00A9               	movwf	___flmul@b+3
 30168  3766  0848               	movf	??_scale+4,w
 30169  3767  00A8               	movwf	___flmul@b+2
 30170  3768  0847               	movf	??_scale+3,w
 30171  3769  00A7               	movwf	___flmul@b+1
 30172  376A  0846               	movf	??_scale+2,w
 30173  376B  00A6               	movwf	___flmul@b
 30174  376C  0853               	movf	_scale$4357+3,w
 30175  376D  00AD               	movwf	___flmul@a+3
 30176  376E  0852               	movf	_scale$4357+2,w
 30177  376F  00AC               	movwf	___flmul@a+2
 30178  3770  0851               	movf	_scale$4357+1,w
 30179  3771  00AB               	movwf	___flmul@a+1
 30180  3772  0850               	movf	_scale$4357,w
 30181  3773  00AA               	movwf	___flmul@a
 30182  3774  31B1  2135         	fcall	___flmul
 30183  3776  0829               	movf	?___flmul+3,w
 30184  3777  00C3               	movwf	?_scale+3
 30185  3778  0828               	movf	?___flmul+2,w
 30186  3779  00C2               	movwf	?_scale+2
 30187  377A  0827               	movf	?___flmul+1,w
 30188  377B  00C1               	movwf	?_scale+1
 30189  377C  0826               	movf	?___flmul,w
 30190  377D  00C0               	movwf	?_scale
 30191  377E  0008               	return
 30192  377F                     l9812:
 30193                           
 30194                           ;doprnt.c: 446: else if(scl > 10)
 30195  377F  0854               	movf	scale@scl,w
 30196  3780  3A80               	xorlw	128
 30197  3781  3E75               	addlw	-139
 30198  3782  1C03               	skipc
 30199  3783  2FE2               	goto	l9818
 30200                           
 30201                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 30202  3784  300A               	movlw	10
 30203  3785  00F1               	movwf	___awmod@divisor
 30204  3786  3000               	movlw	0
 30205  3787  00F2               	movwf	___awmod@divisor+1
 30206  3788  0854               	movf	scale@scl,w
 30207  3789  00F3               	movwf	___awmod@dividend
 30208  378A  01F4               	clrf	___awmod@dividend+1
 30209  378B  1BF3               	btfsc	___awmod@dividend,7
 30210  378C  03F4               	decf	___awmod@dividend+1,f
 30211  378D  31D4  245B  31B5   	fcall	___awmod
 30212  3790  0871               	movf	?___awmod,w
 30213  3791  00C4               	movwf	??_scale
 30214  3792  01C5               	clrf	??_scale+1
 30215  3793  35C4               	lslf	??_scale,f
 30216  3794  0DC5               	rlf	??_scale+1,f
 30217  3795  35C4               	lslf	??_scale,f
 30218  3796  0DC5               	rlf	??_scale+1,f
 30219  3797  3000               	movlw	low (__powers_| (0+32768))
 30220  3798  0744               	addwf	??_scale,w
 30221  3799  0084               	movwf	4
 30222  379A  30D8               	movlw	high (__powers_| (0+32768))
 30223  379B  3D45               	addwfc	??_scale+1,w
 30224  379C  0085               	movwf	5
 30225  379D  3F00               	moviw [0]fsr0
 30226  379E  00C6               	movwf	??_scale+2
 30227  379F  3F01               	moviw [1]fsr0
 30228  37A0  00C7               	movwf	??_scale+3
 30229  37A1  3F02               	moviw [2]fsr0
 30230  37A2  00C8               	movwf	??_scale+4
 30231  37A3  3F03               	moviw [3]fsr0
 30232  37A4  00C9               	movwf	??_scale+5
 30233  37A5  0849               	movf	??_scale+5,w
 30234  37A6  00A9               	movwf	___flmul@b+3
 30235  37A7  0848               	movf	??_scale+4,w
 30236  37A8  00A8               	movwf	___flmul@b+2
 30237  37A9  0847               	movf	??_scale+3,w
 30238  37AA  00A7               	movwf	___flmul@b+1
 30239  37AB  0846               	movf	??_scale+2,w
 30240  37AC  00A6               	movwf	___flmul@b
 30241  37AD  300A               	movlw	10
 30242  37AE  00F8               	movwf	___awdiv@divisor
 30243  37AF  3000               	movlw	0
 30244  37B0  00F9               	movwf	___awdiv@divisor+1
 30245  37B1  0854               	movf	scale@scl,w
 30246  37B2  00FA               	movwf	___awdiv@dividend
 30247  37B3  01FB               	clrf	___awdiv@dividend+1
 30248  37B4  1BFA               	btfsc	___awdiv@dividend,7
 30249  37B5  03FB               	decf	___awdiv@dividend+1,f
 30250  37B6  31C8  2008  31B5   	fcall	___awdiv
 30251  37B9  0878               	movf	?___awdiv,w
 30252  37BA  3E09               	addlw	9
 30253  37BB  00CA               	movwf	??_scale+6
 30254  37BC  01CB               	clrf	??_scale+7
 30255  37BD  35CA               	lslf	??_scale+6,f
 30256  37BE  0DCB               	rlf	??_scale+7,f
 30257  37BF  35CA               	lslf	??_scale+6,f
 30258  37C0  0DCB               	rlf	??_scale+7,f
 30259  37C1  3000               	movlw	low (__powers_| (0+32768))
 30260  37C2  074A               	addwf	??_scale+6,w
 30261  37C3  0084               	movwf	4
 30262  37C4  30D8               	movlw	high (__powers_| (0+32768))
 30263  37C5  3D4B               	addwfc	??_scale+7,w
 30264  37C6  0085               	movwf	5
 30265  37C7  3F00               	moviw [0]fsr0
 30266  37C8  00CC               	movwf	??_scale+8
 30267  37C9  3F01               	moviw [1]fsr0
 30268  37CA  00CD               	movwf	??_scale+9
 30269  37CB  3F02               	moviw [2]fsr0
 30270  37CC  00CE               	movwf	??_scale+10
 30271  37CD  3F03               	moviw [3]fsr0
 30272  37CE  00CF               	movwf	??_scale+11
 30273  37CF  084F               	movf	??_scale+11,w
 30274  37D0  00AD               	movwf	___flmul@a+3
 30275  37D1  084E               	movf	??_scale+10,w
 30276  37D2  00AC               	movwf	___flmul@a+2
 30277  37D3  084D               	movf	??_scale+9,w
 30278  37D4  00AB               	movwf	___flmul@a+1
 30279  37D5  084C               	movf	??_scale+8,w
 30280  37D6  00AA               	movwf	___flmul@a
 30281  37D7  31B1  2135         	fcall	___flmul
 30282  37D9  0829               	movf	?___flmul+3,w
 30283  37DA  00C3               	movwf	?_scale+3
 30284  37DB  0828               	movf	?___flmul+2,w
 30285  37DC  00C2               	movwf	?_scale+2
 30286  37DD  0827               	movf	?___flmul+1,w
 30287  37DE  00C1               	movwf	?_scale+1
 30288  37DF  0826               	movf	?___flmul,w
 30289  37E0  00C0               	movwf	?_scale
 30290  37E1  0008               	return
 30291  37E2                     l9818:
 30292                           
 30293                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 30294  37E2  0854               	movf	scale@scl,w
 30295  37E3  00C4               	movwf	??_scale
 30296  37E4  01C5               	clrf	??_scale+1
 30297  37E5  35C4               	lslf	??_scale,f
 30298  37E6  0DC5               	rlf	??_scale+1,f
 30299  37E7  35C4               	lslf	??_scale,f
 30300  37E8  0DC5               	rlf	??_scale+1,f
 30301  37E9  3000               	movlw	low (__powers_| (0+32768))
 30302  37EA  0744               	addwf	??_scale,w
 30303  37EB  0084               	movwf	4
 30304  37EC  30D8               	movlw	high (__powers_| (0+32768))
 30305  37ED  3D45               	addwfc	??_scale+1,w
 30306  37EE  0085               	movwf	5
 30307  37EF  3F00               	moviw [0]fsr0
 30308  37F0  00C6               	movwf	??_scale+2
 30309  37F1  3F01               	moviw [1]fsr0
 30310  37F2  00C7               	movwf	??_scale+3
 30311  37F3  3F02               	moviw [2]fsr0
 30312  37F4  00C8               	movwf	??_scale+4
 30313  37F5  3F03               	moviw [3]fsr0
 30314  37F6  00C9               	movwf	??_scale+5
 30315  37F7  0849               	movf	??_scale+5,w
 30316  37F8  00C3               	movwf	?_scale+3
 30317  37F9  0848               	movf	??_scale+4,w
 30318  37FA  00C2               	movwf	?_scale+2
 30319  37FB  0847               	movf	??_scale+3,w
 30320  37FC  00C1               	movwf	?_scale+1
 30321  37FD  0846               	movf	??_scale+2,w
 30322  37FE  00C0               	movwf	?_scale
 30323  37FF  0008               	return
 30324  3800                     __end_of_scale:
 30325                           
 30326                           	psect	text21
 30327  545B                     __ptext21:	
 30328 ;; *************** function ___awmod *****************
 30329 ;; Defined at:
 30330 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
 30331 ;; Parameters:    Size  Location     Type
 30332 ;;  divisor         2    1[COMMON] int 
 30333 ;;  dividend        2    3[COMMON] int 
 30334 ;; Auto vars:     Size  Location     Type
 30335 ;;  sign            1    7[COMMON] unsigned char 
 30336 ;;  counter         1    6[COMMON] unsigned char 
 30337 ;; Return value:  Size  Location     Type
 30338 ;;                  2    1[COMMON] int 
 30339 ;; Registers used:
 30340 ;;		wreg, status,2, status,0
 30341 ;; Tracked objects:
 30342 ;;		On entry : 3F/0
 30343 ;;		On exit  : 3F/0
 30344 ;;		Unchanged: 3F/0
 30345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30350 ;;Total ram usage:        7 bytes
 30351 ;; Hardware stack levels used: 1
 30352 ;; Hardware stack levels required when called: unknown (due to recursion)
 30353 ;; This function calls:
 30354 ;;		Nothing
 30355 ;; This function is called by:
 30356 ;;		_scale
 30357 ;; This function uses a non-reentrant model
 30358 ;;
 30359                           
 30360  545B                     ___awmod:	
 30361                           ;psect for function ___awmod
 30362                           
 30363                           
 30364                           ;incstack = 0
 30365                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 30366  545B  01F7               	clrf	___awmod@sign
 30367  545C  1FF4               	btfss	___awmod@dividend+1,7
 30368  545D  2C65               	goto	l8922
 30369  545E  09F3               	comf	___awmod@dividend,f
 30370  545F  09F4               	comf	___awmod@dividend+1,f
 30371  5460  0AF3               	incf	___awmod@dividend,f
 30372  5461  1903               	skipnz
 30373  5462  0AF4               	incf	___awmod@dividend+1,f
 30374  5463  01F7               	clrf	___awmod@sign
 30375  5464  0AF7               	incf	___awmod@sign,f
 30376  5465                     l8922:
 30377  5465  1FF2               	btfss	___awmod@divisor+1,7
 30378  5466  2C6C               	goto	l8926
 30379  5467  09F1               	comf	___awmod@divisor,f
 30380  5468  09F2               	comf	___awmod@divisor+1,f
 30381  5469  0AF1               	incf	___awmod@divisor,f
 30382  546A  1903               	skipnz
 30383  546B  0AF2               	incf	___awmod@divisor+1,f
 30384  546C                     l8926:
 30385  546C  0871               	movf	___awmod@divisor,w
 30386  546D  0472               	iorwf	___awmod@divisor+1,w
 30387  546E  1903               	btfsc	3,2
 30388  546F  2C93               	goto	l8944
 30389  5470  01F6               	clrf	___awmod@counter
 30390  5471  0AF6               	incf	___awmod@counter,f
 30391  5472                     l8934:
 30392  5472  1BF2               	btfsc	___awmod@divisor+1,7
 30393  5473  2C7E               	goto	l8936
 30394  5474  3001               	movlw	1
 30395  5475                     u9145:
 30396  5475  35F1               	lslf	___awmod@divisor,f
 30397  5476  0DF2               	rlf	___awmod@divisor+1,f
 30398  5477  0B89               	decfsz	9,f
 30399  5478  2C75               	goto	u9145
 30400  5479  3001               	movlw	1
 30401  547A  00F5               	movwf	??___awmod
 30402  547B  0875               	movf	??___awmod,w
 30403  547C  07F6               	addwf	___awmod@counter,f
 30404  547D  2C72               	goto	l8934
 30405  547E                     l8936:
 30406  547E  0872               	movf	___awmod@divisor+1,w
 30407  547F  0274               	subwf	___awmod@dividend+1,w
 30408  5480  1D03               	skipz
 30409  5481  2C84               	goto	u9165
 30410  5482  0871               	movf	___awmod@divisor,w
 30411  5483  0273               	subwf	___awmod@dividend,w
 30412  5484                     u9165:
 30413  5484  1C03               	skipc
 30414  5485  2C8A               	goto	l8940
 30415  5486  0871               	movf	___awmod@divisor,w
 30416  5487  02F3               	subwf	___awmod@dividend,f
 30417  5488  0872               	movf	___awmod@divisor+1,w
 30418  5489  3BF4               	subwfb	___awmod@dividend+1,f
 30419  548A                     l8940:
 30420  548A  3001               	movlw	1
 30421  548B                     u9175:
 30422  548B  36F2               	lsrf	___awmod@divisor+1,f
 30423  548C  0CF1               	rrf	___awmod@divisor,f
 30424  548D  0B89               	decfsz	9,f
 30425  548E  2C8B               	goto	u9175
 30426  548F  3001               	movlw	1
 30427  5490  02F6               	subwf	___awmod@counter,f
 30428  5491  1D03               	btfss	3,2
 30429  5492  2C7E               	goto	l8936
 30430  5493                     l8944:
 30431  5493  0877               	movf	___awmod@sign,w
 30432  5494  1903               	btfsc	3,2
 30433  5495  2C9B               	goto	l8948
 30434  5496  09F3               	comf	___awmod@dividend,f
 30435  5497  09F4               	comf	___awmod@dividend+1,f
 30436  5498  0AF3               	incf	___awmod@dividend,f
 30437  5499  1903               	skipnz
 30438  549A  0AF4               	incf	___awmod@dividend+1,f
 30439  549B                     l8948:
 30440  549B  0874               	movf	___awmod@dividend+1,w
 30441  549C  00F2               	movwf	?___awmod+1
 30442  549D  0873               	movf	___awmod@dividend,w
 30443  549E  00F1               	movwf	?___awmod
 30444  549F  0008               	return
 30445  54A0                     __end_of___awmod:
 30446                           
 30447                           	psect	text22
 30448  4808                     __ptext22:	
 30449 ;; *************** function ___awdiv *****************
 30450 ;; Defined at:
 30451 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
 30452 ;; Parameters:    Size  Location     Type
 30453 ;;  divisor         2    8[COMMON] int 
 30454 ;;  dividend        2   10[COMMON] int 
 30455 ;; Auto vars:     Size  Location     Type
 30456 ;;  quotient        2    3[BANK0 ] int 
 30457 ;;  sign            1    2[BANK0 ] unsigned char 
 30458 ;;  counter         1    1[BANK0 ] unsigned char 
 30459 ;; Return value:  Size  Location     Type
 30460 ;;                  2    8[COMMON] int 
 30461 ;; Registers used:
 30462 ;;		wreg, status,2, status,0
 30463 ;; Tracked objects:
 30464 ;;		On entry : 3E/1
 30465 ;;		On exit  : 3F/0
 30466 ;;		Unchanged: 0/0
 30467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30469 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30470 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30471 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30472 ;;Total ram usage:        9 bytes
 30473 ;; Hardware stack levels used: 1
 30474 ;; Hardware stack levels required when called: unknown (due to recursion)
 30475 ;; This function calls:
 30476 ;;		Nothing
 30477 ;; This function is called by:
 30478 ;;		_scale
 30479 ;;		__doprnt
 30480 ;; This function uses a non-reentrant model
 30481 ;;
 30482                           
 30483  4808                     ___awdiv:	
 30484                           ;psect for function ___awdiv
 30485                           
 30486                           
 30487                           ;incstack = 0
 30488                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 30489  4808  0140               	movlb	0	; select bank0
 30490  4809  01A2               	clrf	___awdiv@sign
 30491  480A  1FF9               	btfss	___awdiv@divisor+1,7
 30492  480B  2813               	goto	l8878
 30493  480C  09F8               	comf	___awdiv@divisor,f
 30494  480D  09F9               	comf	___awdiv@divisor+1,f
 30495  480E  0AF8               	incf	___awdiv@divisor,f
 30496  480F  1903               	skipnz
 30497  4810  0AF9               	incf	___awdiv@divisor+1,f
 30498  4811  01A2               	clrf	___awdiv@sign
 30499  4812  0AA2               	incf	___awdiv@sign,f
 30500  4813                     l8878:
 30501  4813  1FFB               	btfss	___awdiv@dividend+1,7
 30502  4814  281E               	goto	l8884
 30503  4815  09FA               	comf	___awdiv@dividend,f
 30504  4816  09FB               	comf	___awdiv@dividend+1,f
 30505  4817  0AFA               	incf	___awdiv@dividend,f
 30506  4818  1903               	skipnz
 30507  4819  0AFB               	incf	___awdiv@dividend+1,f
 30508  481A  3001               	movlw	1
 30509  481B  00A0               	movwf	??___awdiv
 30510  481C  0820               	movf	??___awdiv,w
 30511  481D  06A2               	xorwf	___awdiv@sign,f
 30512  481E                     l8884:
 30513  481E  01A3               	clrf	___awdiv@quotient
 30514  481F  01A4               	clrf	___awdiv@quotient+1
 30515  4820  0878               	movf	___awdiv@divisor,w
 30516  4821  0479               	iorwf	___awdiv@divisor+1,w
 30517  4822  1903               	btfsc	3,2
 30518  4823  284D               	goto	l8906
 30519  4824  01A1               	clrf	___awdiv@counter
 30520  4825  0AA1               	incf	___awdiv@counter,f
 30521  4826                     l8894:
 30522  4826  1BF9               	btfsc	___awdiv@divisor+1,7
 30523  4827  2832               	goto	l8896
 30524  4828  3001               	movlw	1
 30525  4829                     u9045:
 30526  4829  35F8               	lslf	___awdiv@divisor,f
 30527  482A  0DF9               	rlf	___awdiv@divisor+1,f
 30528  482B  0B89               	decfsz	9,f
 30529  482C  2829               	goto	u9045
 30530  482D  3001               	movlw	1
 30531  482E  00A0               	movwf	??___awdiv
 30532  482F  0820               	movf	??___awdiv,w
 30533  4830  07A1               	addwf	___awdiv@counter,f
 30534  4831  2826               	goto	l8894
 30535  4832                     l8896:
 30536  4832  3001               	movlw	1
 30537  4833                     u9065:
 30538  4833  35A3               	lslf	___awdiv@quotient,f
 30539  4834  0DA4               	rlf	___awdiv@quotient+1,f
 30540  4835  0B89               	decfsz	9,f
 30541  4836  2833               	goto	u9065
 30542  4837  0879               	movf	___awdiv@divisor+1,w
 30543  4838  027B               	subwf	___awdiv@dividend+1,w
 30544  4839  1D03               	skipz
 30545  483A  283D               	goto	u9075
 30546  483B  0878               	movf	___awdiv@divisor,w
 30547  483C  027A               	subwf	___awdiv@dividend,w
 30548  483D                     u9075:
 30549  483D  1C03               	skipc
 30550  483E  2844               	goto	l8902
 30551  483F  0878               	movf	___awdiv@divisor,w
 30552  4840  02FA               	subwf	___awdiv@dividend,f
 30553  4841  0879               	movf	___awdiv@divisor+1,w
 30554  4842  3BFB               	subwfb	___awdiv@dividend+1,f
 30555  4843  1423               	bsf	___awdiv@quotient,0
 30556  4844                     l8902:
 30557  4844  3001               	movlw	1
 30558  4845                     u9085:
 30559  4845  36F9               	lsrf	___awdiv@divisor+1,f
 30560  4846  0CF8               	rrf	___awdiv@divisor,f
 30561  4847  0B89               	decfsz	9,f
 30562  4848  2845               	goto	u9085
 30563  4849  3001               	movlw	1
 30564  484A  02A1               	subwf	___awdiv@counter,f
 30565  484B  1D03               	btfss	3,2
 30566  484C  2832               	goto	l8896
 30567  484D                     l8906:
 30568  484D  0822               	movf	___awdiv@sign,w
 30569  484E  1903               	btfsc	3,2
 30570  484F  2855               	goto	l8910
 30571  4850  09A3               	comf	___awdiv@quotient,f
 30572  4851  09A4               	comf	___awdiv@quotient+1,f
 30573  4852  0AA3               	incf	___awdiv@quotient,f
 30574  4853  1903               	skipnz
 30575  4854  0AA4               	incf	___awdiv@quotient+1,f
 30576  4855                     l8910:
 30577  4855  0824               	movf	___awdiv@quotient+1,w
 30578  4856  00F9               	movwf	?___awdiv+1
 30579  4857  0823               	movf	___awdiv@quotient,w
 30580  4858  00F8               	movwf	?___awdiv
 30581  4859  0008               	return
 30582  485A                     __end_of___awdiv:
 30583                           
 30584                           	psect	text23
 30585  5E59                     __ptext23:	
 30586 ;; *************** function _putch *****************
 30587 ;; Defined at:
 30588 ;;		line 201 in file "mcc_generated_files/eusart.c"
 30589 ;; Parameters:    Size  Location     Type
 30590 ;;  txData          1    3[COMMON] unsigned char 
 30591 ;; Auto vars:     Size  Location     Type
 30592 ;;		None
 30593 ;; Return value:  Size  Location     Type
 30594 ;;                  1    wreg      void 
 30595 ;; Registers used:
 30596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30597 ;; Tracked objects:
 30598 ;;		On entry : 3F/1
 30599 ;;		On exit  : 3F/E
 30600 ;;		Unchanged: 0/0
 30601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30606 ;;Total ram usage:        1 bytes
 30607 ;; Hardware stack levels used: 1
 30608 ;; Hardware stack levels required when called: unknown (due to recursion)
 30609 ;; This function calls:
 30610 ;;		_EUSART_Write
 30611 ;; This function is called by:
 30612 ;;		_printf
 30613 ;;		__doprnt
 30614 ;; This function uses a non-reentrant model
 30615 ;;
 30616                           
 30617  5E59                     _putch:	
 30618                           ;psect for function _putch
 30619                           
 30620                           
 30621                           ;eusart.c: 203: EUSART_Write(txData);
 30622                           
 30623                           ;incstack = 0
 30624                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 30625  5E59  0873               	movf	putch@txData,w
 30626  5E5A  31D1  2152         	fcall	_EUSART_Write
 30627  5E5C  0008               	return
 30628  5E5D                     __end_of_putch:
 30629                           
 30630                           	psect	text24
 30631  5152                     __ptext24:	
 30632 ;; *************** function _EUSART_Write *****************
 30633 ;; Defined at:
 30634 ;;		line 173 in file "mcc_generated_files/eusart.c"
 30635 ;; Parameters:    Size  Location     Type
 30636 ;;  txData          1    wreg     unsigned char 
 30637 ;; Auto vars:     Size  Location     Type
 30638 ;;  txData          1    2[COMMON] unsigned char 
 30639 ;; Return value:  Size  Location     Type
 30640 ;;                  1    wreg      void 
 30641 ;; Registers used:
 30642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30643 ;; Tracked objects:
 30644 ;;		On entry : 3F/1
 30645 ;;		On exit  : 3F/E
 30646 ;;		Unchanged: 0/0
 30647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30652 ;;Total ram usage:        2 bytes
 30653 ;; Hardware stack levels used: 1
 30654 ;; Hardware stack levels required when called: unknown (due to recursion)
 30655 ;; This function calls:
 30656 ;;		Nothing
 30657 ;; This function is called by:
 30658 ;;		_putch
 30659 ;; This function uses a non-reentrant model
 30660 ;;
 30661                           
 30662  5152                     _EUSART_Write:	
 30663                           ;psect for function _EUSART_Write
 30664                           
 30665                           
 30666                           ;incstack = 0
 30667                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 30668                           ;EUSART_Write@txData stored from wreg
 30669  5152  00F2               	movwf	EUSART_Write@txData
 30670  5153                     l8854:	
 30671                           ;eusart.c: 175: while(0 == eusartTxBufferRemaining)
 30672                           
 30673  5153  0142               	movlb	2	; select bank2
 30674  5154  086B               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
 30675  5155  1903               	btfsc	3,2
 30676  5156  2953               	goto	l8854
 30677                           
 30678                           ;eusart.c: 177: };eusart.c: 179: if(0 == PIE3bits.TXIE)
 30679  5157  014E               	movlb	14	; select bank14
 30680  5158  1A19               	btfsc	25,4	;volatile
 30681  5159  295E               	goto	l100
 30682                           
 30683                           ;eusart.c: 180: {;eusart.c: 181: TX1REG = txData;
 30684  515A  0872               	movf	EUSART_Write@txData,w
 30685  515B  0142               	movlb	2	; select bank2
 30686  515C  009A               	movwf	26	;volatile
 30687                           
 30688                           ;eusart.c: 182: }
 30689  515D  2974               	goto	l8868
 30690  515E                     l100:
 30691                           
 30692                           ;eusart.c: 183: else;eusart.c: 184: {;eusart.c: 185: PIE3bits.TXIE = 0;
 30693  515E  1219               	bcf	25,4	;volatile
 30694                           
 30695                           ;eusart.c: 186: eusartTxBuffer[eusartTxHead++] = txData;
 30696  515F  0872               	movf	EUSART_Write@txData,w
 30697  5160  00F1               	movwf	??_EUSART_Write
 30698  5161  0141               	movlb	1	; select bank1
 30699  5162  086F               	movf	_eusartTxHead^(0+128),w
 30700  5163  3E40               	addlw	(low (_eusartTxBuffer| (0+768)))& (0+255)
 30701  5164  0086               	movwf	6
 30702  5165  3003               	movlw	3	; select bank6/7
 30703  5166  0087               	movwf	7
 30704  5167  0871               	movf	??_EUSART_Write,w
 30705  5168  0081               	movwf	1
 30706  5169  3001               	movlw	1
 30707  516A  00F1               	movwf	??_EUSART_Write
 30708  516B  0871               	movf	??_EUSART_Write,w
 30709  516C  07EF               	addwf	_eusartTxHead^(0+128),f	;volatile
 30710                           
 30711                           ;eusart.c: 187: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 30712  516D  3020               	movlw	32
 30713  516E  026F               	subwf	_eusartTxHead^(0+128),w
 30714  516F  1803               	btfsc	3,0
 30715                           
 30716                           ;eusart.c: 188: {;eusart.c: 189: eusartTxHead = 0;
 30717  5170  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 30718                           
 30719                           ;eusart.c: 190: };eusart.c: 191: eusartTxBufferRemaining--;
 30720  5171  3001               	movlw	1
 30721  5172  0142               	movlb	2	; select bank2
 30722  5173  02EB               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 30723  5174                     l8868:
 30724                           
 30725                           ;eusart.c: 192: };eusart.c: 193: PIE3bits.TXIE = 1;
 30726  5174  014E               	movlb	14	; select bank14
 30727  5175  1619               	bsf	25,4	;volatile
 30728  5176  0008               	return
 30729  5177                     __end_of_EUSART_Write:
 30730                           
 30731                           	psect	text25
 30732  5EE1                     __ptext25:	
 30733 ;; *************** function _isdigit *****************
 30734 ;; Defined at:
 30735 ;;		line 8 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
 30736 ;; Parameters:    Size  Location     Type
 30737 ;;  c               1    wreg     unsigned char 
 30738 ;; Auto vars:     Size  Location     Type
 30739 ;;  c               1    2[COMMON] unsigned char 
 30740 ;; Return value:  Size  Location     Type
 30741 ;;		None               void
 30742 ;; Registers used:
 30743 ;;		wreg, status,2, status,0
 30744 ;; Tracked objects:
 30745 ;;		On entry : 3F/0
 30746 ;;		On exit  : 3F/0
 30747 ;;		Unchanged: 3F/0
 30748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30753 ;;Total ram usage:        2 bytes
 30754 ;; Hardware stack levels used: 1
 30755 ;; Hardware stack levels required when called: unknown (due to recursion)
 30756 ;; This function calls:
 30757 ;;		Nothing
 30758 ;; This function is called by:
 30759 ;;		_atol
 30760 ;;		__doprnt
 30761 ;; This function uses a non-reentrant model
 30762 ;;
 30763                           
 30764  5EE1                     _isdigit:	
 30765                           ;psect for function _isdigit
 30766                           
 30767                           
 30768                           ;incstack = 0
 30769                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 30770                           ;isdigit@c stored from wreg
 30771  5EE1  00F2               	movwf	isdigit@c
 30772  5EE2  01F1               	clrf	_isdigit$3932
 30773  5EE3  303A               	movlw	58
 30774  5EE4  0272               	subwf	isdigit@c,w
 30775  5EE5  1803               	skipnc
 30776  5EE6  2EED               	goto	l9760
 30777  5EE7  3030               	movlw	48
 30778  5EE8  0272               	subwf	isdigit@c,w
 30779  5EE9  1C03               	skipc
 30780  5EEA  2EED               	goto	l9760
 30781  5EEB  01F1               	clrf	_isdigit$3932
 30782  5EEC  0AF1               	incf	_isdigit$3932,f
 30783  5EED                     l9760:
 30784  5EED  0C71               	rrf	_isdigit$3932,w
 30785  5EEE  0008               	return
 30786  5EEF                     __end_of_isdigit:
 30787                           
 30788                           	psect	text26
 30789  4268                     __ptext26:	
 30790 ;; *************** function _fround *****************
 30791 ;; Defined at:
 30792 ;;		line 417 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
 30793 ;; Parameters:    Size  Location     Type
 30794 ;;  prec            1    wreg     unsigned char 
 30795 ;; Auto vars:     Size  Location     Type
 30796 ;;  prec            1   52[BANK0 ] unsigned char 
 30797 ;; Return value:  Size  Location     Type
 30798 ;;                  4   32[BANK0 ] unsigned char 
 30799 ;; Registers used:
 30800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 30801 ;; Tracked objects:
 30802 ;;		On entry : 3F/1
 30803 ;;		On exit  : 3F/0
 30804 ;;		Unchanged: 0/0
 30805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30807 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30808 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30809 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30810 ;;Total ram usage:       21 bytes
 30811 ;; Hardware stack levels used: 1
 30812 ;; Hardware stack levels required when called: unknown (due to recursion)
 30813 ;; This function calls:
 30814 ;;		___flmul
 30815 ;;		___lbdiv
 30816 ;;		___lbmod
 30817 ;; This function is called by:
 30818 ;;		__doprnt
 30819 ;; This function uses a non-reentrant model
 30820 ;;
 30821                           
 30822  4268                     _fround:	
 30823                           ;psect for function _fround
 30824                           
 30825                           
 30826                           ;incstack = 0
 30827                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 30828                           ;fround@prec stored from wreg
 30829  4268  0140               	movlb	0	; select bank0
 30830  4269  00D4               	movwf	fround@prec
 30831                           
 30832                           ;doprnt.c: 421: if(prec>=110)
 30833  426A  306E               	movlw	110
 30834  426B  0254               	subwf	fround@prec,w
 30835  426C  1C03               	skipc
 30836  426D  2B1A               	goto	l9772
 30837                           
 30838                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 30839  426E  303F               	movlw	63
 30840  426F  00A9               	movwf	___flmul@b+3
 30841  4270  3000               	movlw	0
 30842  4271  00A8               	movwf	___flmul@b+2
 30843  4272  3000               	movlw	0
 30844  4273  00A7               	movwf	___flmul@b+1
 30845  4274  3000               	movlw	0
 30846  4275  00A6               	movwf	___flmul@b
 30847  4276  3064               	movlw	100
 30848  4277  00C4               	movwf	??_fround
 30849  4278  0844               	movf	??_fround,w
 30850  4279  00F7               	movwf	___lbdiv@divisor
 30851  427A  0854               	movf	fround@prec,w
 30852  427B  31D1  2110  31C2   	fcall	___lbdiv
 30853  427E  00C5               	movwf	??_fround+1
 30854  427F  01C6               	clrf	??_fround+2
 30855  4280  35C5               	lslf	??_fround+1,f
 30856  4281  0DC6               	rlf	??_fround+2,f
 30857  4282  35C5               	lslf	??_fround+1,f
 30858  4283  0DC6               	rlf	??_fround+2,f
 30859  4284  307C               	movlw	low ((__npowers_+72)| (0+32768))
 30860  4285  0745               	addwf	??_fround+1,w
 30861  4286  0084               	movwf	4
 30862  4287  30D8               	movlw	high ((__npowers_+72)| (0+32768))
 30863  4288  3D46               	addwfc	??_fround+2,w
 30864  4289  0085               	movwf	5
 30865  428A  3F00               	moviw [0]fsr0
 30866  428B  00C7               	movwf	??_fround+3
 30867  428C  3F01               	moviw [1]fsr0
 30868  428D  00C8               	movwf	??_fround+4
 30869  428E  3F02               	moviw [2]fsr0
 30870  428F  00C9               	movwf	??_fround+5
 30871  4290  3F03               	moviw [3]fsr0
 30872  4291  00CA               	movwf	??_fround+6
 30873  4292  084A               	movf	??_fround+6,w
 30874  4293  00AD               	movwf	___flmul@a+3
 30875  4294  0849               	movf	??_fround+5,w
 30876  4295  00AC               	movwf	___flmul@a+2
 30877  4296  0848               	movf	??_fround+4,w
 30878  4297  00AB               	movwf	___flmul@a+1
 30879  4298  0847               	movf	??_fround+3,w
 30880  4299  00AA               	movwf	___flmul@a
 30881  429A  31B1  2135  31C2   	fcall	___flmul
 30882  429D  0829               	movf	?___flmul+3,w
 30883  429E  00D3               	movwf	_fround$4355+3
 30884  429F  0828               	movf	?___flmul+2,w
 30885  42A0  00D2               	movwf	_fround$4355+2
 30886  42A1  0827               	movf	?___flmul+1,w
 30887  42A2  00D1               	movwf	_fround$4355+1
 30888  42A3  0826               	movf	?___flmul,w
 30889  42A4  00D0               	movwf	_fround$4355
 30890                           
 30891                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 30892  42A5  300A               	movlw	10
 30893  42A6  00C4               	movwf	??_fround
 30894  42A7  0844               	movf	??_fround,w
 30895  42A8  00F7               	movwf	___lbdiv@divisor
 30896  42A9  3064               	movlw	100
 30897  42AA  00C5               	movwf	??_fround+1
 30898  42AB  0845               	movf	??_fround+1,w
 30899  42AC  00F1               	movwf	___lbmod@divisor
 30900  42AD  0854               	movf	fround@prec,w
 30901  42AE  31D0  20D1  31C2   	fcall	___lbmod
 30902  42B1  31D1  2110  31C2   	fcall	___lbdiv
 30903  42B4  00C6               	movwf	??_fround+2
 30904  42B5  01C7               	clrf	??_fround+3
 30905  42B6  35C6               	lslf	??_fround+2,f
 30906  42B7  0DC7               	rlf	??_fround+3,f
 30907  42B8  35C6               	lslf	??_fround+2,f
 30908  42B9  0DC7               	rlf	??_fround+3,f
 30909  42BA  3058               	movlw	low ((__npowers_+36)| (0+32768))
 30910  42BB  0746               	addwf	??_fround+2,w
 30911  42BC  0084               	movwf	4
 30912  42BD  30D8               	movlw	high ((__npowers_+36)| (0+32768))
 30913  42BE  3D47               	addwfc	??_fround+3,w
 30914  42BF  0085               	movwf	5
 30915  42C0  3F00               	moviw [0]fsr0
 30916  42C1  00C8               	movwf	??_fround+4
 30917  42C2  3F01               	moviw [1]fsr0
 30918  42C3  00C9               	movwf	??_fround+5
 30919  42C4  3F02               	moviw [2]fsr0
 30920  42C5  00CA               	movwf	??_fround+6
 30921  42C6  3F03               	moviw [3]fsr0
 30922  42C7  00CB               	movwf	??_fround+7
 30923  42C8  084B               	movf	??_fround+7,w
 30924  42C9  00A9               	movwf	___flmul@b+3
 30925  42CA  084A               	movf	??_fround+6,w
 30926  42CB  00A8               	movwf	___flmul@b+2
 30927  42CC  0849               	movf	??_fround+5,w
 30928  42CD  00A7               	movwf	___flmul@b+1
 30929  42CE  0848               	movf	??_fround+4,w
 30930  42CF  00A6               	movwf	___flmul@b
 30931  42D0  0853               	movf	_fround$4355+3,w
 30932  42D1  00AD               	movwf	___flmul@a+3
 30933  42D2  0852               	movf	_fround$4355+2,w
 30934  42D3  00AC               	movwf	___flmul@a+2
 30935  42D4  0851               	movf	_fround$4355+1,w
 30936  42D5  00AB               	movwf	___flmul@a+1
 30937  42D6  0850               	movf	_fround$4355,w
 30938  42D7  00AA               	movwf	___flmul@a
 30939  42D8  31B1  2135  31C2   	fcall	___flmul
 30940  42DB  0829               	movf	?___flmul+3,w
 30941  42DC  00CF               	movwf	_fround$4356+3
 30942  42DD  0828               	movf	?___flmul+2,w
 30943  42DE  00CE               	movwf	_fround$4356+2
 30944  42DF  0827               	movf	?___flmul+1,w
 30945  42E0  00CD               	movwf	_fround$4356+1
 30946  42E1  0826               	movf	?___flmul,w
 30947  42E2  00CC               	movwf	_fround$4356
 30948                           
 30949                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 30950  42E3  300A               	movlw	10
 30951  42E4  00C4               	movwf	??_fround
 30952  42E5  0844               	movf	??_fround,w
 30953  42E6  00F1               	movwf	___lbmod@divisor
 30954  42E7  0854               	movf	fround@prec,w
 30955  42E8  31D0  20D1  31C2   	fcall	___lbmod
 30956  42EB  00C5               	movwf	??_fround+1
 30957  42EC  01C6               	clrf	??_fround+2
 30958  42ED  35C5               	lslf	??_fround+1,f
 30959  42EE  0DC6               	rlf	??_fround+2,f
 30960  42EF  35C5               	lslf	??_fround+1,f
 30961  42F0  0DC6               	rlf	??_fround+2,f
 30962  42F1  3034               	movlw	low (__npowers_| (0+32768))
 30963  42F2  0745               	addwf	??_fround+1,w
 30964  42F3  0084               	movwf	4
 30965  42F4  30D8               	movlw	high (__npowers_| (0+32768))
 30966  42F5  3D46               	addwfc	??_fround+2,w
 30967  42F6  0085               	movwf	5
 30968  42F7  3F00               	moviw [0]fsr0
 30969  42F8  00C7               	movwf	??_fround+3
 30970  42F9  3F01               	moviw [1]fsr0
 30971  42FA  00C8               	movwf	??_fround+4
 30972  42FB  3F02               	moviw [2]fsr0
 30973  42FC  00C9               	movwf	??_fround+5
 30974  42FD  3F03               	moviw [3]fsr0
 30975  42FE  00CA               	movwf	??_fround+6
 30976  42FF  084A               	movf	??_fround+6,w
 30977  4300  00A9               	movwf	___flmul@b+3
 30978  4301  0849               	movf	??_fround+5,w
 30979  4302  00A8               	movwf	___flmul@b+2
 30980  4303  0848               	movf	??_fround+4,w
 30981  4304  00A7               	movwf	___flmul@b+1
 30982  4305  0847               	movf	??_fround+3,w
 30983  4306  00A6               	movwf	___flmul@b
 30984  4307  084F               	movf	_fround$4356+3,w
 30985  4308  00AD               	movwf	___flmul@a+3
 30986  4309  084E               	movf	_fround$4356+2,w
 30987  430A  00AC               	movwf	___flmul@a+2
 30988  430B  084D               	movf	_fround$4356+1,w
 30989  430C  00AB               	movwf	___flmul@a+1
 30990  430D  084C               	movf	_fround$4356,w
 30991  430E  00AA               	movwf	___flmul@a
 30992  430F  31B1  2135         	fcall	___flmul
 30993  4311  0829               	movf	?___flmul+3,w
 30994  4312  00C3               	movwf	?_fround+3
 30995  4313  0828               	movf	?___flmul+2,w
 30996  4314  00C2               	movwf	?_fround+2
 30997  4315  0827               	movf	?___flmul+1,w
 30998  4316  00C1               	movwf	?_fround+1
 30999  4317  0826               	movf	?___flmul,w
 31000  4318  00C0               	movwf	?_fround
 31001  4319  0008               	return
 31002  431A                     l9772:
 31003                           
 31004                           ;doprnt.c: 423: else if(prec > 10)
 31005  431A  300B               	movlw	11
 31006  431B  0254               	subwf	fround@prec,w
 31007  431C  1C03               	skipc
 31008  431D  2B8C               	goto	l9778
 31009                           
 31010                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 31011  431E  303F               	movlw	63
 31012  431F  00A9               	movwf	___flmul@b+3
 31013  4320  3000               	movlw	0
 31014  4321  00A8               	movwf	___flmul@b+2
 31015  4322  3000               	movlw	0
 31016  4323  00A7               	movwf	___flmul@b+1
 31017  4324  3000               	movlw	0
 31018  4325  00A6               	movwf	___flmul@b
 31019  4326  300A               	movlw	10
 31020  4327  00C4               	movwf	??_fround
 31021  4328  0844               	movf	??_fround,w
 31022  4329  00F7               	movwf	___lbdiv@divisor
 31023  432A  0854               	movf	fround@prec,w
 31024  432B  31D1  2110  31C2   	fcall	___lbdiv
 31025  432E  00C5               	movwf	??_fround+1
 31026  432F  01C6               	clrf	??_fround+2
 31027  4330  35C5               	lslf	??_fround+1,f
 31028  4331  0DC6               	rlf	??_fround+2,f
 31029  4332  35C5               	lslf	??_fround+1,f
 31030  4333  0DC6               	rlf	??_fround+2,f
 31031  4334  3058               	movlw	low ((__npowers_+36)| (0+32768))
 31032  4335  0745               	addwf	??_fround+1,w
 31033  4336  0084               	movwf	4
 31034  4337  30D8               	movlw	high ((__npowers_+36)| (0+32768))
 31035  4338  3D46               	addwfc	??_fround+2,w
 31036  4339  0085               	movwf	5
 31037  433A  3F00               	moviw [0]fsr0
 31038  433B  00C7               	movwf	??_fround+3
 31039  433C  3F01               	moviw [1]fsr0
 31040  433D  00C8               	movwf	??_fround+4
 31041  433E  3F02               	moviw [2]fsr0
 31042  433F  00C9               	movwf	??_fround+5
 31043  4340  3F03               	moviw [3]fsr0
 31044  4341  00CA               	movwf	??_fround+6
 31045  4342  084A               	movf	??_fround+6,w
 31046  4343  00AD               	movwf	___flmul@a+3
 31047  4344  0849               	movf	??_fround+5,w
 31048  4345  00AC               	movwf	___flmul@a+2
 31049  4346  0848               	movf	??_fround+4,w
 31050  4347  00AB               	movwf	___flmul@a+1
 31051  4348  0847               	movf	??_fround+3,w
 31052  4349  00AA               	movwf	___flmul@a
 31053  434A  31B1  2135  31C2   	fcall	___flmul
 31054  434D  0829               	movf	?___flmul+3,w
 31055  434E  00D3               	movwf	_fround$4355+3
 31056  434F  0828               	movf	?___flmul+2,w
 31057  4350  00D2               	movwf	_fround$4355+2
 31058  4351  0827               	movf	?___flmul+1,w
 31059  4352  00D1               	movwf	_fround$4355+1
 31060  4353  0826               	movf	?___flmul,w
 31061  4354  00D0               	movwf	_fround$4355
 31062                           
 31063                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 31064  4355  300A               	movlw	10
 31065  4356  00C4               	movwf	??_fround
 31066  4357  0844               	movf	??_fround,w
 31067  4358  00F1               	movwf	___lbmod@divisor
 31068  4359  0854               	movf	fround@prec,w
 31069  435A  31D0  20D1  31C2   	fcall	___lbmod
 31070  435D  00C5               	movwf	??_fround+1
 31071  435E  01C6               	clrf	??_fround+2
 31072  435F  35C5               	lslf	??_fround+1,f
 31073  4360  0DC6               	rlf	??_fround+2,f
 31074  4361  35C5               	lslf	??_fround+1,f
 31075  4362  0DC6               	rlf	??_fround+2,f
 31076  4363  3034               	movlw	low (__npowers_| (0+32768))
 31077  4364  0745               	addwf	??_fround+1,w
 31078  4365  0084               	movwf	4
 31079  4366  30D8               	movlw	high (__npowers_| (0+32768))
 31080  4367  3D46               	addwfc	??_fround+2,w
 31081  4368  0085               	movwf	5
 31082  4369  3F00               	moviw [0]fsr0
 31083  436A  00C7               	movwf	??_fround+3
 31084  436B  3F01               	moviw [1]fsr0
 31085  436C  00C8               	movwf	??_fround+4
 31086  436D  3F02               	moviw [2]fsr0
 31087  436E  00C9               	movwf	??_fround+5
 31088  436F  3F03               	moviw [3]fsr0
 31089  4370  00CA               	movwf	??_fround+6
 31090  4371  084A               	movf	??_fround+6,w
 31091  4372  00A9               	movwf	___flmul@b+3
 31092  4373  0849               	movf	??_fround+5,w
 31093  4374  00A8               	movwf	___flmul@b+2
 31094  4375  0848               	movf	??_fround+4,w
 31095  4376  00A7               	movwf	___flmul@b+1
 31096  4377  0847               	movf	??_fround+3,w
 31097  4378  00A6               	movwf	___flmul@b
 31098  4379  0853               	movf	_fround$4355+3,w
 31099  437A  00AD               	movwf	___flmul@a+3
 31100  437B  0852               	movf	_fround$4355+2,w
 31101  437C  00AC               	movwf	___flmul@a+2
 31102  437D  0851               	movf	_fround$4355+1,w
 31103  437E  00AB               	movwf	___flmul@a+1
 31104  437F  0850               	movf	_fround$4355,w
 31105  4380  00AA               	movwf	___flmul@a
 31106  4381  31B1  2135         	fcall	___flmul
 31107  4383  0829               	movf	?___flmul+3,w
 31108  4384  00C3               	movwf	?_fround+3
 31109  4385  0828               	movf	?___flmul+2,w
 31110  4386  00C2               	movwf	?_fround+2
 31111  4387  0827               	movf	?___flmul+1,w
 31112  4388  00C1               	movwf	?_fround+1
 31113  4389  0826               	movf	?___flmul,w
 31114  438A  00C0               	movwf	?_fround
 31115  438B  0008               	return
 31116  438C                     l9778:
 31117                           
 31118                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 31119  438C  303F               	movlw	63
 31120  438D  00A9               	movwf	___flmul@b+3
 31121  438E  3000               	movlw	0
 31122  438F  00A8               	movwf	___flmul@b+2
 31123  4390  3000               	movlw	0
 31124  4391  00A7               	movwf	___flmul@b+1
 31125  4392  3000               	movlw	0
 31126  4393  00A6               	movwf	___flmul@b
 31127  4394  0854               	movf	fround@prec,w
 31128  4395  00C4               	movwf	??_fround
 31129  4396  01C5               	clrf	??_fround+1
 31130  4397  35C4               	lslf	??_fround,f
 31131  4398  0DC5               	rlf	??_fround+1,f
 31132  4399  35C4               	lslf	??_fround,f
 31133  439A  0DC5               	rlf	??_fround+1,f
 31134  439B  3034               	movlw	low (__npowers_| (0+32768))
 31135  439C  0744               	addwf	??_fround,w
 31136  439D  0084               	movwf	4
 31137  439E  30D8               	movlw	high (__npowers_| (0+32768))
 31138  439F  3D45               	addwfc	??_fround+1,w
 31139  43A0  0085               	movwf	5
 31140  43A1  3F00               	moviw [0]fsr0
 31141  43A2  00C6               	movwf	??_fround+2
 31142  43A3  3F01               	moviw [1]fsr0
 31143  43A4  00C7               	movwf	??_fround+3
 31144  43A5  3F02               	moviw [2]fsr0
 31145  43A6  00C8               	movwf	??_fround+4
 31146  43A7  3F03               	moviw [3]fsr0
 31147  43A8  00C9               	movwf	??_fround+5
 31148  43A9  0849               	movf	??_fround+5,w
 31149  43AA  00AD               	movwf	___flmul@a+3
 31150  43AB  0848               	movf	??_fround+4,w
 31151  43AC  00AC               	movwf	___flmul@a+2
 31152  43AD  0847               	movf	??_fround+3,w
 31153  43AE  00AB               	movwf	___flmul@a+1
 31154  43AF  0846               	movf	??_fround+2,w
 31155  43B0  00AA               	movwf	___flmul@a
 31156  43B1  31B1  2135         	fcall	___flmul
 31157  43B3  0829               	movf	?___flmul+3,w
 31158  43B4  00C3               	movwf	?_fround+3
 31159  43B5  0828               	movf	?___flmul+2,w
 31160  43B6  00C2               	movwf	?_fround+2
 31161  43B7  0827               	movf	?___flmul+1,w
 31162  43B8  00C1               	movwf	?_fround+1
 31163  43B9  0826               	movf	?___flmul,w
 31164  43BA  00C0               	movwf	?_fround
 31165  43BB  0008               	return
 31166  43BC                     __end_of_fround:
 31167                           
 31168                           	psect	text27
 31169  50D1                     __ptext27:	
 31170 ;; *************** function ___lbmod *****************
 31171 ;; Defined at:
 31172 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;  dividend        1    wreg     unsigned char 
 31175 ;;  divisor         1    1[COMMON] unsigned char 
 31176 ;; Auto vars:     Size  Location     Type
 31177 ;;  dividend        1    4[COMMON] unsigned char 
 31178 ;;  rem             1    6[COMMON] unsigned char 
 31179 ;;  counter         1    5[COMMON] unsigned char 
 31180 ;; Return value:  Size  Location     Type
 31181 ;;                  1    wreg      unsigned char 
 31182 ;; Registers used:
 31183 ;;		wreg, status,2, status,0
 31184 ;; Tracked objects:
 31185 ;;		On entry : 3F/0
 31186 ;;		On exit  : 3F/0
 31187 ;;		Unchanged: 3F/0
 31188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31189 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31192 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31193 ;;Total ram usage:        6 bytes
 31194 ;; Hardware stack levels used: 1
 31195 ;; Hardware stack levels required when called: unknown (due to recursion)
 31196 ;; This function calls:
 31197 ;;		Nothing
 31198 ;; This function is called by:
 31199 ;;		_fround
 31200 ;; This function uses a non-reentrant model
 31201 ;;
 31202                           
 31203  50D1                     ___lbmod:	
 31204                           ;psect for function ___lbmod
 31205                           
 31206                           
 31207                           ;incstack = 0
 31208                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 31209                           ;___lbmod@dividend stored from wreg
 31210  50D1  00F4               	movwf	___lbmod@dividend
 31211  50D2  3008               	movlw	8
 31212  50D3  00F2               	movwf	??___lbmod
 31213  50D4  0872               	movf	??___lbmod,w
 31214  50D5  00F5               	movwf	___lbmod@counter
 31215  50D6  01F6               	clrf	___lbmod@rem
 31216  50D7                     l8982:
 31217  50D7  0874               	movf	___lbmod@dividend,w
 31218  50D8  00F2               	movwf	??___lbmod
 31219  50D9  3007               	movlw	7
 31220  50DA                     u9245:
 31221  50DA  36F2               	lsrf	??___lbmod,f
 31222  50DB  0B89               	decfsz	9,f
 31223  50DC  28DA               	goto	u9245
 31224  50DD  3576               	lslf	___lbmod@rem,w
 31225  50DE  0472               	iorwf	??___lbmod,w
 31226  50DF  00F3               	movwf	??___lbmod+1
 31227  50E0  0873               	movf	??___lbmod+1,w
 31228  50E1  00F6               	movwf	___lbmod@rem
 31229  50E2  1003               	clrc
 31230  50E3  0DF4               	rlf	___lbmod@dividend,f
 31231  50E4  0871               	movf	___lbmod@divisor,w
 31232  50E5  0276               	subwf	___lbmod@rem,w
 31233  50E6  1C03               	skipc
 31234  50E7  28EA               	goto	l1947
 31235  50E8  0871               	movf	___lbmod@divisor,w
 31236  50E9  02F6               	subwf	___lbmod@rem,f
 31237  50EA                     l1947:
 31238  50EA  3001               	movlw	1
 31239  50EB  02F5               	subwf	___lbmod@counter,f
 31240  50EC  1D03               	btfss	3,2
 31241  50ED  28D7               	goto	l8982
 31242  50EE  0876               	movf	___lbmod@rem,w
 31243  50EF  0008               	return
 31244  50F0                     __end_of___lbmod:
 31245                           
 31246                           	psect	text28
 31247  5110                     __ptext28:	
 31248 ;; *************** function ___lbdiv *****************
 31249 ;; Defined at:
 31250 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
 31251 ;; Parameters:    Size  Location     Type
 31252 ;;  dividend        1    wreg     unsigned char 
 31253 ;;  divisor         1    7[COMMON] unsigned char 
 31254 ;; Auto vars:     Size  Location     Type
 31255 ;;  dividend        1    9[COMMON] unsigned char 
 31256 ;;  quotient        1   11[COMMON] unsigned char 
 31257 ;;  counter         1   10[COMMON] unsigned char 
 31258 ;; Return value:  Size  Location     Type
 31259 ;;                  1    wreg      unsigned char 
 31260 ;; Registers used:
 31261 ;;		wreg, status,2, status,0
 31262 ;; Tracked objects:
 31263 ;;		On entry : 3F/0
 31264 ;;		On exit  : 3F/0
 31265 ;;		Unchanged: 3F/0
 31266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31267 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31268 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31270 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31271 ;;Total ram usage:        5 bytes
 31272 ;; Hardware stack levels used: 1
 31273 ;; Hardware stack levels required when called: unknown (due to recursion)
 31274 ;; This function calls:
 31275 ;;		Nothing
 31276 ;; This function is called by:
 31277 ;;		_fround
 31278 ;; This function uses a non-reentrant model
 31279 ;;
 31280                           
 31281  5110                     ___lbdiv:	
 31282                           ;psect for function ___lbdiv
 31283                           
 31284                           
 31285                           ;incstack = 0
 31286                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 31287                           ;___lbdiv@dividend stored from wreg
 31288  5110  00F9               	movwf	___lbdiv@dividend
 31289  5111  01FB               	clrf	___lbdiv@quotient
 31290  5112  0877               	movf	___lbdiv@divisor,w
 31291  5113  1903               	btfsc	3,2
 31292  5114  292F               	goto	l8974
 31293  5115  01FA               	clrf	___lbdiv@counter
 31294  5116  0AFA               	incf	___lbdiv@counter,f
 31295  5117                     l8962:
 31296  5117  1BF7               	btfsc	___lbdiv@divisor,7
 31297  5118  2920               	goto	l8964
 31298  5119  1003               	clrc
 31299  511A  0DF7               	rlf	___lbdiv@divisor,f
 31300  511B  3001               	movlw	1
 31301  511C  00F8               	movwf	??___lbdiv
 31302  511D  0878               	movf	??___lbdiv,w
 31303  511E  07FA               	addwf	___lbdiv@counter,f
 31304  511F  2917               	goto	l8962
 31305  5120                     l8964:
 31306  5120  1003               	clrc
 31307  5121  0DFB               	rlf	___lbdiv@quotient,f
 31308  5122  0877               	movf	___lbdiv@divisor,w
 31309  5123  0279               	subwf	___lbdiv@dividend,w
 31310  5124  1C03               	skipc
 31311  5125  292A               	goto	L15
 31312  5126  0877               	movf	___lbdiv@divisor,w
 31313  5127  02F9               	subwf	___lbdiv@dividend,f
 31314  5128  147B               	bsf	___lbdiv@quotient,0
 31315  5129  1003               	clrc
 31316  512A                     L15:
 31317  512A  0CF7               	rrf	___lbdiv@divisor,f
 31318  512B  3001               	movlw	1
 31319  512C  02FA               	subwf	___lbdiv@counter,f
 31320  512D  1D03               	btfss	3,2
 31321  512E  2920               	goto	l8964
 31322  512F                     l8974:
 31323  512F  087B               	movf	___lbdiv@quotient,w
 31324  5130  0008               	return
 31325  5131                     __end_of___lbdiv:
 31326                           
 31327                           	psect	text29
 31328  4C0C                     __ptext29:	
 31329 ;; *************** function __tdiv_to_l_ *****************
 31330 ;; Defined at:
 31331 ;;		line 60 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
 31332 ;; Parameters:    Size  Location     Type
 31333 ;;  f1              4    1[COMMON] float 
 31334 ;;  f2              4    5[COMMON] float 
 31335 ;; Auto vars:     Size  Location     Type
 31336 ;;  quot            4    4[BANK0 ] unsigned long 
 31337 ;;  exp1            1    9[BANK0 ] unsigned char 
 31338 ;;  cntr            1    8[BANK0 ] unsigned char 
 31339 ;; Return value:  Size  Location     Type
 31340 ;;                  4    1[COMMON] unsigned long 
 31341 ;; Registers used:
 31342 ;;		wreg, status,2, status,0
 31343 ;; Tracked objects:
 31344 ;;		On entry : 0/0
 31345 ;;		On exit  : 3F/0
 31346 ;;		Unchanged: 0/0
 31347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31348 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31349 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31351 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31352 ;;Total ram usage:       18 bytes
 31353 ;; Hardware stack levels used: 1
 31354 ;; Hardware stack levels required when called: unknown (due to recursion)
 31355 ;; This function calls:
 31356 ;;		Nothing
 31357 ;; This function is called by:
 31358 ;;		__doprnt
 31359 ;; This function uses a non-reentrant model
 31360 ;;
 31361                           
 31362  4C0C                     __tdiv_to_l_:	
 31363                           ;psect for function __tdiv_to_l_
 31364                           
 31365                           
 31366                           ;incstack = 0
 31367                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 31368  4C0C  0871               	movf	__tdiv_to_l_@f1,w
 31369  4C0D  0140               	movlb	0	; select bank0
 31370  4C0E  00A0               	movwf	??__tdiv_to_l_
 31371  4C0F  0872               	movf	__tdiv_to_l_@f1+1,w
 31372  4C10  00A1               	movwf	??__tdiv_to_l_+1
 31373  4C11  0873               	movf	__tdiv_to_l_@f1+2,w
 31374  4C12  00A2               	movwf	??__tdiv_to_l_+2
 31375  4C13  1003               	clrc
 31376  4C14  0D21               	rlf	??__tdiv_to_l_+1,w
 31377  4C15  0D22               	rlf	??__tdiv_to_l_+2,w
 31378  4C16  00A3               	movwf	??__tdiv_to_l_+3
 31379  4C17  0823               	movf	??__tdiv_to_l_+3,w
 31380  4C18  00A9               	movwf	__tdiv_to_l_@exp1
 31381  4C19  0829               	movf	__tdiv_to_l_@exp1,w
 31382  4C1A  1D03               	btfss	3,2
 31383  4C1B  2C25               	goto	l9828
 31384  4C1C                     l9824:
 31385  4C1C  3000               	movlw	0
 31386  4C1D  00F4               	movwf	?__tdiv_to_l_+3
 31387  4C1E  3000               	movlw	0
 31388  4C1F  00F3               	movwf	?__tdiv_to_l_+2
 31389  4C20  3000               	movlw	0
 31390  4C21  00F2               	movwf	?__tdiv_to_l_+1
 31391  4C22  3000               	movlw	0
 31392  4C23  00F1               	movwf	?__tdiv_to_l_
 31393  4C24  0008               	return
 31394  4C25                     l9828:
 31395  4C25  0875               	movf	__tdiv_to_l_@f2,w
 31396  4C26  00A0               	movwf	??__tdiv_to_l_
 31397  4C27  0876               	movf	__tdiv_to_l_@f2+1,w
 31398  4C28  00A1               	movwf	??__tdiv_to_l_+1
 31399  4C29  0877               	movf	__tdiv_to_l_@f2+2,w
 31400  4C2A  00A2               	movwf	??__tdiv_to_l_+2
 31401  4C2B  1003               	clrc
 31402  4C2C  0D21               	rlf	??__tdiv_to_l_+1,w
 31403  4C2D  0D22               	rlf	??__tdiv_to_l_+2,w
 31404  4C2E  00A3               	movwf	??__tdiv_to_l_+3
 31405  4C2F  0823               	movf	??__tdiv_to_l_+3,w
 31406  4C30  00A8               	movwf	__tdiv_to_l_@cntr
 31407  4C31  0828               	movf	__tdiv_to_l_@cntr,w
 31408  4C32  1903               	btfsc	3,2
 31409  4C33  2C1C               	goto	l9824
 31410  4C34  17F2               	bsf	__tdiv_to_l_@f1+1,7
 31411  4C35  30FF               	movlw	255
 31412  4C36  05F1               	andwf	__tdiv_to_l_@f1,f
 31413  4C37  30FF               	movlw	255
 31414  4C38  05F2               	andwf	__tdiv_to_l_@f1+1,f
 31415  4C39  3000               	movlw	0
 31416  4C3A  05F3               	andwf	__tdiv_to_l_@f1+2,f
 31417  4C3B  17F6               	bsf	__tdiv_to_l_@f2+1,7
 31418  4C3C  30FF               	movlw	255
 31419  4C3D  05F5               	andwf	__tdiv_to_l_@f2,f
 31420  4C3E  30FF               	movlw	255
 31421  4C3F  05F6               	andwf	__tdiv_to_l_@f2+1,f
 31422  4C40  3000               	movlw	0
 31423  4C41  05F7               	andwf	__tdiv_to_l_@f2+2,f
 31424  4C42  3000               	movlw	0
 31425  4C43  00A7               	movwf	__tdiv_to_l_@quot+3
 31426  4C44  3000               	movlw	0
 31427  4C45  00A6               	movwf	__tdiv_to_l_@quot+2
 31428  4C46  3000               	movlw	0
 31429  4C47  00A5               	movwf	__tdiv_to_l_@quot+1
 31430  4C48  3000               	movlw	0
 31431  4C49  00A4               	movwf	__tdiv_to_l_@quot
 31432  4C4A  307F               	movlw	127
 31433  4C4B  02A9               	subwf	__tdiv_to_l_@exp1,f
 31434  4C4C  3098               	movlw	152
 31435  4C4D  0728               	addwf	__tdiv_to_l_@cntr,w
 31436  4C4E  00A0               	movwf	??__tdiv_to_l_
 31437  4C4F  0820               	movf	??__tdiv_to_l_,w
 31438  4C50  02A9               	subwf	__tdiv_to_l_@exp1,f
 31439  4C51  3018               	movlw	24
 31440  4C52  00A0               	movwf	??__tdiv_to_l_
 31441  4C53  0820               	movf	??__tdiv_to_l_,w
 31442  4C54  00A8               	movwf	__tdiv_to_l_@cntr
 31443  4C55                     l9842:
 31444  4C55  3001               	movlw	1
 31445  4C56                     u11085:
 31446  4C56  35A4               	lslf	__tdiv_to_l_@quot,f
 31447  4C57  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 31448  4C58  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 31449  4C59  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 31450  4C5A  0B89               	decfsz	9,f
 31451  4C5B  2C56               	goto	u11085
 31452  4C5C  0877               	movf	__tdiv_to_l_@f2+2,w
 31453  4C5D  0273               	subwf	__tdiv_to_l_@f1+2,w
 31454  4C5E  1D03               	skipz
 31455  4C5F  2C66               	goto	u11095
 31456  4C60  0876               	movf	__tdiv_to_l_@f2+1,w
 31457  4C61  0272               	subwf	__tdiv_to_l_@f1+1,w
 31458  4C62  1D03               	skipz
 31459  4C63  2C66               	goto	u11095
 31460  4C64  0875               	movf	__tdiv_to_l_@f2,w
 31461  4C65  0271               	subwf	__tdiv_to_l_@f1,w
 31462  4C66                     u11095:
 31463  4C66  1C03               	skipc
 31464  4C67  2C6F               	goto	l9850
 31465  4C68  0875               	movf	__tdiv_to_l_@f2,w
 31466  4C69  02F1               	subwf	__tdiv_to_l_@f1,f
 31467  4C6A  0876               	movf	__tdiv_to_l_@f2+1,w
 31468  4C6B  3BF2               	subwfb	__tdiv_to_l_@f1+1,f
 31469  4C6C  0877               	movf	__tdiv_to_l_@f2+2,w
 31470  4C6D  3BF3               	subwfb	__tdiv_to_l_@f1+2,f
 31471  4C6E  1424               	bsf	__tdiv_to_l_@quot,0
 31472  4C6F                     l9850:
 31473  4C6F  3001               	movlw	1
 31474  4C70                     u11105:
 31475  4C70  35F1               	lslf	__tdiv_to_l_@f1,f
 31476  4C71  0DF2               	rlf	__tdiv_to_l_@f1+1,f
 31477  4C72  0DF3               	rlf	__tdiv_to_l_@f1+2,f
 31478  4C73  0B89               	decfsz	9,f
 31479  4C74  2C70               	goto	u11105
 31480  4C75  3001               	movlw	1
 31481  4C76  02A8               	subwf	__tdiv_to_l_@cntr,f
 31482  4C77  1D03               	btfss	3,2
 31483  4C78  2C55               	goto	l9842
 31484  4C79  1FA9               	btfss	__tdiv_to_l_@exp1,7
 31485  4C7A  2C8E               	goto	l9862
 31486  4C7B  0829               	movf	__tdiv_to_l_@exp1,w
 31487  4C7C  3A80               	xorlw	128
 31488  4C7D  3E97               	addlw	151
 31489  4C7E  1C03               	btfss	3,0
 31490  4C7F  2C1C               	goto	l9824
 31491  4C80                     l9860:
 31492  4C80  3001               	movlw	1
 31493  4C81                     u11145:
 31494  4C81  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 31495  4C82  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 31496  4C83  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 31497  4C84  0CA4               	rrf	__tdiv_to_l_@quot,f
 31498  4C85  0B89               	decfsz	9,f
 31499  4C86  2C81               	goto	u11145
 31500  4C87  3001               	movlw	1
 31501  4C88  00A0               	movwf	??__tdiv_to_l_
 31502  4C89  0820               	movf	??__tdiv_to_l_,w
 31503  4C8A  07A9               	addwf	__tdiv_to_l_@exp1,f
 31504  4C8B  1903               	btfsc	3,2
 31505  4C8C  2C9F               	goto	l9870
 31506  4C8D  2C80               	goto	l9860
 31507  4C8E                     l9862:
 31508  4C8E  3018               	movlw	24
 31509  4C8F  0229               	subwf	__tdiv_to_l_@exp1,w
 31510  4C90  1803               	btfsc	3,0
 31511  4C91  2C1C               	goto	l9824
 31512  4C92                     l2409:
 31513  4C92  0829               	movf	__tdiv_to_l_@exp1,w
 31514  4C93  1903               	btfsc	3,2
 31515  4C94  2C9F               	goto	l9870
 31516  4C95  3001               	movlw	1
 31517  4C96                     u11175:
 31518  4C96  35A4               	lslf	__tdiv_to_l_@quot,f
 31519  4C97  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 31520  4C98  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 31521  4C99  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 31522  4C9A  0B89               	decfsz	9,f
 31523  4C9B  2C96               	goto	u11175
 31524  4C9C  3001               	movlw	1
 31525  4C9D  02A9               	subwf	__tdiv_to_l_@exp1,f
 31526  4C9E  2C92               	goto	l2409
 31527  4C9F                     l9870:
 31528  4C9F  0827               	movf	__tdiv_to_l_@quot+3,w
 31529  4CA0  00F4               	movwf	?__tdiv_to_l_+3
 31530  4CA1  0826               	movf	__tdiv_to_l_@quot+2,w
 31531  4CA2  00F3               	movwf	?__tdiv_to_l_+2
 31532  4CA3  0825               	movf	__tdiv_to_l_@quot+1,w
 31533  4CA4  00F2               	movwf	?__tdiv_to_l_+1
 31534  4CA5  0824               	movf	__tdiv_to_l_@quot,w
 31535  4CA6  00F1               	movwf	?__tdiv_to_l_
 31536  4CA7  0008               	return
 31537  4CA8                     __end_of__tdiv_to_l_:
 31538                           
 31539                           	psect	text30
 31540  4B71                     __ptext30:	
 31541 ;; *************** function __div_to_l_ *****************
 31542 ;; Defined at:
 31543 ;;		line 60 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
 31544 ;; Parameters:    Size  Location     Type
 31545 ;;  f1              4    1[COMMON] unsigned long 
 31546 ;;  f2              4    5[COMMON] unsigned long 
 31547 ;; Auto vars:     Size  Location     Type
 31548 ;;  quot            4    0[BANK0 ] unsigned long 
 31549 ;;  exp1            1    5[BANK0 ] unsigned char 
 31550 ;;  cntr            1    4[BANK0 ] unsigned char 
 31551 ;; Return value:  Size  Location     Type
 31552 ;;                  4    1[COMMON] unsigned long 
 31553 ;; Registers used:
 31554 ;;		wreg, status,2, status,0
 31555 ;; Tracked objects:
 31556 ;;		On entry : 3F/1
 31557 ;;		On exit  : 3F/0
 31558 ;;		Unchanged: 0/0
 31559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31560 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31561 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31563 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31564 ;;Total ram usage:       15 bytes
 31565 ;; Hardware stack levels used: 1
 31566 ;; Hardware stack levels required when called: unknown (due to recursion)
 31567 ;; This function calls:
 31568 ;;		Nothing
 31569 ;; This function is called by:
 31570 ;;		__doprnt
 31571 ;; This function uses a non-reentrant model
 31572 ;;
 31573                           
 31574  4B71                     __div_to_l_:	
 31575                           ;psect for function __div_to_l_
 31576                           
 31577                           
 31578                           ;incstack = 0
 31579                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 31580  4B71  1003               	clrc
 31581  4B72  0D73               	rlf	__div_to_l_@f1+2,w
 31582  4B73  0D74               	rlf	__div_to_l_@f1+3,w
 31583  4B74  00F9               	movwf	??__div_to_l_
 31584  4B75  0879               	movf	??__div_to_l_,w
 31585  4B76  0140               	movlb	0	; select bank0
 31586  4B77  00A5               	movwf	__div_to_l_@exp1
 31587  4B78  0825               	movf	__div_to_l_@exp1,w
 31588  4B79  1D03               	btfss	3,2
 31589  4B7A  2B84               	goto	l9880
 31590  4B7B                     l9876:
 31591  4B7B  3000               	movlw	0
 31592  4B7C  00F4               	movwf	?__div_to_l_+3
 31593  4B7D  3000               	movlw	0
 31594  4B7E  00F3               	movwf	?__div_to_l_+2
 31595  4B7F  3000               	movlw	0
 31596  4B80  00F2               	movwf	?__div_to_l_+1
 31597  4B81  3000               	movlw	0
 31598  4B82  00F1               	movwf	?__div_to_l_
 31599  4B83  0008               	return
 31600  4B84                     l9880:
 31601  4B84  1003               	clrc
 31602  4B85  0D77               	rlf	__div_to_l_@f2+2,w
 31603  4B86  0D78               	rlf	__div_to_l_@f2+3,w
 31604  4B87  00F9               	movwf	??__div_to_l_
 31605  4B88  0879               	movf	??__div_to_l_,w
 31606  4B89  00A4               	movwf	__div_to_l_@cntr
 31607  4B8A  0824               	movf	__div_to_l_@cntr,w
 31608  4B8B  1903               	btfsc	3,2
 31609  4B8C  2B7B               	goto	l9876
 31610  4B8D  17F3               	bsf	__div_to_l_@f1+2,7
 31611  4B8E  30FF               	movlw	255
 31612  4B8F  05F1               	andwf	__div_to_l_@f1,f
 31613  4B90  30FF               	movlw	255
 31614  4B91  05F2               	andwf	__div_to_l_@f1+1,f
 31615  4B92  30FF               	movlw	255
 31616  4B93  05F3               	andwf	__div_to_l_@f1+2,f
 31617  4B94  3000               	movlw	0
 31618  4B95  05F4               	andwf	__div_to_l_@f1+3,f
 31619  4B96  17F7               	bsf	__div_to_l_@f2+2,7
 31620  4B97  30FF               	movlw	255
 31621  4B98  05F5               	andwf	__div_to_l_@f2,f
 31622  4B99  30FF               	movlw	255
 31623  4B9A  05F6               	andwf	__div_to_l_@f2+1,f
 31624  4B9B  30FF               	movlw	255
 31625  4B9C  05F7               	andwf	__div_to_l_@f2+2,f
 31626  4B9D  3000               	movlw	0
 31627  4B9E  05F8               	andwf	__div_to_l_@f2+3,f
 31628  4B9F  3000               	movlw	0
 31629  4BA0  00A3               	movwf	__div_to_l_@quot+3
 31630  4BA1  3000               	movlw	0
 31631  4BA2  00A2               	movwf	__div_to_l_@quot+2
 31632  4BA3  3000               	movlw	0
 31633  4BA4  00A1               	movwf	__div_to_l_@quot+1
 31634  4BA5  3000               	movlw	0
 31635  4BA6  00A0               	movwf	__div_to_l_@quot
 31636  4BA7  307F               	movlw	127
 31637  4BA8  02A5               	subwf	__div_to_l_@exp1,f
 31638  4BA9  30A0               	movlw	160
 31639  4BAA  0724               	addwf	__div_to_l_@cntr,w
 31640  4BAB  00F9               	movwf	??__div_to_l_
 31641  4BAC  0879               	movf	??__div_to_l_,w
 31642  4BAD  02A5               	subwf	__div_to_l_@exp1,f
 31643  4BAE  3020               	movlw	32
 31644  4BAF  00F9               	movwf	??__div_to_l_
 31645  4BB0  0879               	movf	??__div_to_l_,w
 31646  4BB1  00A4               	movwf	__div_to_l_@cntr
 31647  4BB2                     l9894:
 31648  4BB2  3001               	movlw	1
 31649  4BB3                     u11215:
 31650  4BB3  35A0               	lslf	__div_to_l_@quot,f
 31651  4BB4  0DA1               	rlf	__div_to_l_@quot+1,f
 31652  4BB5  0DA2               	rlf	__div_to_l_@quot+2,f
 31653  4BB6  0DA3               	rlf	__div_to_l_@quot+3,f
 31654  4BB7  0B89               	decfsz	9,f
 31655  4BB8  2BB3               	goto	u11215
 31656  4BB9  0878               	movf	__div_to_l_@f2+3,w
 31657  4BBA  0274               	subwf	__div_to_l_@f1+3,w
 31658  4BBB  1D03               	skipz
 31659  4BBC  2BC7               	goto	u11225
 31660  4BBD  0877               	movf	__div_to_l_@f2+2,w
 31661  4BBE  0273               	subwf	__div_to_l_@f1+2,w
 31662  4BBF  1D03               	skipz
 31663  4BC0  2BC7               	goto	u11225
 31664  4BC1  0876               	movf	__div_to_l_@f2+1,w
 31665  4BC2  0272               	subwf	__div_to_l_@f1+1,w
 31666  4BC3  1D03               	skipz
 31667  4BC4  2BC7               	goto	u11225
 31668  4BC5  0875               	movf	__div_to_l_@f2,w
 31669  4BC6  0271               	subwf	__div_to_l_@f1,w
 31670  4BC7                     u11225:
 31671  4BC7  1C03               	skipc
 31672  4BC8  2BD2               	goto	l9902
 31673  4BC9  0875               	movf	__div_to_l_@f2,w
 31674  4BCA  02F1               	subwf	__div_to_l_@f1,f
 31675  4BCB  0876               	movf	__div_to_l_@f2+1,w
 31676  4BCC  3BF2               	subwfb	__div_to_l_@f1+1,f
 31677  4BCD  0877               	movf	__div_to_l_@f2+2,w
 31678  4BCE  3BF3               	subwfb	__div_to_l_@f1+2,f
 31679  4BCF  0878               	movf	__div_to_l_@f2+3,w
 31680  4BD0  3BF4               	subwfb	__div_to_l_@f1+3,f
 31681  4BD1  1420               	bsf	__div_to_l_@quot,0
 31682  4BD2                     l9902:
 31683  4BD2  3001               	movlw	1
 31684  4BD3                     u11235:
 31685  4BD3  35F1               	lslf	__div_to_l_@f1,f
 31686  4BD4  0DF2               	rlf	__div_to_l_@f1+1,f
 31687  4BD5  0DF3               	rlf	__div_to_l_@f1+2,f
 31688  4BD6  0DF4               	rlf	__div_to_l_@f1+3,f
 31689  4BD7  0B89               	decfsz	9,f
 31690  4BD8  2BD3               	goto	u11235
 31691  4BD9  3001               	movlw	1
 31692  4BDA  02A4               	subwf	__div_to_l_@cntr,f
 31693  4BDB  1D03               	btfss	3,2
 31694  4BDC  2BB2               	goto	l9894
 31695  4BDD  1FA5               	btfss	__div_to_l_@exp1,7
 31696  4BDE  2BF2               	goto	l9914
 31697  4BDF  0825               	movf	__div_to_l_@exp1,w
 31698  4BE0  3A80               	xorlw	128
 31699  4BE1  3E9F               	addlw	159
 31700  4BE2  1C03               	btfss	3,0
 31701  4BE3  2B7B               	goto	l9876
 31702  4BE4                     l9912:
 31703  4BE4  3001               	movlw	1
 31704  4BE5                     u11275:
 31705  4BE5  36A3               	lsrf	__div_to_l_@quot+3,f
 31706  4BE6  0CA2               	rrf	__div_to_l_@quot+2,f
 31707  4BE7  0CA1               	rrf	__div_to_l_@quot+1,f
 31708  4BE8  0CA0               	rrf	__div_to_l_@quot,f
 31709  4BE9  0B89               	decfsz	9,f
 31710  4BEA  2BE5               	goto	u11275
 31711  4BEB  3001               	movlw	1
 31712  4BEC  00F9               	movwf	??__div_to_l_
 31713  4BED  0879               	movf	??__div_to_l_,w
 31714  4BEE  07A5               	addwf	__div_to_l_@exp1,f
 31715  4BEF  1903               	btfsc	3,2
 31716  4BF0  2C03               	goto	l9922
 31717  4BF1  2BE4               	goto	l9912
 31718  4BF2                     l9914:
 31719  4BF2  3020               	movlw	32
 31720  4BF3  0225               	subwf	__div_to_l_@exp1,w
 31721  4BF4  1803               	btfsc	3,0
 31722  4BF5  2B7B               	goto	l9876
 31723  4BF6                     l2392:
 31724  4BF6  0825               	movf	__div_to_l_@exp1,w
 31725  4BF7  1903               	btfsc	3,2
 31726  4BF8  2C03               	goto	l9922
 31727  4BF9  3001               	movlw	1
 31728  4BFA                     u11305:
 31729  4BFA  35A0               	lslf	__div_to_l_@quot,f
 31730  4BFB  0DA1               	rlf	__div_to_l_@quot+1,f
 31731  4BFC  0DA2               	rlf	__div_to_l_@quot+2,f
 31732  4BFD  0DA3               	rlf	__div_to_l_@quot+3,f
 31733  4BFE  0B89               	decfsz	9,f
 31734  4BFF  2BFA               	goto	u11305
 31735  4C00  3001               	movlw	1
 31736  4C01  02A5               	subwf	__div_to_l_@exp1,f
 31737  4C02  2BF6               	goto	l2392
 31738  4C03                     l9922:
 31739  4C03  0823               	movf	__div_to_l_@quot+3,w
 31740  4C04  00F4               	movwf	?__div_to_l_+3
 31741  4C05  0822               	movf	__div_to_l_@quot+2,w
 31742  4C06  00F3               	movwf	?__div_to_l_+2
 31743  4C07  0821               	movf	__div_to_l_@quot+1,w
 31744  4C08  00F2               	movwf	?__div_to_l_+1
 31745  4C09  0820               	movf	__div_to_l_@quot,w
 31746  4C0A  00F1               	movwf	?__div_to_l_
 31747  4C0B  0008               	return
 31748  4C0C                     __end_of__div_to_l_:
 31749                           
 31750                           	psect	text31
 31751  5020                     __ptext31:	
 31752 ;; *************** function ___wmul *****************
 31753 ;; Defined at:
 31754 ;;		line 15 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
 31755 ;; Parameters:    Size  Location     Type
 31756 ;;  multiplier      2    1[COMMON] unsigned int 
 31757 ;;  multiplicand    2    3[COMMON] unsigned int 
 31758 ;; Auto vars:     Size  Location     Type
 31759 ;;  product         2    5[COMMON] unsigned int 
 31760 ;; Return value:  Size  Location     Type
 31761 ;;                  2    1[COMMON] unsigned int 
 31762 ;; Registers used:
 31763 ;;		wreg, status,2, status,0
 31764 ;; Tracked objects:
 31765 ;;		On entry : 3F/1
 31766 ;;		On exit  : 3F/1
 31767 ;;		Unchanged: 3F/0
 31768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31773 ;;Total ram usage:        6 bytes
 31774 ;; Hardware stack levels used: 1
 31775 ;; Hardware stack levels required when called: unknown (due to recursion)
 31776 ;; This function calls:
 31777 ;;		Nothing
 31778 ;; This function is called by:
 31779 ;;		__doprnt
 31780 ;; This function uses a non-reentrant model
 31781 ;;
 31782                           
 31783  5020                     ___wmul:	
 31784                           ;psect for function ___wmul
 31785                           
 31786                           
 31787                           ;incstack = 0
 31788                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 31789  5020  01F5               	clrf	___wmul@product
 31790  5021  01F6               	clrf	___wmul@product+1
 31791  5022                     l9376:
 31792  5022  1C71               	btfss	___wmul@multiplier,0
 31793  5023  2828               	goto	l1737
 31794  5024  0873               	movf	___wmul@multiplicand,w
 31795  5025  07F5               	addwf	___wmul@product,f
 31796  5026  0874               	movf	___wmul@multiplicand+1,w
 31797  5027  3DF6               	addwfc	___wmul@product+1,f
 31798  5028                     l1737:
 31799  5028  3001               	movlw	1
 31800  5029                     u10055:
 31801  5029  35F3               	lslf	___wmul@multiplicand,f
 31802  502A  0DF4               	rlf	___wmul@multiplicand+1,f
 31803  502B  0B89               	decfsz	9,f
 31804  502C  2829               	goto	u10055
 31805  502D  3001               	movlw	1
 31806  502E                     u10065:
 31807  502E  36F2               	lsrf	___wmul@multiplier+1,f
 31808  502F  0CF1               	rrf	___wmul@multiplier,f
 31809  5030  0B89               	decfsz	9,f
 31810  5031  282E               	goto	u10065
 31811  5032  0871               	movf	___wmul@multiplier,w
 31812  5033  0472               	iorwf	___wmul@multiplier+1,w
 31813  5034  1D03               	btfss	3,2
 31814  5035  2822               	goto	l9376
 31815  5036  0876               	movf	___wmul@product+1,w
 31816  5037  00F2               	movwf	?___wmul+1
 31817  5038  0875               	movf	___wmul@product,w
 31818  5039  00F1               	movwf	?___wmul
 31819  503A  0008               	return
 31820  503B                     __end_of___wmul:
 31821                           
 31822                           	psect	text32
 31823  53D6                     __ptext32:	
 31824 ;; *************** function ___llmod *****************
 31825 ;; Defined at:
 31826 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
 31827 ;; Parameters:    Size  Location     Type
 31828 ;;  divisor         4    5[BANK0 ] unsigned long 
 31829 ;;  dividend        4    9[BANK0 ] unsigned long 
 31830 ;; Auto vars:     Size  Location     Type
 31831 ;;  counter         1   11[COMMON] unsigned char 
 31832 ;; Return value:  Size  Location     Type
 31833 ;;                  4    5[BANK0 ] unsigned long 
 31834 ;; Registers used:
 31835 ;;		wreg, status,2, status,0
 31836 ;; Tracked objects:
 31837 ;;		On entry : 3F/0
 31838 ;;		On exit  : 3F/0
 31839 ;;		Unchanged: 0/0
 31840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31841 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31844 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31845 ;;Total ram usage:       10 bytes
 31846 ;; Hardware stack levels used: 1
 31847 ;; Hardware stack levels required when called: unknown (due to recursion)
 31848 ;; This function calls:
 31849 ;;		Nothing
 31850 ;; This function is called by:
 31851 ;;		__doprnt
 31852 ;; This function uses a non-reentrant model
 31853 ;;
 31854                           
 31855  53D6                     ___llmod:	
 31856                           ;psect for function ___llmod
 31857                           
 31858                           
 31859                           ;incstack = 0
 31860                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 31861  53D6  0828               	movf	___llmod@divisor+3,w
 31862  53D7  0427               	iorwf	___llmod@divisor+2,w
 31863  53D8  0426               	iorwf	___llmod@divisor+1,w
 31864  53D9  0425               	iorwf	___llmod@divisor,w
 31865  53DA  1903               	skipnz
 31866  53DB  2C0F               	goto	l9558
 31867  53DC  01FB               	clrf	___llmod@counter
 31868  53DD  0AFB               	incf	___llmod@counter,f
 31869  53DE                     l9548:
 31870  53DE  1BA8               	btfsc	___llmod@divisor+3,7
 31871  53DF  2BEC               	goto	l9550
 31872  53E0  3001               	movlw	1
 31873  53E1                     u10495:
 31874  53E1  35A5               	lslf	___llmod@divisor,f
 31875  53E2  0DA6               	rlf	___llmod@divisor+1,f
 31876  53E3  0DA7               	rlf	___llmod@divisor+2,f
 31877  53E4  0DA8               	rlf	___llmod@divisor+3,f
 31878  53E5  0B89               	decfsz	9,f
 31879  53E6  2BE1               	goto	u10495
 31880  53E7  3001               	movlw	1
 31881  53E8  00FA               	movwf	??___llmod
 31882  53E9  087A               	movf	??___llmod,w
 31883  53EA  07FB               	addwf	___llmod@counter,f
 31884  53EB  2BDE               	goto	l9548
 31885  53EC                     l9550:
 31886  53EC  0828               	movf	___llmod@divisor+3,w
 31887  53ED  022C               	subwf	___llmod@dividend+3,w
 31888  53EE  1D03               	skipz
 31889  53EF  2BFA               	goto	u10515
 31890  53F0  0827               	movf	___llmod@divisor+2,w
 31891  53F1  022B               	subwf	___llmod@dividend+2,w
 31892  53F2  1D03               	skipz
 31893  53F3  2BFA               	goto	u10515
 31894  53F4  0826               	movf	___llmod@divisor+1,w
 31895  53F5  022A               	subwf	___llmod@dividend+1,w
 31896  53F6  1D03               	skipz
 31897  53F7  2BFA               	goto	u10515
 31898  53F8  0825               	movf	___llmod@divisor,w
 31899  53F9  0229               	subwf	___llmod@dividend,w
 31900  53FA                     u10515:
 31901  53FA  1C03               	skipc
 31902  53FB  2C04               	goto	l9554
 31903  53FC  0825               	movf	___llmod@divisor,w
 31904  53FD  02A9               	subwf	___llmod@dividend,f
 31905  53FE  0826               	movf	___llmod@divisor+1,w
 31906  53FF  3BAA               	subwfb	___llmod@dividend+1,f
 31907  5400  0827               	movf	___llmod@divisor+2,w
 31908  5401  3BAB               	subwfb	___llmod@dividend+2,f
 31909  5402  0828               	movf	___llmod@divisor+3,w
 31910  5403  3BAC               	subwfb	___llmod@dividend+3,f
 31911  5404                     l9554:
 31912  5404  3001               	movlw	1
 31913  5405                     u10525:
 31914  5405  36A8               	lsrf	___llmod@divisor+3,f
 31915  5406  0CA7               	rrf	___llmod@divisor+2,f
 31916  5407  0CA6               	rrf	___llmod@divisor+1,f
 31917  5408  0CA5               	rrf	___llmod@divisor,f
 31918  5409  0B89               	decfsz	9,f
 31919  540A  2C05               	goto	u10525
 31920  540B  3001               	movlw	1
 31921  540C  02FB               	subwf	___llmod@counter,f
 31922  540D  1D03               	btfss	3,2
 31923  540E  2BEC               	goto	l9550
 31924  540F                     l9558:
 31925  540F  082C               	movf	___llmod@dividend+3,w
 31926  5410  00A8               	movwf	?___llmod+3
 31927  5411  082B               	movf	___llmod@dividend+2,w
 31928  5412  00A7               	movwf	?___llmod+2
 31929  5413  082A               	movf	___llmod@dividend+1,w
 31930  5414  00A6               	movwf	?___llmod+1
 31931  5415  0829               	movf	___llmod@dividend,w
 31932  5416  00A5               	movwf	?___llmod
 31933  5417  0008               	return
 31934  5418                     __end_of___llmod:
 31935                           
 31936                           	psect	text33
 31937  527E                     __ptext33:	
 31938 ;; *************** function ___flsub *****************
 31939 ;; Defined at:
 31940 ;;		line 242 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
 31941 ;; Parameters:    Size  Location     Type
 31942 ;;  a               4    0[BANK1 ] unsigned long 
 31943 ;;  b               4    4[BANK1 ] unsigned long 
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;		None
 31946 ;; Return value:  Size  Location     Type
 31947 ;;                  4    0[BANK1 ] unsigned long 
 31948 ;; Registers used:
 31949 ;;		wreg, status,2, status,0, pclath, cstack
 31950 ;; Tracked objects:
 31951 ;;		On entry : 3F/1
 31952 ;;		On exit  : 3F/1
 31953 ;;		Unchanged: 0/0
 31954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31955 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31958 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31959 ;;Total ram usage:        8 bytes
 31960 ;; Hardware stack levels used: 1
 31961 ;; Hardware stack levels required when called: unknown (due to recursion)
 31962 ;; This function calls:
 31963 ;;		___fladd
 31964 ;; This function is called by:
 31965 ;;		_cncSetPosStart
 31966 ;;		_navCfgMove
 31967 ;;		__doprnt
 31968 ;; This function uses a non-reentrant model
 31969 ;;
 31970                           
 31971  527E                     ___flsub:	
 31972                           ;psect for function ___flsub
 31973                           
 31974                           
 31975                           ;incstack = 0
 31976                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 31977  527E  3080               	movlw	128
 31978  527F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 31979  5280  0827               	movf	(___flsub@b+3)^(0+128),w
 31980  5281  0140               	movlb	0	; select bank0
 31981  5282  00D8               	movwf	___fladd@b+3
 31982  5283  0141               	movlb	1	; select bank1
 31983  5284  0826               	movf	(___flsub@b+2)^(0+128),w
 31984  5285  0140               	movlb	0	; select bank0
 31985  5286  00D7               	movwf	___fladd@b+2
 31986  5287  0141               	movlb	1	; select bank1
 31987  5288  0825               	movf	(___flsub@b+1)^(0+128),w
 31988  5289  0140               	movlb	0	; select bank0
 31989  528A  00D6               	movwf	___fladd@b+1
 31990  528B  0141               	movlb	1	; select bank1
 31991  528C  0824               	movf	___flsub@b^(0+128),w
 31992  528D  0140               	movlb	0	; select bank0
 31993  528E  00D5               	movwf	___fladd@b
 31994  528F  0141               	movlb	1	; select bank1
 31995  5290  0823               	movf	(___flsub@a+3)^(0+128),w
 31996  5291  0140               	movlb	0	; select bank0
 31997  5292  00DC               	movwf	___fladd@a+3
 31998  5293  0141               	movlb	1	; select bank1
 31999  5294  0822               	movf	(___flsub@a+2)^(0+128),w
 32000  5295  0140               	movlb	0	; select bank0
 32001  5296  00DB               	movwf	___fladd@a+2
 32002  5297  0141               	movlb	1	; select bank1
 32003  5298  0821               	movf	(___flsub@a+1)^(0+128),w
 32004  5299  0140               	movlb	0	; select bank0
 32005  529A  00DA               	movwf	___fladd@a+1
 32006  529B  0141               	movlb	1	; select bank1
 32007  529C  0820               	movf	___flsub@a^(0+128),w
 32008  529D  0140               	movlb	0	; select bank0
 32009  529E  00D9               	movwf	___fladd@a
 32010  529F  31BE  261F         	fcall	___fladd
 32011  52A1  0858               	movf	?___fladd+3,w
 32012  52A2  0141               	movlb	1	; select bank1
 32013  52A3  00A3               	movwf	(?___flsub+3)^(0+128)
 32014  52A4  0140               	movlb	0	; select bank0
 32015  52A5  0857               	movf	?___fladd+2,w
 32016  52A6  0141               	movlb	1	; select bank1
 32017  52A7  00A2               	movwf	(?___flsub+2)^(0+128)
 32018  52A8  0140               	movlb	0	; select bank0
 32019  52A9  0856               	movf	?___fladd+1,w
 32020  52AA  0141               	movlb	1	; select bank1
 32021  52AB  00A1               	movwf	(?___flsub+1)^(0+128)
 32022  52AC  0140               	movlb	0	; select bank0
 32023  52AD  0855               	movf	?___fladd,w
 32024  52AE  0141               	movlb	1	; select bank1
 32025  52AF  00A0               	movwf	?___flsub^(0+128)
 32026  52B0  0008               	return
 32027  52B1                     __end_of___flsub:
 32028                           
 32029                           	psect	text34
 32030  3E1F                     __ptext34:	
 32031 ;; *************** function ___fladd *****************
 32032 ;; Defined at:
 32033 ;;		line 10 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
 32034 ;; Parameters:    Size  Location     Type
 32035 ;;  b               4   53[BANK0 ] unsigned long 
 32036 ;;  a               4   57[BANK0 ] unsigned long 
 32037 ;; Auto vars:     Size  Location     Type
 32038 ;;  grs             1   72[BANK0 ] unsigned char 
 32039 ;;  bexp            1   71[BANK0 ] unsigned char 
 32040 ;;  aexp            1   70[BANK0 ] unsigned char 
 32041 ;;  signs           1   69[BANK0 ] unsigned char 
 32042 ;; Return value:  Size  Location     Type
 32043 ;;                  4   53[BANK0 ] unsigned char 
 32044 ;; Registers used:
 32045 ;;		wreg, status,2, status,0
 32046 ;; Tracked objects:
 32047 ;;		On entry : 3F/0
 32048 ;;		On exit  : 3F/0
 32049 ;;		Unchanged: 0/0
 32050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32051 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32052 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32053 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32054 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32055 ;;Total ram usage:       20 bytes
 32056 ;; Hardware stack levels used: 1
 32057 ;; Hardware stack levels required when called: unknown (due to recursion)
 32058 ;; This function calls:
 32059 ;;		Nothing
 32060 ;; This function is called by:
 32061 ;;		_cncSetPosHome
 32062 ;;		_cncSetPosStart
 32063 ;;		_navCfgMove
 32064 ;;		___flsub
 32065 ;;		__doprnt
 32066 ;; This function uses a non-reentrant model
 32067 ;;
 32068                           
 32069  3E1F                     ___fladd:	
 32070                           ;psect for function ___fladd
 32071                           
 32072                           
 32073                           ;incstack = 0
 32074                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 32075  3E1F  0858               	movf	___fladd@b+3,w
 32076  3E20  3980               	andlw	128
 32077  3E21  00DD               	movwf	??___fladd
 32078  3E22  085D               	movf	??___fladd,w
 32079  3E23  00E5               	movwf	___fladd@signs
 32080  3E24  3558               	lslf	___fladd@b+3,w
 32081  3E25  00DD               	movwf	??___fladd
 32082  3E26  085D               	movf	??___fladd,w
 32083  3E27  00E7               	movwf	___fladd@bexp
 32084  3E28  1BD7               	btfsc	___fladd@b+2,7
 32085  3E29  1467               	bsf	___fladd@bexp,0
 32086  3E2A  0867               	movf	___fladd@bexp,w
 32087  3E2B  1903               	btfsc	3,2
 32088  3E2C  2E3B               	goto	l9012
 32089  3E2D  0A67               	incf	___fladd@bexp,w
 32090  3E2E  1D03               	btfss	3,2
 32091  3E2F  2E38               	goto	l9008
 32092  3E30  3000               	movlw	0
 32093  3E31  00D8               	movwf	___fladd@b+3
 32094  3E32  3000               	movlw	0
 32095  3E33  00D7               	movwf	___fladd@b+2
 32096  3E34  3000               	movlw	0
 32097  3E35  00D6               	movwf	___fladd@b+1
 32098  3E36  3000               	movlw	0
 32099  3E37  00D5               	movwf	___fladd@b
 32100  3E38                     l9008:
 32101  3E38  17D7               	bsf	___fladd@b+2,7
 32102  3E39  01D8               	clrf	___fladd@b+3
 32103  3E3A  2E43               	goto	l9014
 32104  3E3B                     l9012:
 32105  3E3B  3000               	movlw	0
 32106  3E3C  00D8               	movwf	___fladd@b+3
 32107  3E3D  3000               	movlw	0
 32108  3E3E  00D7               	movwf	___fladd@b+2
 32109  3E3F  3000               	movlw	0
 32110  3E40  00D6               	movwf	___fladd@b+1
 32111  3E41  3000               	movlw	0
 32112  3E42  00D5               	movwf	___fladd@b
 32113  3E43                     l9014:
 32114  3E43  085C               	movf	___fladd@a+3,w
 32115  3E44  3980               	andlw	128
 32116  3E45  00DD               	movwf	??___fladd
 32117  3E46  085D               	movf	??___fladd,w
 32118  3E47  00E6               	movwf	___fladd@aexp
 32119  3E48  0866               	movf	___fladd@aexp,w
 32120  3E49  0665               	xorwf	___fladd@signs,w
 32121  3E4A  1D03               	btfss	3,2
 32122  3E4B  1765               	bsf	___fladd@signs,6
 32123  3E4C  355C               	lslf	___fladd@a+3,w
 32124  3E4D  00DD               	movwf	??___fladd
 32125  3E4E  085D               	movf	??___fladd,w
 32126  3E4F  00E6               	movwf	___fladd@aexp
 32127  3E50  1BDB               	btfsc	___fladd@a+2,7
 32128  3E51  1466               	bsf	___fladd@aexp,0
 32129  3E52  0866               	movf	___fladd@aexp,w
 32130  3E53  1903               	btfsc	3,2
 32131  3E54  2E63               	goto	l9036
 32132  3E55  0A66               	incf	___fladd@aexp,w
 32133  3E56  1D03               	btfss	3,2
 32134  3E57  2E60               	goto	l9032
 32135  3E58  3000               	movlw	0
 32136  3E59  00DC               	movwf	___fladd@a+3
 32137  3E5A  3000               	movlw	0
 32138  3E5B  00DB               	movwf	___fladd@a+2
 32139  3E5C  3000               	movlw	0
 32140  3E5D  00DA               	movwf	___fladd@a+1
 32141  3E5E  3000               	movlw	0
 32142  3E5F  00D9               	movwf	___fladd@a
 32143  3E60                     l9032:
 32144  3E60  17DB               	bsf	___fladd@a+2,7
 32145  3E61  01DC               	clrf	___fladd@a+3
 32146  3E62  2E6B               	goto	l2030
 32147  3E63                     l9036:
 32148  3E63  3000               	movlw	0
 32149  3E64  00DC               	movwf	___fladd@a+3
 32150  3E65  3000               	movlw	0
 32151  3E66  00DB               	movwf	___fladd@a+2
 32152  3E67  3000               	movlw	0
 32153  3E68  00DA               	movwf	___fladd@a+1
 32154  3E69  3000               	movlw	0
 32155  3E6A  00D9               	movwf	___fladd@a
 32156  3E6B                     l2030:
 32157  3E6B  0867               	movf	___fladd@bexp,w
 32158  3E6C  0266               	subwf	___fladd@aexp,w
 32159  3E6D  1803               	skipnc
 32160  3E6E  2EB1               	goto	l9072
 32161  3E6F  1F65               	btfss	___fladd@signs,6
 32162  3E70  2E75               	goto	l9042
 32163  3E71  3080               	movlw	128
 32164  3E72  00DD               	movwf	??___fladd
 32165  3E73  085D               	movf	??___fladd,w
 32166  3E74  06E5               	xorwf	___fladd@signs,f
 32167  3E75                     l9042:
 32168  3E75  0867               	movf	___fladd@bexp,w
 32169  3E76  00DD               	movwf	??___fladd
 32170  3E77  085D               	movf	??___fladd,w
 32171  3E78  00E8               	movwf	___fladd@grs
 32172  3E79  0866               	movf	___fladd@aexp,w
 32173  3E7A  00DD               	movwf	??___fladd
 32174  3E7B  085D               	movf	??___fladd,w
 32175  3E7C  00E7               	movwf	___fladd@bexp
 32176  3E7D  0868               	movf	___fladd@grs,w
 32177  3E7E  00DD               	movwf	??___fladd
 32178  3E7F  085D               	movf	??___fladd,w
 32179  3E80  00E6               	movwf	___fladd@aexp
 32180  3E81  0855               	movf	___fladd@b,w
 32181  3E82  00DD               	movwf	??___fladd
 32182  3E83  085D               	movf	??___fladd,w
 32183  3E84  00E8               	movwf	___fladd@grs
 32184  3E85  0859               	movf	___fladd@a,w
 32185  3E86  00DD               	movwf	??___fladd
 32186  3E87  085D               	movf	??___fladd,w
 32187  3E88  00D5               	movwf	___fladd@b
 32188  3E89  0868               	movf	___fladd@grs,w
 32189  3E8A  00DD               	movwf	??___fladd
 32190  3E8B  085D               	movf	??___fladd,w
 32191  3E8C  00D9               	movwf	___fladd@a
 32192  3E8D  0856               	movf	___fladd@b+1,w
 32193  3E8E  00DD               	movwf	??___fladd
 32194  3E8F  085D               	movf	??___fladd,w
 32195  3E90  00E8               	movwf	___fladd@grs
 32196  3E91  085A               	movf	___fladd@a+1,w
 32197  3E92  00DD               	movwf	??___fladd
 32198  3E93  085D               	movf	??___fladd,w
 32199  3E94  00D6               	movwf	___fladd@b+1
 32200  3E95  0868               	movf	___fladd@grs,w
 32201  3E96  00DD               	movwf	??___fladd
 32202  3E97  085D               	movf	??___fladd,w
 32203  3E98  00DA               	movwf	___fladd@a+1
 32204  3E99  0857               	movf	___fladd@b+2,w
 32205  3E9A  00DD               	movwf	??___fladd
 32206  3E9B  085D               	movf	??___fladd,w
 32207  3E9C  00E8               	movwf	___fladd@grs
 32208  3E9D  085B               	movf	___fladd@a+2,w
 32209  3E9E  00DD               	movwf	??___fladd
 32210  3E9F  085D               	movf	??___fladd,w
 32211  3EA0  00D7               	movwf	___fladd@b+2
 32212  3EA1  0868               	movf	___fladd@grs,w
 32213  3EA2  00DD               	movwf	??___fladd
 32214  3EA3  085D               	movf	??___fladd,w
 32215  3EA4  00DB               	movwf	___fladd@a+2
 32216  3EA5  0858               	movf	___fladd@b+3,w
 32217  3EA6  00DD               	movwf	??___fladd
 32218  3EA7  085D               	movf	??___fladd,w
 32219  3EA8  00E8               	movwf	___fladd@grs
 32220  3EA9  085C               	movf	___fladd@a+3,w
 32221  3EAA  00DD               	movwf	??___fladd
 32222  3EAB  085D               	movf	??___fladd,w
 32223  3EAC  00D8               	movwf	___fladd@b+3
 32224  3EAD  0868               	movf	___fladd@grs,w
 32225  3EAE  00DD               	movwf	??___fladd
 32226  3EAF  085D               	movf	??___fladd,w
 32227  3EB0  00DC               	movwf	___fladd@a+3
 32228  3EB1                     l9072:
 32229  3EB1  01E8               	clrf	___fladd@grs
 32230  3EB2  0866               	movf	___fladd@aexp,w
 32231  3EB3  00DD               	movwf	??___fladd
 32232  3EB4  01DE               	clrf	??___fladd+1
 32233  3EB5  085E               	movf	??___fladd+1,w
 32234  3EB6  00E0               	movwf	??___fladd+3
 32235  3EB7  0867               	movf	___fladd@bexp,w
 32236  3EB8  025D               	subwf	??___fladd,w
 32237  3EB9  00DF               	movwf	??___fladd+2
 32238  3EBA  1C03               	skipc
 32239  3EBB  03E0               	decf	??___fladd+3,f
 32240  3EBC  0860               	movf	??___fladd+3,w
 32241  3EBD  3A80               	xorlw	128
 32242  3EBE  00E1               	movwf	??___fladd+4
 32243  3EBF  3080               	movlw	128
 32244  3EC0  0261               	subwf	??___fladd+4,w
 32245  3EC1  1D03               	skipz
 32246  3EC2  2EC5               	goto	u9365
 32247  3EC3  301A               	movlw	26
 32248  3EC4  025F               	subwf	??___fladd+2,w
 32249  3EC5                     u9365:
 32250  3EC5  1C03               	skipc
 32251  3EC6  2EF9               	goto	l9090
 32252  3EC7  0140               	movlb	0	; select bank0
 32253  3EC8  0858               	movf	___fladd@b+3,w
 32254  3EC9  0457               	iorwf	___fladd@b+2,w
 32255  3ECA  0456               	iorwf	___fladd@b+1,w
 32256  3ECB  0455               	iorwf	___fladd@b,w
 32257  3ECC  1903               	btfsc	3,2
 32258  3ECD  2ED0               	goto	u9370
 32259  3ECE  3001               	movlw	1
 32260  3ECF  2ED1               	goto	u9380
 32261  3ED0                     u9370:
 32262  3ED0  3000               	movlw	0
 32263  3ED1                     u9380:
 32264  3ED1  00DD               	movwf	??___fladd
 32265  3ED2  085D               	movf	??___fladd,w
 32266  3ED3  00E8               	movwf	___fladd@grs
 32267  3ED4  3000               	movlw	0
 32268  3ED5  00D8               	movwf	___fladd@b+3
 32269  3ED6  3000               	movlw	0
 32270  3ED7  00D7               	movwf	___fladd@b+2
 32271  3ED8  3000               	movlw	0
 32272  3ED9  00D6               	movwf	___fladd@b+1
 32273  3EDA  3000               	movlw	0
 32274  3EDB  00D5               	movwf	___fladd@b
 32275  3EDC  0866               	movf	___fladd@aexp,w
 32276  3EDD  00DD               	movwf	??___fladd
 32277  3EDE  085D               	movf	??___fladd,w
 32278  3EDF  00E7               	movwf	___fladd@bexp
 32279  3EE0  2EFE               	goto	l2034
 32280  3EE1                     l2036:
 32281  3EE1  1C68               	btfss	___fladd@grs,0
 32282  3EE2  2EE9               	goto	l9080
 32283  3EE3  3668               	lsrf	___fladd@grs,w
 32284  3EE4  3801               	iorlw	1
 32285  3EE5  00DD               	movwf	??___fladd
 32286  3EE6  085D               	movf	??___fladd,w
 32287  3EE7  00E8               	movwf	___fladd@grs
 32288  3EE8  2EEB               	goto	l9082
 32289  3EE9                     l9080:
 32290  3EE9  1003               	clrc
 32291  3EEA  0CE8               	rrf	___fladd@grs,f
 32292  3EEB                     l9082:
 32293  3EEB  1855               	btfsc	___fladd@b,0
 32294  3EEC  17E8               	bsf	___fladd@grs,7
 32295  3EED  3001               	movlw	1
 32296  3EEE  00DD               	movwf	??___fladd
 32297  3EEF                     u9415:
 32298  3EEF  37D8               	asrf	___fladd@b+3,f
 32299  3EF0  0CD7               	rrf	___fladd@b+2,f
 32300  3EF1  0CD6               	rrf	___fladd@b+1,f
 32301  3EF2  0CD5               	rrf	___fladd@b,f
 32302  3EF3  0BDD               	decfsz	??___fladd& (0+127),f
 32303  3EF4  2EEF               	goto	u9415
 32304  3EF5  3001               	movlw	1
 32305  3EF6  00DD               	movwf	??___fladd
 32306  3EF7  085D               	movf	??___fladd,w
 32307  3EF8  07E7               	addwf	___fladd@bexp,f
 32308  3EF9                     l9090:
 32309  3EF9  0140               	movlb	0	; select bank0
 32310  3EFA  0866               	movf	___fladd@aexp,w
 32311  3EFB  0267               	subwf	___fladd@bexp,w
 32312  3EFC  1C03               	skipc
 32313  3EFD  2EE1               	goto	l2036
 32314  3EFE                     l2034:
 32315  3EFE  1B65               	btfsc	___fladd@signs,6
 32316  3EFF  2F2F               	goto	l9116
 32317  3F00  0867               	movf	___fladd@bexp,w
 32318  3F01  1D03               	btfss	3,2
 32319  3F02  2F0C               	goto	l9098
 32320  3F03  3000               	movlw	0
 32321  3F04  00D8               	movwf	?___fladd+3
 32322  3F05  3000               	movlw	0
 32323  3F06  00D7               	movwf	?___fladd+2
 32324  3F07  3000               	movlw	0
 32325  3F08  00D6               	movwf	?___fladd+1
 32326  3F09  3000               	movlw	0
 32327  3F0A  00D5               	movwf	?___fladd
 32328  3F0B  0008               	return
 32329  3F0C                     l9098:
 32330  3F0C  0859               	movf	___fladd@a,w
 32331  3F0D  07D5               	addwf	___fladd@b,f
 32332  3F0E  085A               	movf	___fladd@a+1,w
 32333  3F0F  3DD6               	addwfc	___fladd@b+1,f
 32334  3F10  085B               	movf	___fladd@a+2,w
 32335  3F11  3DD7               	addwfc	___fladd@b+2,f
 32336  3F12  085C               	movf	___fladd@a+3,w
 32337  3F13  3DD8               	addwfc	___fladd@b+3,f
 32338  3F14  1C58               	btfss	___fladd@b+3,0
 32339  3F15  2FA9               	goto	l9150
 32340  3F16  1C68               	btfss	___fladd@grs,0
 32341  3F17  2F1E               	goto	l9106
 32342  3F18  3668               	lsrf	___fladd@grs,w
 32343  3F19  3801               	iorlw	1
 32344  3F1A  00DD               	movwf	??___fladd
 32345  3F1B  085D               	movf	??___fladd,w
 32346  3F1C  00E8               	movwf	___fladd@grs
 32347  3F1D  2F20               	goto	l9108
 32348  3F1E                     l9106:
 32349  3F1E  1003               	clrc
 32350  3F1F  0CE8               	rrf	___fladd@grs,f
 32351  3F20                     l9108:
 32352  3F20  1855               	btfsc	___fladd@b,0
 32353  3F21  17E8               	bsf	___fladd@grs,7
 32354  3F22  3001               	movlw	1
 32355  3F23  00DD               	movwf	??___fladd
 32356  3F24                     u9485:
 32357  3F24  37D8               	asrf	___fladd@b+3,f
 32358  3F25  0CD7               	rrf	___fladd@b+2,f
 32359  3F26  0CD6               	rrf	___fladd@b+1,f
 32360  3F27  0CD5               	rrf	___fladd@b,f
 32361  3F28  0BDD               	decfsz	??___fladd& (0+127),f
 32362  3F29  2F24               	goto	u9485
 32363  3F2A  3001               	movlw	1
 32364  3F2B  00DD               	movwf	??___fladd
 32365  3F2C  085D               	movf	??___fladd,w
 32366  3F2D  07E7               	addwf	___fladd@bexp,f
 32367  3F2E  2FA9               	goto	l9150
 32368  3F2F                     l9116:
 32369  3F2F  0858               	movf	___fladd@b+3,w
 32370  3F30  3A80               	xorlw	128
 32371  3F31  00DD               	movwf	??___fladd
 32372  3F32  085C               	movf	___fladd@a+3,w
 32373  3F33  3A80               	xorlw	128
 32374  3F34  025D               	subwf	??___fladd,w
 32375  3F35  1D03               	skipz
 32376  3F36  2F41               	goto	u9493
 32377  3F37  085B               	movf	___fladd@a+2,w
 32378  3F38  0257               	subwf	___fladd@b+2,w
 32379  3F39  1D03               	skipz
 32380  3F3A  2F41               	goto	u9493
 32381  3F3B  085A               	movf	___fladd@a+1,w
 32382  3F3C  0256               	subwf	___fladd@b+1,w
 32383  3F3D  1D03               	skipz
 32384  3F3E  2F41               	goto	u9493
 32385  3F3F  0859               	movf	___fladd@a,w
 32386  3F40  0255               	subwf	___fladd@b,w
 32387  3F41                     u9493:
 32388  3F41  1803               	skipnc
 32389  3F42  2F79               	goto	l9126
 32390  3F43  30FF               	movlw	255
 32391  3F44  00DD               	movwf	??___fladd
 32392  3F45  30FF               	movlw	255
 32393  3F46  00DE               	movwf	??___fladd+1
 32394  3F47  30FF               	movlw	255
 32395  3F48  00DF               	movwf	??___fladd+2
 32396  3F49  30FF               	movlw	255
 32397  3F4A  00E0               	movwf	??___fladd+3
 32398  3F4B  0855               	movf	___fladd@b,w
 32399  3F4C  0259               	subwf	___fladd@a,w
 32400  3F4D  00E1               	movwf	??___fladd+4
 32401  3F4E  0856               	movf	___fladd@b+1,w
 32402  3F4F  3B5A               	subwfb	___fladd@a+1,w
 32403  3F50  00E2               	movwf	??___fladd+5
 32404  3F51  0857               	movf	___fladd@b+2,w
 32405  3F52  3B5B               	subwfb	___fladd@a+2,w
 32406  3F53  00E3               	movwf	??___fladd+6
 32407  3F54  0858               	movf	___fladd@b+3,w
 32408  3F55  3B5C               	subwfb	___fladd@a+3,w
 32409  3F56  00E4               	movwf	??___fladd+7
 32410  3F57  0861               	movf	??___fladd+4,w
 32411  3F58  07DD               	addwf	??___fladd,f
 32412  3F59  0862               	movf	??___fladd+5,w
 32413  3F5A  3DDE               	addwfc	??___fladd+1,f
 32414  3F5B  0863               	movf	??___fladd+6,w
 32415  3F5C  3DDF               	addwfc	??___fladd+2,f
 32416  3F5D  0864               	movf	??___fladd+7,w
 32417  3F5E  3DE0               	addwfc	??___fladd+3,f
 32418  3F5F  0860               	movf	??___fladd+3,w
 32419  3F60  00D8               	movwf	___fladd@b+3
 32420  3F61  085F               	movf	??___fladd+2,w
 32421  3F62  00D7               	movwf	___fladd@b+2
 32422  3F63  085E               	movf	??___fladd+1,w
 32423  3F64  00D6               	movwf	___fladd@b+1
 32424  3F65  085D               	movf	??___fladd,w
 32425  3F66  00D5               	movwf	___fladd@b
 32426  3F67  3080               	movlw	128
 32427  3F68  00DD               	movwf	??___fladd
 32428  3F69  085D               	movf	??___fladd,w
 32429  3F6A  06E5               	xorwf	___fladd@signs,f
 32430  3F6B  09E8               	comf	___fladd@grs,f
 32431  3F6C  0AE8               	incf	___fladd@grs,f
 32432  3F6D  0868               	movf	___fladd@grs,w
 32433  3F6E  1D03               	btfss	3,2
 32434  3F6F  2F81               	goto	l2051
 32435  3F70  3001               	movlw	1
 32436  3F71  07D5               	addwf	___fladd@b,f
 32437  3F72  3000               	movlw	0
 32438  3F73  3DD6               	addwfc	___fladd@b+1,f
 32439  3F74  3000               	movlw	0
 32440  3F75  3DD7               	addwfc	___fladd@b+2,f
 32441  3F76  3000               	movlw	0
 32442  3F77  3DD8               	addwfc	___fladd@b+3,f
 32443  3F78  2F81               	goto	l2051
 32444  3F79                     l9126:
 32445  3F79  0859               	movf	___fladd@a,w
 32446  3F7A  02D5               	subwf	___fladd@b,f
 32447  3F7B  085A               	movf	___fladd@a+1,w
 32448  3F7C  3BD6               	subwfb	___fladd@b+1,f
 32449  3F7D  085B               	movf	___fladd@a+2,w
 32450  3F7E  3BD7               	subwfb	___fladd@b+2,f
 32451  3F7F  085C               	movf	___fladd@a+3,w
 32452  3F80  3BD8               	subwfb	___fladd@b+3,f
 32453  3F81                     l2051:
 32454  3F81  0858               	movf	___fladd@b+3,w
 32455  3F82  0457               	iorwf	___fladd@b+2,w
 32456  3F83  0456               	iorwf	___fladd@b+1,w
 32457  3F84  0455               	iorwf	___fladd@b,w
 32458  3F85  1D03               	skipz
 32459  3F86  2FA7               	goto	l9148
 32460  3F87  0868               	movf	___fladd@grs,w
 32461  3F88  1D03               	btfss	3,2
 32462  3F89  2FA7               	goto	l9148
 32463  3F8A  3000               	movlw	0
 32464  3F8B  00D8               	movwf	?___fladd+3
 32465  3F8C  3000               	movlw	0
 32466  3F8D  00D7               	movwf	?___fladd+2
 32467  3F8E  3000               	movlw	0
 32468  3F8F  00D6               	movwf	?___fladd+1
 32469  3F90  3000               	movlw	0
 32470  3F91  00D5               	movwf	?___fladd
 32471  3F92  0008               	return
 32472  3F93                     l9134:
 32473  3F93  3001               	movlw	1
 32474  3F94                     u9535:
 32475  3F94  35D5               	lslf	___fladd@b,f
 32476  3F95  0DD6               	rlf	___fladd@b+1,f
 32477  3F96  0DD7               	rlf	___fladd@b+2,f
 32478  3F97  0DD8               	rlf	___fladd@b+3,f
 32479  3F98  0B89               	decfsz	9,f
 32480  3F99  2F94               	goto	u9535
 32481  3F9A  1BE8               	btfsc	___fladd@grs,7
 32482  3F9B  1455               	bsf	___fladd@b,0
 32483  3F9C  1C68               	btfss	___fladd@grs,0
 32484  3F9D  2FA0               	goto	l9142
 32485  3F9E  1403               	setc
 32486  3F9F  2FA1               	goto	L16
 32487  3FA0                     l9142:
 32488  3FA0  1003               	clrc
 32489  3FA1                     L16:
 32490  3FA1  0DE8               	rlf	___fladd@grs,f
 32491  3FA2  0867               	movf	___fladd@bexp,w
 32492  3FA3  1903               	btfsc	3,2
 32493  3FA4  2FA7               	goto	l9148
 32494  3FA5  3001               	movlw	1
 32495  3FA6  02E7               	subwf	___fladd@bexp,f
 32496  3FA7                     l9148:
 32497  3FA7  1FD7               	btfss	___fladd@b+2,7
 32498  3FA8  2F93               	goto	l9134
 32499  3FA9                     l9150:
 32500  3FA9  01E6               	clrf	___fladd@aexp
 32501  3FAA  1FE8               	btfss	___fladd@grs,7
 32502  3FAB  2FB4               	goto	l9160
 32503  3FAC  0868               	movf	___fladd@grs,w
 32504  3FAD  397F               	andlw	127
 32505  3FAE  1903               	btfsc	3,2
 32506  3FAF  1855               	btfsc	___fladd@b,0
 32507  3FB0  2FB2               	goto	l9156
 32508  3FB1  2FB4               	goto	l9160
 32509  3FB2                     l9156:
 32510  3FB2  01E6               	clrf	___fladd@aexp
 32511  3FB3  0AE6               	incf	___fladd@aexp,f
 32512  3FB4                     l9160:
 32513  3FB4  0866               	movf	___fladd@aexp,w
 32514  3FB5  1903               	btfsc	3,2
 32515  3FB6  2FE0               	goto	l2064
 32516  3FB7  3001               	movlw	1
 32517  3FB8  07D5               	addwf	___fladd@b,f
 32518  3FB9  3000               	movlw	0
 32519  3FBA  3DD6               	addwfc	___fladd@b+1,f
 32520  3FBB  3000               	movlw	0
 32521  3FBC  3DD7               	addwfc	___fladd@b+2,f
 32522  3FBD  3000               	movlw	0
 32523  3FBE  3DD8               	addwfc	___fladd@b+3,f
 32524  3FBF  1C58               	btfss	___fladd@b+3,0
 32525  3FC0  2FE0               	goto	l2064
 32526  3FC1  0855               	movf	___fladd@b,w
 32527  3FC2  00DD               	movwf	??___fladd
 32528  3FC3  0856               	movf	___fladd@b+1,w
 32529  3FC4  00DE               	movwf	??___fladd+1
 32530  3FC5  0857               	movf	___fladd@b+2,w
 32531  3FC6  00DF               	movwf	??___fladd+2
 32532  3FC7  0858               	movf	___fladd@b+3,w
 32533  3FC8  00E0               	movwf	??___fladd+3
 32534  3FC9  3001               	movlw	1
 32535  3FCA  00E1               	movwf	??___fladd+4
 32536  3FCB                     u9635:
 32537  3FCB  37E0               	asrf	??___fladd+3,f
 32538  3FCC  0CDF               	rrf	??___fladd+2,f
 32539  3FCD  0CDE               	rrf	??___fladd+1,f
 32540  3FCE  0CDD               	rrf	??___fladd,f
 32541  3FCF  0BE1               	decfsz	??___fladd+4,f
 32542  3FD0  2FCB               	goto	u9635
 32543  3FD1  0860               	movf	??___fladd+3,w
 32544  3FD2  00D8               	movwf	___fladd@b+3
 32545  3FD3  085F               	movf	??___fladd+2,w
 32546  3FD4  00D7               	movwf	___fladd@b+2
 32547  3FD5  085E               	movf	??___fladd+1,w
 32548  3FD6  00D6               	movwf	___fladd@b+1
 32549  3FD7  085D               	movf	??___fladd,w
 32550  3FD8  00D5               	movwf	___fladd@b
 32551  3FD9  0A67               	incf	___fladd@bexp,w
 32552  3FDA  1903               	btfsc	3,2
 32553  3FDB  2FE0               	goto	l2064
 32554  3FDC  3001               	movlw	1
 32555  3FDD  00DD               	movwf	??___fladd
 32556  3FDE  085D               	movf	??___fladd,w
 32557  3FDF  07E7               	addwf	___fladd@bexp,f
 32558  3FE0                     l2064:
 32559  3FE0  0A67               	incf	___fladd@bexp,w
 32560  3FE1  1D03               	btfss	3,2
 32561  3FE2  0867               	movf	___fladd@bexp,w
 32562  3FE3  1D03               	btfss	3,2
 32563  3FE4  2FF0               	goto	l9178
 32564  3FE5  3000               	movlw	0
 32565  3FE6  00D8               	movwf	___fladd@b+3
 32566  3FE7  3000               	movlw	0
 32567  3FE8  00D7               	movwf	___fladd@b+2
 32568  3FE9  3000               	movlw	0
 32569  3FEA  00D6               	movwf	___fladd@b+1
 32570  3FEB  3000               	movlw	0
 32571  3FEC  00D5               	movwf	___fladd@b
 32572  3FED  0867               	movf	___fladd@bexp,w
 32573  3FEE  1903               	btfsc	3,2
 32574  3FEF  01E5               	clrf	___fladd@signs
 32575  3FF0                     l9178:
 32576  3FF0  1C67               	btfss	___fladd@bexp,0
 32577  3FF1  2FF4               	goto	l9182
 32578  3FF2  17D7               	bsf	___fladd@b+2,7
 32579  3FF3  2FF8               	goto	l2072
 32580  3FF4                     l9182:
 32581  3FF4  307F               	movlw	127
 32582  3FF5  00DD               	movwf	??___fladd
 32583  3FF6  085D               	movf	??___fladd,w
 32584  3FF7  05D7               	andwf	___fladd@b+2,f
 32585  3FF8                     l2072:
 32586  3FF8  3667               	lsrf	___fladd@bexp,w
 32587  3FF9  00DD               	movwf	??___fladd
 32588  3FFA  085D               	movf	??___fladd,w
 32589  3FFB  00D8               	movwf	___fladd@b+3
 32590  3FFC  1FE5               	btfss	___fladd@signs,7
 32591  3FFD  0008               	return
 32592  3FFE  17D8               	bsf	___fladd@b+3,7
 32593  3FFF  0008               	return
 32594  4000                     __end_of___fladd:
 32595                           
 32596                           	psect	text35
 32597  1C88                     __ptext35:	
 32598 ;; *************** function ___flneg *****************
 32599 ;; Defined at:
 32600 ;;		line 15 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;  f1              4    1[COMMON] unsigned char 
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  4    1[COMMON] unsigned char 
 32607 ;; Registers used:
 32608 ;;		wreg
 32609 ;; Tracked objects:
 32610 ;;		On entry : 3F/1
 32611 ;;		On exit  : 3F/1
 32612 ;;		Unchanged: 3F/0
 32613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32618 ;;Total ram usage:        4 bytes
 32619 ;; Hardware stack levels used: 1
 32620 ;; Hardware stack levels required when called: unknown (due to recursion)
 32621 ;; This function calls:
 32622 ;;		Nothing
 32623 ;; This function is called by:
 32624 ;;		__doprnt
 32625 ;; This function uses a non-reentrant model
 32626 ;;
 32627                           
 32628  1C88                     ___flneg:	
 32629                           ;psect for function ___flneg
 32630                           
 32631                           
 32632                           ;incstack = 0
 32633                           ; Regs used in ___flneg: [wreg]
 32634  1C88  0874               	movf	___flneg@f1+3,w
 32635  1C89  0473               	iorwf	___flneg@f1+2,w
 32636  1C8A  0472               	iorwf	___flneg@f1+1,w
 32637  1C8B  0471               	iorwf	___flneg@f1,w
 32638  1C8C  1903               	skipnz
 32639  1C8D  0008               	return
 32640  1C8E  3080               	movlw	128
 32641  1C8F  06F4               	xorwf	___flneg@f1+3,f
 32642  1C90  0008               	return
 32643  1C91                     __end_of___flneg:
 32644                           
 32645                           	psect	text36
 32646  54A0                     __ptext36:	
 32647 ;; *************** function ___fleq *****************
 32648 ;; Defined at:
 32649 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
 32650 ;; Parameters:    Size  Location     Type
 32651 ;;  ff1             4    1[COMMON] unsigned char 
 32652 ;;  ff2             4    5[COMMON] unsigned char 
 32653 ;; Auto vars:     Size  Location     Type
 32654 ;;		None
 32655 ;; Return value:  Size  Location     Type
 32656 ;;		None               void
 32657 ;; Registers used:
 32658 ;;		wreg, status,2, status,0
 32659 ;; Tracked objects:
 32660 ;;		On entry : 3F/1
 32661 ;;		On exit  : 3F/0
 32662 ;;		Unchanged: 0/0
 32663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32667 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32668 ;;Total ram usage:       12 bytes
 32669 ;; Hardware stack levels used: 1
 32670 ;; Hardware stack levels required when called: unknown (due to recursion)
 32671 ;; This function calls:
 32672 ;;		Nothing
 32673 ;; This function is called by:
 32674 ;;		__doprnt
 32675 ;; This function uses a non-reentrant model
 32676 ;;
 32677                           
 32678  54A0                     ___fleq:	
 32679                           ;psect for function ___fleq
 32680                           
 32681                           
 32682                           ;incstack = 0
 32683                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 32684  54A0  3000               	movlw	0
 32685  54A1  0571               	andwf	___fleq@ff1,w
 32686  54A2  0140               	movlb	0	; select bank0
 32687  54A3  00A0               	movwf	??___fleq
 32688  54A4  3000               	movlw	0
 32689  54A5  0572               	andwf	___fleq@ff1+1,w
 32690  54A6  00A1               	movwf	??___fleq+1
 32691  54A7  3080               	movlw	128
 32692  54A8  0573               	andwf	___fleq@ff1+2,w
 32693  54A9  00A2               	movwf	??___fleq+2
 32694  54AA  307F               	movlw	127
 32695  54AB  0574               	andwf	___fleq@ff1+3,w
 32696  54AC  00A3               	movwf	??___fleq+3
 32697  54AD  0823               	movf	??___fleq+3,w
 32698  54AE  0422               	iorwf	??___fleq+2,w
 32699  54AF  0421               	iorwf	??___fleq+1,w
 32700  54B0  0420               	iorwf	??___fleq,w
 32701  54B1  1D03               	skipz
 32702  54B2  2CBB               	goto	l1906
 32703  54B3  3000               	movlw	0
 32704  54B4  00F4               	movwf	___fleq@ff1+3
 32705  54B5  3000               	movlw	0
 32706  54B6  00F3               	movwf	___fleq@ff1+2
 32707  54B7  3000               	movlw	0
 32708  54B8  00F2               	movwf	___fleq@ff1+1
 32709  54B9  3000               	movlw	0
 32710  54BA  00F1               	movwf	___fleq@ff1
 32711  54BB                     l1906:
 32712  54BB  3000               	movlw	0
 32713  54BC  0575               	andwf	___fleq@ff2,w
 32714  54BD  00A0               	movwf	??___fleq
 32715  54BE  3000               	movlw	0
 32716  54BF  0576               	andwf	___fleq@ff2+1,w
 32717  54C0  00A1               	movwf	??___fleq+1
 32718  54C1  3080               	movlw	128
 32719  54C2  0577               	andwf	___fleq@ff2+2,w
 32720  54C3  00A2               	movwf	??___fleq+2
 32721  54C4  307F               	movlw	127
 32722  54C5  0578               	andwf	___fleq@ff2+3,w
 32723  54C6  00A3               	movwf	??___fleq+3
 32724  54C7  0823               	movf	??___fleq+3,w
 32725  54C8  0422               	iorwf	??___fleq+2,w
 32726  54C9  0421               	iorwf	??___fleq+1,w
 32727  54CA  0420               	iorwf	??___fleq,w
 32728  54CB  1D03               	skipz
 32729  54CC  2CD5               	goto	l1907
 32730  54CD  3000               	movlw	0
 32731  54CE  00F8               	movwf	___fleq@ff2+3
 32732  54CF  3000               	movlw	0
 32733  54D0  00F7               	movwf	___fleq@ff2+2
 32734  54D1  3000               	movlw	0
 32735  54D2  00F6               	movwf	___fleq@ff2+1
 32736  54D3  3000               	movlw	0
 32737  54D4  00F5               	movwf	___fleq@ff2
 32738  54D5                     l1907:
 32739  54D5  0878               	movf	___fleq@ff2+3,w
 32740  54D6  0674               	xorwf	___fleq@ff1+3,w
 32741  54D7  1D03               	skipz
 32742  54D8  2CE3               	goto	u10315
 32743  54D9  0877               	movf	___fleq@ff2+2,w
 32744  54DA  0673               	xorwf	___fleq@ff1+2,w
 32745  54DB  1D03               	skipz
 32746  54DC  2CE3               	goto	u10315
 32747  54DD  0876               	movf	___fleq@ff2+1,w
 32748  54DE  0672               	xorwf	___fleq@ff1+1,w
 32749  54DF  1D03               	skipz
 32750  54E0  2CE3               	goto	u10315
 32751  54E1  0875               	movf	___fleq@ff2,w
 32752  54E2  0671               	xorwf	___fleq@ff1,w
 32753  54E3                     u10315:
 32754  54E3  1903               	skipnz
 32755  54E4  2CE7               	goto	l9474
 32756  54E5  1003               	clrc
 32757  54E6  0008               	return
 32758  54E7                     l9474:
 32759  54E7  1403               	setc
 32760  54E8  0008               	return
 32761  54E9                     __end_of___fleq:
 32762                           
 32763                           	psect	text37
 32764  43BC                     __ptext37:	
 32765 ;; *************** function _getValueCMD *****************
 32766 ;; Defined at:
 32767 ;;		line 42 in file "com.c"
 32768 ;; Parameters:    Size  Location     Type
 32769 ;;  cmd             1    wreg     enum E12787
 32770 ;; Auto vars:     Size  Location     Type
 32771 ;;  cmd             1   72[BANK0 ] enum E12787
 32772 ;;  value           4   73[BANK0 ] unsigned long 
 32773 ;; Return value:  Size  Location     Type
 32774 ;;                  4   64[BANK0 ] unsigned long 
 32775 ;; Registers used:
 32776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 32777 ;; Tracked objects:
 32778 ;;		On entry : 3F/1
 32779 ;;		On exit  : 3F/0
 32780 ;;		Unchanged: 0/0
 32781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32783 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32785 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32786 ;;Total ram usage:       13 bytes
 32787 ;; Hardware stack levels used: 1
 32788 ;; Hardware stack levels required when called: unknown (due to recursion)
 32789 ;; This function calls:
 32790 ;;		___fldiv
 32791 ;;		___flmul
 32792 ;;		___fltol
 32793 ;;		___lldiv
 32794 ;; This function is called by:
 32795 ;;		_sendCMD
 32796 ;;		_exeSerial
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800  43BC                     _getValueCMD:	
 32801                           ;psect for function _getValueCMD
 32802                           
 32803                           
 32804                           ;incstack = 0
 32805                           ; Regs used in _getValueCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 32806                           ;getValueCMD@cmd stored from wreg
 32807  43BC  0140               	movlb	0	; select bank0
 32808  43BD  00E8               	movwf	getValueCMD@cmd
 32809                           
 32810                           ;com.c: 43: ulong value = 0;
 32811  43BE  3000               	movlw	0
 32812  43BF  00EC               	movwf	getValueCMD@value+3
 32813  43C0  3000               	movlw	0
 32814  43C1  00EB               	movwf	getValueCMD@value+2
 32815  43C2  3000               	movlw	0
 32816  43C3  00EA               	movwf	getValueCMD@value+1
 32817  43C4  3000               	movlw	0
 32818  43C5  00E9               	movwf	getValueCMD@value
 32819                           
 32820                           ;com.c: 44: switch(cmd){
 32821  43C6  2CCD               	goto	l10814
 32822  43C7                     l10772:
 32823                           
 32824                           ;com.c: 46: value = (ulong)oscCfg.status.INV.set.value;
 32825  43C7  0145               	movlb	5	; select bank5
 32826  43C8  083E               	movf	(_oscCfg^(0+640)+30),w
 32827  43C9  0140               	movlb	0	; select bank0
 32828  43CA  00E9               	movwf	getValueCMD@value
 32829  43CB  0145               	movlb	5	; select bank5
 32830  43CC  083F               	movf	((_oscCfg+1)^(0+640)+30),w
 32831  43CD  2CBF               	goto	L30
 32832  43CE                     l10774:	
 32833                           ;com.c: 47: break;
 32834                           
 32835                           
 32836                           ;com.c: 49: value = (ulong)oscCfg.Freq;
 32837  43CE  0145               	movlb	5	; select bank5
 32838  43CF  0820               	movf	_oscCfg^(0+640),w
 32839  43D0  0140               	movlb	0	; select bank0
 32840  43D1  00E9               	movwf	getValueCMD@value
 32841  43D2  0145               	movlb	5	; select bank5
 32842  43D3  0821               	movf	(_oscCfg+1)^(0+640),w
 32843  43D4  2CBF               	goto	L30
 32844  43D5                     l10776:	
 32845                           ;com.c: 50: break;
 32846                           
 32847                           
 32848                           ;com.c: 55: value = oscCfg.Potencia;
 32849  43D5  3002               	movlw	2
 32850  43D6  3EA0               	addlw	(low (_oscCfg| (0+512)))& (0+255)
 32851  43D7  0086               	movwf	6
 32852  43D8  3002               	movlw	2	; select bank5/6
 32853  43D9  0087               	movwf	7
 32854  43DA  3F40               	moviw [0]fsr1
 32855  43DB  00E9               	movwf	getValueCMD@value
 32856  43DC  3F41               	moviw [1]fsr1
 32857  43DD  00EA               	movwf	getValueCMD@value+1
 32858  43DE  3F42               	moviw [2]fsr1
 32859  43DF  00EB               	movwf	getValueCMD@value+2
 32860  43E0  3F43               	moviw [3]fsr1
 32861  43E1  2BF5               	goto	L19
 32862  43E2                     l10778:	
 32863                           ;com.c: 56: break;
 32864                           
 32865                           
 32866                           ;com.c: 58: value = (ulong)pot.Potencia;
 32867  43E2  0144               	movlb	4	; select bank4
 32868  43E3  0828               	movf	(_pot^(0+512)+8),w	;volatile
 32869  43E4  0140               	movlb	0	; select bank0
 32870  43E5  00E9               	movwf	getValueCMD@value
 32871  43E6  0144               	movlb	4	; select bank4
 32872  43E7  0829               	movf	((_pot+1)^(0+512)+8),w	;volatile
 32873  43E8  2CBF               	goto	L30
 32874  43E9                     l10780:	
 32875                           ;com.c: 59: break;
 32876                           
 32877                           
 32878                           ;com.c: 61: value = (ulong)pot.PotenciaAcu;
 32879  43E9  3004               	movlw	4
 32880  43EA  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 32881  43EB  0086               	movwf	6
 32882  43EC  3002               	movlw	2	; select bank4/5
 32883  43ED  0087               	movwf	7
 32884  43EE  3F40               	moviw [0]fsr1
 32885  43EF  00E9               	movwf	getValueCMD@value
 32886  43F0  3F41               	moviw [1]fsr1
 32887  43F1  00EA               	movwf	getValueCMD@value+1
 32888  43F2  3F42               	moviw [2]fsr1
 32889  43F3  00EB               	movwf	getValueCMD@value+2
 32890  43F4  3F43               	moviw [3]fsr1
 32891  43F5                     L19:
 32892  43F5  00EC               	movwf	getValueCMD@value+3
 32893                           
 32894                           ;com.c: 62: break;
 32895  43F6  2D0E               	goto	l10816
 32896  43F7                     l10782:
 32897                           
 32898                           ;com.c: 64: value = (ulong)pot.PotenciaAcuLimit/100;
 32899  43F7  3000               	movlw	0
 32900  43F8  00F4               	movwf	___lldiv@divisor+3
 32901  43F9  3000               	movlw	0
 32902  43FA  00F3               	movwf	___lldiv@divisor+2
 32903  43FB  3000               	movlw	0
 32904  43FC  00F2               	movwf	___lldiv@divisor+1
 32905  43FD  3064               	movlw	100
 32906  43FE  00F1               	movwf	___lldiv@divisor
 32907  43FF  0144               	movlb	4	; select bank4
 32908  4400  0823               	movf	(_pot+3)^(0+512),w	;volatile
 32909  4401  00F8               	movwf	___lldiv@dividend+3
 32910  4402  0822               	movf	(_pot+2)^(0+512),w	;volatile
 32911  4403  00F7               	movwf	___lldiv@dividend+2
 32912  4404  0821               	movf	(_pot+1)^(0+512),w	;volatile
 32913  4405  00F6               	movwf	___lldiv@dividend+1
 32914  4406  0820               	movf	_pot^(0+512),w	;volatile
 32915  4407  00F5               	movwf	___lldiv@dividend
 32916  4408  31A0  200A  31C3   	fcall	___lldiv
 32917  440B  0874               	movf	?___lldiv+3,w
 32918  440C  00EC               	movwf	getValueCMD@value+3
 32919  440D  0873               	movf	?___lldiv+2,w
 32920  440E  00EB               	movwf	getValueCMD@value+2
 32921  440F  0872               	movf	?___lldiv+1,w
 32922  4410  00EA               	movwf	getValueCMD@value+1
 32923  4411  0871               	movf	?___lldiv,w
 32924  4412  2CCB               	goto	L31
 32925  4413                     l10784:	
 32926                           ;com.c: 65: break;
 32927                           
 32928                           
 32929                           ;com.c: 67: value = (ulong)(pot.Kcap*1000000.0);
 32930  4413  301A               	movlw	26
 32931  4414  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 32932  4415  0086               	movwf	6
 32933  4416  3002               	movlw	2	; select bank4/5
 32934  4417  0087               	movwf	7
 32935  4418  3F40               	moviw [0]fsr1
 32936  4419  00AA               	movwf	___flmul@a
 32937  441A  3F41               	moviw [1]fsr1
 32938  441B  00AB               	movwf	___flmul@a+1
 32939  441C  3F42               	moviw [2]fsr1
 32940  441D  00AC               	movwf	___flmul@a+2
 32941  441E  3F43               	moviw [3]fsr1
 32942  441F  00AD               	movwf	___flmul@a+3
 32943  4420  3049               	movlw	73
 32944  4421  00A9               	movwf	___flmul@b+3
 32945  4422  3074               	movlw	116
 32946  4423  00A8               	movwf	___flmul@b+2
 32947  4424  3024               	movlw	36
 32948  4425  2C80               	goto	L41
 32949  4426                     l10786:	
 32950                           ;com.c: 68: break;
 32951                           
 32952                           
 32953                           ;com.c: 70: value = (ulong)(pot.Kus*1000.0);
 32954  4426  3016               	movlw	22
 32955  4427  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 32956  4428  0086               	movwf	6
 32957  4429  3002               	movlw	2	; select bank4/5
 32958  442A  0087               	movwf	7
 32959  442B  3F40               	moviw [0]fsr1
 32960  442C  00AA               	movwf	___flmul@a
 32961  442D  3F41               	moviw [1]fsr1
 32962  442E  00AB               	movwf	___flmul@a+1
 32963  442F  3F42               	moviw [2]fsr1
 32964  4430  00AC               	movwf	___flmul@a+2
 32965  4431  3F43               	moviw [3]fsr1
 32966  4432  2C7A               	goto	L40
 32967  4433                     l10788:	
 32968                           ;com.c: 71: break;
 32969                           
 32970                           
 32971                           ;com.c: 73: value = (ulong)(pot.Ratio*1000.0);
 32972  4433  3012               	movlw	18
 32973  4434  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 32974  4435  0086               	movwf	6
 32975  4436  3002               	movlw	2	; select bank4/5
 32976  4437  0087               	movwf	7
 32977  4438  3F40               	moviw [0]fsr1
 32978  4439  00AA               	movwf	___flmul@a
 32979  443A  3F41               	moviw [1]fsr1
 32980  443B  00AB               	movwf	___flmul@a+1
 32981  443C  3F42               	moviw [2]fsr1
 32982  443D  00AC               	movwf	___flmul@a+2
 32983  443E  3F43               	moviw [3]fsr1
 32984  443F  2C7A               	goto	L40
 32985  4440                     l10790:	
 32986                           ;com.c: 74: break;
 32987                           
 32988                           
 32989                           ;com.c: 76: value = (ulong)(pot.MaxVout/2);
 32990  4440  302A               	movlw	42
 32991  4441  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 32992  4442  0086               	movwf	6
 32993  4443  3002               	movlw	2	; select bank4/5
 32994  4444  0087               	movwf	7
 32995  4445  3F40               	moviw [0]fsr1
 32996  4446  00AA               	movwf	___fldiv@b
 32997  4447  3F41               	moviw [1]fsr1
 32998  4448  00AB               	movwf	___fldiv@b+1
 32999  4449  3F42               	moviw [2]fsr1
 33000  444A  00AC               	movwf	___fldiv@b+2
 33001  444B  3F43               	moviw [3]fsr1
 33002  444C  00AD               	movwf	___fldiv@b+3
 33003  444D  3040               	movlw	64
 33004  444E  00A9               	movwf	___fldiv@a+3
 33005  444F  3000               	movlw	0
 33006  4450  00A8               	movwf	___fldiv@a+2
 33007  4451  3000               	movlw	0
 33008  4452  00A7               	movwf	___fldiv@a+1
 33009  4453  3000               	movlw	0
 33010  4454  00A6               	movwf	___fldiv@a
 33011  4455  31C6  2687  31C3   	fcall	___fldiv
 33012  4458  0829               	movf	?___fldiv+3,w
 33013  4459  00D8               	movwf	___fltol@f1+3
 33014  445A  0828               	movf	?___fldiv+2,w
 33015  445B  00D7               	movwf	___fltol@f1+2
 33016  445C  0827               	movf	?___fldiv+1,w
 33017  445D  00D6               	movwf	___fltol@f1+1
 33018  445E  0826               	movf	?___fldiv,w
 33019  445F  2C8D               	goto	L38
 33020  4460                     l10792:	
 33021                           ;com.c: 77: break;
 33022                           
 33023                           
 33024                           ;com.c: 79: value = (ulong)pot.Vout;
 33025  4460  3022               	movlw	34
 33026  4461  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 33027  4462  0086               	movwf	6
 33028  4463  3002               	movlw	2	; select bank4/5
 33029  4464  0087               	movwf	7
 33030  4465  3F40               	moviw [0]fsr1
 33031  4466  00D5               	movwf	___fltol@f1
 33032  4467  3F41               	moviw [1]fsr1
 33033  4468  00D6               	movwf	___fltol@f1+1
 33034  4469  3F42               	moviw [2]fsr1
 33035  446A  00D7               	movwf	___fltol@f1+2
 33036  446B  3F43               	moviw [3]fsr1
 33037  446C  00D8               	movwf	___fltol@f1+3
 33038  446D  2C8E               	goto	L39
 33039  446E                     l10794:	
 33040                           ;com.c: 80: break;
 33041                           
 33042                           
 33043                           ;com.c: 82: value = (ulong)(pot.Iout*1000.0);
 33044  446E  301E               	movlw	30
 33045  446F  3E20               	addlw	(low (_pot| (0+512)))& (0+255)
 33046  4470  0086               	movwf	6
 33047  4471  3002               	movlw	2	; select bank4/5
 33048  4472  0087               	movwf	7
 33049  4473  3F40               	moviw [0]fsr1
 33050  4474  00AA               	movwf	___flmul@a
 33051  4475  3F41               	moviw [1]fsr1
 33052  4476  00AB               	movwf	___flmul@a+1
 33053  4477  3F42               	moviw [2]fsr1
 33054  4478  00AC               	movwf	___flmul@a+2
 33055  4479  3F43               	moviw [3]fsr1
 33056  447A                     L40:
 33057  447A  00AD               	movwf	___flmul@a+3
 33058  447B  3044               	movlw	68
 33059  447C  00A9               	movwf	___flmul@b+3
 33060  447D  307A               	movlw	122
 33061  447E  00A8               	movwf	___flmul@b+2
 33062  447F  3000               	movlw	0
 33063  4480                     L41:
 33064  4480  00A7               	movwf	___flmul@b+1
 33065  4481  3000               	movlw	0
 33066  4482  00A6               	movwf	___flmul@b
 33067  4483  31B1  2135  31C3   	fcall	___flmul
 33068  4486  0829               	movf	?___flmul+3,w
 33069  4487  00D8               	movwf	___fltol@f1+3
 33070  4488  0828               	movf	?___flmul+2,w
 33071  4489  00D7               	movwf	___fltol@f1+2
 33072  448A  0827               	movf	?___flmul+1,w
 33073  448B  00D6               	movwf	___fltol@f1+1
 33074  448C  0826               	movf	?___flmul,w
 33075  448D                     L38:
 33076  448D  00D5               	movwf	___fltol@f1
 33077  448E                     L39:
 33078  448E  31D5  25E8  31C3   	fcall	___fltol
 33079  4491  0858               	movf	?___fltol+3,w
 33080  4492  00EC               	movwf	getValueCMD@value+3
 33081  4493  0857               	movf	?___fltol+2,w
 33082  4494  00EB               	movwf	getValueCMD@value+2
 33083  4495  0856               	movf	?___fltol+1,w
 33084  4496  00EA               	movwf	getValueCMD@value+1
 33085  4497  0855               	movf	?___fltol,w
 33086  4498  2CCB               	goto	L31
 33087  4499                     l10796:	
 33088                           ;com.c: 83: break;
 33089                           
 33090                           
 33091                           ;com.c: 85: value = (ulong)pot.Vbus;
 33092  4499  0144               	movlb	4	; select bank4
 33093  449A  0830               	movf	(_pot^(0+512)+16),w	;volatile
 33094  449B  0140               	movlb	0	; select bank0
 33095  449C  00E9               	movwf	getValueCMD@value
 33096  449D  0144               	movlb	4	; select bank4
 33097  449E  0831               	movf	((_pot+1)^(0+512)+16),w	;volatile
 33098  449F  2CBF               	goto	L30
 33099  44A0                     l10798:	
 33100                           ;com.c: 86: break;
 33101                           
 33102                           
 33103                           ;com.c: 88: value = (ulong)oscCfg.stepInicial.amp;
 33104  44A0  0145               	movlb	5	; select bank5
 33105  44A1  0826               	movf	(_oscCfg^(0+640)+6),w
 33106  44A2  2CAC               	goto	L37
 33107  44A3                     l10800:	
 33108                           ;com.c: 89: break;
 33109                           
 33110                           
 33111                           ;com.c: 91: value = (ulong)oscCfg.stepInicial.ms;
 33112  44A3  0145               	movlb	5	; select bank5
 33113  44A4  0827               	movf	(_oscCfg^(0+640)+7),w
 33114  44A5  0140               	movlb	0	; select bank0
 33115  44A6  00E9               	movwf	getValueCMD@value
 33116  44A7  0145               	movlb	5	; select bank5
 33117  44A8  0828               	movf	((_oscCfg+1)^(0+640)+7),w
 33118  44A9  2CBF               	goto	L30
 33119  44AA                     l10802:	
 33120                           ;com.c: 92: break;
 33121                           
 33122                           
 33123                           ;com.c: 94: value = (ulong)oscCfg.stepOperacao.amp;
 33124  44AA  0145               	movlb	5	; select bank5
 33125  44AB  082C               	movf	(_oscCfg^(0+640)+12),w
 33126  44AC                     L37:
 33127  44AC  0140               	movlb	0	; select bank0
 33128  44AD  00E4               	movwf	??_getValueCMD
 33129  44AE  01E5               	clrf	??_getValueCMD+1
 33130  44AF  01E6               	clrf	??_getValueCMD+2
 33131  44B0  01E7               	clrf	??_getValueCMD+3
 33132  44B1  0867               	movf	??_getValueCMD+3,w
 33133  44B2  00EC               	movwf	getValueCMD@value+3
 33134  44B3  0866               	movf	??_getValueCMD+2,w
 33135  44B4  00EB               	movwf	getValueCMD@value+2
 33136  44B5  0865               	movf	??_getValueCMD+1,w
 33137  44B6  00EA               	movwf	getValueCMD@value+1
 33138  44B7  0864               	movf	??_getValueCMD,w
 33139  44B8  2CCB               	goto	L31
 33140  44B9                     l10804:	
 33141                           ;com.c: 95: break;
 33142                           
 33143                           
 33144                           ;com.c: 97: value = (ulong)oscCfg.stepOperacao.ms;
 33145  44B9  0145               	movlb	5	; select bank5
 33146  44BA  082D               	movf	(_oscCfg^(0+640)+13),w
 33147  44BB  0140               	movlb	0	; select bank0
 33148  44BC  00E9               	movwf	getValueCMD@value
 33149  44BD  0145               	movlb	5	; select bank5
 33150  44BE  082E               	movf	((_oscCfg+1)^(0+640)+13),w
 33151  44BF                     L30:
 33152  44BF  0140               	movlb	0	; select bank0
 33153  44C0  00EA               	movwf	getValueCMD@value+1
 33154  44C1  01EB               	clrf	getValueCMD@value+2
 33155  44C2  01EC               	clrf	getValueCMD@value+3
 33156                           
 33157                           ;com.c: 98: break;
 33158  44C3  2D0E               	goto	l10816
 33159  44C4                     l10806:
 33160                           
 33161                           ;com.c: 100: value = 0;
 33162  44C4  3000               	movlw	0
 33163  44C5  00EC               	movwf	getValueCMD@value+3
 33164  44C6  3000               	movlw	0
 33165  44C7  00EB               	movwf	getValueCMD@value+2
 33166  44C8  3000               	movlw	0
 33167  44C9  00EA               	movwf	getValueCMD@value+1
 33168  44CA  3000               	movlw	0
 33169  44CB                     L31:
 33170  44CB  00E9               	movwf	getValueCMD@value
 33171                           
 33172                           ;com.c: 101: break;
 33173  44CC  2D0E               	goto	l10816
 33174  44CD                     l10814:
 33175  44CD  0868               	movf	getValueCMD@cmd,w
 33176                           
 33177                           ; Switch size 1, requested type "simple"
 33178                           ; Number of cases is 21, Range of values is 65 to 87
 33179                           ; switch strategies available:
 33180                           ; Name         Instructions Cycles
 33181                           ; direct_byte           55     9 (fixed)
 33182                           ; simple_byte           64    33 (average)
 33183                           ; jumptable            263     9 (fixed)
 33184                           ;	Chosen strategy is simple_byte
 33185  44CE  3A41               	xorlw	65	; case 65
 33186  44CF  1903               	skipnz
 33187  44D0  2BC7               	goto	l10772
 33188  44D1  3A02               	xorlw	2	; case 67
 33189  44D2  1903               	skipnz
 33190  44D3  2BCE               	goto	l10774
 33191  44D4  3A07               	xorlw	7	; case 68
 33192  44D5  1903               	skipnz
 33193  44D6  2D0E               	goto	l10816
 33194  44D7  3A01               	xorlw	1	; case 69
 33195  44D8  1903               	skipnz
 33196  44D9  2BD5               	goto	l10776
 33197  44DA  3A03               	xorlw	3	; case 70
 33198  44DB  1903               	skipnz
 33199  44DC  2BE2               	goto	l10778
 33200  44DD  3A01               	xorlw	1	; case 71
 33201  44DE  1903               	skipnz
 33202  44DF  2BE9               	goto	l10780
 33203  44E0  3A0F               	xorlw	15	; case 72
 33204  44E1  1903               	skipnz
 33205  44E2  2BF7               	goto	l10782
 33206  44E3  3A01               	xorlw	1	; case 73
 33207  44E4  1903               	skipnz
 33208  44E5  2C13               	goto	l10784
 33209  44E6  3A03               	xorlw	3	; case 74
 33210  44E7  1903               	skipnz
 33211  44E8  2C26               	goto	l10786
 33212  44E9  3A01               	xorlw	1	; case 75
 33213  44EA  1903               	skipnz
 33214  44EB  2C33               	goto	l10788
 33215  44EC  3A07               	xorlw	7	; case 76
 33216  44ED  1903               	skipnz
 33217  44EE  2C40               	goto	l10790
 33218  44EF  3A01               	xorlw	1	; case 77
 33219  44F0  1903               	skipnz
 33220  44F1  2C60               	goto	l10792
 33221  44F2  3A03               	xorlw	3	; case 78
 33222  44F3  1903               	skipnz
 33223  44F4  2C6E               	goto	l10794
 33224  44F5  3A01               	xorlw	1	; case 79
 33225  44F6  1903               	skipnz
 33226  44F7  2C99               	goto	l10796
 33227  44F8  3A1F               	xorlw	31	; case 80
 33228  44F9  1903               	skipnz
 33229  44FA  2CA0               	goto	l10798
 33230  44FB  3A01               	xorlw	1	; case 81
 33231  44FC  1903               	skipnz
 33232  44FD  2CA3               	goto	l10800
 33233  44FE  3A03               	xorlw	3	; case 82
 33234  44FF  1903               	skipnz
 33235  4500  2CAA               	goto	l10802
 33236  4501  3A01               	xorlw	1	; case 83
 33237  4502  1903               	skipnz
 33238  4503  2CB9               	goto	l10804
 33239  4504  3A06               	xorlw	6	; case 85
 33240  4505  1903               	skipnz
 33241  4506  2CC4               	goto	l10806
 33242  4507  3A03               	xorlw	3	; case 86
 33243  4508  1903               	skipnz
 33244  4509  2CC4               	goto	l10806
 33245  450A  3A01               	xorlw	1	; case 87
 33246  450B  1903               	skipnz
 33247  450C  2CC4               	goto	l10806
 33248  450D  2D16               	goto	l1280
 33249  450E                     l10816:
 33250                           
 33251                           ;com.c: 111: return value;
 33252  450E  086C               	movf	getValueCMD@value+3,w
 33253  450F  00E3               	movwf	?_getValueCMD+3
 33254  4510  086B               	movf	getValueCMD@value+2,w
 33255  4511  00E2               	movwf	?_getValueCMD+2
 33256  4512  086A               	movf	getValueCMD@value+1,w
 33257  4513  00E1               	movwf	?_getValueCMD+1
 33258  4514  0869               	movf	getValueCMD@value,w
 33259  4515  00E0               	movwf	?_getValueCMD
 33260  4516                     l1280:
 33261  4516  0008               	return
 33262  4517                     __end_of_getValueCMD:
 33263                           
 33264                           	psect	text38
 33265  200A                     __ptext38:	
 33266 ;; *************** function ___lldiv *****************
 33267 ;; Defined at:
 33268 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
 33269 ;; Parameters:    Size  Location     Type
 33270 ;;  divisor         4    1[COMMON] unsigned long 
 33271 ;;  dividend        4    5[COMMON] unsigned long 
 33272 ;; Auto vars:     Size  Location     Type
 33273 ;;  quotient        4    0[BANK0 ] unsigned long 
 33274 ;;  counter         1    4[BANK0 ] unsigned char 
 33275 ;; Return value:  Size  Location     Type
 33276 ;;                  4    1[COMMON] unsigned long 
 33277 ;; Registers used:
 33278 ;;		wreg, status,2, status,0
 33279 ;; Tracked objects:
 33280 ;;		On entry : 3A/1
 33281 ;;		On exit  : 3F/0
 33282 ;;		Unchanged: 0/0
 33283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33284 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33285 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33287 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33288 ;;Total ram usage:       14 bytes
 33289 ;; Hardware stack levels used: 1
 33290 ;; Hardware stack levels required when called: unknown (due to recursion)
 33291 ;; This function calls:
 33292 ;;		Nothing
 33293 ;; This function is called by:
 33294 ;;		_getValueCMD
 33295 ;;		__doprnt
 33296 ;; This function uses a non-reentrant model
 33297 ;;
 33298                           
 33299  200A                     ___lldiv:	
 33300                           ;psect for function ___lldiv
 33301                           
 33302                           
 33303                           ;incstack = 0
 33304                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 33305  200A  3000               	movlw	0
 33306  200B  0140               	movlb	0	; select bank0
 33307  200C  00A3               	movwf	___lldiv@quotient+3
 33308  200D  3000               	movlw	0
 33309  200E  00A2               	movwf	___lldiv@quotient+2
 33310  200F  3000               	movlw	0
 33311  2010  00A1               	movwf	___lldiv@quotient+1
 33312  2011  3000               	movlw	0
 33313  2012  00A0               	movwf	___lldiv@quotient
 33314  2013  0874               	movf	___lldiv@divisor+3,w
 33315  2014  0473               	iorwf	___lldiv@divisor+2,w
 33316  2015  0472               	iorwf	___lldiv@divisor+1,w
 33317  2016  0471               	iorwf	___lldiv@divisor,w
 33318  2017  1903               	skipnz
 33319  2018  2854               	goto	l9422
 33320  2019  01A4               	clrf	___lldiv@counter
 33321  201A  0AA4               	incf	___lldiv@counter,f
 33322  201B                     l9408:
 33323  201B  1BF4               	btfsc	___lldiv@divisor+3,7
 33324  201C  2829               	goto	l9410
 33325  201D  3001               	movlw	1
 33326  201E                     u10135:
 33327  201E  35F1               	lslf	___lldiv@divisor,f
 33328  201F  0DF2               	rlf	___lldiv@divisor+1,f
 33329  2020  0DF3               	rlf	___lldiv@divisor+2,f
 33330  2021  0DF4               	rlf	___lldiv@divisor+3,f
 33331  2022  0B89               	decfsz	9,f
 33332  2023  281E               	goto	u10135
 33333  2024  3001               	movlw	1
 33334  2025  00F9               	movwf	??___lldiv
 33335  2026  0879               	movf	??___lldiv,w
 33336  2027  07A4               	addwf	___lldiv@counter,f
 33337  2028  281B               	goto	l9408
 33338  2029                     l9410:
 33339  2029  3001               	movlw	1
 33340  202A                     u10155:
 33341  202A  35A0               	lslf	___lldiv@quotient,f
 33342  202B  0DA1               	rlf	___lldiv@quotient+1,f
 33343  202C  0DA2               	rlf	___lldiv@quotient+2,f
 33344  202D  0DA3               	rlf	___lldiv@quotient+3,f
 33345  202E  0B89               	decfsz	9,f
 33346  202F  282A               	goto	u10155
 33347  2030  0874               	movf	___lldiv@divisor+3,w
 33348  2031  0278               	subwf	___lldiv@dividend+3,w
 33349  2032  1D03               	skipz
 33350  2033  283E               	goto	u10165
 33351  2034  0873               	movf	___lldiv@divisor+2,w
 33352  2035  0277               	subwf	___lldiv@dividend+2,w
 33353  2036  1D03               	skipz
 33354  2037  283E               	goto	u10165
 33355  2038  0872               	movf	___lldiv@divisor+1,w
 33356  2039  0276               	subwf	___lldiv@dividend+1,w
 33357  203A  1D03               	skipz
 33358  203B  283E               	goto	u10165
 33359  203C  0871               	movf	___lldiv@divisor,w
 33360  203D  0275               	subwf	___lldiv@dividend,w
 33361  203E                     u10165:
 33362  203E  1C03               	skipc
 33363  203F  2849               	goto	l9418
 33364  2040  0871               	movf	___lldiv@divisor,w
 33365  2041  02F5               	subwf	___lldiv@dividend,f
 33366  2042  0872               	movf	___lldiv@divisor+1,w
 33367  2043  3BF6               	subwfb	___lldiv@dividend+1,f
 33368  2044  0873               	movf	___lldiv@divisor+2,w
 33369  2045  3BF7               	subwfb	___lldiv@dividend+2,f
 33370  2046  0874               	movf	___lldiv@divisor+3,w
 33371  2047  3BF8               	subwfb	___lldiv@dividend+3,f
 33372  2048  1420               	bsf	___lldiv@quotient,0
 33373  2049                     l9418:
 33374  2049  3001               	movlw	1
 33375  204A                     u10175:
 33376  204A  36F4               	lsrf	___lldiv@divisor+3,f
 33377  204B  0CF3               	rrf	___lldiv@divisor+2,f
 33378  204C  0CF2               	rrf	___lldiv@divisor+1,f
 33379  204D  0CF1               	rrf	___lldiv@divisor,f
 33380  204E  0B89               	decfsz	9,f
 33381  204F  284A               	goto	u10175
 33382  2050  3001               	movlw	1
 33383  2051  02A4               	subwf	___lldiv@counter,f
 33384  2052  1D03               	btfss	3,2
 33385  2053  2829               	goto	l9410
 33386  2054                     l9422:
 33387  2054  0823               	movf	___lldiv@quotient+3,w
 33388  2055  00F4               	movwf	?___lldiv+3
 33389  2056  0822               	movf	___lldiv@quotient+2,w
 33390  2057  00F3               	movwf	?___lldiv+2
 33391  2058  0821               	movf	___lldiv@quotient+1,w
 33392  2059  00F2               	movwf	?___lldiv+1
 33393  205A  0820               	movf	___lldiv@quotient,w
 33394  205B  00F1               	movwf	?___lldiv
 33395  205C  0008               	return
 33396  205D                     __end_of___lldiv:
 33397                           
 33398                           	psect	text39
 33399  4EC9                     __ptext39:	
 33400 ;; *************** function _cncTeste *****************
 33401 ;; Defined at:
 33402 ;;		line 6 in file "cnc.c"
 33403 ;; Parameters:    Size  Location     Type
 33404 ;;		None
 33405 ;; Auto vars:     Size  Location     Type
 33406 ;;		None
 33407 ;; Return value:  Size  Location     Type
 33408 ;;                  1    wreg      void 
 33409 ;; Registers used:
 33410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 33411 ;; Tracked objects:
 33412 ;;		On entry : 3D/2
 33413 ;;		On exit  : 0/0
 33414 ;;		Unchanged: 0/0
 33415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33417 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33418 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33419 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33420 ;;Total ram usage:        6 bytes
 33421 ;; Hardware stack levels used: 1
 33422 ;; Hardware stack levels required when called: unknown (due to recursion)
 33423 ;; This function calls:
 33424 ;;		_cncMoveTo
 33425 ;;		_convertMMtoSteps
 33426 ;;		_escreve_LCD
 33427 ;; This function is called by:
 33428 ;;		_main
 33429 ;; This function uses a non-reentrant model
 33430 ;;
 33431                           
 33432  4EC9                     _cncTeste:	
 33433                           ;psect for function _cncTeste
 33434                           
 33435                           
 33436                           ;cnc.c: 7: if(bt.value == 0x0C) return;
 33437                           
 33438                           ;incstack = 0
 33439                           ; Regs used in _cncTeste: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 33440  4EC9  300C               	movlw	12
 33441  4ECA  0142               	movlb	2	; select bank2
 33442  4ECB  0620               	xorwf	_bt^(0+256),w	;volatile
 33443  4ECC  1903               	btfsc	3,2
 33444  4ECD  0008               	return
 33445                           
 33446                           ;cnc.c: 8: escreve_LCD(1,1,"Moving");
 33447  4ECE  0140               	movlb	0	; select bank0
 33448  4ECF  01A0               	clrf	escreve_LCD@coluna
 33449  4ED0  0AA0               	incf	escreve_LCD@coluna,f
 33450  4ED1  3099               	movlw	low (STR_10| (0+32768))
 33451  4ED2  00A1               	movwf	escreve_LCD@str
 33452  4ED3  30E1               	movlw	high (STR_10| (0+32768))
 33453  4ED4  00A2               	movwf	escreve_LCD@str+1
 33454  4ED5  3001               	movlw	1
 33455  4ED6  31D2  22E7  31CE   	fcall	_escreve_LCD
 33456                           
 33457                           ;cnc.c: 9: escreve_LCD(2,1,"to Start");
 33458  4ED9  0140               	movlb	0	; select bank0
 33459  4EDA  01A0               	clrf	escreve_LCD@coluna
 33460  4EDB  0AA0               	incf	escreve_LCD@coluna,f
 33461  4EDC  3070               	movlw	low (STR_11| (0+32768))
 33462  4EDD  00A1               	movwf	escreve_LCD@str
 33463  4EDE  30E1               	movlw	high (STR_11| (0+32768))
 33464  4EDF  00A2               	movwf	escreve_LCD@str+1
 33465  4EE0  3002               	movlw	2
 33466  4EE1  31D2  22E7  31CE   	fcall	_escreve_LCD
 33467                           
 33468                           ;cnc.c: 10: cncMoveTo(convertMMtoSteps(150.10), 50.0,ACC_50); _delay((unsigned long)((10
      +                          0)*(20000000/4000.0)));
 33469  4EE4  3043               	movlw	67
 33470  4EE5  0140               	movlb	0	; select bank0
 33471  4EE6  00E3               	movwf	convertMMtoSteps@mm+3
 33472  4EE7  3016               	movlw	22
 33473  4EE8  00E2               	movwf	convertMMtoSteps@mm+2
 33474  4EE9  3019               	movlw	25
 33475  4EEA  00E1               	movwf	convertMMtoSteps@mm+1
 33476  4EEB  309A               	movlw	154
 33477  4EEC  00E0               	movwf	convertMMtoSteps@mm
 33478  4EED  31D1  21A0  31CE   	fcall	_convertMMtoSteps
 33479  4EF0  0863               	movf	?_convertMMtoSteps+3,w
 33480  4EF1  0141               	movlb	1	; select bank1
 33481  4EF2  00B7               	movwf	(_cncTeste$4354+3)^(0+128)
 33482  4EF3  0140               	movlb	0	; select bank0
 33483  4EF4  0862               	movf	?_convertMMtoSteps+2,w
 33484  4EF5  0141               	movlb	1	; select bank1
 33485  4EF6  00B6               	movwf	(_cncTeste$4354+2)^(0+128)
 33486  4EF7  0140               	movlb	0	; select bank0
 33487  4EF8  0861               	movf	?_convertMMtoSteps+1,w
 33488  4EF9  0141               	movlb	1	; select bank1
 33489  4EFA  00B5               	movwf	(_cncTeste$4354+1)^(0+128)
 33490  4EFB  0140               	movlb	0	; select bank0
 33491  4EFC  0860               	movf	?_convertMMtoSteps,w
 33492  4EFD  0141               	movlb	1	; select bank1
 33493  4EFE  00B4               	movwf	_cncTeste$4354^(0+128)
 33494                           
 33495                           ;cnc.c: 10: cncMoveTo(convertMMtoSteps(150.10), 50.0,ACC_50); _delay((unsigned long)((10
      +                          0)*(20000000/4000.0)));
 33496  4EFF  0837               	movf	(_cncTeste$4354+3)^(0+128),w
 33497  4F00  00AC               	movwf	(cncMoveTo@pos+3)^(0+128)
 33498  4F01  0836               	movf	(_cncTeste$4354+2)^(0+128),w
 33499  4F02  00AB               	movwf	(cncMoveTo@pos+2)^(0+128)
 33500  4F03  0835               	movf	(_cncTeste$4354+1)^(0+128),w
 33501  4F04  00AA               	movwf	(cncMoveTo@pos+1)^(0+128)
 33502  4F05  0834               	movf	_cncTeste$4354^(0+128),w
 33503  4F06  00A9               	movwf	cncMoveTo@pos^(0+128)
 33504  4F07  3042               	movlw	66
 33505  4F08  00B0               	movwf	(cncMoveTo@speed+3)^(0+128)
 33506  4F09  3048               	movlw	72
 33507  4F0A  00AF               	movwf	(cncMoveTo@speed+2)^(0+128)
 33508  4F0B  3000               	movlw	0
 33509  4F0C  00AE               	movwf	(cncMoveTo@speed+1)^(0+128)
 33510  4F0D  3000               	movlw	0
 33511  4F0E  00AD               	movwf	cncMoveTo@speed^(0+128)
 33512  4F0F  3003               	movlw	3
 33513  4F10  00B2               	movwf	??_cncTeste^(0+128)
 33514  4F11  0832               	movf	??_cncTeste^(0+128),w
 33515  4F12  00B1               	movwf	cncMoveTo@accel^(0+128)
 33516  4F13  31D4  24E9  31CE   	fcall	_cncMoveTo
 33517  4F16  3003               	movlw	3
 33518  4F17  0141               	movlb	1	; select bank1
 33519  4F18  00B3               	movwf	(??_cncTeste^(0+128)+1)
 33520  4F19  308A               	movlw	138
 33521  4F1A  00B2               	movwf	??_cncTeste^(0+128)
 33522  4F1B  3055               	movlw	85
 33523  4F1C                     u13037:
 33524  4F1C  0B89               	decfsz	9,f
 33525  4F1D  2F1C               	goto	u13037
 33526  4F1E  0BB2               	decfsz	??_cncTeste^(0+128),f
 33527  4F1F  2F1C               	goto	u13037
 33528  4F20  0BB3               	decfsz	(??_cncTeste^(0+128)+1),f
 33529  4F21  2F1C               	goto	u13037
 33530  4F22  3200               	nop2
 33531                           
 33532                           ;cnc.c: 12: if(bt.value == 0x0C) return;
 33533  4F23  300C               	movlw	12
 33534  4F24  0142               	movlb	2	; select bank2
 33535  4F25  0620               	xorwf	_bt^(0+256),w	;volatile
 33536  4F26  1903               	btfsc	3,2
 33537  4F27  0008               	return
 33538                           
 33539                           ;cnc.c: 13: escreve_LCD(1,1,"Moving");
 33540  4F28  0140               	movlb	0	; select bank0
 33541  4F29  01A0               	clrf	escreve_LCD@coluna
 33542  4F2A  0AA0               	incf	escreve_LCD@coluna,f
 33543  4F2B  3099               	movlw	low (STR_10| (0+32768))
 33544  4F2C  00A1               	movwf	escreve_LCD@str
 33545  4F2D  30E1               	movlw	high (STR_10| (0+32768))
 33546  4F2E  00A2               	movwf	escreve_LCD@str+1
 33547  4F2F  3001               	movlw	1
 33548  4F30  31D2  22E7  31CE   	fcall	_escreve_LCD
 33549                           
 33550                           ;cnc.c: 14: escreve_LCD(2,1,"Weld");
 33551  4F33  0140               	movlb	0	; select bank0
 33552  4F34  01A0               	clrf	escreve_LCD@coluna
 33553  4F35  0AA0               	incf	escreve_LCD@coluna,f
 33554  4F36  30A6               	movlw	low (STR_13| (0+32768))
 33555  4F37  00A1               	movwf	escreve_LCD@str
 33556  4F38  30E1               	movlw	high (STR_13| (0+32768))
 33557  4F39  00A2               	movwf	escreve_LCD@str+1
 33558  4F3A  3002               	movlw	2
 33559  4F3B  31D2  22E7  31CE   	fcall	_escreve_LCD
 33560                           
 33561                           ;cnc.c: 15: cncMoveTo(convertMMtoSteps(151.23), 5,ACC_3); _delay((unsigned long)((100)*(
      +                          20000000/4000.0)));
 33562  4F3E  3043               	movlw	67
 33563  4F3F  0140               	movlb	0	; select bank0
 33564  4F40  00E3               	movwf	convertMMtoSteps@mm+3
 33565  4F41  3017               	movlw	23
 33566  4F42  00E2               	movwf	convertMMtoSteps@mm+2
 33567  4F43  303A               	movlw	58
 33568  4F44  00E1               	movwf	convertMMtoSteps@mm+1
 33569  4F45  30E1               	movlw	225
 33570  4F46  00E0               	movwf	convertMMtoSteps@mm
 33571  4F47  31D1  21A0  31CE   	fcall	_convertMMtoSteps
 33572  4F4A  0863               	movf	?_convertMMtoSteps+3,w
 33573  4F4B  0141               	movlb	1	; select bank1
 33574  4F4C  00B7               	movwf	(_cncTeste$4354+3)^(0+128)
 33575  4F4D  0140               	movlb	0	; select bank0
 33576  4F4E  0862               	movf	?_convertMMtoSteps+2,w
 33577  4F4F  0141               	movlb	1	; select bank1
 33578  4F50  00B6               	movwf	(_cncTeste$4354+2)^(0+128)
 33579  4F51  0140               	movlb	0	; select bank0
 33580  4F52  0861               	movf	?_convertMMtoSteps+1,w
 33581  4F53  0141               	movlb	1	; select bank1
 33582  4F54  00B5               	movwf	(_cncTeste$4354+1)^(0+128)
 33583  4F55  0140               	movlb	0	; select bank0
 33584  4F56  0860               	movf	?_convertMMtoSteps,w
 33585  4F57  0141               	movlb	1	; select bank1
 33586  4F58  00B4               	movwf	_cncTeste$4354^(0+128)
 33587                           
 33588                           ;cnc.c: 15: cncMoveTo(convertMMtoSteps(151.23), 5,ACC_3); _delay((unsigned long)((100)*(
      +                          20000000/4000.0)));
 33589  4F59  0837               	movf	(_cncTeste$4354+3)^(0+128),w
 33590  4F5A  00AC               	movwf	(cncMoveTo@pos+3)^(0+128)
 33591  4F5B  0836               	movf	(_cncTeste$4354+2)^(0+128),w
 33592  4F5C  00AB               	movwf	(cncMoveTo@pos+2)^(0+128)
 33593  4F5D  0835               	movf	(_cncTeste$4354+1)^(0+128),w
 33594  4F5E  00AA               	movwf	(cncMoveTo@pos+1)^(0+128)
 33595  4F5F  0834               	movf	_cncTeste$4354^(0+128),w
 33596  4F60  00A9               	movwf	cncMoveTo@pos^(0+128)
 33597  4F61  3040               	movlw	64
 33598  4F62  00B0               	movwf	(cncMoveTo@speed+3)^(0+128)
 33599  4F63  30A0               	movlw	160
 33600  4F64  00AF               	movwf	(cncMoveTo@speed+2)^(0+128)
 33601  4F65  3000               	movlw	0
 33602  4F66  00AE               	movwf	(cncMoveTo@speed+1)^(0+128)
 33603  4F67  3000               	movlw	0
 33604  4F68  00AD               	movwf	cncMoveTo@speed^(0+128)
 33605  4F69  3005               	movlw	5
 33606  4F6A  00B2               	movwf	??_cncTeste^(0+128)
 33607  4F6B  0832               	movf	??_cncTeste^(0+128),w
 33608  4F6C  00B1               	movwf	cncMoveTo@accel^(0+128)
 33609  4F6D  31D4  24E9  31CE   	fcall	_cncMoveTo
 33610  4F70  3003               	movlw	3
 33611  4F71  0141               	movlb	1	; select bank1
 33612  4F72  00B3               	movwf	(??_cncTeste^(0+128)+1)
 33613  4F73  308A               	movlw	138
 33614  4F74  00B2               	movwf	??_cncTeste^(0+128)
 33615  4F75  3055               	movlw	85
 33616  4F76                     u13047:
 33617  4F76  0B89               	decfsz	9,f
 33618  4F77  2F76               	goto	u13047
 33619  4F78  0BB2               	decfsz	??_cncTeste^(0+128),f
 33620  4F79  2F76               	goto	u13047
 33621  4F7A  0BB3               	decfsz	(??_cncTeste^(0+128)+1),f
 33622  4F7B  2F76               	goto	u13047
 33623  4F7C  3200               	nop2
 33624                           
 33625                           ;cnc.c: 17: if(bt.value == 0x0C) return;
 33626  4F7D  300C               	movlw	12
 33627  4F7E  0142               	movlb	2	; select bank2
 33628  4F7F  0620               	xorwf	_bt^(0+256),w	;volatile
 33629  4F80  1903               	btfsc	3,2
 33630  4F81  0008               	return
 33631                           
 33632                           ;cnc.c: 18: escreve_LCD(1,1,"Waiting");
 33633  4F82  0140               	movlb	0	; select bank0
 33634  4F83  01A0               	clrf	escreve_LCD@coluna
 33635  4F84  0AA0               	incf	escreve_LCD@coluna,f
 33636  4F85  308A               	movlw	low (STR_14| (0+32768))
 33637  4F86  00A1               	movwf	escreve_LCD@str
 33638  4F87  30E1               	movlw	high (STR_14| (0+32768))
 33639  4F88  00A2               	movwf	escreve_LCD@str+1
 33640  4F89  3001               	movlw	1
 33641  4F8A  31D2  22E7  31CE   	fcall	_escreve_LCD
 33642                           
 33643                           ;cnc.c: 19: escreve_LCD(2,1,"to Return");
 33644  4F8D  0140               	movlb	0	; select bank0
 33645  4F8E  01A0               	clrf	escreve_LCD@coluna
 33646  4F8F  0AA0               	incf	escreve_LCD@coluna,f
 33647  4F90  305D               	movlw	low (STR_15| (0+32768))
 33648  4F91  00A1               	movwf	escreve_LCD@str
 33649  4F92  30E1               	movlw	high (STR_15| (0+32768))
 33650  4F93  00A2               	movwf	escreve_LCD@str+1
 33651  4F94  3002               	movlw	2
 33652  4F95  31D2  22E7  31CE   	fcall	_escreve_LCD
 33653                           
 33654                           ;cnc.c: 20: _delay((unsigned long)((1000)*(20000000/4000.0)));
 33655  4F98  301A               	movlw	26
 33656  4F99  0141               	movlb	1	; select bank1
 33657  4F9A  00B3               	movwf	(??_cncTeste^(0+128)+1)
 33658  4F9B  305E               	movlw	94
 33659  4F9C  00B2               	movwf	??_cncTeste^(0+128)
 33660  4F9D  306E               	movlw	110
 33661  4F9E                     u13057:
 33662  4F9E  0B89               	decfsz	9,f
 33663  4F9F  2F9E               	goto	u13057
 33664  4FA0  0BB2               	decfsz	??_cncTeste^(0+128),f
 33665  4FA1  2F9E               	goto	u13057
 33666  4FA2  0BB3               	decfsz	(??_cncTeste^(0+128)+1),f
 33667  4FA3  2F9E               	goto	u13057
 33668  4FA4  0000               	nop
 33669                           
 33670                           ;cnc.c: 22: if(bt.value == 0x0C) return;
 33671  4FA5  300C               	movlw	12
 33672  4FA6  0142               	movlb	2	; select bank2
 33673  4FA7  0620               	xorwf	_bt^(0+256),w	;volatile
 33674  4FA8  1903               	btfsc	3,2
 33675  4FA9  0008               	return
 33676                           
 33677                           ;cnc.c: 23: escreve_LCD(1,1,"Moving");
 33678  4FAA  0140               	movlb	0	; select bank0
 33679  4FAB  01A0               	clrf	escreve_LCD@coluna
 33680  4FAC  0AA0               	incf	escreve_LCD@coluna,f
 33681  4FAD  3099               	movlw	low (STR_10| (0+32768))
 33682  4FAE  00A1               	movwf	escreve_LCD@str
 33683  4FAF  30E1               	movlw	high (STR_10| (0+32768))
 33684  4FB0  00A2               	movwf	escreve_LCD@str+1
 33685  4FB1  3001               	movlw	1
 33686  4FB2  31D2  22E7  31CE   	fcall	_escreve_LCD
 33687                           
 33688                           ;cnc.c: 24: escreve_LCD(2,1,"To Home");
 33689  4FB5  0140               	movlb	0	; select bank0
 33690  4FB6  01A0               	clrf	escreve_LCD@coluna
 33691  4FB7  0AA0               	incf	escreve_LCD@coluna,f
 33692  4FB8  3082               	movlw	low (STR_17| (0+32768))
 33693  4FB9  00A1               	movwf	escreve_LCD@str
 33694  4FBA  30E1               	movlw	high (STR_17| (0+32768))
 33695  4FBB  00A2               	movwf	escreve_LCD@str+1
 33696  4FBC  3002               	movlw	2
 33697  4FBD  31D2  22E7  31CE   	fcall	_escreve_LCD
 33698                           
 33699                           ;cnc.c: 25: cncMoveTo(convertMMtoSteps(50.51), 100.0,ACC_50); _delay((unsigned long)((10
      +                          00)*(20000000/4000.0)));
 33700  4FC0  3042               	movlw	66
 33701  4FC1  0140               	movlb	0	; select bank0
 33702  4FC2  00E3               	movwf	convertMMtoSteps@mm+3
 33703  4FC3  304A               	movlw	74
 33704  4FC4  00E2               	movwf	convertMMtoSteps@mm+2
 33705  4FC5  300A               	movlw	10
 33706  4FC6  00E1               	movwf	convertMMtoSteps@mm+1
 33707  4FC7  303D               	movlw	61
 33708  4FC8  00E0               	movwf	convertMMtoSteps@mm
 33709  4FC9  31D1  21A0  31CE   	fcall	_convertMMtoSteps
 33710  4FCC  0863               	movf	?_convertMMtoSteps+3,w
 33711  4FCD  0141               	movlb	1	; select bank1
 33712  4FCE  00B7               	movwf	(_cncTeste$4354+3)^(0+128)
 33713  4FCF  0140               	movlb	0	; select bank0
 33714  4FD0  0862               	movf	?_convertMMtoSteps+2,w
 33715  4FD1  0141               	movlb	1	; select bank1
 33716  4FD2  00B6               	movwf	(_cncTeste$4354+2)^(0+128)
 33717  4FD3  0140               	movlb	0	; select bank0
 33718  4FD4  0861               	movf	?_convertMMtoSteps+1,w
 33719  4FD5  0141               	movlb	1	; select bank1
 33720  4FD6  00B5               	movwf	(_cncTeste$4354+1)^(0+128)
 33721  4FD7  0140               	movlb	0	; select bank0
 33722  4FD8  0860               	movf	?_convertMMtoSteps,w
 33723  4FD9  0141               	movlb	1	; select bank1
 33724  4FDA  00B4               	movwf	_cncTeste$4354^(0+128)
 33725                           
 33726                           ;cnc.c: 25: cncMoveTo(convertMMtoSteps(50.51), 100.0,ACC_50); _delay((unsigned long)((10
      +                          00)*(20000000/4000.0)));
 33727  4FDB  0837               	movf	(_cncTeste$4354+3)^(0+128),w
 33728  4FDC  00AC               	movwf	(cncMoveTo@pos+3)^(0+128)
 33729  4FDD  0836               	movf	(_cncTeste$4354+2)^(0+128),w
 33730  4FDE  00AB               	movwf	(cncMoveTo@pos+2)^(0+128)
 33731  4FDF  0835               	movf	(_cncTeste$4354+1)^(0+128),w
 33732  4FE0  00AA               	movwf	(cncMoveTo@pos+1)^(0+128)
 33733  4FE1  0834               	movf	_cncTeste$4354^(0+128),w
 33734  4FE2  00A9               	movwf	cncMoveTo@pos^(0+128)
 33735  4FE3  3042               	movlw	66
 33736  4FE4  00B0               	movwf	(cncMoveTo@speed+3)^(0+128)
 33737  4FE5  30C8               	movlw	200
 33738  4FE6  00AF               	movwf	(cncMoveTo@speed+2)^(0+128)
 33739  4FE7  3000               	movlw	0
 33740  4FE8  00AE               	movwf	(cncMoveTo@speed+1)^(0+128)
 33741  4FE9  3000               	movlw	0
 33742  4FEA  00AD               	movwf	cncMoveTo@speed^(0+128)
 33743  4FEB  3003               	movlw	3
 33744  4FEC  00B2               	movwf	??_cncTeste^(0+128)
 33745  4FED  0832               	movf	??_cncTeste^(0+128),w
 33746  4FEE  00B1               	movwf	cncMoveTo@accel^(0+128)
 33747  4FEF  31D4  24E9  31CE   	fcall	_cncMoveTo
 33748  4FF2  301A               	movlw	26
 33749  4FF3  0141               	movlb	1	; select bank1
 33750  4FF4  00B3               	movwf	(??_cncTeste^(0+128)+1)
 33751  4FF5  305E               	movlw	94
 33752  4FF6  00B2               	movwf	??_cncTeste^(0+128)
 33753  4FF7  306E               	movlw	110
 33754  4FF8                     u13067:
 33755  4FF8  0B89               	decfsz	9,f
 33756  4FF9  2FF8               	goto	u13067
 33757  4FFA  0BB2               	decfsz	??_cncTeste^(0+128),f
 33758  4FFB  2FF8               	goto	u13067
 33759  4FFC  0BB3               	decfsz	(??_cncTeste^(0+128)+1),f
 33760  4FFD  2FF8               	goto	u13067
 33761  4FFE  0000               	nop
 33762  4FFF  0008               	return
 33763  5000                     __end_of_cncTeste:
 33764                           
 33765                           	psect	text40
 33766  54E9                     __ptext40:	
 33767 ;; *************** function _cncMoveTo *****************
 33768 ;; Defined at:
 33769 ;;		line 418 in file "cnc.c"
 33770 ;; Parameters:    Size  Location     Type
 33771 ;;  pos             4    9[BANK1 ] long 
 33772 ;;  speed           4   13[BANK1 ] float 
 33773 ;;  accel           1   17[BANK1 ] enum E12679
 33774 ;; Auto vars:     Size  Location     Type
 33775 ;;  ret             1    0        unsigned char 
 33776 ;; Return value:  Size  Location     Type
 33777 ;;                  1    wreg      unsigned char 
 33778 ;; Registers used:
 33779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 33780 ;; Tracked objects:
 33781 ;;		On entry : 3F/1
 33782 ;;		On exit  : 3C/0
 33783 ;;		Unchanged: 0/0
 33784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33785 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33788 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33789 ;;Total ram usage:       13 bytes
 33790 ;; Hardware stack levels used: 1
 33791 ;; Hardware stack levels required when called: unknown (due to recursion)
 33792 ;; This function calls:
 33793 ;;		_cncConfigMove
 33794 ;;		_cncMove
 33795 ;; This function is called by:
 33796 ;;		_cncTeste
 33797 ;;		_navCfgMove
 33798 ;; This function uses a non-reentrant model
 33799 ;;
 33800                           
 33801  54E9                     _cncMoveTo:	
 33802                           ;psect for function _cncMoveTo
 33803                           
 33804                           
 33805                           ;cnc.c: 419: char ret;;cnc.c: 420: step.Manual.toStart = step.ref;
 33806                           
 33807                           ;incstack = 0
 33808                           ; Regs used in _cncMoveTo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 33809  54E9  30E8               	movlw	232
 33810  54EA  0086               	movwf	6
 33811  54EB  302F               	movlw	47
 33812  54EC  0087               	movwf	7
 33813  54ED  3F40               	moviw [0]fsr1
 33814  54EE  0140               	movlb	0	; select bank0
 33815  54EF  00EB               	movwf	??_cncMoveTo
 33816  54F0  3F41               	moviw [1]fsr1
 33817  54F1  00EC               	movwf	??_cncMoveTo+1
 33818  54F2  3F42               	moviw [2]fsr1
 33819  54F3  00ED               	movwf	??_cncMoveTo+2
 33820  54F4  3F43               	moviw [3]fsr1
 33821  54F5  00EE               	movwf	??_cncMoveTo+3
 33822  54F6  30B2               	movlw	178
 33823  54F7  0086               	movwf	6
 33824  54F8  302F               	movlw	47
 33825  54F9  0087               	movwf	7
 33826  54FA  086B               	movf	??_cncMoveTo,w
 33827  54FB  3FC0               	movwi [0]fsr1
 33828  54FC  086C               	movf	??_cncMoveTo+1,w
 33829  54FD  3FC1               	movwi [1]fsr1
 33830  54FE  086D               	movf	??_cncMoveTo+2,w
 33831  54FF  3FC2               	movwi [2]fsr1
 33832  5500  086E               	movf	??_cncMoveTo+3,w
 33833  5501  3FC3               	movwi [3]fsr1
 33834                           
 33835                           ;cnc.c: 421: step.Manual.toStop = pos;
 33836  5502  30B6               	movlw	182
 33837  5503  0086               	movwf	6
 33838  5504  302F               	movlw	47
 33839  5505  0087               	movwf	7
 33840  5506  0141               	movlb	1	; select bank1
 33841  5507  0829               	movf	cncMoveTo@pos^(0+128),w
 33842  5508  3FC0               	movwi [0]fsr1
 33843  5509  082A               	movf	(cncMoveTo@pos+1)^(0+128),w
 33844  550A  3FC1               	movwi [1]fsr1
 33845  550B  082B               	movf	(cncMoveTo@pos+2)^(0+128),w
 33846  550C  3FC2               	movwi [2]fsr1
 33847  550D  082C               	movf	(cncMoveTo@pos+3)^(0+128),w
 33848  550E  3FC3               	movwi [3]fsr1
 33849                           
 33850                           ;cnc.c: 422: cncConfigMove(&step.Manual,speed,accel);
 33851  550F  30A3               	movlw	163
 33852  5510  0140               	movlb	0	; select bank0
 33853  5511  00E4               	movwf	cncConfigMove@mv
 33854  5512  302F               	movlw	47
 33855  5513  00E5               	movwf	cncConfigMove@mv+1
 33856  5514  0141               	movlb	1	; select bank1
 33857  5515  0830               	movf	(cncMoveTo@speed+3)^(0+128),w
 33858  5516  0140               	movlb	0	; select bank0
 33859  5517  00E9               	movwf	cncConfigMove@speed+3
 33860  5518  0141               	movlb	1	; select bank1
 33861  5519  082F               	movf	(cncMoveTo@speed+2)^(0+128),w
 33862  551A  0140               	movlb	0	; select bank0
 33863  551B  00E8               	movwf	cncConfigMove@speed+2
 33864  551C  0141               	movlb	1	; select bank1
 33865  551D  082E               	movf	(cncMoveTo@speed+1)^(0+128),w
 33866  551E  0140               	movlb	0	; select bank0
 33867  551F  00E7               	movwf	cncConfigMove@speed+1
 33868  5520  0141               	movlb	1	; select bank1
 33869  5521  082D               	movf	cncMoveTo@speed^(0+128),w
 33870  5522  0140               	movlb	0	; select bank0
 33871  5523  00E6               	movwf	cncConfigMove@speed
 33872  5524  0141               	movlb	1	; select bank1
 33873  5525  0831               	movf	cncMoveTo@accel^(0+128),w
 33874  5526  0140               	movlb	0	; select bank0
 33875  5527  00EB               	movwf	??_cncMoveTo
 33876  5528  086B               	movf	??_cncMoveTo,w
 33877  5529  00EA               	movwf	cncConfigMove@accel
 33878  552A  31BC  2450  31D4   	fcall	_cncConfigMove
 33879  552D  30A3               	movlw	163
 33880  552E  00A0               	movwf	cncMove@mv
 33881  552F  302F               	movlw	47
 33882  5530  00A1               	movwf	cncMove@mv+1
 33883  5531  319D  2598         	fcall	_cncMove
 33884  5533  0008               	return
 33885  5534                     __end_of_cncMoveTo:
 33886                           
 33887                           	psect	text41
 33888  4DFE                     __ptext41:	
 33889 ;; *************** function _cncManualMove *****************
 33890 ;; Defined at:
 33891 ;;		line 395 in file "cnc.c"
 33892 ;; Parameters:    Size  Location     Type
 33893 ;;  speed           4    9[BANK1 ] float 
 33894 ;;  accel           1   13[BANK1 ] enum E12679
 33895 ;;  max             4   14[BANK1 ] long 
 33896 ;;  min             4   18[BANK1 ] long 
 33897 ;; Auto vars:     Size  Location     Type
 33898 ;;  posEnd          4   22[BANK1 ] long 
 33899 ;;  btt             1   26[BANK1 ] unsigned char 
 33900 ;; Return value:  Size  Location     Type
 33901 ;;                  4    9[BANK1 ] long 
 33902 ;; Registers used:
 33903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 33904 ;; Tracked objects:
 33905 ;;		On entry : 3F/1
 33906 ;;		On exit  : 3C/0
 33907 ;;		Unchanged: 0/0
 33908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33909 ;;      Params:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33910 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33911 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33912 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33913 ;;Total ram usage:       22 bytes
 33914 ;; Hardware stack levels used: 1
 33915 ;; Hardware stack levels required when called: unknown (due to recursion)
 33916 ;; This function calls:
 33917 ;;		_cncConfigMove
 33918 ;;		_cncConfigStop
 33919 ;;		_cncMove
 33920 ;;		_escreve_LCD
 33921 ;;		_liberarTeclado
 33922 ;; This function is called by:
 33923 ;;		_main
 33924 ;; This function uses a non-reentrant model
 33925 ;;
 33926                           
 33927  4DFE                     _cncManualMove:	
 33928                           ;psect for function _cncManualMove
 33929                           
 33930                           
 33931                           ;cnc.c: 396: char btt;;cnc.c: 397: long posEnd;;cnc.c: 398: btt = bt.value;
 33932                           
 33933                           ;incstack = 0
 33934                           ; Regs used in _cncManualMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 33935  4DFE  0142               	movlb	2	; select bank2
 33936  4DFF  0820               	movf	_bt^(0+256),w	;volatile
 33937  4E00  0140               	movlb	0	; select bank0
 33938  4E01  00EB               	movwf	??_cncManualMove
 33939  4E02  086B               	movf	??_cncManualMove,w
 33940  4E03  0141               	movlb	1	; select bank1
 33941  4E04  00BA               	movwf	cncManualMove@btt^(0+128)
 33942                           
 33943                           ;cnc.c: 399: if(btt == 0x22)posEnd = min;
 33944  4E05  3022               	movlw	34
 33945  4E06  063A               	xorwf	cncManualMove@btt^(0+128),w
 33946  4E07  1D03               	btfss	3,2
 33947  4E08  2E11               	goto	l11686
 33948  4E09  0835               	movf	(cncManualMove@min+3)^(0+128),w
 33949  4E0A  00B9               	movwf	(cncManualMove@posEnd+3)^(0+128)
 33950  4E0B  0834               	movf	(cncManualMove@min+2)^(0+128),w
 33951  4E0C  00B8               	movwf	(cncManualMove@posEnd+2)^(0+128)
 33952  4E0D  0833               	movf	(cncManualMove@min+1)^(0+128),w
 33953  4E0E  00B7               	movwf	(cncManualMove@posEnd+1)^(0+128)
 33954  4E0F  0832               	movf	cncManualMove@min^(0+128),w
 33955  4E10  2E1C               	goto	L42
 33956  4E11                     l11686:
 33957                           
 33958                           ;cnc.c: 400: else if(btt == 0x0A)posEnd = max;
 33959  4E11  300A               	movlw	10
 33960  4E12  063A               	xorwf	cncManualMove@btt^(0+128),w
 33961  4E13  1D03               	btfss	3,2
 33962  4E14  0008               	return
 33963  4E15  0831               	movf	(cncManualMove@max+3)^(0+128),w
 33964  4E16  00B9               	movwf	(cncManualMove@posEnd+3)^(0+128)
 33965  4E17  0830               	movf	(cncManualMove@max+2)^(0+128),w
 33966  4E18  00B8               	movwf	(cncManualMove@posEnd+2)^(0+128)
 33967  4E19  082F               	movf	(cncManualMove@max+1)^(0+128),w
 33968  4E1A  00B7               	movwf	(cncManualMove@posEnd+1)^(0+128)
 33969  4E1B  082E               	movf	cncManualMove@max^(0+128),w
 33970  4E1C                     L42:
 33971  4E1C  00B6               	movwf	cncManualMove@posEnd^(0+128)
 33972                           
 33973                           ;cnc.c: 403: escreve_LCD(1,1,"Movendo...");
 33974  4E1D  0140               	movlb	0	; select bank0
 33975  4E1E  01A0               	clrf	escreve_LCD@coluna
 33976  4E1F  0AA0               	incf	escreve_LCD@coluna,f
 33977  4E20  303E               	movlw	low (STR_21| (0+32768))
 33978  4E21  00A1               	movwf	escreve_LCD@str
 33979  4E22  30E1               	movlw	high (STR_21| (0+32768))
 33980  4E23  00A2               	movwf	escreve_LCD@str+1
 33981  4E24  3001               	movlw	1
 33982  4E25  31D2  22E7  31CD   	fcall	_escreve_LCD
 33983                           
 33984                           ;cnc.c: 404: step.Manual.toStart = step.ref;
 33985  4E28  30E8               	movlw	232
 33986  4E29  0086               	movwf	6
 33987  4E2A  302F               	movlw	47
 33988  4E2B  0087               	movwf	7
 33989  4E2C  3F40               	moviw [0]fsr1
 33990  4E2D  0140               	movlb	0	; select bank0
 33991  4E2E  00EB               	movwf	??_cncManualMove
 33992  4E2F  3F41               	moviw [1]fsr1
 33993  4E30  00EC               	movwf	??_cncManualMove+1
 33994  4E31  3F42               	moviw [2]fsr1
 33995  4E32  00ED               	movwf	??_cncManualMove+2
 33996  4E33  3F43               	moviw [3]fsr1
 33997  4E34  00EE               	movwf	??_cncManualMove+3
 33998  4E35  30B2               	movlw	178
 33999  4E36  0086               	movwf	6
 34000  4E37  302F               	movlw	47
 34001  4E38  0087               	movwf	7
 34002  4E39  086B               	movf	??_cncManualMove,w
 34003  4E3A  3FC0               	movwi [0]fsr1
 34004  4E3B  086C               	movf	??_cncManualMove+1,w
 34005  4E3C  3FC1               	movwi [1]fsr1
 34006  4E3D  086D               	movf	??_cncManualMove+2,w
 34007  4E3E  3FC2               	movwi [2]fsr1
 34008  4E3F  086E               	movf	??_cncManualMove+3,w
 34009  4E40  3FC3               	movwi [3]fsr1
 34010                           
 34011                           ;cnc.c: 405: step.Manual.toStop = posEnd;
 34012  4E41  30B6               	movlw	182
 34013  4E42  0086               	movwf	6
 34014  4E43  302F               	movlw	47
 34015  4E44  0087               	movwf	7
 34016  4E45  0141               	movlb	1	; select bank1
 34017  4E46  0836               	movf	cncManualMove@posEnd^(0+128),w
 34018  4E47  3FC0               	movwi [0]fsr1
 34019  4E48  0837               	movf	(cncManualMove@posEnd+1)^(0+128),w
 34020  4E49  3FC1               	movwi [1]fsr1
 34021  4E4A  0838               	movf	(cncManualMove@posEnd+2)^(0+128),w
 34022  4E4B  3FC2               	movwi [2]fsr1
 34023  4E4C  0839               	movf	(cncManualMove@posEnd+3)^(0+128),w
 34024  4E4D  3FC3               	movwi [3]fsr1
 34025                           
 34026                           ;cnc.c: 406: cncConfigMove(&step.Manual,speed,accel);
 34027  4E4E  30A3               	movlw	163
 34028  4E4F  0140               	movlb	0	; select bank0
 34029  4E50  00E4               	movwf	cncConfigMove@mv
 34030  4E51  302F               	movlw	47
 34031  4E52  00E5               	movwf	cncConfigMove@mv+1
 34032  4E53  0141               	movlb	1	; select bank1
 34033  4E54  082C               	movf	(cncManualMove@speed+3)^(0+128),w
 34034  4E55  0140               	movlb	0	; select bank0
 34035  4E56  00E9               	movwf	cncConfigMove@speed+3
 34036  4E57  0141               	movlb	1	; select bank1
 34037  4E58  082B               	movf	(cncManualMove@speed+2)^(0+128),w
 34038  4E59  0140               	movlb	0	; select bank0
 34039  4E5A  00E8               	movwf	cncConfigMove@speed+2
 34040  4E5B  0141               	movlb	1	; select bank1
 34041  4E5C  082A               	movf	(cncManualMove@speed+1)^(0+128),w
 34042  4E5D  0140               	movlb	0	; select bank0
 34043  4E5E  00E7               	movwf	cncConfigMove@speed+1
 34044  4E5F  0141               	movlb	1	; select bank1
 34045  4E60  0829               	movf	cncManualMove@speed^(0+128),w
 34046  4E61  0140               	movlb	0	; select bank0
 34047  4E62  00E6               	movwf	cncConfigMove@speed
 34048  4E63  0141               	movlb	1	; select bank1
 34049  4E64  082D               	movf	cncManualMove@accel^(0+128),w
 34050  4E65  0140               	movlb	0	; select bank0
 34051  4E66  00EB               	movwf	??_cncManualMove
 34052  4E67  086B               	movf	??_cncManualMove,w
 34053  4E68  00EA               	movwf	cncConfigMove@accel
 34054  4E69  31BC  2450  31CD   	fcall	_cncConfigMove
 34055                           
 34056                           ;cnc.c: 407: cncConfigStop(&step.Manual,&PORTB,0x3F,btt);
 34057  4E6C  30A3               	movlw	163
 34058  4E6D  00F1               	movwf	cncConfigStop@mv
 34059  4E6E  302F               	movlw	47
 34060  4E6F  00F2               	movwf	cncConfigStop@mv+1
 34061  4E70  300D               	movlw	13
 34062  4E71  00F3               	movwf	cncConfigStop@port
 34063  4E72  3000               	movlw	0
 34064  4E73  00F4               	movwf	cncConfigStop@port+1
 34065  4E74  303F               	movlw	63
 34066  4E75  00EB               	movwf	??_cncManualMove
 34067  4E76  086B               	movf	??_cncManualMove,w
 34068  4E77  00F5               	movwf	cncConfigStop@mask
 34069  4E78  0141               	movlb	1	; select bank1
 34070  4E79  083A               	movf	cncManualMove@btt^(0+128),w
 34071  4E7A  0140               	movlb	0	; select bank0
 34072  4E7B  00EC               	movwf	??_cncManualMove+1
 34073  4E7C  086C               	movf	??_cncManualMove+1,w
 34074  4E7D  00F6               	movwf	cncConfigStop@value
 34075  4E7E  31D2  2251  31CD   	fcall	_cncConfigStop
 34076                           
 34077                           ;cnc.c: 408: cncMove(&step.Manual);
 34078  4E81  30A3               	movlw	163
 34079  4E82  00A0               	movwf	cncMove@mv
 34080  4E83  302F               	movlw	47
 34081  4E84  00A1               	movwf	cncMove@mv+1
 34082  4E85  319D  2598  31CD   	fcall	_cncMove
 34083                           
 34084                           ;cnc.c: 409: if(step.ref == posEnd){
 34085  4E88  30E8               	movlw	232
 34086  4E89  0086               	movwf	6
 34087  4E8A  302F               	movlw	47
 34088  4E8B  0087               	movwf	7
 34089  4E8C  3F40               	moviw [0]fsr1
 34090  4E8D  0140               	movlb	0	; select bank0
 34091  4E8E  00EB               	movwf	??_cncManualMove
 34092  4E8F  3F41               	moviw [1]fsr1
 34093  4E90  00EC               	movwf	??_cncManualMove+1
 34094  4E91  3F42               	moviw [2]fsr1
 34095  4E92  00ED               	movwf	??_cncManualMove+2
 34096  4E93  3F43               	moviw [3]fsr1
 34097  4E94  00EE               	movwf	??_cncManualMove+3
 34098  4E95  0141               	movlb	1	; select bank1
 34099  4E96  0839               	movf	(cncManualMove@posEnd+3)^(0+128),w
 34100  4E97  0140               	movlb	0	; select bank0
 34101  4E98  066E               	xorwf	??_cncManualMove+3,w
 34102  4E99  1D03               	skipz
 34103  4E9A  2EAB               	goto	u12985
 34104  4E9B  0141               	movlb	1	; select bank1
 34105  4E9C  0838               	movf	(cncManualMove@posEnd+2)^(0+128),w
 34106  4E9D  0140               	movlb	0	; select bank0
 34107  4E9E  066D               	xorwf	??_cncManualMove+2,w
 34108  4E9F  1D03               	skipz
 34109  4EA0  2EAB               	goto	u12985
 34110  4EA1  0141               	movlb	1	; select bank1
 34111  4EA2  0837               	movf	(cncManualMove@posEnd+1)^(0+128),w
 34112  4EA3  0140               	movlb	0	; select bank0
 34113  4EA4  066C               	xorwf	??_cncManualMove+1,w
 34114  4EA5  1D03               	skipz
 34115  4EA6  2EAB               	goto	u12985
 34116  4EA7  0141               	movlb	1	; select bank1
 34117  4EA8  0836               	movf	cncManualMove@posEnd^(0+128),w
 34118  4EA9  0140               	movlb	0	; select bank0
 34119  4EAA  066B               	xorwf	??_cncManualMove,w
 34120  4EAB                     u12985:
 34121  4EAB  1D03               	skipz
 34122  4EAC  0008               	return
 34123                           
 34124                           ;cnc.c: 410: escreve_LCD(2,1,"!!Fim de curso!!");
 34125  4EAD  01A0               	clrf	escreve_LCD@coluna
 34126  4EAE  0AA0               	incf	escreve_LCD@coluna,f
 34127  4EAF  3026               	movlw	low (STR_22| (0+32768))
 34128  4EB0  00A1               	movwf	escreve_LCD@str
 34129  4EB1  30E0               	movlw	high (STR_22| (0+32768))
 34130  4EB2  00A2               	movwf	escreve_LCD@str+1
 34131  4EB3  3002               	movlw	2
 34132  4EB4  31D2  22E7  31CD   	fcall	_escreve_LCD
 34133                           
 34134                           ;cnc.c: 411: liberarTeclado(200);
 34135  4EB7  30C8               	movlw	200
 34136  4EB8  00F1               	movwf	liberarTeclado@ms
 34137  4EB9  3000               	movlw	0
 34138  4EBA  00F2               	movwf	liberarTeclado@ms+1
 34139  4EBB  31D0  2007  31CD   	fcall	_liberarTeclado
 34140                           
 34141                           ;cnc.c: 412: escreve_LCD(2,1," ");
 34142  4EBE  0140               	movlb	0	; select bank0
 34143  4EBF  01A0               	clrf	escreve_LCD@coluna
 34144  4EC0  0AA0               	incf	escreve_LCD@coluna,f
 34145  4EC1  3086               	movlw	low ((STR_4+14)| (0+32768))
 34146  4EC2  00A1               	movwf	escreve_LCD@str
 34147  4EC3  30E0               	movlw	high ((STR_4+14)| (0+32768))
 34148  4EC4  00A2               	movwf	escreve_LCD@str+1
 34149  4EC5  3002               	movlw	2
 34150  4EC6  31D2  22E7         	fcall	_escreve_LCD
 34151  4EC8  0008               	return
 34152  4EC9                     __end_of_cncManualMove:
 34153                           
 34154                           	psect	text42
 34155  1D98                     __ptext42:	
 34156 ;; *************** function _cncMove *****************
 34157 ;; Defined at:
 34158 ;;		line 429 in file "cnc.c"
 34159 ;; Parameters:    Size  Location     Type
 34160 ;;  mv              2    0[BANK0 ] PTR struct .
 34161 ;;		 -> step(248), 
 34162 ;; Auto vars:     Size  Location     Type
 34163 ;;  timeSteps       4   13[BANK0 ] long 
 34164 ;;  t               2   11[BANK0 ] unsigned int 
 34165 ;; Return value:  Size  Location     Type
 34166 ;;                  1    wreg      unsigned char 
 34167 ;; Registers used:
 34168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 34169 ;; Tracked objects:
 34170 ;;		On entry : 3F/0
 34171 ;;		On exit  : 3C/0
 34172 ;;		Unchanged: 0/0
 34173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34176 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34177 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34178 ;;Total ram usage:       17 bytes
 34179 ;; Hardware stack levels used: 1
 34180 ;; Hardware stack levels required when called: unknown (due to recursion)
 34181 ;; This function calls:
 34182 ;;		_cncEndMove
 34183 ;;		_getAccelTable
 34184 ;; This function is called by:
 34185 ;;		_cncManualMove
 34186 ;;		_cncMoveTo
 34187 ;; This function uses a non-reentrant model
 34188 ;;
 34189                           
 34190  1D98                     _cncMove:	
 34191                           ;psect for function _cncMove
 34192                           
 34193                           
 34194                           ;cnc.c: 431: uint t;;cnc.c: 432: long timeSteps = 0;
 34195                           
 34196                           ;incstack = 0
 34197                           ; Regs used in _cncMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 34198  1D98  3000               	movlw	0
 34199  1D99  00B0               	movwf	cncMove@timeSteps+3
 34200  1D9A  3000               	movlw	0
 34201  1D9B  00AF               	movwf	cncMove@timeSteps+2
 34202  1D9C  3000               	movlw	0
 34203  1D9D  00AE               	movwf	cncMove@timeSteps+1
 34204  1D9E  3000               	movlw	0
 34205  1D9F  00AD               	movwf	cncMove@timeSteps
 34206                           
 34207                           ;cnc.c: 434: if(mv->dir == 0 && step.ref > cnc.max.step.Pos) return -1;
 34208  1DA0  0820               	movf	cncMove@mv,w
 34209  1DA1  0086               	movwf	6
 34210  1DA2  0821               	movf	cncMove@mv+1,w
 34211  1DA3  0087               	movwf	7
 34212  1DA4  0016               	moviw fsr1++
 34213  1DA5  0401               	iorwf	1,w
 34214  1DA6  1D03               	btfss	3,2
 34215  1DA7  2DD3               	goto	l10484
 34216  1DA8  30E8               	movlw	232
 34217  1DA9  0086               	movwf	6
 34218  1DAA  302F               	movlw	47
 34219  1DAB  0087               	movwf	7
 34220  1DAC  3F40               	moviw [0]fsr1
 34221  1DAD  00A2               	movwf	??_cncMove
 34222  1DAE  3F41               	moviw [1]fsr1
 34223  1DAF  00A3               	movwf	??_cncMove+1
 34224  1DB0  3F42               	moviw [2]fsr1
 34225  1DB1  00A4               	movwf	??_cncMove+2
 34226  1DB2  3F43               	moviw [3]fsr1
 34227  1DB3  00A5               	movwf	??_cncMove+3
 34228  1DB4  0143               	movlb	3	; select bank3
 34229  1DB5  0853               	movf	((_cnc+3)^(0+384)+48),w
 34230  1DB6  3A80               	xorlw	128
 34231  1DB7  0140               	movlb	0	; select bank0
 34232  1DB8  00A6               	movwf	??_cncMove+4
 34233  1DB9  0825               	movf	??_cncMove+3,w
 34234  1DBA  3A80               	xorlw	128
 34235  1DBB  0226               	subwf	??_cncMove+4,w
 34236  1DBC  0143               	movlb	3	; select bank3
 34237  1DBD  1D03               	skipz
 34238  1DBE  2DCF               	goto	u12003
 34239  1DBF  0140               	movlb	0	; select bank0
 34240  1DC0  0824               	movf	??_cncMove+2,w
 34241  1DC1  0143               	movlb	3	; select bank3
 34242  1DC2  0252               	subwf	((_cnc+2)^(0+384)+48),w
 34243  1DC3  1D03               	skipz
 34244  1DC4  2DCF               	goto	u12003
 34245  1DC5  0140               	movlb	0	; select bank0
 34246  1DC6  0823               	movf	??_cncMove+1,w
 34247  1DC7  0143               	movlb	3	; select bank3
 34248  1DC8  0251               	subwf	((_cnc+1)^(0+384)+48),w
 34249  1DC9  1D03               	skipz
 34250  1DCA  2DCF               	goto	u12003
 34251  1DCB  0140               	movlb	0	; select bank0
 34252  1DCC  0822               	movf	??_cncMove,w
 34253  1DCD  0143               	movlb	3	; select bank3
 34254  1DCE  0250               	subwf	(_cnc^(0+384)+48),w
 34255  1DCF                     u12003:
 34256  1DCF  1803               	skipnc
 34257  1DD0  2DD3               	goto	l10484
 34258  1DD1  30FF               	movlw	255
 34259  1DD2  0008               	return
 34260  1DD3                     l10484:
 34261                           
 34262                           ;cnc.c: 435: if(mv->dir == 1 && step.ref < cnc.min.step.Pos) return -2;
 34263  1DD3  0140               	movlb	0	; select bank0
 34264  1DD4  0820               	movf	cncMove@mv,w
 34265  1DD5  0086               	movwf	6
 34266  1DD6  0821               	movf	cncMove@mv+1,w
 34267  1DD7  0087               	movwf	7
 34268  1DD8  0016               	moviw fsr1++
 34269  1DD9  3A01               	xorlw	1
 34270  1DDA  00A2               	movwf	??_cncMove
 34271  1DDB  0016               	moviw fsr1++
 34272  1DDC  04A2               	iorwf	??_cncMove,f
 34273  1DDD  1D03               	btfss	3,2
 34274  1DDE  2E09               	goto	l1040
 34275  1DDF  30E8               	movlw	232
 34276  1DE0  0086               	movwf	6
 34277  1DE1  302F               	movlw	47
 34278  1DE2  0087               	movwf	7
 34279  1DE3  3F40               	moviw [0]fsr1
 34280  1DE4  00A2               	movwf	??_cncMove
 34281  1DE5  3F41               	moviw [1]fsr1
 34282  1DE6  00A3               	movwf	??_cncMove+1
 34283  1DE7  3F42               	moviw [2]fsr1
 34284  1DE8  00A4               	movwf	??_cncMove+2
 34285  1DE9  3F43               	moviw [3]fsr1
 34286  1DEA  00A5               	movwf	??_cncMove+3
 34287  1DEB  0825               	movf	??_cncMove+3,w
 34288  1DEC  3A80               	xorlw	128
 34289  1DED  00A6               	movwf	??_cncMove+4
 34290  1DEE  0143               	movlb	3	; select bank3
 34291  1DEF  083F               	movf	((_cnc+3)^(0+384)+28),w
 34292  1DF0  3A80               	xorlw	128
 34293  1DF1  0140               	movlb	0	; select bank0
 34294  1DF2  0226               	subwf	??_cncMove+4,w
 34295  1DF3  1D03               	skipz
 34296  1DF4  2E05               	goto	u12023
 34297  1DF5  0143               	movlb	3	; select bank3
 34298  1DF6  083E               	movf	((_cnc+2)^(0+384)+28),w
 34299  1DF7  0140               	movlb	0	; select bank0
 34300  1DF8  0224               	subwf	??_cncMove+2,w
 34301  1DF9  1D03               	skipz
 34302  1DFA  2E05               	goto	u12023
 34303  1DFB  0143               	movlb	3	; select bank3
 34304  1DFC  083D               	movf	((_cnc+1)^(0+384)+28),w
 34305  1DFD  0140               	movlb	0	; select bank0
 34306  1DFE  0223               	subwf	??_cncMove+1,w
 34307  1DFF  1D03               	skipz
 34308  1E00  2E05               	goto	u12023
 34309  1E01  0143               	movlb	3	; select bank3
 34310  1E02  083C               	movf	(_cnc^(0+384)+28),w
 34311  1E03  0140               	movlb	0	; select bank0
 34312  1E04  0222               	subwf	??_cncMove,w
 34313  1E05                     u12023:
 34314  1E05  1803               	skipnc
 34315  1E06  2E09               	goto	l1040
 34316  1E07  30FE               	movlw	254
 34317  1E08  0008               	return
 34318  1E09                     l1040:
 34319                           
 34320                           ;cnc.c: 437: TMR2IE = 0;
 34321  1E09  014E               	movlb	14	; select bank14
 34322  1E0A  109A               	bcf	26,1	;volatile
 34323                           
 34324                           ;cnc.c: 438: LATAbits.LATA0 = 0;
 34325  1E0B  0140               	movlb	0	; select bank0
 34326  1E0C  1016               	bcf	22,0	;volatile
 34327                           
 34328                           ;cnc.c: 441: LATEbits.LATE1 = mv->dir;
 34329  1E0D  0820               	movf	cncMove@mv,w
 34330  1E0E  0086               	movwf	6
 34331  1E0F  0821               	movf	cncMove@mv+1,w
 34332  1E10  0087               	movwf	7
 34333  1E11  0C01               	rrf	1,w
 34334  1E12  1C03               	skipc
 34335  1E13  109A               	bcf	26,1	;volatile
 34336  1E14  1803               	skipnc
 34337  1E15  149A               	bsf	26,1	;volatile
 34338                           
 34339                           ;cnc.c: 442: _delay((unsigned long)((1)*(20000000/4000.0)));
 34340  1E16  3007               	movlw	7
 34341  1E17  0140               	movlb	0	; select bank0
 34342  1E18  00A2               	movwf	??_cncMove
 34343  1E19  307D               	movlw	125
 34344  1E1A                     u13077:
 34345  1E1A  0B89               	decfsz	9,f
 34346  1E1B  2E1A               	goto	u13077
 34347  1E1C  0BA2               	decfsz	??_cncMove,f
 34348  1E1D  2E1A               	goto	u13077
 34349                           
 34350                           ;cnc.c: 443: mv->count = 0;
 34351  1E1E  0140               	movlb	0	; select bank0
 34352  1E1F  0820               	movf	cncMove@mv,w
 34353  1E20  3E17               	addlw	23
 34354  1E21  00A2               	movwf	??_cncMove
 34355  1E22  3000               	movlw	0
 34356  1E23  3D21               	addwfc	cncMove@mv+1,w
 34357  1E24  00A3               	movwf	??_cncMove+1
 34358  1E25  0822               	movf	??_cncMove,w
 34359  1E26  0086               	movwf	6
 34360  1E27  0823               	movf	??_cncMove+1,w
 34361  1E28  0087               	movwf	7
 34362  1E29  3000               	movlw	0
 34363  1E2A  3FC0               	movwi [0]fsr1
 34364  1E2B  3FC1               	movwi [1]fsr1
 34365  1E2C  3FC2               	movwi [2]fsr1
 34366  1E2D  3FC3               	movwi [3]fsr1
 34367                           
 34368                           ;cnc.c: 446: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 34369  1E2E  0820               	movf	cncMove@mv,w
 34370  1E2F  3E02               	addlw	2
 34371  1E30  00F1               	movwf	getAccelTable@accel
 34372  1E31  3000               	movlw	0
 34373  1E32  3D21               	addwfc	cncMove@mv+1,w
 34374  1E33  00F2               	movwf	getAccelTable@accel+1
 34375  1E34  302D               	movlw	(low (cncMove@timeSteps| 0))& (0+255)
 34376  1E35  00A2               	movwf	??_cncMove
 34377  1E36  0822               	movf	??_cncMove,w
 34378  1E37  00F3               	movwf	getAccelTable@i
 34379  1E38  31C8  205A  319D   	fcall	_getAccelTable
 34380  1E3B  0971               	comf	?_getAccelTable,w
 34381  1E3C  0140               	movlb	0	; select bank0
 34382  1E3D  00AB               	movwf	cncMove@t
 34383  1E3E  0972               	comf	?_getAccelTable+1,w
 34384  1E3F  00AC               	movwf	cncMove@t+1
 34385  1E40                     L43:
 34386  1E40  082C               	movf	cncMove@t+1,w
 34387  1E41  0144               	movlb	4	; select bank4
 34388  1E42  0099               	movwf	25	;volatile
 34389  1E43  0140               	movlb	0	; select bank0
 34390  1E44  082B               	movf	cncMove@t,w
 34391  1E45  0144               	movlb	4	; select bank4
 34392  1E46  0098               	movwf	24	;volatile
 34393                           
 34394                           ;cnc.c: 462: PIR4bits.TMR5IF = 0;
 34395  1E47  014E               	movlb	14	; select bank14
 34396  1E48  1210               	bcf	16,4	;volatile
 34397  1E49  0140               	movlb	0	; select bank0
 34398  1E4A  0820               	movf	cncMove@mv,w
 34399  1E4B  0086               	movwf	6
 34400  1E4C  0821               	movf	cncMove@mv+1,w
 34401  1E4D  0087               	movwf	7
 34402  1E4E  315F               	addfsr 1,31
 34403  1E4F  3F40               	moviw [0]fsr1
 34404  1E50  00A2               	movwf	??_cncMove
 34405  1E51  3F41               	moviw [1]fsr1
 34406  1E52  00A3               	movwf	??_cncMove+1
 34407  1E53  3F42               	moviw [2]fsr1
 34408  1E54  00A4               	movwf	??_cncMove+2
 34409  1E55  3F43               	moviw [3]fsr1
 34410  1E56  00A5               	movwf	??_cncMove+3
 34411  1E57  0820               	movf	cncMove@mv,w
 34412  1E58  0086               	movwf	6
 34413  1E59  0821               	movf	cncMove@mv+1,w
 34414  1E5A  0087               	movwf	7
 34415  1E5B  3157               	addfsr 1,23
 34416  1E5C  3F40               	moviw [0]fsr1
 34417  1E5D  00A6               	movwf	??_cncMove+4
 34418  1E5E  3F41               	moviw [1]fsr1
 34419  1E5F  00A7               	movwf	??_cncMove+5
 34420  1E60  3F42               	moviw [2]fsr1
 34421  1E61  00A8               	movwf	??_cncMove+6
 34422  1E62  3F43               	moviw [3]fsr1
 34423  1E63  00A9               	movwf	??_cncMove+7
 34424  1E64  0829               	movf	??_cncMove+7,w
 34425  1E65  3A80               	xorlw	128
 34426  1E66  00AA               	movwf	??_cncMove+8
 34427  1E67  0825               	movf	??_cncMove+3,w
 34428  1E68  3A80               	xorlw	128
 34429  1E69  022A               	subwf	??_cncMove+8,w
 34430  1E6A  1D03               	skipz
 34431  1E6B  2E76               	goto	u12063
 34432  1E6C  0824               	movf	??_cncMove+2,w
 34433  1E6D  0228               	subwf	??_cncMove+6,w
 34434  1E6E  1D03               	skipz
 34435  1E6F  2E76               	goto	u12063
 34436  1E70  0823               	movf	??_cncMove+1,w
 34437  1E71  0227               	subwf	??_cncMove+5,w
 34438  1E72  1D03               	skipz
 34439  1E73  2E76               	goto	u12063
 34440  1E74  0822               	movf	??_cncMove,w
 34441  1E75  0226               	subwf	??_cncMove+4,w
 34442  1E76                     u12063:
 34443  1E76  1C03               	btfss	3,0
 34444  1E77  1E0C               	btfss	12,4	;volatile
 34445  1E78  2F35               	goto	l10542
 34446                           
 34447                           ;cnc.c: 450: if(mv->stop.En){
 34448                           
 34449                           ;cnc.c: 449: while(mv->count < mv->toCruise && (PORTAbits.RA4)){
 34450                           
 34451                           ;cnc.c: 448: PIR4bits.TMR5IF = 0;
 34452                           
 34453                           ;cnc.c: 447: TMR5 = t;
 34454  1E79  0820               	movf	cncMove@mv,w
 34455  1E7A  3E27               	addlw	39
 34456  1E7B  0086               	movwf	6
 34457  1E7C  3000               	movlw	0
 34458  1E7D  3D21               	addwfc	cncMove@mv+1,w
 34459  1E7E  0087               	movwf	7
 34460  1E7F  0016               	moviw fsr1++
 34461  1E80  0401               	iorwf	1,w
 34462  1E81  1903               	btfsc	3,2
 34463  1E82  2EA6               	goto	l1043
 34464                           
 34465                           ;cnc.c: 451: if((*mv->stop.Port&mv->stop.Mask) != mv->stop.Value) break;
 34466  1E83  0820               	movf	cncMove@mv,w
 34467  1E84  3E2C               	addlw	44
 34468  1E85  0086               	movwf	6
 34469  1E86  3000               	movlw	0
 34470  1E87  3D21               	addwfc	cncMove@mv+1,w
 34471  1E88  0087               	movwf	7
 34472  1E89  0820               	movf	cncMove@mv,w
 34473  1E8A  3E2B               	addlw	43
 34474  1E8B  0084               	movwf	4
 34475  1E8C  3000               	movlw	0
 34476  1E8D  3D21               	addwfc	cncMove@mv+1,w
 34477  1E8E  0085               	movwf	5
 34478  1E8F  0800               	movf	0,w
 34479  1E90  00A2               	movwf	??_cncMove
 34480  1E91  0820               	movf	cncMove@mv,w
 34481  1E92  3E29               	addlw	41
 34482  1E93  0084               	movwf	4
 34483  1E94  3000               	movlw	0
 34484  1E95  3D21               	addwfc	cncMove@mv+1,w
 34485  1E96  0085               	movwf	5
 34486  1E97  3F00               	moviw [0]fsr0
 34487  1E98  00A3               	movwf	??_cncMove+1
 34488  1E99  3F01               	moviw [1]fsr0
 34489  1E9A  00A4               	movwf	??_cncMove+2
 34490  1E9B  0823               	movf	??_cncMove+1,w
 34491  1E9C  0084               	movwf	4
 34492  1E9D  0824               	movf	??_cncMove+2,w
 34493  1E9E  0085               	movwf	5
 34494  1E9F  0800               	movf	0,w
 34495  1EA0  0522               	andwf	??_cncMove,w
 34496  1EA1  00A5               	movwf	??_cncMove+3
 34497  1EA2  0825               	movf	??_cncMove+3,w
 34498  1EA3  0601               	xorwf	1,w
 34499  1EA4  1D03               	btfss	3,2
 34500  1EA5  2F35               	goto	l10542
 34501  1EA6                     l1043:
 34502                           
 34503                           ;cnc.c: 452: };cnc.c: 454: (LATEbits.LATE2 = 0);
 34504  1EA6  111A               	bcf	26,2	;volatile
 34505                           
 34506                           ;cnc.c: 455: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 34507  1EA7  0820               	movf	cncMove@mv,w
 34508  1EA8  3E02               	addlw	2
 34509  1EA9  00F1               	movwf	getAccelTable@accel
 34510  1EAA  3000               	movlw	0
 34511  1EAB  3D21               	addwfc	cncMove@mv+1,w
 34512  1EAC  00F2               	movwf	getAccelTable@accel+1
 34513  1EAD  302D               	movlw	(low (cncMove@timeSteps| 0))& (0+255)
 34514  1EAE  00A2               	movwf	??_cncMove
 34515  1EAF  0822               	movf	??_cncMove,w
 34516  1EB0  00F3               	movwf	getAccelTable@i
 34517  1EB1  31C8  205A  319D   	fcall	_getAccelTable
 34518  1EB4  0971               	comf	?_getAccelTable,w
 34519  1EB5  0140               	movlb	0	; select bank0
 34520  1EB6  00AB               	movwf	cncMove@t
 34521  1EB7  0972               	comf	?_getAccelTable+1,w
 34522  1EB8  00AC               	movwf	cncMove@t+1
 34523                           
 34524                           ;cnc.c: 456: mv->count++;
 34525  1EB9  0820               	movf	cncMove@mv,w
 34526  1EBA  0086               	movwf	6
 34527  1EBB  0821               	movf	cncMove@mv+1,w
 34528  1EBC  0087               	movwf	7
 34529  1EBD  3157               	addfsr 1,23
 34530  1EBE  3001               	movlw	1
 34531  1EBF  0781               	addwf	1,f
 34532  1EC0  3141               	addfsr 1,1
 34533  1EC1  3000               	movlw	0
 34534  1EC2  3D81               	addwfc	1,f
 34535  1EC3  3141               	addfsr 1,1
 34536  1EC4  3000               	movlw	0
 34537  1EC5  3D81               	addwfc	1,f
 34538  1EC6  3141               	addfsr 1,1
 34539  1EC7  3000               	movlw	0
 34540  1EC8  3D81               	addwfc	1,f
 34541                           
 34542                           ;cnc.c: 457: timeSteps++;
 34543  1EC9  3001               	movlw	1
 34544  1ECA  07AD               	addwf	cncMove@timeSteps,f
 34545  1ECB  3000               	movlw	0
 34546  1ECC  3DAE               	addwfc	cncMove@timeSteps+1,f
 34547  1ECD  3000               	movlw	0
 34548  1ECE  3DAF               	addwfc	cncMove@timeSteps+2,f
 34549  1ECF  3000               	movlw	0
 34550  1ED0  3DB0               	addwfc	cncMove@timeSteps+3,f
 34551                           
 34552                           ;cnc.c: 458: (LATEbits.LATE2 = 1);
 34553  1ED1  151A               	bsf	26,2	;volatile
 34554  1ED2                     l1046:	
 34555                           ;cnc.c: 460: while(PIR4bits.TMR5IF == 0);
 34556                           
 34557  1ED2  014E               	movlb	14	; select bank14
 34558  1ED3  1E10               	btfss	16,4	;volatile
 34559  1ED4  2ED2               	goto	l1046
 34560                           
 34561                           ;cnc.c: 461: TMR5 = t;
 34562  1ED5  0140               	movlb	0	; select bank0
 34563  1ED6  2E40               	goto	L43
 34564  1ED7                     l10526:
 34565                           
 34566                           ;cnc.c: 466: if(mv->stop.En){
 34567  1ED7  0820               	movf	cncMove@mv,w
 34568  1ED8  3E27               	addlw	39
 34569  1ED9  0086               	movwf	6
 34570  1EDA  3000               	movlw	0
 34571  1EDB  3D21               	addwfc	cncMove@mv+1,w
 34572  1EDC  0087               	movwf	7
 34573  1EDD  0016               	moviw fsr1++
 34574  1EDE  0401               	iorwf	1,w
 34575  1EDF  1903               	btfsc	3,2
 34576  1EE0  2F04               	goto	l1053
 34577                           
 34578                           ;cnc.c: 467: if((*mv->stop.Port&mv->stop.Mask) != mv->stop.Value) break;
 34579  1EE1  0820               	movf	cncMove@mv,w
 34580  1EE2  3E2C               	addlw	44
 34581  1EE3  0086               	movwf	6
 34582  1EE4  3000               	movlw	0
 34583  1EE5  3D21               	addwfc	cncMove@mv+1,w
 34584  1EE6  0087               	movwf	7
 34585  1EE7  0820               	movf	cncMove@mv,w
 34586  1EE8  3E2B               	addlw	43
 34587  1EE9  0084               	movwf	4
 34588  1EEA  3000               	movlw	0
 34589  1EEB  3D21               	addwfc	cncMove@mv+1,w
 34590  1EEC  0085               	movwf	5
 34591  1EED  0800               	movf	0,w
 34592  1EEE  00A2               	movwf	??_cncMove
 34593  1EEF  0820               	movf	cncMove@mv,w
 34594  1EF0  3E29               	addlw	41
 34595  1EF1  0084               	movwf	4
 34596  1EF2  3000               	movlw	0
 34597  1EF3  3D21               	addwfc	cncMove@mv+1,w
 34598  1EF4  0085               	movwf	5
 34599  1EF5  3F00               	moviw [0]fsr0
 34600  1EF6  00A3               	movwf	??_cncMove+1
 34601  1EF7  3F01               	moviw [1]fsr0
 34602  1EF8  00A4               	movwf	??_cncMove+2
 34603  1EF9  0823               	movf	??_cncMove+1,w
 34604  1EFA  0084               	movwf	4
 34605  1EFB  0824               	movf	??_cncMove+2,w
 34606  1EFC  0085               	movwf	5
 34607  1EFD  0800               	movf	0,w
 34608  1EFE  0522               	andwf	??_cncMove,w
 34609  1EFF  00A5               	movwf	??_cncMove+3
 34610  1F00  0825               	movf	??_cncMove+3,w
 34611  1F01  0601               	xorwf	1,w
 34612  1F02  1D03               	btfss	3,2
 34613  1F03  2FA0               	goto	l10558
 34614  1F04                     l1053:
 34615                           
 34616                           ;cnc.c: 468: };cnc.c: 470: (LATEbits.LATE2 = 0);
 34617  1F04  111A               	bcf	26,2	;volatile
 34618                           
 34619                           ;cnc.c: 471: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 34620  1F05  0820               	movf	cncMove@mv,w
 34621  1F06  3E02               	addlw	2
 34622  1F07  00F1               	movwf	getAccelTable@accel
 34623  1F08  3000               	movlw	0
 34624  1F09  3D21               	addwfc	cncMove@mv+1,w
 34625  1F0A  00F2               	movwf	getAccelTable@accel+1
 34626  1F0B  302D               	movlw	(low (cncMove@timeSteps| 0))& (0+255)
 34627  1F0C  00A2               	movwf	??_cncMove
 34628  1F0D  0822               	movf	??_cncMove,w
 34629  1F0E  00F3               	movwf	getAccelTable@i
 34630  1F0F  31C8  205A  319D   	fcall	_getAccelTable
 34631  1F12  0971               	comf	?_getAccelTable,w
 34632  1F13  0140               	movlb	0	; select bank0
 34633  1F14  00AB               	movwf	cncMove@t
 34634  1F15  0972               	comf	?_getAccelTable+1,w
 34635  1F16  00AC               	movwf	cncMove@t+1
 34636                           
 34637                           ;cnc.c: 472: mv->count++;
 34638  1F17  0820               	movf	cncMove@mv,w
 34639  1F18  0086               	movwf	6
 34640  1F19  0821               	movf	cncMove@mv+1,w
 34641  1F1A  0087               	movwf	7
 34642  1F1B  3157               	addfsr 1,23
 34643  1F1C  3001               	movlw	1
 34644  1F1D  0781               	addwf	1,f
 34645  1F1E  3141               	addfsr 1,1
 34646  1F1F  3000               	movlw	0
 34647  1F20  3D81               	addwfc	1,f
 34648  1F21  3141               	addfsr 1,1
 34649  1F22  3000               	movlw	0
 34650  1F23  3D81               	addwfc	1,f
 34651  1F24  3141               	addfsr 1,1
 34652  1F25  3000               	movlw	0
 34653  1F26  3D81               	addwfc	1,f
 34654                           
 34655                           ;cnc.c: 473: (LATEbits.LATE2 = 1);
 34656  1F27  151A               	bsf	26,2	;volatile
 34657  1F28                     l1056:	
 34658                           ;cnc.c: 475: while(PIR4bits.TMR5IF == 0);
 34659                           
 34660  1F28  014E               	movlb	14	; select bank14
 34661  1F29  1E10               	btfss	16,4	;volatile
 34662  1F2A  2F28               	goto	l1056
 34663                           
 34664                           ;cnc.c: 476: TMR5 = t;
 34665  1F2B  0140               	movlb	0	; select bank0
 34666  1F2C  082C               	movf	cncMove@t+1,w
 34667  1F2D  0144               	movlb	4	; select bank4
 34668  1F2E  0099               	movwf	25	;volatile
 34669  1F2F  0140               	movlb	0	; select bank0
 34670  1F30  082B               	movf	cncMove@t,w
 34671  1F31  0144               	movlb	4	; select bank4
 34672  1F32  0098               	movwf	24	;volatile
 34673                           
 34674                           ;cnc.c: 477: PIR4bits.TMR5IF = 0;
 34675  1F33  014E               	movlb	14	; select bank14
 34676  1F34  1210               	bcf	16,4	;volatile
 34677  1F35                     l10542:
 34678  1F35  0140               	movlb	0	; select bank0
 34679  1F36  0820               	movf	cncMove@mv,w
 34680  1F37  3E23               	addlw	35
 34681  1F38  0086               	movwf	6
 34682  1F39  3000               	movlw	0
 34683  1F3A  3D21               	addwfc	cncMove@mv+1,w
 34684  1F3B  0087               	movwf	7
 34685  1F3C  3F40               	moviw [0]fsr1
 34686  1F3D  00A2               	movwf	??_cncMove
 34687  1F3E  3F41               	moviw [1]fsr1
 34688  1F3F  00A3               	movwf	??_cncMove+1
 34689  1F40  3F42               	moviw [2]fsr1
 34690  1F41  00A4               	movwf	??_cncMove+2
 34691  1F42  3F43               	moviw [3]fsr1
 34692  1F43  00A5               	movwf	??_cncMove+3
 34693  1F44  0820               	movf	cncMove@mv,w
 34694  1F45  0086               	movwf	6
 34695  1F46  0821               	movf	cncMove@mv+1,w
 34696  1F47  0087               	movwf	7
 34697  1F48  3157               	addfsr 1,23
 34698  1F49  3F40               	moviw [0]fsr1
 34699  1F4A  00A6               	movwf	??_cncMove+4
 34700  1F4B  3F41               	moviw [1]fsr1
 34701  1F4C  00A7               	movwf	??_cncMove+5
 34702  1F4D  3F42               	moviw [2]fsr1
 34703  1F4E  00A8               	movwf	??_cncMove+6
 34704  1F4F  3F43               	moviw [3]fsr1
 34705  1F50  00A9               	movwf	??_cncMove+7
 34706  1F51  0829               	movf	??_cncMove+7,w
 34707  1F52  3A80               	xorlw	128
 34708  1F53  00AA               	movwf	??_cncMove+8
 34709  1F54  0825               	movf	??_cncMove+3,w
 34710  1F55  3A80               	xorlw	128
 34711  1F56  022A               	subwf	??_cncMove+8,w
 34712  1F57  1D03               	skipz
 34713  1F58  2F63               	goto	u12113
 34714  1F59  0824               	movf	??_cncMove+2,w
 34715  1F5A  0228               	subwf	??_cncMove+6,w
 34716  1F5B  1D03               	skipz
 34717  1F5C  2F63               	goto	u12113
 34718  1F5D  0823               	movf	??_cncMove+1,w
 34719  1F5E  0227               	subwf	??_cncMove+5,w
 34720  1F5F  1D03               	skipz
 34721  1F60  2F63               	goto	u12113
 34722  1F61  0822               	movf	??_cncMove,w
 34723  1F62  0226               	subwf	??_cncMove+4,w
 34724  1F63                     u12113:
 34725  1F63  1C03               	btfss	3,0
 34726  1F64  1E0C               	btfss	12,4	;volatile
 34727  1F65  2FA0               	goto	l10558
 34728  1F66  2ED7               	goto	l10526
 34729  1F67                     l1062:
 34730                           
 34731                           ;cnc.c: 481: (LATEbits.LATE2 = 0);
 34732  1F67  111A               	bcf	26,2	;volatile
 34733                           
 34734                           ;cnc.c: 482: mv->count++;
 34735  1F68  0820               	movf	cncMove@mv,w
 34736  1F69  0086               	movwf	6
 34737  1F6A  0821               	movf	cncMove@mv+1,w
 34738  1F6B  0087               	movwf	7
 34739  1F6C  3157               	addfsr 1,23
 34740  1F6D  3001               	movlw	1
 34741  1F6E  0781               	addwf	1,f
 34742  1F6F  3141               	addfsr 1,1
 34743  1F70  3000               	movlw	0
 34744  1F71  3D81               	addwfc	1,f
 34745  1F72  3141               	addfsr 1,1
 34746  1F73  3000               	movlw	0
 34747  1F74  3D81               	addwfc	1,f
 34748  1F75  3141               	addfsr 1,1
 34749  1F76  3000               	movlw	0
 34750  1F77  3D81               	addwfc	1,f
 34751                           
 34752                           ;cnc.c: 483: timeSteps--;
 34753  1F78  30FF               	movlw	255
 34754  1F79  07AD               	addwf	cncMove@timeSteps,f
 34755  1F7A  30FF               	movlw	255
 34756  1F7B  3DAE               	addwfc	cncMove@timeSteps+1,f
 34757  1F7C  30FF               	movlw	255
 34758  1F7D  3DAF               	addwfc	cncMove@timeSteps+2,f
 34759  1F7E  30FF               	movlw	255
 34760  1F7F  3DB0               	addwfc	cncMove@timeSteps+3,f
 34761                           
 34762                           ;cnc.c: 484: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 34763  1F80  0820               	movf	cncMove@mv,w
 34764  1F81  3E02               	addlw	2
 34765  1F82  00F1               	movwf	getAccelTable@accel
 34766  1F83  3000               	movlw	0
 34767  1F84  3D21               	addwfc	cncMove@mv+1,w
 34768  1F85  00F2               	movwf	getAccelTable@accel+1
 34769  1F86  302D               	movlw	(low (cncMove@timeSteps| 0))& (0+255)
 34770  1F87  00A2               	movwf	??_cncMove
 34771  1F88  0822               	movf	??_cncMove,w
 34772  1F89  00F3               	movwf	getAccelTable@i
 34773  1F8A  31C8  205A  319D   	fcall	_getAccelTable
 34774  1F8D  0971               	comf	?_getAccelTable,w
 34775  1F8E  0140               	movlb	0	; select bank0
 34776  1F8F  00AB               	movwf	cncMove@t
 34777  1F90  0972               	comf	?_getAccelTable+1,w
 34778  1F91  00AC               	movwf	cncMove@t+1
 34779                           
 34780                           ;cnc.c: 485: (LATEbits.LATE2 = 1);
 34781  1F92  151A               	bsf	26,2	;volatile
 34782  1F93                     l1063:	
 34783                           ;cnc.c: 487: while(PIR4bits.TMR5IF == 0);
 34784                           
 34785  1F93  014E               	movlb	14	; select bank14
 34786  1F94  1E10               	btfss	16,4	;volatile
 34787  1F95  2F93               	goto	l1063
 34788                           
 34789                           ;cnc.c: 488: TMR5 = t;
 34790  1F96  0140               	movlb	0	; select bank0
 34791  1F97  082C               	movf	cncMove@t+1,w
 34792  1F98  0144               	movlb	4	; select bank4
 34793  1F99  0099               	movwf	25	;volatile
 34794  1F9A  0140               	movlb	0	; select bank0
 34795  1F9B  082B               	movf	cncMove@t,w
 34796  1F9C  0144               	movlb	4	; select bank4
 34797  1F9D  0098               	movwf	24	;volatile
 34798                           
 34799                           ;cnc.c: 489: PIR4bits.TMR5IF = 0;
 34800  1F9E  014E               	movlb	14	; select bank14
 34801  1F9F  1210               	bcf	16,4	;volatile
 34802  1FA0                     l10558:
 34803  1FA0  0140               	movlb	0	; select bank0
 34804  1FA1  1BB0               	btfsc	cncMove@timeSteps+3,7
 34805  1FA2  2FB3               	goto	l1068
 34806  1FA3  0830               	movf	cncMove@timeSteps+3,w
 34807  1FA4  1D03               	btfss	3,2
 34808  1FA5  2FB0               	goto	l10560
 34809  1FA6  082F               	movf	cncMove@timeSteps+2,w
 34810  1FA7  1D03               	btfss	3,2
 34811  1FA8  2FB0               	goto	l10560
 34812  1FA9  082E               	movf	cncMove@timeSteps+1,w
 34813  1FAA  1D03               	btfss	3,2
 34814  1FAB  2FB0               	goto	l10560
 34815  1FAC  3001               	movlw	1
 34816  1FAD  022D               	subwf	cncMove@timeSteps,w
 34817  1FAE  1C03               	btfss	3,0
 34818  1FAF  2FB3               	goto	l1068
 34819  1FB0                     l10560:
 34820  1FB0  0140               	movlb	0	; select bank0
 34821  1FB1  1A0C               	btfsc	12,4	;volatile
 34822  1FB2  2F67               	goto	l1062
 34823  1FB3                     l1068:
 34824                           
 34825                           ;cnc.c: 490: };;cnc.c: 492: TMR2IF = 0;
 34826  1FB3  014E               	movlb	14	; select bank14
 34827  1FB4  1090               	bcf	16,1	;volatile
 34828                           
 34829                           ;cnc.c: 493: TMR2IE = 1;
 34830  1FB5  149A               	bsf	26,1	;volatile
 34831                           
 34832                           ;cnc.c: 495: if(mv->dir == 0){
 34833  1FB6  0140               	movlb	0	; select bank0
 34834  1FB7  0820               	movf	cncMove@mv,w
 34835  1FB8  0086               	movwf	6
 34836  1FB9  0821               	movf	cncMove@mv+1,w
 34837  1FBA  0087               	movwf	7
 34838  1FBB  0016               	moviw fsr1++
 34839  1FBC  0401               	iorwf	1,w
 34840  1FBD  1D03               	btfss	3,2
 34841  1FBE  2FDC               	goto	l10566
 34842                           
 34843                           ;cnc.c: 496: step.ref += mv->count;
 34844  1FBF  0820               	movf	cncMove@mv,w
 34845  1FC0  0086               	movwf	6
 34846  1FC1  0821               	movf	cncMove@mv+1,w
 34847  1FC2  0087               	movwf	7
 34848  1FC3  3157               	addfsr 1,23
 34849  1FC4  3F40               	moviw [0]fsr1
 34850  1FC5  00A2               	movwf	??_cncMove
 34851  1FC6  3F41               	moviw [1]fsr1
 34852  1FC7  00A3               	movwf	??_cncMove+1
 34853  1FC8  3F42               	moviw [2]fsr1
 34854  1FC9  00A4               	movwf	??_cncMove+2
 34855  1FCA  3F43               	moviw [3]fsr1
 34856  1FCB  00A5               	movwf	??_cncMove+3
 34857  1FCC  30E8               	movlw	232
 34858  1FCD  0086               	movwf	6
 34859  1FCE  302F               	movlw	47
 34860  1FCF  0087               	movwf	7
 34861  1FD0  0822               	movf	??_cncMove,w
 34862  1FD1  0781               	addwf	1,f
 34863  1FD2  3141               	addfsr 1,1
 34864  1FD3  0823               	movf	??_cncMove+1,w
 34865  1FD4  3D81               	addwfc	1,f
 34866  1FD5  3141               	addfsr 1,1
 34867  1FD6  0824               	movf	??_cncMove+2,w
 34868  1FD7  3D81               	addwfc	1,f
 34869  1FD8  3141               	addfsr 1,1
 34870  1FD9  0825               	movf	??_cncMove+3,w
 34871  1FDA  3D81               	addwfc	1,f
 34872                           
 34873                           ;cnc.c: 497: }
 34874  1FDB  2FF9               	goto	l10568
 34875  1FDC                     l10566:
 34876                           
 34877                           ;cnc.c: 498: else{;cnc.c: 499: step.ref -= mv->count;
 34878  1FDC  0820               	movf	cncMove@mv,w
 34879  1FDD  0086               	movwf	6
 34880  1FDE  0821               	movf	cncMove@mv+1,w
 34881  1FDF  0087               	movwf	7
 34882  1FE0  3157               	addfsr 1,23
 34883  1FE1  3F40               	moviw [0]fsr1
 34884  1FE2  00A2               	movwf	??_cncMove
 34885  1FE3  3F41               	moviw [1]fsr1
 34886  1FE4  00A3               	movwf	??_cncMove+1
 34887  1FE5  3F42               	moviw [2]fsr1
 34888  1FE6  00A4               	movwf	??_cncMove+2
 34889  1FE7  3F43               	moviw [3]fsr1
 34890  1FE8  00A5               	movwf	??_cncMove+3
 34891  1FE9  30E8               	movlw	232
 34892  1FEA  0086               	movwf	6
 34893  1FEB  302F               	movlw	47
 34894  1FEC  0087               	movwf	7
 34895  1FED  0822               	movf	??_cncMove,w
 34896  1FEE  0281               	subwf	1,f
 34897  1FEF  3141               	addfsr 1,1
 34898  1FF0  0823               	movf	??_cncMove+1,w
 34899  1FF1  3B81               	subwfb	1,f
 34900  1FF2  3141               	addfsr 1,1
 34901  1FF3  0824               	movf	??_cncMove+2,w
 34902  1FF4  3B81               	subwfb	1,f
 34903  1FF5  3141               	addfsr 1,1
 34904  1FF6  0825               	movf	??_cncMove+3,w
 34905  1FF7  3B81               	subwfb	1,f
 34906  1FF8  317D               	addfsr 1,-3
 34907  1FF9                     l10568:
 34908                           
 34909                           ;cnc.c: 500: };cnc.c: 502: return cncEndMove(mv);
 34910  1FF9  0821               	movf	cncMove@mv+1,w
 34911  1FFA  00F2               	movwf	cncEndMove@mv+1
 34912  1FFB  0820               	movf	cncMove@mv,w
 34913  1FFC  00F1               	movwf	cncEndMove@mv
 34914  1FFD  31D3  231D         	fcall	_cncEndMove
 34915  1FFF  0008               	return
 34916  2000                     __end_of_cncMove:
 34917                           
 34918                           	psect	text43
 34919  5251                     __ptext43:	
 34920 ;; *************** function _cncConfigStop *****************
 34921 ;; Defined at:
 34922 ;;		line 239 in file "cnc.c"
 34923 ;; Parameters:    Size  Location     Type
 34924 ;;  mv              2    1[COMMON] PTR struct .
 34925 ;;		 -> step(248), 
 34926 ;;  port            2    3[COMMON] PTR unsigned char 
 34927 ;;		 -> PORTB(1), 
 34928 ;;  mask            1    5[COMMON] unsigned char 
 34929 ;;  value           1    6[COMMON] unsigned char 
 34930 ;; Auto vars:     Size  Location     Type
 34931 ;;		None
 34932 ;; Return value:  Size  Location     Type
 34933 ;;                  1    wreg      void 
 34934 ;; Registers used:
 34935 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 34936 ;; Tracked objects:
 34937 ;;		On entry : 3F/0
 34938 ;;		On exit  : 3F/0
 34939 ;;		Unchanged: 3F/0
 34940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34941 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34944 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34945 ;;Total ram usage:        8 bytes
 34946 ;; Hardware stack levels used: 1
 34947 ;; Hardware stack levels required when called: unknown (due to recursion)
 34948 ;; This function calls:
 34949 ;;		Nothing
 34950 ;; This function is called by:
 34951 ;;		_cncManualMove
 34952 ;; This function uses a non-reentrant model
 34953 ;;
 34954                           
 34955  5251                     _cncConfigStop:	
 34956                           ;psect for function _cncConfigStop
 34957                           
 34958                           
 34959                           ;cnc.c: 240: mv->stop.En = 1;
 34960                           
 34961                           ;incstack = 0
 34962                           ; Regs used in _cncConfigStop: [wreg+fsr1l+fsr1h+status,2+status,0]
 34963  5251  0871               	movf	cncConfigStop@mv,w
 34964  5252  3E27               	addlw	39
 34965  5253  0086               	movwf	6
 34966  5254  3000               	movlw	0
 34967  5255  3D72               	addwfc	cncConfigStop@mv+1,w
 34968  5256  0087               	movwf	7
 34969  5257  3001               	movlw	1
 34970  5258  3FC0               	movwi [0]fsr1
 34971  5259  3000               	movlw	0
 34972  525A  3FC1               	movwi [1]fsr1
 34973                           
 34974                           ;cnc.c: 241: mv->stop.Port = port;
 34975  525B  0871               	movf	cncConfigStop@mv,w
 34976  525C  3E29               	addlw	41
 34977  525D  0086               	movwf	6
 34978  525E  3000               	movlw	0
 34979  525F  3D72               	addwfc	cncConfigStop@mv+1,w
 34980  5260  0087               	movwf	7
 34981  5261  0873               	movf	cncConfigStop@port,w
 34982  5262  3FC0               	movwi [0]fsr1
 34983  5263  0874               	movf	cncConfigStop@port+1,w
 34984  5264  3FC1               	movwi [1]fsr1
 34985                           
 34986                           ;cnc.c: 242: mv->stop.Mask = mask;
 34987  5265  0871               	movf	cncConfigStop@mv,w
 34988  5266  3E2B               	addlw	43
 34989  5267  00F7               	movwf	??_cncConfigStop
 34990  5268  3000               	movlw	0
 34991  5269  3D72               	addwfc	cncConfigStop@mv+1,w
 34992  526A  00F8               	movwf	??_cncConfigStop+1
 34993  526B  0877               	movf	??_cncConfigStop,w
 34994  526C  0086               	movwf	6
 34995  526D  0878               	movf	??_cncConfigStop+1,w
 34996  526E  0087               	movwf	7
 34997  526F  0875               	movf	cncConfigStop@mask,w
 34998  5270  0081               	movwf	1
 34999                           
 35000                           ;cnc.c: 243: mv->stop.Value = value;
 35001  5271  0871               	movf	cncConfigStop@mv,w
 35002  5272  3E2C               	addlw	44
 35003  5273  00F7               	movwf	??_cncConfigStop
 35004  5274  3000               	movlw	0
 35005  5275  3D72               	addwfc	cncConfigStop@mv+1,w
 35006  5276  00F8               	movwf	??_cncConfigStop+1
 35007  5277  0877               	movf	??_cncConfigStop,w
 35008  5278  0086               	movwf	6
 35009  5279  0878               	movf	??_cncConfigStop+1,w
 35010  527A  0087               	movwf	7
 35011  527B  0876               	movf	cncConfigStop@value,w
 35012  527C  0081               	movwf	1
 35013  527D  0008               	return
 35014  527E                     __end_of_cncConfigStop:
 35015                           
 35016                           	psect	text44
 35017  4129                     __ptext44:	
 35018 ;; *************** function _cncConfigHome *****************
 35019 ;; Defined at:
 35020 ;;		line 336 in file "cnc.c"
 35021 ;; Parameters:    Size  Location     Type
 35022 ;;		None
 35023 ;; Auto vars:     Size  Location     Type
 35024 ;;  b               1   79[BANK0 ] unsigned char 
 35025 ;; Return value:  Size  Location     Type
 35026 ;;                  1    wreg      void 
 35027 ;; Registers used:
 35028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 35029 ;; Tracked objects:
 35030 ;;		On entry : 3D/0
 35031 ;;		On exit  : 3F/0
 35032 ;;		Unchanged: 0/0
 35033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35037 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35038 ;;Total ram usage:        5 bytes
 35039 ;; Hardware stack levels used: 1
 35040 ;; Hardware stack levels required when called: unknown (due to recursion)
 35041 ;; This function calls:
 35042 ;;		_cncConfigMove
 35043 ;;		_cncHomeMove
 35044 ;;		_convertMMtoSteps
 35045 ;;		_escreve_LCD
 35046 ;;		_liberarTeclado
 35047 ;; This function is called by:
 35048 ;;		_main
 35049 ;; This function uses a non-reentrant model
 35050 ;;
 35051                           
 35052  4129                     _cncConfigHome:	
 35053                           ;psect for function _cncConfigHome
 35054                           
 35055                           
 35056                           ;cnc.c: 337: uchar b = 0;
 35057                           
 35058                           ;incstack = 0
 35059                           ; Regs used in _cncConfigHome: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 35060  4129  0140               	movlb	0	; select bank0
 35061  412A  01EF               	clrf	cncConfigHome@b
 35062                           
 35063                           ;cnc.c: 338: escreve_LCD(2,1,"Referenciar???");
 35064  412B  01A0               	clrf	escreve_LCD@coluna
 35065  412C  0AA0               	incf	escreve_LCD@coluna,f
 35066  412D  30B5               	movlw	low (STR_18| (0+32768))
 35067  412E  00A1               	movwf	escreve_LCD@str
 35068  412F  30E0               	movlw	high (STR_18| (0+32768))
 35069  4130  00A2               	movwf	escreve_LCD@str+1
 35070  4131  3002               	movlw	2
 35071  4132  31D2  22E7  31C1   	fcall	_escreve_LCD
 35072  4135                     l11446:
 35073                           
 35074                           ;cnc.c: 341: if(bt.exec) {
 35075  4135  0142               	movlb	2	; select bank2
 35076  4136  0821               	movf	(_bt^(0+256)+1),w	;volatile
 35077  4137  1903               	btfsc	3,2
 35078  4138  293E               	goto	l11450
 35079                           
 35080                           ;cnc.c: 342: b = bt.value;
 35081  4139  0820               	movf	_bt^(0+256),w	;volatile
 35082  413A  0140               	movlb	0	; select bank0
 35083  413B  00EB               	movwf	??_cncConfigHome
 35084  413C  086B               	movf	??_cncConfigHome,w
 35085  413D  00EF               	movwf	cncConfigHome@b
 35086  413E                     l11450:
 35087                           
 35088                           ;cnc.c: 343: };cnc.c: 344: }while(b != 0x12 && b != 0x0C);
 35089  413E  3012               	movlw	18
 35090  413F  0140               	movlb	0	; select bank0
 35091  4140  066F               	xorwf	cncConfigHome@b,w
 35092  4141  1903               	btfsc	3,2
 35093  4142  2947               	goto	l11454
 35094  4143  300C               	movlw	12
 35095  4144  066F               	xorwf	cncConfigHome@b,w
 35096  4145  1D03               	btfss	3,2
 35097  4146  2935               	goto	l11446
 35098  4147                     l11454:
 35099                           
 35100                           ;cnc.c: 345: liberarTeclado(500);
 35101  4147  30F4               	movlw	244
 35102  4148  00F1               	movwf	liberarTeclado@ms
 35103  4149  3001               	movlw	1
 35104  414A  00F2               	movwf	liberarTeclado@ms+1
 35105  414B  31D0  2007  31C1   	fcall	_liberarTeclado
 35106                           
 35107                           ;cnc.c: 347: if(b == 0x0C) return;
 35108  414E  300C               	movlw	12
 35109  414F  0140               	movlb	0	; select bank0
 35110  4150  066F               	xorwf	cncConfigHome@b,w
 35111  4151  1903               	btfsc	3,2
 35112  4152  0008               	return
 35113                           
 35114                           ;cnc.c: 349: escreve_LCD(2,1,"Referenciando...");
 35115  4153  01A0               	clrf	escreve_LCD@coluna
 35116  4154  0AA0               	incf	escreve_LCD@coluna,f
 35117  4155  3037               	movlw	low (STR_19| (0+32768))
 35118  4156  00A1               	movwf	escreve_LCD@str
 35119  4157  30E0               	movlw	high (STR_19| (0+32768))
 35120  4158  00A2               	movwf	escreve_LCD@str+1
 35121  4159  3002               	movlw	2
 35122  415A  31D2  22E7  31C1   	fcall	_escreve_LCD
 35123                           
 35124                           ;cnc.c: 353: step.ref = cnc.max.step.Pos;
 35125  415D  30E8               	movlw	232
 35126  415E  0086               	movwf	6
 35127  415F  302F               	movlw	47
 35128  4160  0087               	movwf	7
 35129  4161  0143               	movlb	3	; select bank3
 35130  4162  0850               	movf	(_cnc^(0+384)+48),w
 35131  4163  3FC0               	movwi [0]fsr1
 35132  4164  0851               	movf	((_cnc+1)^(0+384)+48),w
 35133  4165  3FC1               	movwi [1]fsr1
 35134  4166  0852               	movf	((_cnc+2)^(0+384)+48),w
 35135  4167  3FC2               	movwi [2]fsr1
 35136  4168  0853               	movf	((_cnc+3)^(0+384)+48),w
 35137  4169  3FC3               	movwi [3]fsr1
 35138                           
 35139                           ;cnc.c: 354: step.Manual.toStart = step.ref;
 35140  416A  30E8               	movlw	232
 35141  416B  0086               	movwf	6
 35142  416C  302F               	movlw	47
 35143  416D  0087               	movwf	7
 35144  416E  3F40               	moviw [0]fsr1
 35145  416F  0140               	movlb	0	; select bank0
 35146  4170  00EB               	movwf	??_cncConfigHome
 35147  4171  3F41               	moviw [1]fsr1
 35148  4172  00EC               	movwf	??_cncConfigHome+1
 35149  4173  3F42               	moviw [2]fsr1
 35150  4174  00ED               	movwf	??_cncConfigHome+2
 35151  4175  3F43               	moviw [3]fsr1
 35152  4176  00EE               	movwf	??_cncConfigHome+3
 35153  4177  30B2               	movlw	178
 35154  4178  0086               	movwf	6
 35155  4179  302F               	movlw	47
 35156  417A  0087               	movwf	7
 35157  417B  086B               	movf	??_cncConfigHome,w
 35158  417C  3FC0               	movwi [0]fsr1
 35159  417D  086C               	movf	??_cncConfigHome+1,w
 35160  417E  3FC1               	movwi [1]fsr1
 35161  417F  086D               	movf	??_cncConfigHome+2,w
 35162  4180  3FC2               	movwi [2]fsr1
 35163  4181  086E               	movf	??_cncConfigHome+3,w
 35164  4182  3FC3               	movwi [3]fsr1
 35165                           
 35166                           ;cnc.c: 355: step.Manual.toStop = cnc.min.step.Pos;
 35167  4183  30B6               	movlw	182
 35168  4184  0086               	movwf	6
 35169  4185  302F               	movlw	47
 35170  4186  0087               	movwf	7
 35171  4187  0143               	movlb	3	; select bank3
 35172  4188  083C               	movf	(_cnc^(0+384)+28),w
 35173  4189  3FC0               	movwi [0]fsr1
 35174  418A  083D               	movf	((_cnc+1)^(0+384)+28),w
 35175  418B  3FC1               	movwi [1]fsr1
 35176  418C  083E               	movf	((_cnc+2)^(0+384)+28),w
 35177  418D  3FC2               	movwi [2]fsr1
 35178  418E  083F               	movf	((_cnc+3)^(0+384)+28),w
 35179  418F  3FC3               	movwi [3]fsr1
 35180                           
 35181                           ;cnc.c: 356: cncConfigMove(&step.Manual,10.0,ACC_12);
 35182  4190  30A3               	movlw	163
 35183  4191  0140               	movlb	0	; select bank0
 35184  4192  00E4               	movwf	cncConfigMove@mv
 35185  4193  302F               	movlw	47
 35186  4194  00E5               	movwf	cncConfigMove@mv+1
 35187  4195  3041               	movlw	65
 35188  4196  00E9               	movwf	cncConfigMove@speed+3
 35189  4197  3020               	movlw	32
 35190  4198  00E8               	movwf	cncConfigMove@speed+2
 35191  4199  3000               	movlw	0
 35192  419A  00E7               	movwf	cncConfigMove@speed+1
 35193  419B  3000               	movlw	0
 35194  419C  00E6               	movwf	cncConfigMove@speed
 35195  419D  3004               	movlw	4
 35196  419E  00EB               	movwf	??_cncConfigHome
 35197  419F  086B               	movf	??_cncConfigHome,w
 35198  41A0  00EA               	movwf	cncConfigMove@accel
 35199  41A1  31BC  2450  31C1   	fcall	_cncConfigMove
 35200                           
 35201                           ;cnc.c: 357: cncHomeMove(&step.Manual, 1);
 35202  41A4  30A3               	movlw	163
 35203  41A5  00A0               	movwf	cncHomeMove@mv
 35204  41A6  302F               	movlw	47
 35205  41A7  00A1               	movwf	cncHomeMove@mv+1
 35206  41A8  01A2               	clrf	cncHomeMove@varHome
 35207  41A9  0AA2               	incf	cncHomeMove@varHome,f
 35208  41AA  31B8  20F6  31C1   	fcall	_cncHomeMove
 35209                           
 35210                           ;cnc.c: 359: step.ref = 0;
 35211  41AD  30E8               	movlw	232
 35212  41AE  0086               	movwf	6
 35213  41AF  302F               	movlw	47
 35214  41B0  0087               	movwf	7
 35215  41B1  3000               	movlw	0
 35216  41B2  3FC0               	movwi [0]fsr1
 35217  41B3  3FC1               	movwi [1]fsr1
 35218  41B4  3FC2               	movwi [2]fsr1
 35219  41B5  3FC3               	movwi [3]fsr1
 35220                           
 35221                           ;cnc.c: 360: step.Manual.toStart = step.ref;
 35222  41B6  30E8               	movlw	232
 35223  41B7  0086               	movwf	6
 35224  41B8  302F               	movlw	47
 35225  41B9  0087               	movwf	7
 35226  41BA  3F40               	moviw [0]fsr1
 35227  41BB  00EB               	movwf	??_cncConfigHome
 35228  41BC  3F41               	moviw [1]fsr1
 35229  41BD  00EC               	movwf	??_cncConfigHome+1
 35230  41BE  3F42               	moviw [2]fsr1
 35231  41BF  00ED               	movwf	??_cncConfigHome+2
 35232  41C0  3F43               	moviw [3]fsr1
 35233  41C1  00EE               	movwf	??_cncConfigHome+3
 35234  41C2  30B2               	movlw	178
 35235  41C3  0086               	movwf	6
 35236  41C4  302F               	movlw	47
 35237  41C5  0087               	movwf	7
 35238  41C6  086B               	movf	??_cncConfigHome,w
 35239  41C7  3FC0               	movwi [0]fsr1
 35240  41C8  086C               	movf	??_cncConfigHome+1,w
 35241  41C9  3FC1               	movwi [1]fsr1
 35242  41CA  086D               	movf	??_cncConfigHome+2,w
 35243  41CB  3FC2               	movwi [2]fsr1
 35244  41CC  086E               	movf	??_cncConfigHome+3,w
 35245  41CD  3FC3               	movwi [3]fsr1
 35246                           
 35247                           ;cnc.c: 361: step.Manual.toStop = step.Manual.toCruise + 1000;
 35248  41CE  30E8               	movlw	232
 35249  41CF  00EB               	movwf	??_cncConfigHome
 35250  41D0  3003               	movlw	3
 35251  41D1  00EC               	movwf	??_cncConfigHome+1
 35252  41D2  3000               	movlw	0
 35253  41D3  00ED               	movwf	??_cncConfigHome+2
 35254  41D4  3000               	movlw	0
 35255  41D5  00EE               	movwf	??_cncConfigHome+3
 35256  41D6  30C2               	movlw	194
 35257  41D7  0086               	movwf	6
 35258  41D8  302F               	movlw	47
 35259  41D9  0087               	movwf	7
 35260  41DA  3F40               	moviw [0]fsr1
 35261  41DB  07EB               	addwf	??_cncConfigHome,f
 35262  41DC  3F41               	moviw [1]fsr1
 35263  41DD  3DEC               	addwfc	??_cncConfigHome+1,f
 35264  41DE  3F42               	moviw [2]fsr1
 35265  41DF  3DED               	addwfc	??_cncConfigHome+2,f
 35266  41E0  3F43               	moviw [3]fsr1
 35267  41E1  3DEE               	addwfc	??_cncConfigHome+3,f
 35268  41E2  30B6               	movlw	182
 35269  41E3  0086               	movwf	6
 35270  41E4  302F               	movlw	47
 35271  41E5  0087               	movwf	7
 35272  41E6  086B               	movf	??_cncConfigHome,w
 35273  41E7  3FC0               	movwi [0]fsr1
 35274  41E8  086C               	movf	??_cncConfigHome+1,w
 35275  41E9  3FC1               	movwi [1]fsr1
 35276  41EA  086D               	movf	??_cncConfigHome+2,w
 35277  41EB  3FC2               	movwi [2]fsr1
 35278  41EC  086E               	movf	??_cncConfigHome+3,w
 35279  41ED  3FC3               	movwi [3]fsr1
 35280                           
 35281                           ;cnc.c: 362: cncConfigMove(&step.Manual,5.0,ACC_12);
 35282  41EE  30A3               	movlw	163
 35283  41EF  00E4               	movwf	cncConfigMove@mv
 35284  41F0  302F               	movlw	47
 35285  41F1  00E5               	movwf	cncConfigMove@mv+1
 35286  41F2  3040               	movlw	64
 35287  41F3  00E9               	movwf	cncConfigMove@speed+3
 35288  41F4  30A0               	movlw	160
 35289  41F5  00E8               	movwf	cncConfigMove@speed+2
 35290  41F6  3000               	movlw	0
 35291  41F7  00E7               	movwf	cncConfigMove@speed+1
 35292  41F8  3000               	movlw	0
 35293  41F9  00E6               	movwf	cncConfigMove@speed
 35294  41FA  3004               	movlw	4
 35295  41FB  00EB               	movwf	??_cncConfigHome
 35296  41FC  086B               	movf	??_cncConfigHome,w
 35297  41FD  00EA               	movwf	cncConfigMove@accel
 35298  41FE  31BC  2450  31C1   	fcall	_cncConfigMove
 35299                           
 35300                           ;cnc.c: 363: cncHomeMove(&step.Manual, 0);
 35301  4201  30A3               	movlw	163
 35302  4202  00A0               	movwf	cncHomeMove@mv
 35303  4203  302F               	movlw	47
 35304  4204  00A1               	movwf	cncHomeMove@mv+1
 35305  4205  01A2               	clrf	cncHomeMove@varHome
 35306  4206  31B8  20F6  31C1   	fcall	_cncHomeMove
 35307                           
 35308                           ;cnc.c: 365: escreve_LCD(2,1,"Movendo p/ Home");
 35309  4209  01A0               	clrf	escreve_LCD@coluna
 35310  420A  0AA0               	incf	escreve_LCD@coluna,f
 35311  420B  3068               	movlw	low (STR_20| (0+32768))
 35312  420C  00A1               	movwf	escreve_LCD@str
 35313  420D  30E0               	movlw	high (STR_20| (0+32768))
 35314  420E  00A2               	movwf	escreve_LCD@str+1
 35315  420F  3002               	movlw	2
 35316  4210  31D2  22E7  31C1   	fcall	_escreve_LCD
 35317                           
 35318                           ;cnc.c: 366: step.ref = 0;
 35319  4213  30E8               	movlw	232
 35320  4214  0086               	movwf	6
 35321  4215  302F               	movlw	47
 35322  4216  0087               	movwf	7
 35323  4217  3000               	movlw	0
 35324  4218  3FC0               	movwi [0]fsr1
 35325  4219  3FC1               	movwi [1]fsr1
 35326  421A  3FC2               	movwi [2]fsr1
 35327  421B  3FC3               	movwi [3]fsr1
 35328                           
 35329                           ;cnc.c: 367: step.Manual.toStart = step.ref;
 35330  421C  30E8               	movlw	232
 35331  421D  0086               	movwf	6
 35332  421E  302F               	movlw	47
 35333  421F  0087               	movwf	7
 35334  4220  3F40               	moviw [0]fsr1
 35335  4221  0140               	movlb	0	; select bank0
 35336  4222  00EB               	movwf	??_cncConfigHome
 35337  4223  3F41               	moviw [1]fsr1
 35338  4224  00EC               	movwf	??_cncConfigHome+1
 35339  4225  3F42               	moviw [2]fsr1
 35340  4226  00ED               	movwf	??_cncConfigHome+2
 35341  4227  3F43               	moviw [3]fsr1
 35342  4228  00EE               	movwf	??_cncConfigHome+3
 35343  4229  30B2               	movlw	178
 35344  422A  0086               	movwf	6
 35345  422B  302F               	movlw	47
 35346  422C  0087               	movwf	7
 35347  422D  086B               	movf	??_cncConfigHome,w
 35348  422E  3FC0               	movwi [0]fsr1
 35349  422F  086C               	movf	??_cncConfigHome+1,w
 35350  4230  3FC1               	movwi [1]fsr1
 35351  4231  086D               	movf	??_cncConfigHome+2,w
 35352  4232  3FC2               	movwi [2]fsr1
 35353  4233  086E               	movf	??_cncConfigHome+3,w
 35354  4234  3FC3               	movwi [3]fsr1
 35355                           
 35356                           ;cnc.c: 368: step.Manual.toStop = convertMMtoSteps(15.00);
 35357  4235  3041               	movlw	65
 35358  4236  00E3               	movwf	convertMMtoSteps@mm+3
 35359  4237  3070               	movlw	112
 35360  4238  00E2               	movwf	convertMMtoSteps@mm+2
 35361  4239  3000               	movlw	0
 35362  423A  00E1               	movwf	convertMMtoSteps@mm+1
 35363  423B  3000               	movlw	0
 35364  423C  00E0               	movwf	convertMMtoSteps@mm
 35365  423D  31D1  21A0  31C1   	fcall	_convertMMtoSteps
 35366  4240  30B6               	movlw	182
 35367  4241  0086               	movwf	6
 35368  4242  302F               	movlw	47
 35369  4243  0087               	movwf	7
 35370  4244  0860               	movf	?_convertMMtoSteps,w
 35371  4245  3FC0               	movwi [0]fsr1
 35372  4246  0861               	movf	?_convertMMtoSteps+1,w
 35373  4247  3FC1               	movwi [1]fsr1
 35374  4248  0862               	movf	?_convertMMtoSteps+2,w
 35375  4249  3FC2               	movwi [2]fsr1
 35376  424A  0863               	movf	?_convertMMtoSteps+3,w
 35377  424B  3FC3               	movwi [3]fsr1
 35378                           
 35379                           ;cnc.c: 369: cncConfigMove(&step.Manual,50.0,ACC_50);
 35380  424C  30A3               	movlw	163
 35381  424D  00E4               	movwf	cncConfigMove@mv
 35382  424E  302F               	movlw	47
 35383  424F  00E5               	movwf	cncConfigMove@mv+1
 35384  4250  3042               	movlw	66
 35385  4251  00E9               	movwf	cncConfigMove@speed+3
 35386  4252  3048               	movlw	72
 35387  4253  00E8               	movwf	cncConfigMove@speed+2
 35388  4254  3000               	movlw	0
 35389  4255  00E7               	movwf	cncConfigMove@speed+1
 35390  4256  3000               	movlw	0
 35391  4257  00E6               	movwf	cncConfigMove@speed
 35392  4258  3003               	movlw	3
 35393  4259  00EB               	movwf	??_cncConfigHome
 35394  425A  086B               	movf	??_cncConfigHome,w
 35395  425B  00EA               	movwf	cncConfigMove@accel
 35396  425C  31BC  2450  31C1   	fcall	_cncConfigMove
 35397                           
 35398                           ;cnc.c: 370: cncHomeMove(&step.Manual, 1);
 35399  425F  30A3               	movlw	163
 35400  4260  00A0               	movwf	cncHomeMove@mv
 35401  4261  302F               	movlw	47
 35402  4262  00A1               	movwf	cncHomeMove@mv+1
 35403  4263  01A2               	clrf	cncHomeMove@varHome
 35404  4264  0AA2               	incf	cncHomeMove@varHome,f
 35405  4265  31B8  20F6         	fcall	_cncHomeMove
 35406  4267  0008               	return
 35407  4268                     __end_of_cncConfigHome:
 35408                           
 35409                           	psect	text45
 35410  5007                     __ptext45:	
 35411 ;; *************** function _liberarTeclado *****************
 35412 ;; Defined at:
 35413 ;;		line 101 in file "telas.c"
 35414 ;; Parameters:    Size  Location     Type
 35415 ;;  ms              2    1[COMMON] unsigned int 
 35416 ;; Auto vars:     Size  Location     Type
 35417 ;;		None
 35418 ;; Return value:  Size  Location     Type
 35419 ;;                  1    wreg      void 
 35420 ;; Registers used:
 35421 ;;		wreg, status,2, status,0
 35422 ;; Tracked objects:
 35423 ;;		On entry : 3C/2
 35424 ;;		On exit  : 3F/2
 35425 ;;		Unchanged: 0/0
 35426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35430 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35431 ;;Total ram usage:        3 bytes
 35432 ;; Hardware stack levels used: 1
 35433 ;; Hardware stack levels required when called: unknown (due to recursion)
 35434 ;; This function calls:
 35435 ;;		Nothing
 35436 ;; This function is called by:
 35437 ;;		_main
 35438 ;;		_cncConfigHome
 35439 ;;		_cncManualMove
 35440 ;;		_navCfgMove
 35441 ;;		_navTelas
 35442 ;; This function uses a non-reentrant model
 35443 ;;
 35444                           
 35445  5007                     _liberarTeclado:	
 35446                           ;psect for function _liberarTeclado
 35447                           
 35448  5007                     l10680:	
 35449                           ;telas.c: 103: while(ms){
 35450                           
 35451                           ;incstack = 0
 35452                           ; Regs used in _liberarTeclado: [wreg+status,2+status,0]
 35453                           
 35454  5007  0871               	movf	liberarTeclado@ms,w
 35455  5008  0472               	iorwf	liberarTeclado@ms+1,w
 35456  5009  1903               	btfsc	3,2
 35457  500A  2818               	goto	l10682
 35458                           
 35459                           ;telas.c: 104: ms--;
 35460  500B  3001               	movlw	1
 35461  500C  02F1               	subwf	liberarTeclado@ms,f
 35462  500D  3000               	movlw	0
 35463  500E  3BF2               	subwfb	liberarTeclado@ms+1,f
 35464                           
 35465                           ;telas.c: 105: _delay((unsigned long)((1)*(20000000/4000.0)));
 35466  500F  3007               	movlw	7
 35467  5010  00F3               	movwf	??_liberarTeclado
 35468  5011  307D               	movlw	125
 35469  5012                     u13087:
 35470  5012  0B89               	decfsz	9,f
 35471  5013  2812               	goto	u13087
 35472  5014  0BF3               	decfsz	??_liberarTeclado,f
 35473  5015  2812               	goto	u13087
 35474  5016  0000               	nop
 35475  5017  2807               	goto	l10680
 35476  5018                     l10682:
 35477  5018  0142               	movlb	2	; select bank2
 35478  5019  0820               	movf	_bt^(0+256),w	;volatile
 35479  501A  1903               	btfsc	3,2
 35480  501B  0008               	return
 35481  501C  0821               	movf	(_bt^(0+256)+1),w	;volatile
 35482  501D  1903               	btfsc	3,2
 35483  501E  0008               	return
 35484  501F  2818               	goto	l10682
 35485  5020                     __end_of_liberarTeclado:
 35486                           
 35487                           	psect	text46
 35488  52E7                     __ptext46:	
 35489 ;; *************** function _escreve_LCD *****************
 35490 ;; Defined at:
 35491 ;;		line 218 in file "lcd.c"
 35492 ;; Parameters:    Size  Location     Type
 35493 ;;  linha           1    wreg     unsigned char 
 35494 ;;  coluna          1    0[BANK0 ] unsigned char 
 35495 ;;  str             2    1[BANK0 ] PTR const unsigned char 
 35496 ;;		 -> STR_27(11), STR_23(2), STR_22(17), STR_21(11), 
 35497 ;;		 -> STR_20(16), STR_19(17), STR_18(15), STR_17(8), 
 35498 ;;		 -> STR_16(7), STR_15(10), STR_14(8), STR_13(5), 
 35499 ;;		 -> STR_12(7), STR_11(9), STR_10(7), STR_8(9), 
 35500 ;;		 -> str2(20), str1(20), STR_4(16), str(20), 
 35501 ;;		 -> STR_1(12), 
 35502 ;; Auto vars:     Size  Location     Type
 35503 ;;  linha           1    3[BANK0 ] unsigned char 
 35504 ;; Return value:  Size  Location     Type
 35505 ;;                  1    wreg      void 
 35506 ;; Registers used:
 35507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 35508 ;; Tracked objects:
 35509 ;;		On entry : 3F/0
 35510 ;;		On exit  : 3F/2
 35511 ;;		Unchanged: 0/0
 35512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35516 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35517 ;;Total ram usage:        5 bytes
 35518 ;; Hardware stack levels used: 1
 35519 ;; Hardware stack levels required when called: unknown (due to recursion)
 35520 ;; This function calls:
 35521 ;;		_Lcd_Set_Cursor
 35522 ;;		_Lcd_Write_Char
 35523 ;;		_Lcd_Write_String
 35524 ;; This function is called by:
 35525 ;;		_main
 35526 ;;		_cncTeste
 35527 ;;		_cncConfigHome
 35528 ;;		_cncManualMove
 35529 ;;		_navCfgMove
 35530 ;;		_navTelas
 35531 ;; This function uses a non-reentrant model
 35532 ;;
 35533                           
 35534  52E7                     _escreve_LCD:	
 35535                           ;psect for function _escreve_LCD
 35536                           
 35537                           
 35538                           ;incstack = 0
 35539                           ; Regs used in _escreve_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 35540                           ;escreve_LCD@linha stored from wreg
 35541  52E7  00A3               	movwf	escreve_LCD@linha
 35542                           
 35543                           ;lcd.c: 221: static char c;;lcd.c: 222: c = 1;
 35544  52E8  0142               	movlb	2	; select bank2
 35545  52E9  01AD               	clrf	escreve_LCD@c^(0+256)
 35546  52EA  0AAD               	incf	escreve_LCD@c^(0+256),f
 35547                           
 35548                           ;lcd.c: 223: Lcd_Set_Cursor(linha,c);
 35549  52EB  01F4               	clrf	Lcd_Set_Cursor@b
 35550  52EC  0AF4               	incf	Lcd_Set_Cursor@b,f
 35551  52ED  0140               	movlb	0	; select bank0
 35552  52EE  0823               	movf	escreve_LCD@linha,w
 35553  52EF  31D3  2354  31D2   	fcall	_Lcd_Set_Cursor
 35554  52F2                     l10654:	
 35555                           ;lcd.c: 224: while(c < coluna){
 35556                           
 35557  52F2  0140               	movlb	0	; select bank0
 35558  52F3  0820               	movf	escreve_LCD@coluna,w
 35559  52F4  0142               	movlb	2	; select bank2
 35560  52F5  022D               	subwf	escreve_LCD@c^(0+256),w
 35561  52F6  1803               	btfsc	3,0
 35562  52F7  2B02               	goto	l10656
 35563                           
 35564                           ;lcd.c: 225: Lcd_Write_Char(' ');
 35565  52F8  3020               	movlw	32
 35566  52F9  31D2  2224  31D2   	fcall	_Lcd_Write_Char
 35567                           
 35568                           ;lcd.c: 226: c++;
 35569  52FC  3001               	movlw	1
 35570  52FD  00FB               	movwf	??_escreve_LCD
 35571  52FE  087B               	movf	??_escreve_LCD,w
 35572  52FF  0142               	movlb	2	; select bank2
 35573  5300  07AD               	addwf	escreve_LCD@c^(0+256),f
 35574  5301  2AF2               	goto	l10654
 35575  5302                     l10656:
 35576                           
 35577                           ;lcd.c: 227: };lcd.c: 229: c = (char)Lcd_Write_String(str);
 35578  5302  0140               	movlb	0	; select bank0
 35579  5303  0822               	movf	escreve_LCD@str+1,w
 35580  5304  00F5               	movwf	Lcd_Write_String@a+1
 35581  5305  0821               	movf	escreve_LCD@str,w
 35582  5306  00F4               	movwf	Lcd_Write_String@a
 35583  5307  31D0  20B2  31D2   	fcall	_Lcd_Write_String
 35584  530A  0874               	movf	?_Lcd_Write_String,w
 35585  530B  00FB               	movwf	??_escreve_LCD
 35586  530C  087B               	movf	??_escreve_LCD,w
 35587  530D  0142               	movlb	2	; select bank2
 35588  530E  00AD               	movwf	escreve_LCD@c^(0+256)
 35589  530F                     l10662:	
 35590                           ;lcd.c: 231: while(c <= 16){
 35591                           
 35592  530F  3011               	movlw	17
 35593  5310  022D               	subwf	escreve_LCD@c^(0+256),w
 35594  5311  1803               	btfsc	3,0
 35595  5312  0008               	return
 35596                           
 35597                           ;lcd.c: 232: Lcd_Write_Char(' ');
 35598  5313  3020               	movlw	32
 35599  5314  31D2  2224  31D2   	fcall	_Lcd_Write_Char
 35600                           
 35601                           ;lcd.c: 233: c++;
 35602  5317  3001               	movlw	1
 35603  5318  00FB               	movwf	??_escreve_LCD
 35604  5319  087B               	movf	??_escreve_LCD,w
 35605  531A  0142               	movlb	2	; select bank2
 35606  531B  07AD               	addwf	escreve_LCD@c^(0+256),f
 35607  531C  2B0F               	goto	l10662
 35608  531D                     __end_of_escreve_LCD:
 35609                           
 35610                           	psect	text47
 35611  50B2                     __ptext47:	
 35612 ;; *************** function _Lcd_Write_String *****************
 35613 ;; Defined at:
 35614 ;;		line 140 in file "lcd.c"
 35615 ;; Parameters:    Size  Location     Type
 35616 ;;  a               2    4[COMMON] PTR const unsigned char 
 35617 ;;		 -> STR_27(11), STR_23(2), STR_22(17), STR_21(11), 
 35618 ;;		 -> STR_20(16), STR_19(17), STR_18(15), STR_17(8), 
 35619 ;;		 -> STR_16(7), STR_15(10), STR_14(8), STR_13(5), 
 35620 ;;		 -> STR_12(7), STR_11(9), STR_10(7), STR_8(9), 
 35621 ;;		 -> str2(20), str1(20), STR_4(16), str(20), 
 35622 ;;		 -> STR_1(12), 
 35623 ;; Auto vars:     Size  Location     Type
 35624 ;;  i               2    7[COMMON] int 
 35625 ;; Return value:  Size  Location     Type
 35626 ;;                  2    4[COMMON] int 
 35627 ;; Registers used:
 35628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 35629 ;; Tracked objects:
 35630 ;;		On entry : 3F/0
 35631 ;;		On exit  : 3F/0
 35632 ;;		Unchanged: 0/0
 35633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35637 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35638 ;;Total ram usage:        5 bytes
 35639 ;; Hardware stack levels used: 1
 35640 ;; Hardware stack levels required when called: unknown (due to recursion)
 35641 ;; This function calls:
 35642 ;;		_Lcd_Write_Char
 35643 ;; This function is called by:
 35644 ;;		_escreve_LCD
 35645 ;; This function uses a non-reentrant model
 35646 ;;
 35647                           
 35648  50B2                     _Lcd_Write_String:	
 35649                           ;psect for function _Lcd_Write_String
 35650                           
 35651                           
 35652                           ;lcd.c: 144: int i;;lcd.c: 145: for(i=0;a[i]!='\0';i++)
 35653                           
 35654                           ;incstack = 0
 35655                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 35656  50B2  01F7               	clrf	Lcd_Write_String@i
 35657  50B3  01F8               	clrf	Lcd_Write_String@i+1
 35658  50B4                     l10598:
 35659  50B4  0874               	movf	Lcd_Write_String@a,w
 35660  50B5  0777               	addwf	Lcd_Write_String@i,w
 35661  50B6  0084               	movwf	4
 35662  50B7  0875               	movf	Lcd_Write_String@a+1,w
 35663  50B8  3D78               	addwfc	Lcd_Write_String@i+1,w
 35664  50B9  0085               	movwf	5
 35665  50BA  0012               	moviw fsr0++
 35666  50BB  1903               	btfsc	3,2
 35667  50BC  28CC               	goto	l10600
 35668                           
 35669                           ;lcd.c: 146: Lcd_Write_Char(a[i]);
 35670  50BD  0874               	movf	Lcd_Write_String@a,w
 35671  50BE  0777               	addwf	Lcd_Write_String@i,w
 35672  50BF  0084               	movwf	4
 35673  50C0  0875               	movf	Lcd_Write_String@a+1,w
 35674  50C1  3D78               	addwfc	Lcd_Write_String@i+1,w
 35675  50C2  0085               	movwf	5
 35676  50C3  0800               	movf	0,w	;code access
 35677  50C4  31D2  2224  31D0   	fcall	_Lcd_Write_Char
 35678  50C7  3001               	movlw	1
 35679  50C8  07F7               	addwf	Lcd_Write_String@i,f
 35680  50C9  3000               	movlw	0
 35681  50CA  3DF8               	addwfc	Lcd_Write_String@i+1,f
 35682  50CB  28B4               	goto	l10598
 35683  50CC                     l10600:
 35684                           
 35685                           ;lcd.c: 148: return i;
 35686  50CC  0878               	movf	Lcd_Write_String@i+1,w
 35687  50CD  00F5               	movwf	?_Lcd_Write_String+1
 35688  50CE  0877               	movf	Lcd_Write_String@i,w
 35689  50CF  00F4               	movwf	?_Lcd_Write_String
 35690  50D0  0008               	return
 35691  50D1                     __end_of_Lcd_Write_String:
 35692                           
 35693                           	psect	text48
 35694  5224                     __ptext48:	
 35695 ;; *************** function _Lcd_Write_Char *****************
 35696 ;; Defined at:
 35697 ;;		line 121 in file "lcd.c"
 35698 ;; Parameters:    Size  Location     Type
 35699 ;;  a               1    wreg     unsigned char 
 35700 ;; Auto vars:     Size  Location     Type
 35701 ;;  a               1    3[COMMON] unsigned char 
 35702 ;; Return value:  Size  Location     Type
 35703 ;;                  1    wreg      void 
 35704 ;; Registers used:
 35705 ;;		wreg, status,2, status,0, pclath, cstack
 35706 ;; Tracked objects:
 35707 ;;		On entry : 3D/2
 35708 ;;		On exit  : 3F/0
 35709 ;;		Unchanged: 0/0
 35710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35715 ;;Total ram usage:        2 bytes
 35716 ;; Hardware stack levels used: 1
 35717 ;; Hardware stack levels required when called: unknown (due to recursion)
 35718 ;; This function calls:
 35719 ;;		_Lcd_Port
 35720 ;; This function is called by:
 35721 ;;		_Lcd_Write_String
 35722 ;;		_escreve_LCD
 35723 ;; This function uses a non-reentrant model
 35724 ;;
 35725                           
 35726  5224                     _Lcd_Write_Char:	
 35727                           ;psect for function _Lcd_Write_Char
 35728                           
 35729                           
 35730                           ;incstack = 0
 35731                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 35732                           ;Lcd_Write_Char@a stored from wreg
 35733  5224  00F3               	movwf	Lcd_Write_Char@a
 35734                           
 35735                           ;lcd.c: 124: static char temp,y;;lcd.c: 125: temp = a&0x0F;
 35736  5225  0873               	movf	Lcd_Write_Char@a,w
 35737  5226  390F               	andlw	15
 35738  5227  00F2               	movwf	??_Lcd_Write_Char
 35739  5228  0872               	movf	??_Lcd_Write_Char,w
 35740  5229  0142               	movlb	2	; select bank2
 35741  522A  00AF               	movwf	Lcd_Write_Char@temp^(0+256)
 35742                           
 35743                           ;lcd.c: 126: y = a&0xF0;
 35744  522B  0873               	movf	Lcd_Write_Char@a,w
 35745  522C  39F0               	andlw	240
 35746  522D  00F2               	movwf	??_Lcd_Write_Char
 35747  522E  0872               	movf	??_Lcd_Write_Char,w
 35748  522F  00AE               	movwf	Lcd_Write_Char@y^(0+256)
 35749                           
 35750                           ;lcd.c: 127: LATDbits.LATD2 = 1;
 35751  5230  0140               	movlb	0	; select bank0
 35752  5231  1519               	bsf	25,2	;volatile
 35753                           
 35754                           ;lcd.c: 128: Lcd_Port(y>>4);
 35755  5232  0142               	movlb	2	; select bank2
 35756  5233  082E               	movf	Lcd_Write_Char@y^(0+256),w
 35757  5234  00F2               	movwf	??_Lcd_Write_Char
 35758  5235  3004               	movlw	4
 35759  5236                     u11395:
 35760  5236  36F2               	lsrf	??_Lcd_Write_Char,f
 35761  5237  0B89               	decfsz	9,f
 35762  5238  2A36               	goto	u11395
 35763  5239  0872               	movf	??_Lcd_Write_Char,w
 35764  523A  31DF  27B7  31D2   	fcall	_Lcd_Port
 35765                           
 35766                           ;lcd.c: 129: LATDbits.LATD1 = 1;
 35767  523D  1499               	bsf	25,1	;volatile
 35768                           
 35769                           ;lcd.c: 130: _delay((unsigned long)((40)*(20000000/4000000.0)));
 35770  523E  3042               	movlw	66
 35771  523F                     u13097:
 35772  523F  0B89               	decfsz	9,f
 35773  5240  2A3F               	goto	u13097
 35774  5241  3200               	nop2
 35775                           
 35776                           ;lcd.c: 131: LATDbits.LATD1 = 0;
 35777  5242  0140               	movlb	0	; select bank0
 35778  5243  1099               	bcf	25,1	;volatile
 35779                           
 35780                           ;lcd.c: 132: Lcd_Port(temp);
 35781  5244  0142               	movlb	2	; select bank2
 35782  5245  082F               	movf	Lcd_Write_Char@temp^(0+256),w
 35783  5246  31DF  27B7  31D2   	fcall	_Lcd_Port
 35784                           
 35785                           ;lcd.c: 133: LATDbits.LATD1 = 1;
 35786  5249  1499               	bsf	25,1	;volatile
 35787                           
 35788                           ;lcd.c: 134: _delay((unsigned long)((40)*(20000000/4000000.0)));
 35789  524A  3042               	movlw	66
 35790  524B                     u13107:
 35791  524B  0B89               	decfsz	9,f
 35792  524C  2A4B               	goto	u13107
 35793  524D  3200               	nop2
 35794                           
 35795                           ;lcd.c: 135: LATDbits.LATD1 = 0;
 35796  524E  0140               	movlb	0	; select bank0
 35797  524F  1099               	bcf	25,1	;volatile
 35798  5250  0008               	return
 35799  5251                     __end_of_Lcd_Write_Char:
 35800                           
 35801                           	psect	text49
 35802  5354                     __ptext49:	
 35803 ;; *************** function _Lcd_Set_Cursor *****************
 35804 ;; Defined at:
 35805 ;;		line 70 in file "lcd.c"
 35806 ;; Parameters:    Size  Location     Type
 35807 ;;  a               1    wreg     unsigned char 
 35808 ;;  b               1    4[COMMON] unsigned char 
 35809 ;; Auto vars:     Size  Location     Type
 35810 ;;  a               1    7[COMMON] unsigned char 
 35811 ;;  temp            1   10[COMMON] unsigned char 
 35812 ;;  y               1    9[COMMON] unsigned char 
 35813 ;;  z               1    8[COMMON] unsigned char 
 35814 ;; Return value:  Size  Location     Type
 35815 ;;                  1    wreg      void 
 35816 ;; Registers used:
 35817 ;;		wreg, status,2, status,0, pclath, cstack
 35818 ;; Tracked objects:
 35819 ;;		On entry : 3F/0
 35820 ;;		On exit  : 3F/0
 35821 ;;		Unchanged: 0/0
 35822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35824 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35827 ;;Total ram usage:        7 bytes
 35828 ;; Hardware stack levels used: 1
 35829 ;; Hardware stack levels required when called: unknown (due to recursion)
 35830 ;; This function calls:
 35831 ;;		_Lcd_Cmd
 35832 ;; This function is called by:
 35833 ;;		_escreve_LCD
 35834 ;; This function uses a non-reentrant model
 35835 ;;
 35836                           
 35837  5354                     _Lcd_Set_Cursor:	
 35838                           ;psect for function _Lcd_Set_Cursor
 35839                           
 35840                           
 35841                           ;incstack = 0
 35842                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 35843                           ;Lcd_Set_Cursor@a stored from wreg
 35844  5354  00F7               	movwf	Lcd_Set_Cursor@a
 35845                           
 35846                           ;lcd.c: 73: char temp,z,y;;lcd.c: 74: if(a == 1)
 35847  5355  0377               	decf	Lcd_Set_Cursor@a,w
 35848  5356  1D03               	btfss	3,2
 35849  5357  2B74               	goto	l10582
 35850                           
 35851                           ;lcd.c: 75: {;lcd.c: 76: temp = 0x80 + b - 1;
 35852  5358  0874               	movf	Lcd_Set_Cursor@b,w
 35853  5359  3E7F               	addlw	127
 35854  535A  00F5               	movwf	??_Lcd_Set_Cursor
 35855  535B  0875               	movf	??_Lcd_Set_Cursor,w
 35856  535C  00FA               	movwf	Lcd_Set_Cursor@temp
 35857                           
 35858                           ;lcd.c: 77: z = temp>>4;
 35859  535D  087A               	movf	Lcd_Set_Cursor@temp,w
 35860  535E  00F5               	movwf	??_Lcd_Set_Cursor
 35861  535F  3004               	movlw	4
 35862  5360                     u12185:
 35863  5360  36F5               	lsrf	??_Lcd_Set_Cursor,f
 35864  5361  0B89               	decfsz	9,f
 35865  5362  2B60               	goto	u12185
 35866  5363  0875               	movf	??_Lcd_Set_Cursor,w
 35867  5364  00F6               	movwf	??_Lcd_Set_Cursor+1
 35868  5365  0876               	movf	??_Lcd_Set_Cursor+1,w
 35869  5366  00F8               	movwf	Lcd_Set_Cursor@z
 35870                           
 35871                           ;lcd.c: 78: y = temp & 0x0F;
 35872  5367  087A               	movf	Lcd_Set_Cursor@temp,w
 35873  5368  390F               	andlw	15
 35874  5369  00F5               	movwf	??_Lcd_Set_Cursor
 35875  536A  0875               	movf	??_Lcd_Set_Cursor,w
 35876  536B  00F9               	movwf	Lcd_Set_Cursor@y
 35877                           
 35878                           ;lcd.c: 79: Lcd_Cmd(z);
 35879  536C  0878               	movf	Lcd_Set_Cursor@z,w
 35880  536D  31DF  274F  31D3   	fcall	_Lcd_Cmd
 35881                           
 35882                           ;lcd.c: 80: Lcd_Cmd(y);
 35883  5370  0879               	movf	Lcd_Set_Cursor@y,w
 35884  5371  31DF  274F         	fcall	_Lcd_Cmd
 35885                           
 35886                           ;lcd.c: 81: }
 35887  5373  0008               	return
 35888  5374                     l10582:
 35889                           
 35890                           ;lcd.c: 82: else if(a == 2)
 35891  5374  3002               	movlw	2
 35892  5375  0677               	xorwf	Lcd_Set_Cursor@a,w
 35893  5376  1D03               	btfss	3,2
 35894  5377  0008               	return
 35895                           
 35896                           ;lcd.c: 83: {;lcd.c: 84: temp = 0xC0 + b - 1;
 35897  5378  0874               	movf	Lcd_Set_Cursor@b,w
 35898  5379  3EBF               	addlw	191
 35899  537A  00F5               	movwf	??_Lcd_Set_Cursor
 35900  537B  0875               	movf	??_Lcd_Set_Cursor,w
 35901  537C  00FA               	movwf	Lcd_Set_Cursor@temp
 35902                           
 35903                           ;lcd.c: 85: z = temp>>4;
 35904  537D  087A               	movf	Lcd_Set_Cursor@temp,w
 35905  537E  00F5               	movwf	??_Lcd_Set_Cursor
 35906  537F  3004               	movlw	4
 35907  5380                     u12205:
 35908  5380  36F5               	lsrf	??_Lcd_Set_Cursor,f
 35909  5381  0B89               	decfsz	9,f
 35910  5382  2B80               	goto	u12205
 35911  5383  0875               	movf	??_Lcd_Set_Cursor,w
 35912  5384  00F6               	movwf	??_Lcd_Set_Cursor+1
 35913  5385  0876               	movf	??_Lcd_Set_Cursor+1,w
 35914  5386  00F8               	movwf	Lcd_Set_Cursor@z
 35915                           
 35916                           ;lcd.c: 86: y = temp & 0x0F;
 35917  5387  087A               	movf	Lcd_Set_Cursor@temp,w
 35918  5388  390F               	andlw	15
 35919  5389  00F5               	movwf	??_Lcd_Set_Cursor
 35920  538A  0875               	movf	??_Lcd_Set_Cursor,w
 35921  538B  00F9               	movwf	Lcd_Set_Cursor@y
 35922                           
 35923                           ;lcd.c: 87: Lcd_Cmd(z);
 35924  538C  0878               	movf	Lcd_Set_Cursor@z,w
 35925  538D  31DF  274F  31D3   	fcall	_Lcd_Cmd
 35926                           
 35927                           ;lcd.c: 88: Lcd_Cmd(y);
 35928  5390  0879               	movf	Lcd_Set_Cursor@y,w
 35929  5391  31DF  274F         	fcall	_Lcd_Cmd
 35930  5393  0008               	return
 35931  5394                     __end_of_Lcd_Set_Cursor:
 35932                           
 35933                           	psect	text50
 35934  38F6                     __ptext50:	
 35935 ;; *************** function _cncHomeMove *****************
 35936 ;; Defined at:
 35937 ;;		line 268 in file "cnc.c"
 35938 ;; Parameters:    Size  Location     Type
 35939 ;;  mv              2    0[BANK0 ] PTR struct .
 35940 ;;		 -> step(248), 
 35941 ;;  varHome         1    2[BANK0 ] unsigned char 
 35942 ;; Auto vars:     Size  Location     Type
 35943 ;;  timeSteps       4   14[BANK0 ] long 
 35944 ;;  t               2   12[BANK0 ] unsigned int 
 35945 ;; Return value:  Size  Location     Type
 35946 ;;                  1    wreg      unsigned char 
 35947 ;; Registers used:
 35948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 35949 ;; Tracked objects:
 35950 ;;		On entry : 3F/0
 35951 ;;		On exit  : 3F/0
 35952 ;;		Unchanged: 0/0
 35953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35954 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35956 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35957 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35958 ;;Total ram usage:       18 bytes
 35959 ;; Hardware stack levels used: 1
 35960 ;; Hardware stack levels required when called: unknown (due to recursion)
 35961 ;; This function calls:
 35962 ;;		_cncEndMove
 35963 ;;		_getAccelTable
 35964 ;; This function is called by:
 35965 ;;		_cncConfigHome
 35966 ;; This function uses a non-reentrant model
 35967 ;;
 35968                           
 35969  38F6                     _cncHomeMove:	
 35970                           ;psect for function _cncHomeMove
 35971                           
 35972                           
 35973                           ;cnc.c: 270: uint t;;cnc.c: 271: long timeSteps = 0;
 35974                           
 35975                           ;incstack = 0
 35976                           ; Regs used in _cncHomeMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 35977  38F6  3000               	movlw	0
 35978  38F7  00B1               	movwf	cncHomeMove@timeSteps+3
 35979  38F8  3000               	movlw	0
 35980  38F9  00B0               	movwf	cncHomeMove@timeSteps+2
 35981  38FA  3000               	movlw	0
 35982  38FB  00AF               	movwf	cncHomeMove@timeSteps+1
 35983  38FC  3000               	movlw	0
 35984  38FD  00AE               	movwf	cncHomeMove@timeSteps
 35985                           
 35986                           ;cnc.c: 273: TMR2IE = 0;
 35987  38FE  014E               	movlb	14	; select bank14
 35988  38FF  109A               	bcf	26,1	;volatile
 35989                           
 35990                           ;cnc.c: 274: LATAbits.LATA0 = 0;
 35991  3900  0140               	movlb	0	; select bank0
 35992  3901  1016               	bcf	22,0	;volatile
 35993                           
 35994                           ;cnc.c: 276: LATEbits.LATE1 = mv->dir;
 35995  3902  0820               	movf	cncHomeMove@mv,w
 35996  3903  0086               	movwf	6
 35997  3904  0821               	movf	cncHomeMove@mv+1,w
 35998  3905  0087               	movwf	7
 35999  3906  0C01               	rrf	1,w
 36000  3907  1C03               	skipc
 36001  3908  109A               	bcf	26,1	;volatile
 36002  3909  1803               	skipnc
 36003  390A  149A               	bsf	26,1	;volatile
 36004                           
 36005                           ;cnc.c: 277: _delay((unsigned long)((1)*(20000000/4000.0)));
 36006  390B  3007               	movlw	7
 36007  390C  0140               	movlb	0	; select bank0
 36008  390D  00A3               	movwf	??_cncHomeMove
 36009  390E  307D               	movlw	125
 36010  390F                     u13117:
 36011  390F  0B89               	decfsz	9,f
 36012  3910  290F               	goto	u13117
 36013  3911  0BA3               	decfsz	??_cncHomeMove,f
 36014  3912  290F               	goto	u13117
 36015                           
 36016                           ;cnc.c: 278: mv->count = 0;
 36017  3913  0140               	movlb	0	; select bank0
 36018  3914  0820               	movf	cncHomeMove@mv,w
 36019  3915  3E17               	addlw	23
 36020  3916  00A3               	movwf	??_cncHomeMove
 36021  3917  3000               	movlw	0
 36022  3918  3D21               	addwfc	cncHomeMove@mv+1,w
 36023  3919  00A4               	movwf	??_cncHomeMove+1
 36024  391A  0823               	movf	??_cncHomeMove,w
 36025  391B  0086               	movwf	6
 36026  391C  0824               	movf	??_cncHomeMove+1,w
 36027  391D  0087               	movwf	7
 36028  391E  3000               	movlw	0
 36029  391F  3FC0               	movwi [0]fsr1
 36030  3920  3FC1               	movwi [1]fsr1
 36031  3921  3FC2               	movwi [2]fsr1
 36032  3922  3FC3               	movwi [3]fsr1
 36033                           
 36034                           ;cnc.c: 280: t = 0xFFFF - getAccelTable(ACC_12,&timeSteps);
 36035  3923  3004               	movlw	4
 36036  3924  00F1               	movwf	getAccelTable@accel
 36037  3925  3000               	movlw	0
 36038  3926  00F2               	movwf	getAccelTable@accel+1
 36039  3927  302E               	movlw	(low (cncHomeMove@timeSteps| 0))& (0+255)
 36040  3928  00A3               	movwf	??_cncHomeMove
 36041  3929  0823               	movf	??_cncHomeMove,w
 36042  392A  00F3               	movwf	getAccelTable@i
 36043  392B  31C8  205A  31B8   	fcall	_getAccelTable
 36044  392E  0971               	comf	?_getAccelTable,w
 36045  392F  0140               	movlb	0	; select bank0
 36046  3930  00AC               	movwf	cncHomeMove@t
 36047  3931  0972               	comf	?_getAccelTable+1,w
 36048  3932  00AD               	movwf	cncHomeMove@t+1
 36049  3933                     L44:
 36050  3933  082D               	movf	cncHomeMove@t+1,w
 36051  3934  0144               	movlb	4	; select bank4
 36052  3935  0099               	movwf	25	;volatile
 36053  3936  0140               	movlb	0	; select bank0
 36054  3937  082C               	movf	cncHomeMove@t,w
 36055  3938  0144               	movlb	4	; select bank4
 36056  3939  0098               	movwf	24	;volatile
 36057                           
 36058                           ;cnc.c: 295: PIR4bits.TMR5IF = 0;
 36059  393A  014E               	movlb	14	; select bank14
 36060  393B  1210               	bcf	16,4	;volatile
 36061  393C  0140               	movlb	0	; select bank0
 36062  393D  0820               	movf	cncHomeMove@mv,w
 36063  393E  0086               	movwf	6
 36064  393F  0821               	movf	cncHomeMove@mv+1,w
 36065  3940  0087               	movwf	7
 36066  3941  315F               	addfsr 1,31
 36067  3942  3F40               	moviw [0]fsr1
 36068  3943  00A3               	movwf	??_cncHomeMove
 36069  3944  3F41               	moviw [1]fsr1
 36070  3945  00A4               	movwf	??_cncHomeMove+1
 36071  3946  3F42               	moviw [2]fsr1
 36072  3947  00A5               	movwf	??_cncHomeMove+2
 36073  3948  3F43               	moviw [3]fsr1
 36074  3949  00A6               	movwf	??_cncHomeMove+3
 36075  394A  0820               	movf	cncHomeMove@mv,w
 36076  394B  0086               	movwf	6
 36077  394C  0821               	movf	cncHomeMove@mv+1,w
 36078  394D  0087               	movwf	7
 36079  394E  3157               	addfsr 1,23
 36080  394F  3F40               	moviw [0]fsr1
 36081  3950  00A7               	movwf	??_cncHomeMove+4
 36082  3951  3F41               	moviw [1]fsr1
 36083  3952  00A8               	movwf	??_cncHomeMove+5
 36084  3953  3F42               	moviw [2]fsr1
 36085  3954  00A9               	movwf	??_cncHomeMove+6
 36086  3955  3F43               	moviw [3]fsr1
 36087  3956  00AA               	movwf	??_cncHomeMove+7
 36088  3957  082A               	movf	??_cncHomeMove+7,w
 36089  3958  3A80               	xorlw	128
 36090  3959  00AB               	movwf	??_cncHomeMove+8
 36091  395A  0826               	movf	??_cncHomeMove+3,w
 36092  395B  3A80               	xorlw	128
 36093  395C  022B               	subwf	??_cncHomeMove+8,w
 36094  395D  1D03               	skipz
 36095  395E  2969               	goto	u12413
 36096  395F  0825               	movf	??_cncHomeMove+2,w
 36097  3960  0229               	subwf	??_cncHomeMove+6,w
 36098  3961  1D03               	skipz
 36099  3962  2969               	goto	u12413
 36100  3963  0824               	movf	??_cncHomeMove+1,w
 36101  3964  0228               	subwf	??_cncHomeMove+5,w
 36102  3965  1D03               	skipz
 36103  3966  2969               	goto	u12413
 36104  3967  0823               	movf	??_cncHomeMove,w
 36105  3968  0227               	subwf	??_cncHomeMove+4,w
 36106  3969                     u12413:
 36107  3969  1803               	skipnc
 36108  396A  29D2               	goto	l11138
 36109  396B  0E0C               	swapf	12,w	;volatile
 36110  396C  3901               	andlw	1
 36111  396D  0622               	xorwf	cncHomeMove@varHome,w
 36112  396E  1D03               	btfss	3,2
 36113  396F  29D2               	goto	l11138
 36114                           
 36115                           ;cnc.c: 287: (LATEbits.LATE2 = 0);
 36116                           
 36117                           ;cnc.c: 285: while(mv->count < mv->toCruise && (PORTAbits.RA4) == varHome){
 36118                           
 36119                           ;cnc.c: 282: PIR4bits.TMR5IF = 0;
 36120                           
 36121                           ;cnc.c: 281: TMR5 = t;
 36122  3970  111A               	bcf	26,2	;volatile
 36123                           
 36124                           ;cnc.c: 288: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 36125  3971  0820               	movf	cncHomeMove@mv,w
 36126  3972  3E02               	addlw	2
 36127  3973  00F1               	movwf	getAccelTable@accel
 36128  3974  3000               	movlw	0
 36129  3975  3D21               	addwfc	cncHomeMove@mv+1,w
 36130  3976  00F2               	movwf	getAccelTable@accel+1
 36131  3977  302E               	movlw	(low (cncHomeMove@timeSteps| 0))& (0+255)
 36132  3978  00A3               	movwf	??_cncHomeMove
 36133  3979  0823               	movf	??_cncHomeMove,w
 36134  397A  00F3               	movwf	getAccelTable@i
 36135  397B  31C8  205A  31B8   	fcall	_getAccelTable
 36136  397E  0971               	comf	?_getAccelTable,w
 36137  397F  0140               	movlb	0	; select bank0
 36138  3980  00AC               	movwf	cncHomeMove@t
 36139  3981  0972               	comf	?_getAccelTable+1,w
 36140  3982  00AD               	movwf	cncHomeMove@t+1
 36141                           
 36142                           ;cnc.c: 289: mv->count++;
 36143  3983  0820               	movf	cncHomeMove@mv,w
 36144  3984  0086               	movwf	6
 36145  3985  0821               	movf	cncHomeMove@mv+1,w
 36146  3986  0087               	movwf	7
 36147  3987  3157               	addfsr 1,23
 36148  3988  3001               	movlw	1
 36149  3989  0781               	addwf	1,f
 36150  398A  3141               	addfsr 1,1
 36151  398B  3000               	movlw	0
 36152  398C  3D81               	addwfc	1,f
 36153  398D  3141               	addfsr 1,1
 36154  398E  3000               	movlw	0
 36155  398F  3D81               	addwfc	1,f
 36156  3990  3141               	addfsr 1,1
 36157  3991  3000               	movlw	0
 36158  3992  3D81               	addwfc	1,f
 36159                           
 36160                           ;cnc.c: 290: timeSteps++;
 36161  3993  3001               	movlw	1
 36162  3994  07AE               	addwf	cncHomeMove@timeSteps,f
 36163  3995  3000               	movlw	0
 36164  3996  3DAF               	addwfc	cncHomeMove@timeSteps+1,f
 36165  3997  3000               	movlw	0
 36166  3998  3DB0               	addwfc	cncHomeMove@timeSteps+2,f
 36167  3999  3000               	movlw	0
 36168  399A  3DB1               	addwfc	cncHomeMove@timeSteps+3,f
 36169                           
 36170                           ;cnc.c: 291: (LATEbits.LATE2 = 1);
 36171  399B  151A               	bsf	26,2	;volatile
 36172  399C                     l983:	
 36173                           ;cnc.c: 293: while(PIR4bits.TMR5IF == 0);
 36174                           
 36175  399C  014E               	movlb	14	; select bank14
 36176  399D  1E10               	btfss	16,4	;volatile
 36177  399E  299C               	goto	l983
 36178                           
 36179                           ;cnc.c: 294: TMR5 = t;
 36180  399F  0140               	movlb	0	; select bank0
 36181  39A0  2933               	goto	L44
 36182  39A1                     l990:
 36183                           
 36184                           ;cnc.c: 300: (LATEbits.LATE2 = 0);
 36185  39A1  111A               	bcf	26,2	;volatile
 36186                           
 36187                           ;cnc.c: 301: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 36188  39A2  0820               	movf	cncHomeMove@mv,w
 36189  39A3  3E02               	addlw	2
 36190  39A4  00F1               	movwf	getAccelTable@accel
 36191  39A5  3000               	movlw	0
 36192  39A6  3D21               	addwfc	cncHomeMove@mv+1,w
 36193  39A7  00F2               	movwf	getAccelTable@accel+1
 36194  39A8  302E               	movlw	(low (cncHomeMove@timeSteps| 0))& (0+255)
 36195  39A9  00A3               	movwf	??_cncHomeMove
 36196  39AA  0823               	movf	??_cncHomeMove,w
 36197  39AB  00F3               	movwf	getAccelTable@i
 36198  39AC  31C8  205A  31B8   	fcall	_getAccelTable
 36199  39AF  0971               	comf	?_getAccelTable,w
 36200  39B0  0140               	movlb	0	; select bank0
 36201  39B1  00AC               	movwf	cncHomeMove@t
 36202  39B2  0972               	comf	?_getAccelTable+1,w
 36203  39B3  00AD               	movwf	cncHomeMove@t+1
 36204                           
 36205                           ;cnc.c: 302: mv->count++;
 36206  39B4  0820               	movf	cncHomeMove@mv,w
 36207  39B5  0086               	movwf	6
 36208  39B6  0821               	movf	cncHomeMove@mv+1,w
 36209  39B7  0087               	movwf	7
 36210  39B8  3157               	addfsr 1,23
 36211  39B9  3001               	movlw	1
 36212  39BA  0781               	addwf	1,f
 36213  39BB  3141               	addfsr 1,1
 36214  39BC  3000               	movlw	0
 36215  39BD  3D81               	addwfc	1,f
 36216  39BE  3141               	addfsr 1,1
 36217  39BF  3000               	movlw	0
 36218  39C0  3D81               	addwfc	1,f
 36219  39C1  3141               	addfsr 1,1
 36220  39C2  3000               	movlw	0
 36221  39C3  3D81               	addwfc	1,f
 36222                           
 36223                           ;cnc.c: 303: (LATEbits.LATE2 = 1);
 36224  39C4  151A               	bsf	26,2	;volatile
 36225  39C5                     l991:	
 36226                           ;cnc.c: 305: while(PIR4bits.TMR5IF == 0);
 36227                           
 36228  39C5  014E               	movlb	14	; select bank14
 36229  39C6  1E10               	btfss	16,4	;volatile
 36230  39C7  29C5               	goto	l991
 36231                           
 36232                           ;cnc.c: 306: TMR5 = t;
 36233  39C8  0140               	movlb	0	; select bank0
 36234  39C9  082D               	movf	cncHomeMove@t+1,w
 36235  39CA  0144               	movlb	4	; select bank4
 36236  39CB  0099               	movwf	25	;volatile
 36237  39CC  0140               	movlb	0	; select bank0
 36238  39CD  082C               	movf	cncHomeMove@t,w
 36239  39CE  0144               	movlb	4	; select bank4
 36240  39CF  0098               	movwf	24	;volatile
 36241                           
 36242                           ;cnc.c: 307: PIR4bits.TMR5IF = 0;
 36243  39D0  014E               	movlb	14	; select bank14
 36244  39D1  1210               	bcf	16,4	;volatile
 36245  39D2                     l11138:
 36246  39D2  0140               	movlb	0	; select bank0
 36247  39D3  0820               	movf	cncHomeMove@mv,w
 36248  39D4  3E23               	addlw	35
 36249  39D5  0086               	movwf	6
 36250  39D6  3000               	movlw	0
 36251  39D7  3D21               	addwfc	cncHomeMove@mv+1,w
 36252  39D8  0087               	movwf	7
 36253  39D9  3F40               	moviw [0]fsr1
 36254  39DA  00A3               	movwf	??_cncHomeMove
 36255  39DB  3F41               	moviw [1]fsr1
 36256  39DC  00A4               	movwf	??_cncHomeMove+1
 36257  39DD  3F42               	moviw [2]fsr1
 36258  39DE  00A5               	movwf	??_cncHomeMove+2
 36259  39DF  3F43               	moviw [3]fsr1
 36260  39E0  00A6               	movwf	??_cncHomeMove+3
 36261  39E1  0820               	movf	cncHomeMove@mv,w
 36262  39E2  0086               	movwf	6
 36263  39E3  0821               	movf	cncHomeMove@mv+1,w
 36264  39E4  0087               	movwf	7
 36265  39E5  3157               	addfsr 1,23
 36266  39E6  3F40               	moviw [0]fsr1
 36267  39E7  00A7               	movwf	??_cncHomeMove+4
 36268  39E8  3F41               	moviw [1]fsr1
 36269  39E9  00A8               	movwf	??_cncHomeMove+5
 36270  39EA  3F42               	moviw [2]fsr1
 36271  39EB  00A9               	movwf	??_cncHomeMove+6
 36272  39EC  3F43               	moviw [3]fsr1
 36273  39ED  00AA               	movwf	??_cncHomeMove+7
 36274  39EE  082A               	movf	??_cncHomeMove+7,w
 36275  39EF  3A80               	xorlw	128
 36276  39F0  00AB               	movwf	??_cncHomeMove+8
 36277  39F1  0826               	movf	??_cncHomeMove+3,w
 36278  39F2  3A80               	xorlw	128
 36279  39F3  022B               	subwf	??_cncHomeMove+8,w
 36280  39F4  1D03               	skipz
 36281  39F5  2A00               	goto	u12443
 36282  39F6  0825               	movf	??_cncHomeMove+2,w
 36283  39F7  0229               	subwf	??_cncHomeMove+6,w
 36284  39F8  1D03               	skipz
 36285  39F9  2A00               	goto	u12443
 36286  39FA  0824               	movf	??_cncHomeMove+1,w
 36287  39FB  0228               	subwf	??_cncHomeMove+5,w
 36288  39FC  1D03               	skipz
 36289  39FD  2A00               	goto	u12443
 36290  39FE  0823               	movf	??_cncHomeMove,w
 36291  39FF  0227               	subwf	??_cncHomeMove+4,w
 36292  3A00                     u12443:
 36293  3A00  1803               	skipnc
 36294  3A01  2A42               	goto	l11154
 36295  3A02  0E0C               	swapf	12,w	;volatile
 36296  3A03  3901               	andlw	1
 36297  3A04  0622               	xorwf	cncHomeMove@varHome,w
 36298  3A05  1D03               	btfss	3,2
 36299  3A06  2A42               	goto	l11154
 36300  3A07  29A1               	goto	l990
 36301  3A08                     l998:
 36302                           
 36303                           ;cnc.c: 311: (LATEbits.LATE2 = 0);
 36304  3A08  0140               	movlb	0	; select bank0
 36305  3A09  111A               	bcf	26,2	;volatile
 36306                           
 36307                           ;cnc.c: 312: mv->count++;
 36308  3A0A  0820               	movf	cncHomeMove@mv,w
 36309  3A0B  0086               	movwf	6
 36310  3A0C  0821               	movf	cncHomeMove@mv+1,w
 36311  3A0D  0087               	movwf	7
 36312  3A0E  3157               	addfsr 1,23
 36313  3A0F  3001               	movlw	1
 36314  3A10  0781               	addwf	1,f
 36315  3A11  3141               	addfsr 1,1
 36316  3A12  3000               	movlw	0
 36317  3A13  3D81               	addwfc	1,f
 36318  3A14  3141               	addfsr 1,1
 36319  3A15  3000               	movlw	0
 36320  3A16  3D81               	addwfc	1,f
 36321  3A17  3141               	addfsr 1,1
 36322  3A18  3000               	movlw	0
 36323  3A19  3D81               	addwfc	1,f
 36324                           
 36325                           ;cnc.c: 313: timeSteps--;
 36326  3A1A  30FF               	movlw	255
 36327  3A1B  07AE               	addwf	cncHomeMove@timeSteps,f
 36328  3A1C  30FF               	movlw	255
 36329  3A1D  3DAF               	addwfc	cncHomeMove@timeSteps+1,f
 36330  3A1E  30FF               	movlw	255
 36331  3A1F  3DB0               	addwfc	cncHomeMove@timeSteps+2,f
 36332  3A20  30FF               	movlw	255
 36333  3A21  3DB1               	addwfc	cncHomeMove@timeSteps+3,f
 36334                           
 36335                           ;cnc.c: 314: t = 0xFFFF - getAccelTable(&mv->accel,&timeSteps);
 36336  3A22  0820               	movf	cncHomeMove@mv,w
 36337  3A23  3E02               	addlw	2
 36338  3A24  00F1               	movwf	getAccelTable@accel
 36339  3A25  3000               	movlw	0
 36340  3A26  3D21               	addwfc	cncHomeMove@mv+1,w
 36341  3A27  00F2               	movwf	getAccelTable@accel+1
 36342  3A28  302E               	movlw	(low (cncHomeMove@timeSteps| 0))& (0+255)
 36343  3A29  00A3               	movwf	??_cncHomeMove
 36344  3A2A  0823               	movf	??_cncHomeMove,w
 36345  3A2B  00F3               	movwf	getAccelTable@i
 36346  3A2C  31C8  205A  31B8   	fcall	_getAccelTable
 36347  3A2F  0971               	comf	?_getAccelTable,w
 36348  3A30  0140               	movlb	0	; select bank0
 36349  3A31  00AC               	movwf	cncHomeMove@t
 36350  3A32  0972               	comf	?_getAccelTable+1,w
 36351  3A33  00AD               	movwf	cncHomeMove@t+1
 36352                           
 36353                           ;cnc.c: 315: (LATEbits.LATE2 = 1);
 36354  3A34  151A               	bsf	26,2	;volatile
 36355  3A35                     l999:	
 36356                           ;cnc.c: 317: while(PIR4bits.TMR5IF == 0);
 36357                           
 36358  3A35  014E               	movlb	14	; select bank14
 36359  3A36  1E10               	btfss	16,4	;volatile
 36360  3A37  2A35               	goto	l999
 36361                           
 36362                           ;cnc.c: 318: TMR5 = t;
 36363  3A38  0140               	movlb	0	; select bank0
 36364  3A39  082D               	movf	cncHomeMove@t+1,w
 36365  3A3A  0144               	movlb	4	; select bank4
 36366  3A3B  0099               	movwf	25	;volatile
 36367  3A3C  0140               	movlb	0	; select bank0
 36368  3A3D  082C               	movf	cncHomeMove@t,w
 36369  3A3E  0144               	movlb	4	; select bank4
 36370  3A3F  0098               	movwf	24	;volatile
 36371                           
 36372                           ;cnc.c: 319: PIR4bits.TMR5IF = 0;
 36373  3A40  014E               	movlb	14	; select bank14
 36374  3A41  1210               	bcf	16,4	;volatile
 36375  3A42                     l11154:
 36376  3A42  0140               	movlb	0	; select bank0
 36377  3A43  1BB1               	btfsc	cncHomeMove@timeSteps+3,7
 36378  3A44  2A52               	goto	l1002
 36379  3A45  0831               	movf	cncHomeMove@timeSteps+3,w
 36380  3A46  1D03               	btfss	3,2
 36381  3A47  2A08               	goto	l998
 36382  3A48  0830               	movf	cncHomeMove@timeSteps+2,w
 36383  3A49  1D03               	btfss	3,2
 36384  3A4A  2A08               	goto	l998
 36385  3A4B  082F               	movf	cncHomeMove@timeSteps+1,w
 36386  3A4C  1D03               	btfss	3,2
 36387  3A4D  2A08               	goto	l998
 36388  3A4E  3001               	movlw	1
 36389  3A4F  022E               	subwf	cncHomeMove@timeSteps,w
 36390  3A50  1803               	btfsc	3,0
 36391  3A51  2A08               	goto	l998
 36392  3A52                     l1002:
 36393                           
 36394                           ;cnc.c: 320: };;cnc.c: 322: TMR2IF = 0;
 36395  3A52  014E               	movlb	14	; select bank14
 36396  3A53  1090               	bcf	16,1	;volatile
 36397                           
 36398                           ;cnc.c: 323: TMR2IE = 1;
 36399  3A54  149A               	bsf	26,1	;volatile
 36400                           
 36401                           ;cnc.c: 325: if(mv->dir == 0){
 36402  3A55  0140               	movlb	0	; select bank0
 36403  3A56  0820               	movf	cncHomeMove@mv,w
 36404  3A57  0086               	movwf	6
 36405  3A58  0821               	movf	cncHomeMove@mv+1,w
 36406  3A59  0087               	movwf	7
 36407  3A5A  0016               	moviw fsr1++
 36408  3A5B  0401               	iorwf	1,w
 36409  3A5C  1D03               	btfss	3,2
 36410  3A5D  2A7B               	goto	l11160
 36411                           
 36412                           ;cnc.c: 326: step.ref += mv->count;
 36413  3A5E  0820               	movf	cncHomeMove@mv,w
 36414  3A5F  0086               	movwf	6
 36415  3A60  0821               	movf	cncHomeMove@mv+1,w
 36416  3A61  0087               	movwf	7
 36417  3A62  3157               	addfsr 1,23
 36418  3A63  3F40               	moviw [0]fsr1
 36419  3A64  00A3               	movwf	??_cncHomeMove
 36420  3A65  3F41               	moviw [1]fsr1
 36421  3A66  00A4               	movwf	??_cncHomeMove+1
 36422  3A67  3F42               	moviw [2]fsr1
 36423  3A68  00A5               	movwf	??_cncHomeMove+2
 36424  3A69  3F43               	moviw [3]fsr1
 36425  3A6A  00A6               	movwf	??_cncHomeMove+3
 36426  3A6B  30E8               	movlw	232
 36427  3A6C  0086               	movwf	6
 36428  3A6D  302F               	movlw	47
 36429  3A6E  0087               	movwf	7
 36430  3A6F  0823               	movf	??_cncHomeMove,w
 36431  3A70  0781               	addwf	1,f
 36432  3A71  3141               	addfsr 1,1
 36433  3A72  0824               	movf	??_cncHomeMove+1,w
 36434  3A73  3D81               	addwfc	1,f
 36435  3A74  3141               	addfsr 1,1
 36436  3A75  0825               	movf	??_cncHomeMove+2,w
 36437  3A76  3D81               	addwfc	1,f
 36438  3A77  3141               	addfsr 1,1
 36439  3A78  0826               	movf	??_cncHomeMove+3,w
 36440  3A79  3D81               	addwfc	1,f
 36441                           
 36442                           ;cnc.c: 327: }
 36443  3A7A  2A98               	goto	l11162
 36444  3A7B                     l11160:
 36445                           
 36446                           ;cnc.c: 328: else{;cnc.c: 329: step.ref -= mv->count;
 36447  3A7B  0820               	movf	cncHomeMove@mv,w
 36448  3A7C  0086               	movwf	6
 36449  3A7D  0821               	movf	cncHomeMove@mv+1,w
 36450  3A7E  0087               	movwf	7
 36451  3A7F  3157               	addfsr 1,23
 36452  3A80  3F40               	moviw [0]fsr1
 36453  3A81  00A3               	movwf	??_cncHomeMove
 36454  3A82  3F41               	moviw [1]fsr1
 36455  3A83  00A4               	movwf	??_cncHomeMove+1
 36456  3A84  3F42               	moviw [2]fsr1
 36457  3A85  00A5               	movwf	??_cncHomeMove+2
 36458  3A86  3F43               	moviw [3]fsr1
 36459  3A87  00A6               	movwf	??_cncHomeMove+3
 36460  3A88  30E8               	movlw	232
 36461  3A89  0086               	movwf	6
 36462  3A8A  302F               	movlw	47
 36463  3A8B  0087               	movwf	7
 36464  3A8C  0823               	movf	??_cncHomeMove,w
 36465  3A8D  0281               	subwf	1,f
 36466  3A8E  3141               	addfsr 1,1
 36467  3A8F  0824               	movf	??_cncHomeMove+1,w
 36468  3A90  3B81               	subwfb	1,f
 36469  3A91  3141               	addfsr 1,1
 36470  3A92  0825               	movf	??_cncHomeMove+2,w
 36471  3A93  3B81               	subwfb	1,f
 36472  3A94  3141               	addfsr 1,1
 36473  3A95  0826               	movf	??_cncHomeMove+3,w
 36474  3A96  3B81               	subwfb	1,f
 36475  3A97  317D               	addfsr 1,-3
 36476  3A98                     l11162:
 36477                           
 36478                           ;cnc.c: 330: };cnc.c: 332: return cncEndMove(mv);;	Return value of _cncHomeMove is never
      +                           used
 36479  3A98  0821               	movf	cncHomeMove@mv+1,w
 36480  3A99  00F2               	movwf	cncEndMove@mv+1
 36481  3A9A  0820               	movf	cncHomeMove@mv,w
 36482  3A9B  00F1               	movwf	cncEndMove@mv
 36483  3A9C  31D3  231D         	fcall	_cncEndMove
 36484  3A9E  0008               	return
 36485  3A9F                     __end_of_cncHomeMove:
 36486                           
 36487                           	psect	text51
 36488  531D                     __ptext51:	
 36489 ;; *************** function _cncEndMove *****************
 36490 ;; Defined at:
 36491 ;;		line 382 in file "cnc.c"
 36492 ;; Parameters:    Size  Location     Type
 36493 ;;  mv              2    1[COMMON] PTR struct .
 36494 ;;		 -> step(248), 
 36495 ;; Auto vars:     Size  Location     Type
 36496 ;;		None
 36497 ;; Return value:  Size  Location     Type
 36498 ;;                  1    wreg      unsigned char 
 36499 ;; Registers used:
 36500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 36501 ;; Tracked objects:
 36502 ;;		On entry : 3F/0
 36503 ;;		On exit  : 3F/0
 36504 ;;		Unchanged: 3F/0
 36505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36508 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36509 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36510 ;;Total ram usage:       10 bytes
 36511 ;; Hardware stack levels used: 1
 36512 ;; Hardware stack levels required when called: unknown (due to recursion)
 36513 ;; This function calls:
 36514 ;;		Nothing
 36515 ;; This function is called by:
 36516 ;;		_cncHomeMove
 36517 ;;		_cncMove
 36518 ;; This function uses a non-reentrant model
 36519 ;;
 36520                           
 36521  531D                     _cncEndMove:	
 36522                           ;psect for function _cncEndMove
 36523                           
 36524                           
 36525                           ;cnc.c: 383: if(mv->toStop == step.ref){
 36526                           
 36527                           ;incstack = 0
 36528                           ; Regs used in _cncEndMove: [wreg+fsr1l+fsr1h+status,2+status,0]
 36529  531D  30E8               	movlw	232
 36530  531E  0086               	movwf	6
 36531  531F  302F               	movlw	47
 36532  5320  0087               	movwf	7
 36533  5321  3F40               	moviw [0]fsr1
 36534  5322  00F3               	movwf	??_cncEndMove
 36535  5323  3F41               	moviw [1]fsr1
 36536  5324  00F4               	movwf	??_cncEndMove+1
 36537  5325  3F42               	moviw [2]fsr1
 36538  5326  00F5               	movwf	??_cncEndMove+2
 36539  5327  3F43               	moviw [3]fsr1
 36540  5328  00F6               	movwf	??_cncEndMove+3
 36541  5329  0871               	movf	cncEndMove@mv,w
 36542  532A  0086               	movwf	6
 36543  532B  0872               	movf	cncEndMove@mv+1,w
 36544  532C  0087               	movwf	7
 36545  532D  3153               	addfsr 1,19
 36546  532E  3F40               	moviw [0]fsr1
 36547  532F  00F7               	movwf	??_cncEndMove+4
 36548  5330  3F41               	moviw [1]fsr1
 36549  5331  00F8               	movwf	??_cncEndMove+5
 36550  5332  3F42               	moviw [2]fsr1
 36551  5333  00F9               	movwf	??_cncEndMove+6
 36552  5334  3F43               	moviw [3]fsr1
 36553  5335  00FA               	movwf	??_cncEndMove+7
 36554  5336  0876               	movf	??_cncEndMove+3,w
 36555  5337  067A               	xorwf	??_cncEndMove+7,w
 36556  5338  1D03               	skipz
 36557  5339  2B44               	goto	u11375
 36558  533A  0875               	movf	??_cncEndMove+2,w
 36559  533B  0679               	xorwf	??_cncEndMove+6,w
 36560  533C  1D03               	skipz
 36561  533D  2B44               	goto	u11375
 36562  533E  0874               	movf	??_cncEndMove+1,w
 36563  533F  0678               	xorwf	??_cncEndMove+5,w
 36564  5340  1D03               	skipz
 36565  5341  2B44               	goto	u11375
 36566  5342  0873               	movf	??_cncEndMove,w
 36567  5343  0677               	xorwf	??_cncEndMove+4,w
 36568  5344                     u11375:
 36569  5344  1D03               	skipz
 36570  5345  2B48               	goto	l10050
 36571                           
 36572                           ;cnc.c: 384: return 0;
 36573  5346  3000               	movlw	0
 36574  5347  0008               	return
 36575  5348                     l10050:
 36576                           
 36577                           ;cnc.c: 386: else if(step.stop){
 36578  5348  30EE               	movlw	238
 36579  5349  0086               	movwf	6
 36580  534A  302F               	movlw	47
 36581  534B  0087               	movwf	7
 36582  534C  0016               	moviw fsr1++
 36583  534D  0401               	iorwf	1,w
 36584  534E  1903               	btfsc	3,2
 36585  534F  2B52               	goto	l10058
 36586                           
 36587                           ;cnc.c: 387: return 1;
 36588  5350  3001               	movlw	1
 36589  5351  0008               	return
 36590  5352                     l10058:
 36591                           
 36592                           ;cnc.c: 389: else{;cnc.c: 390: return 2;
 36593  5352  3002               	movlw	2
 36594  5353  0008               	return
 36595  5354                     __end_of_cncEndMove:
 36596                           
 36597                           	psect	text52
 36598  4517                     __ptext52:	
 36599 ;; *************** function _cncConfig *****************
 36600 ;; Defined at:
 36601 ;;		line 29 in file "cnc.c"
 36602 ;; Parameters:    Size  Location     Type
 36603 ;;		None
 36604 ;; Auto vars:     Size  Location     Type
 36605 ;;		None
 36606 ;; Return value:  Size  Location     Type
 36607 ;;                  1    wreg      void 
 36608 ;; Registers used:
 36609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 36610 ;; Tracked objects:
 36611 ;;		On entry : 3F/0
 36612 ;;		On exit  : 3F/0
 36613 ;;		Unchanged: 0/0
 36614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36619 ;;Total ram usage:        1 bytes
 36620 ;; Hardware stack levels used: 1
 36621 ;; Hardware stack levels required when called: unknown (due to recursion)
 36622 ;; This function calls:
 36623 ;;		___fldiv
 36624 ;;		_cncConfigMove
 36625 ;;		_cncSetPos
 36626 ;;		_convertMMtoSteps
 36627 ;; This function is called by:
 36628 ;;		_main
 36629 ;; This function uses a non-reentrant model
 36630 ;;
 36631                           
 36632  4517                     _cncConfig:	
 36633                           ;psect for function _cncConfig
 36634                           
 36635                           
 36636                           ;cnc.c: 43: cnc.parm.mmpr = 5;
 36637                           
 36638                           ;incstack = 0
 36639                           ; Regs used in _cncConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 36640  4517  3040               	movlw	64
 36641  4518  0143               	movlb	3	; select bank3
 36642  4519  00A3               	movwf	(_cnc+3)^(0+384)
 36643  451A  30A0               	movlw	160
 36644  451B  00A2               	movwf	(_cnc+2)^(0+384)
 36645  451C  3000               	movlw	0
 36646  451D  00A1               	movwf	(_cnc+1)^(0+384)
 36647  451E  3000               	movlw	0
 36648  451F  00A0               	movwf	_cnc^(0+384)
 36649                           
 36650                           ;cnc.c: 44: cnc.parm.ppr = 1000;
 36651  4520  3044               	movlw	68
 36652  4521  00A7               	movwf	((_cnc+3)^(0+384)+4)
 36653  4522  307A               	movlw	122
 36654  4523  00A6               	movwf	((_cnc+2)^(0+384)+4)
 36655  4524  3000               	movlw	0
 36656  4525  00A5               	movwf	((_cnc+1)^(0+384)+4)
 36657  4526  3000               	movlw	0
 36658  4527  00A4               	movwf	(_cnc^(0+384)+4)
 36659                           
 36660                           ;cnc.c: 45: cnc.parm.ppmm = cnc.parm.ppr/cnc.parm.mmpr;
 36661  4528  0823               	movf	(_cnc+3)^(0+384),w
 36662  4529  0140               	movlb	0	; select bank0
 36663  452A  00A9               	movwf	___fldiv@a+3
 36664  452B  0143               	movlb	3	; select bank3
 36665  452C  0822               	movf	(_cnc+2)^(0+384),w
 36666  452D  0140               	movlb	0	; select bank0
 36667  452E  00A8               	movwf	___fldiv@a+2
 36668  452F  0143               	movlb	3	; select bank3
 36669  4530  0821               	movf	(_cnc+1)^(0+384),w
 36670  4531  0140               	movlb	0	; select bank0
 36671  4532  00A7               	movwf	___fldiv@a+1
 36672  4533  0143               	movlb	3	; select bank3
 36673  4534  0820               	movf	_cnc^(0+384),w
 36674  4535  0140               	movlb	0	; select bank0
 36675  4536  00A6               	movwf	___fldiv@a
 36676  4537  3004               	movlw	4
 36677  4538  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36678  4539  0086               	movwf	6
 36679  453A  3001               	movlw	1	; select bank3/4
 36680  453B  0087               	movwf	7
 36681  453C  3F40               	moviw [0]fsr1
 36682  453D  00AA               	movwf	___fldiv@b
 36683  453E  3F41               	moviw [1]fsr1
 36684  453F  00AB               	movwf	___fldiv@b+1
 36685  4540  3F42               	moviw [2]fsr1
 36686  4541  00AC               	movwf	___fldiv@b+2
 36687  4542  3F43               	moviw [3]fsr1
 36688  4543  00AD               	movwf	___fldiv@b+3
 36689  4544  31C6  2687  31C5   	fcall	___fldiv
 36690  4547  0829               	movf	?___fldiv+3,w
 36691  4548  0143               	movlb	3	; select bank3
 36692  4549  00AF               	movwf	((_cnc+3)^(0+384)+12)
 36693  454A  0140               	movlb	0	; select bank0
 36694  454B  0828               	movf	?___fldiv+2,w
 36695  454C  0143               	movlb	3	; select bank3
 36696  454D  00AE               	movwf	((_cnc+2)^(0+384)+12)
 36697  454E  0140               	movlb	0	; select bank0
 36698  454F  0827               	movf	?___fldiv+1,w
 36699  4550  0143               	movlb	3	; select bank3
 36700  4551  00AD               	movwf	((_cnc+1)^(0+384)+12)
 36701  4552  0140               	movlb	0	; select bank0
 36702  4553  0826               	movf	?___fldiv,w
 36703  4554  0143               	movlb	3	; select bank3
 36704  4555  00AC               	movwf	(_cnc^(0+384)+12)
 36705                           
 36706                           ;cnc.c: 46: cnc.parm.mmpp = cnc.parm.mmpr/cnc.parm.ppr;
 36707  4556  3004               	movlw	4
 36708  4557  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36709  4558  0086               	movwf	6
 36710  4559  3001               	movlw	1	; select bank3/4
 36711  455A  0087               	movwf	7
 36712  455B  3F40               	moviw [0]fsr1
 36713  455C  0140               	movlb	0	; select bank0
 36714  455D  00A6               	movwf	___fldiv@a
 36715  455E  3F41               	moviw [1]fsr1
 36716  455F  00A7               	movwf	___fldiv@a+1
 36717  4560  3F42               	moviw [2]fsr1
 36718  4561  00A8               	movwf	___fldiv@a+2
 36719  4562  3F43               	moviw [3]fsr1
 36720  4563  00A9               	movwf	___fldiv@a+3
 36721  4564  0143               	movlb	3	; select bank3
 36722  4565  0823               	movf	(_cnc+3)^(0+384),w
 36723  4566  0140               	movlb	0	; select bank0
 36724  4567  00AD               	movwf	___fldiv@b+3
 36725  4568  0143               	movlb	3	; select bank3
 36726  4569  0822               	movf	(_cnc+2)^(0+384),w
 36727  456A  0140               	movlb	0	; select bank0
 36728  456B  00AC               	movwf	___fldiv@b+2
 36729  456C  0143               	movlb	3	; select bank3
 36730  456D  0821               	movf	(_cnc+1)^(0+384),w
 36731  456E  0140               	movlb	0	; select bank0
 36732  456F  00AB               	movwf	___fldiv@b+1
 36733  4570  0143               	movlb	3	; select bank3
 36734  4571  0820               	movf	_cnc^(0+384),w
 36735  4572  0140               	movlb	0	; select bank0
 36736  4573  00AA               	movwf	___fldiv@b
 36737  4574  31C6  2687  31C5   	fcall	___fldiv
 36738  4577  0829               	movf	?___fldiv+3,w
 36739  4578  0143               	movlb	3	; select bank3
 36740  4579  00AB               	movwf	((_cnc+3)^(0+384)+8)
 36741  457A  0140               	movlb	0	; select bank0
 36742  457B  0828               	movf	?___fldiv+2,w
 36743  457C  0143               	movlb	3	; select bank3
 36744  457D  00AA               	movwf	((_cnc+2)^(0+384)+8)
 36745  457E  0140               	movlb	0	; select bank0
 36746  457F  0827               	movf	?___fldiv+1,w
 36747  4580  0143               	movlb	3	; select bank3
 36748  4581  00A9               	movwf	((_cnc+1)^(0+384)+8)
 36749  4582  0140               	movlb	0	; select bank0
 36750  4583  0826               	movf	?___fldiv,w
 36751  4584  0143               	movlb	3	; select bank3
 36752  4585  00A8               	movwf	(_cnc^(0+384)+8)
 36753                           
 36754                           ;cnc.c: 48: cnc.max.mm.Pos = 300.00;
 36755  4586  3043               	movlw	67
 36756  4587  00CB               	movwf	((_cnc+3)^(0+384)+40)
 36757  4588  3096               	movlw	150
 36758  4589  00CA               	movwf	((_cnc+2)^(0+384)+40)
 36759  458A  3000               	movlw	0
 36760  458B  00C9               	movwf	((_cnc+1)^(0+384)+40)
 36761  458C  3000               	movlw	0
 36762  458D  00C8               	movwf	(_cnc^(0+384)+40)
 36763                           
 36764                           ;cnc.c: 49: cnc.min.mm.Pos = 10.00;
 36765  458E  3041               	movlw	65
 36766  458F  00B7               	movwf	((_cnc+3)^(0+384)+20)
 36767  4590  3020               	movlw	32
 36768  4591  00B6               	movwf	((_cnc+2)^(0+384)+20)
 36769  4592  3000               	movlw	0
 36770  4593  00B5               	movwf	((_cnc+1)^(0+384)+20)
 36771  4594  3000               	movlw	0
 36772  4595  00B4               	movwf	(_cnc^(0+384)+20)
 36773                           
 36774                           ;cnc.c: 50: cnc.max.step.Pos = convertMMtoSteps(cnc.max.mm.Pos);
 36775  4596  3028               	movlw	40
 36776  4597  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36777  4598  0086               	movwf	6
 36778  4599  3001               	movlw	1	; select bank3/4
 36779  459A  0087               	movwf	7
 36780  459B  3F40               	moviw [0]fsr1
 36781  459C  0140               	movlb	0	; select bank0
 36782  459D  00E0               	movwf	convertMMtoSteps@mm
 36783  459E  3F41               	moviw [1]fsr1
 36784  459F  00E1               	movwf	convertMMtoSteps@mm+1
 36785  45A0  3F42               	moviw [2]fsr1
 36786  45A1  00E2               	movwf	convertMMtoSteps@mm+2
 36787  45A2  3F43               	moviw [3]fsr1
 36788  45A3  00E3               	movwf	convertMMtoSteps@mm+3
 36789  45A4  31D1  21A0  31C5   	fcall	_convertMMtoSteps
 36790  45A7  0863               	movf	?_convertMMtoSteps+3,w
 36791  45A8  0143               	movlb	3	; select bank3
 36792  45A9  00D3               	movwf	((_cnc+3)^(0+384)+48)
 36793  45AA  0140               	movlb	0	; select bank0
 36794  45AB  0862               	movf	?_convertMMtoSteps+2,w
 36795  45AC  0143               	movlb	3	; select bank3
 36796  45AD  00D2               	movwf	((_cnc+2)^(0+384)+48)
 36797  45AE  0140               	movlb	0	; select bank0
 36798  45AF  0861               	movf	?_convertMMtoSteps+1,w
 36799  45B0  0143               	movlb	3	; select bank3
 36800  45B1  00D1               	movwf	((_cnc+1)^(0+384)+48)
 36801  45B2  0140               	movlb	0	; select bank0
 36802  45B3  0860               	movf	?_convertMMtoSteps,w
 36803  45B4  0143               	movlb	3	; select bank3
 36804  45B5  00D0               	movwf	(_cnc^(0+384)+48)
 36805                           
 36806                           ;cnc.c: 51: cnc.min.step.Pos = convertMMtoSteps(cnc.min.mm.Pos);
 36807  45B6  3014               	movlw	20
 36808  45B7  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36809  45B8  0086               	movwf	6
 36810  45B9  3001               	movlw	1	; select bank3/4
 36811  45BA  0087               	movwf	7
 36812  45BB  3F40               	moviw [0]fsr1
 36813  45BC  0140               	movlb	0	; select bank0
 36814  45BD  00E0               	movwf	convertMMtoSteps@mm
 36815  45BE  3F41               	moviw [1]fsr1
 36816  45BF  00E1               	movwf	convertMMtoSteps@mm+1
 36817  45C0  3F42               	moviw [2]fsr1
 36818  45C1  00E2               	movwf	convertMMtoSteps@mm+2
 36819  45C2  3F43               	moviw [3]fsr1
 36820  45C3  00E3               	movwf	convertMMtoSteps@mm+3
 36821  45C4  31D1  21A0  31C5   	fcall	_convertMMtoSteps
 36822  45C7  0863               	movf	?_convertMMtoSteps+3,w
 36823  45C8  0143               	movlb	3	; select bank3
 36824  45C9  00BF               	movwf	((_cnc+3)^(0+384)+28)
 36825  45CA  0140               	movlb	0	; select bank0
 36826  45CB  0862               	movf	?_convertMMtoSteps+2,w
 36827  45CC  0143               	movlb	3	; select bank3
 36828  45CD  00BE               	movwf	((_cnc+2)^(0+384)+28)
 36829  45CE  0140               	movlb	0	; select bank0
 36830  45CF  0861               	movf	?_convertMMtoSteps+1,w
 36831  45D0  0143               	movlb	3	; select bank3
 36832  45D1  00BD               	movwf	((_cnc+1)^(0+384)+28)
 36833  45D2  0140               	movlb	0	; select bank0
 36834  45D3  0860               	movf	?_convertMMtoSteps,w
 36835  45D4  0143               	movlb	3	; select bank3
 36836  45D5  00BC               	movwf	(_cnc^(0+384)+28)
 36837                           
 36838                           ;cnc.c: 53: cnc.max.mm.Speed = 200.0;
 36839  45D6  3043               	movlw	67
 36840  45D7  00C7               	movwf	((_cnc+3)^(0+384)+36)
 36841  45D8  3048               	movlw	72
 36842  45D9  00C6               	movwf	((_cnc+2)^(0+384)+36)
 36843  45DA  3000               	movlw	0
 36844  45DB  00C5               	movwf	((_cnc+1)^(0+384)+36)
 36845  45DC  3000               	movlw	0
 36846  45DD  00C4               	movwf	(_cnc^(0+384)+36)
 36847                           
 36848                           ;cnc.c: 54: cnc.min.mm.Speed = 10.0;
 36849  45DE  3041               	movlw	65
 36850  45DF  00B3               	movwf	((_cnc+3)^(0+384)+16)
 36851  45E0  3020               	movlw	32
 36852  45E1  00B2               	movwf	((_cnc+2)^(0+384)+16)
 36853  45E2  3000               	movlw	0
 36854  45E3  00B1               	movwf	((_cnc+1)^(0+384)+16)
 36855  45E4  3000               	movlw	0
 36856  45E5  00B0               	movwf	(_cnc^(0+384)+16)
 36857                           
 36858                           ;cnc.c: 55: cnc.max.step.Speed = convertMMtoSteps(cnc.max.mm.Speed);
 36859  45E6  3024               	movlw	36
 36860  45E7  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36861  45E8  0086               	movwf	6
 36862  45E9  3001               	movlw	1	; select bank3/4
 36863  45EA  0087               	movwf	7
 36864  45EB  3F40               	moviw [0]fsr1
 36865  45EC  0140               	movlb	0	; select bank0
 36866  45ED  00E0               	movwf	convertMMtoSteps@mm
 36867  45EE  3F41               	moviw [1]fsr1
 36868  45EF  00E1               	movwf	convertMMtoSteps@mm+1
 36869  45F0  3F42               	moviw [2]fsr1
 36870  45F1  00E2               	movwf	convertMMtoSteps@mm+2
 36871  45F2  3F43               	moviw [3]fsr1
 36872  45F3  00E3               	movwf	convertMMtoSteps@mm+3
 36873  45F4  31D1  21A0  31C5   	fcall	_convertMMtoSteps
 36874  45F7  0863               	movf	?_convertMMtoSteps+3,w
 36875  45F8  0143               	movlb	3	; select bank3
 36876  45F9  00CF               	movwf	((_cnc+3)^(0+384)+44)
 36877  45FA  0140               	movlb	0	; select bank0
 36878  45FB  0862               	movf	?_convertMMtoSteps+2,w
 36879  45FC  0143               	movlb	3	; select bank3
 36880  45FD  00CE               	movwf	((_cnc+2)^(0+384)+44)
 36881  45FE  0140               	movlb	0	; select bank0
 36882  45FF  0861               	movf	?_convertMMtoSteps+1,w
 36883  4600  0143               	movlb	3	; select bank3
 36884  4601  00CD               	movwf	((_cnc+1)^(0+384)+44)
 36885  4602  0140               	movlb	0	; select bank0
 36886  4603  0860               	movf	?_convertMMtoSteps,w
 36887  4604  0143               	movlb	3	; select bank3
 36888  4605  00CC               	movwf	(_cnc^(0+384)+44)
 36889                           
 36890                           ;cnc.c: 56: cnc.max.step.Speed = convertMMtoSteps(cnc.min.mm.Speed);
 36891  4606  3010               	movlw	16
 36892  4607  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 36893  4608  0086               	movwf	6
 36894  4609  3001               	movlw	1	; select bank3/4
 36895  460A  0087               	movwf	7
 36896  460B  3F40               	moviw [0]fsr1
 36897  460C  0140               	movlb	0	; select bank0
 36898  460D  00E0               	movwf	convertMMtoSteps@mm
 36899  460E  3F41               	moviw [1]fsr1
 36900  460F  00E1               	movwf	convertMMtoSteps@mm+1
 36901  4610  3F42               	moviw [2]fsr1
 36902  4611  00E2               	movwf	convertMMtoSteps@mm+2
 36903  4612  3F43               	moviw [3]fsr1
 36904  4613  00E3               	movwf	convertMMtoSteps@mm+3
 36905  4614  31D1  21A0  31C5   	fcall	_convertMMtoSteps
 36906  4617  0863               	movf	?_convertMMtoSteps+3,w
 36907  4618  0143               	movlb	3	; select bank3
 36908  4619  00CF               	movwf	((_cnc+3)^(0+384)+44)
 36909  461A  0140               	movlb	0	; select bank0
 36910  461B  0862               	movf	?_convertMMtoSteps+2,w
 36911  461C  0143               	movlb	3	; select bank3
 36912  461D  00CE               	movwf	((_cnc+2)^(0+384)+44)
 36913  461E  0140               	movlb	0	; select bank0
 36914  461F  0861               	movf	?_convertMMtoSteps+1,w
 36915  4620  0143               	movlb	3	; select bank3
 36916  4621  00CD               	movwf	((_cnc+1)^(0+384)+44)
 36917  4622  0140               	movlb	0	; select bank0
 36918  4623  0860               	movf	?_convertMMtoSteps,w
 36919  4624  0143               	movlb	3	; select bank3
 36920  4625  00CC               	movwf	(_cnc^(0+384)+44)
 36921                           
 36922                           ;cnc.c: 58: cnc.max.press = 1000;
 36923  4626  3044               	movlw	68
 36924  4627  00D7               	movwf	((_cnc+3)^(0+384)+52)
 36925  4628  307A               	movlw	122
 36926  4629  00D6               	movwf	((_cnc+2)^(0+384)+52)
 36927  462A  3000               	movlw	0
 36928  462B  00D5               	movwf	((_cnc+1)^(0+384)+52)
 36929  462C  3000               	movlw	0
 36930  462D  00D4               	movwf	(_cnc^(0+384)+52)
 36931                           
 36932                           ;cnc.c: 59: cnc.min.press = 100;
 36933  462E  3042               	movlw	66
 36934  462F  00C3               	movwf	((_cnc+3)^(0+384)+32)
 36935  4630  30C8               	movlw	200
 36936  4631  00C2               	movwf	((_cnc+2)^(0+384)+32)
 36937  4632  3000               	movlw	0
 36938  4633  00C1               	movwf	((_cnc+1)^(0+384)+32)
 36939  4634  3000               	movlw	0
 36940  4635  00C0               	movwf	(_cnc^(0+384)+32)
 36941                           
 36942                           ;cnc.c: 65: cncSetPos(15.00, 250.00, 252.50);
 36943  4636  3041               	movlw	65
 36944  4637  0141               	movlb	1	; select bank1
 36945  4638  00AB               	movwf	(cncSetPos@home+3)^(0+128)
 36946  4639  3070               	movlw	112
 36947  463A  00AA               	movwf	(cncSetPos@home+2)^(0+128)
 36948  463B  3000               	movlw	0
 36949  463C  00A9               	movwf	(cncSetPos@home+1)^(0+128)
 36950  463D  3000               	movlw	0
 36951  463E  00A8               	movwf	cncSetPos@home^(0+128)
 36952  463F  3043               	movlw	67
 36953  4640  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 36954  4641  307A               	movlw	122
 36955  4642  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 36956  4643  3000               	movlw	0
 36957  4644  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 36958  4645  3000               	movlw	0
 36959  4646  00AC               	movwf	cncSetPos@start^(0+128)
 36960  4647  3043               	movlw	67
 36961  4648  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 36962  4649  307C               	movlw	124
 36963  464A  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 36964  464B  3080               	movlw	128
 36965  464C  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 36966  464D  3000               	movlw	0
 36967  464E  00B0               	movwf	cncSetPos@stop^(0+128)
 36968  464F  31A8  200D  31C5   	fcall	_cncSetPos
 36969                           
 36970                           ;cnc.c: 66: cncConfigMove(&step.Forward, 200.0, ACC_MAX);
 36971  4652  30F8               	movlw	248
 36972  4653  0140               	movlb	0	; select bank0
 36973  4654  00E4               	movwf	cncConfigMove@mv
 36974  4655  302E               	movlw	46
 36975  4656  00E5               	movwf	cncConfigMove@mv+1
 36976  4657  3043               	movlw	67
 36977  4658  00E9               	movwf	cncConfigMove@speed+3
 36978  4659  3048               	movlw	72
 36979  465A  00E8               	movwf	cncConfigMove@speed+2
 36980  465B  3000               	movlw	0
 36981  465C  00E7               	movwf	cncConfigMove@speed+1
 36982  465D  3000               	movlw	0
 36983  465E  00E6               	movwf	cncConfigMove@speed
 36984  465F  01EA               	clrf	cncConfigMove@accel
 36985  4660  31BC  2450  31C5   	fcall	_cncConfigMove
 36986                           
 36987                           ;cnc.c: 67: cncConfigMove(&step.Welding, 1.0, ACC_MIN);
 36988  4663  3031               	movlw	49
 36989  4664  00E4               	movwf	cncConfigMove@mv
 36990  4665  302F               	movlw	47
 36991  4666  00E5               	movwf	cncConfigMove@mv+1
 36992  4667  303F               	movlw	63
 36993  4668  00E9               	movwf	cncConfigMove@speed+3
 36994  4669  3080               	movlw	128
 36995  466A  00E8               	movwf	cncConfigMove@speed+2
 36996  466B  3000               	movlw	0
 36997  466C  00E7               	movwf	cncConfigMove@speed+1
 36998  466D  3000               	movlw	0
 36999  466E  00E6               	movwf	cncConfigMove@speed
 37000  466F  3006               	movlw	6
 37001  4670  00ED               	movwf	??_cncConfig
 37002  4671  086D               	movf	??_cncConfig,w
 37003  4672  00EA               	movwf	cncConfigMove@accel
 37004  4673  31BC  2450  31C5   	fcall	_cncConfigMove
 37005                           
 37006                           ;cnc.c: 68: cncConfigMove(&step.Return, 160.0, ACC_137);
 37007  4676  306A               	movlw	106
 37008  4677  00E4               	movwf	cncConfigMove@mv
 37009  4678  302F               	movlw	47
 37010  4679  00E5               	movwf	cncConfigMove@mv+1
 37011  467A  3043               	movlw	67
 37012  467B  00E9               	movwf	cncConfigMove@speed+3
 37013  467C  3020               	movlw	32
 37014  467D  00E8               	movwf	cncConfigMove@speed+2
 37015  467E  3000               	movlw	0
 37016  467F  00E7               	movwf	cncConfigMove@speed+1
 37017  4680  3000               	movlw	0
 37018  4681  00E6               	movwf	cncConfigMove@speed
 37019  4682  01EA               	clrf	cncConfigMove@accel
 37020  4683  0AEA               	incf	cncConfigMove@accel,f
 37021  4684  31BC  2450         	fcall	_cncConfigMove
 37022  4686  0008               	return
 37023  4687                     __end_of_cncConfig:
 37024                           
 37025                           	psect	text53
 37026  280D                     __ptext53:	
 37027 ;; *************** function _cncSetPos *****************
 37028 ;; Defined at:
 37029 ;;		line 73 in file "cnc.c"
 37030 ;; Parameters:    Size  Location     Type
 37031 ;;  home            4    8[BANK1 ] float 
 37032 ;;  start           4   12[BANK1 ] float 
 37033 ;;  stop            4   16[BANK1 ] float 
 37034 ;; Auto vars:     Size  Location     Type
 37035 ;;  e               4   32[BANK1 ] long 
 37036 ;;  s               4   28[BANK1 ] long 
 37037 ;;  h               4   24[BANK1 ] long 
 37038 ;; Return value:  Size  Location     Type
 37039 ;;                  1    wreg      void 
 37040 ;; Registers used:
 37041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 37042 ;; Tracked objects:
 37043 ;;		On entry : 3F/1
 37044 ;;		On exit  : 3F/1
 37045 ;;		Unchanged: 0/0
 37046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37047 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37048 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37050 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37051 ;;Total ram usage:       28 bytes
 37052 ;; Hardware stack levels used: 1
 37053 ;; Hardware stack levels required when called: unknown (due to recursion)
 37054 ;; This function calls:
 37055 ;;		___flge
 37056 ;;		_convertMMtoSteps
 37057 ;; This function is called by:
 37058 ;;		_main
 37059 ;;		_cncConfig
 37060 ;;		_cncSetPosHome
 37061 ;;		_cncSetPosStart
 37062 ;;		_cncSetPosStop
 37063 ;;		_navCfgMove
 37064 ;; This function uses a non-reentrant model
 37065 ;;
 37066                           
 37067  280D                     _cncSetPos:	
 37068                           ;psect for function _cncSetPos
 37069                           
 37070                           
 37071                           ;cnc.c: 75: if(home > start) start = home;
 37072                           
 37073                           ;incstack = 0
 37074                           ; Regs used in _cncSetPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 37075  280D  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37076  280E  00A3               	movwf	(___flge@ff1+3)^(0+128)
 37077  280F  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37078  2810  00A2               	movwf	(___flge@ff1+2)^(0+128)
 37079  2811  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37080  2812  00A1               	movwf	(___flge@ff1+1)^(0+128)
 37081  2813  082C               	movf	cncSetPos@start^(0+128),w
 37082  2814  00A0               	movwf	___flge@ff1^(0+128)
 37083  2815  082B               	movf	(cncSetPos@home+3)^(0+128),w
 37084  2816  00A7               	movwf	(___flge@ff2+3)^(0+128)
 37085  2817  082A               	movf	(cncSetPos@home+2)^(0+128),w
 37086  2818  00A6               	movwf	(___flge@ff2+2)^(0+128)
 37087  2819  0829               	movf	(cncSetPos@home+1)^(0+128),w
 37088  281A  00A5               	movwf	(___flge@ff2+1)^(0+128)
 37089  281B  0828               	movf	cncSetPos@home^(0+128),w
 37090  281C  00A4               	movwf	___flge@ff2^(0+128)
 37091  281D  31CD  2551  31A8   	fcall	___flge
 37092  2820  1803               	btfsc	3,0
 37093  2821  282A               	goto	l10412
 37094  2822  082B               	movf	(cncSetPos@home+3)^(0+128),w
 37095  2823  00AF               	movwf	(cncSetPos@start+3)^(0+128)
 37096  2824  082A               	movf	(cncSetPos@home+2)^(0+128),w
 37097  2825  00AE               	movwf	(cncSetPos@start+2)^(0+128)
 37098  2826  0829               	movf	(cncSetPos@home+1)^(0+128),w
 37099  2827  00AD               	movwf	(cncSetPos@start+1)^(0+128)
 37100  2828  0828               	movf	cncSetPos@home^(0+128),w
 37101  2829  00AC               	movwf	cncSetPos@start^(0+128)
 37102  282A                     l10412:
 37103                           
 37104                           ;cnc.c: 76: if(start > stop) stop = start;
 37105  282A  0833               	movf	(cncSetPos@stop+3)^(0+128),w
 37106  282B  00A3               	movwf	(___flge@ff1+3)^(0+128)
 37107  282C  0832               	movf	(cncSetPos@stop+2)^(0+128),w
 37108  282D  00A2               	movwf	(___flge@ff1+2)^(0+128)
 37109  282E  0831               	movf	(cncSetPos@stop+1)^(0+128),w
 37110  282F  00A1               	movwf	(___flge@ff1+1)^(0+128)
 37111  2830  0830               	movf	cncSetPos@stop^(0+128),w
 37112  2831  00A0               	movwf	___flge@ff1^(0+128)
 37113  2832  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37114  2833  00A7               	movwf	(___flge@ff2+3)^(0+128)
 37115  2834  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37116  2835  00A6               	movwf	(___flge@ff2+2)^(0+128)
 37117  2836  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37118  2837  00A5               	movwf	(___flge@ff2+1)^(0+128)
 37119  2838  082C               	movf	cncSetPos@start^(0+128),w
 37120  2839  00A4               	movwf	___flge@ff2^(0+128)
 37121  283A  31CD  2551  31A8   	fcall	___flge
 37122  283D  1803               	btfsc	3,0
 37123  283E  2847               	goto	l913
 37124  283F  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37125  2840  00B3               	movwf	(cncSetPos@stop+3)^(0+128)
 37126  2841  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37127  2842  00B2               	movwf	(cncSetPos@stop+2)^(0+128)
 37128  2843  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37129  2844  00B1               	movwf	(cncSetPos@stop+1)^(0+128)
 37130  2845  082C               	movf	cncSetPos@start^(0+128),w
 37131  2846  00B0               	movwf	cncSetPos@stop^(0+128)
 37132  2847                     l913:
 37133                           
 37134                           ;cnc.c: 78: cnc.pos.Home = home;
 37135  2847  082B               	movf	(cncSetPos@home+3)^(0+128),w
 37136  2848  0143               	movlb	3	; select bank3
 37137  2849  00DB               	movwf	((_cnc+3)^(0+384)+56)
 37138  284A  0141               	movlb	1	; select bank1
 37139  284B  082A               	movf	(cncSetPos@home+2)^(0+128),w
 37140  284C  0143               	movlb	3	; select bank3
 37141  284D  00DA               	movwf	((_cnc+2)^(0+384)+56)
 37142  284E  0141               	movlb	1	; select bank1
 37143  284F  0829               	movf	(cncSetPos@home+1)^(0+128),w
 37144  2850  0143               	movlb	3	; select bank3
 37145  2851  00D9               	movwf	((_cnc+1)^(0+384)+56)
 37146  2852  0141               	movlb	1	; select bank1
 37147  2853  0828               	movf	cncSetPos@home^(0+128),w
 37148  2854  0143               	movlb	3	; select bank3
 37149  2855  00D8               	movwf	(_cnc^(0+384)+56)
 37150                           
 37151                           ;cnc.c: 79: cnc.pos.Start = start;
 37152  2856  0141               	movlb	1	; select bank1
 37153  2857  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37154  2858  0143               	movlb	3	; select bank3
 37155  2859  00DF               	movwf	((_cnc+3)^(0+384)+60)
 37156  285A  0141               	movlb	1	; select bank1
 37157  285B  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37158  285C  0143               	movlb	3	; select bank3
 37159  285D  00DE               	movwf	((_cnc+2)^(0+384)+60)
 37160  285E  0141               	movlb	1	; select bank1
 37161  285F  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37162  2860  0143               	movlb	3	; select bank3
 37163  2861  00DD               	movwf	((_cnc+1)^(0+384)+60)
 37164  2862  0141               	movlb	1	; select bank1
 37165  2863  082C               	movf	cncSetPos@start^(0+128),w
 37166  2864  0143               	movlb	3	; select bank3
 37167  2865  00DC               	movwf	(_cnc^(0+384)+60)
 37168                           
 37169                           ;cnc.c: 80: cnc.pos.Stop = stop;
 37170  2866  0141               	movlb	1	; select bank1
 37171  2867  0833               	movf	(cncSetPos@stop+3)^(0+128),w
 37172  2868  0143               	movlb	3	; select bank3
 37173  2869  00E3               	movwf	((_cnc+3)^(0+384)+64)
 37174  286A  0141               	movlb	1	; select bank1
 37175  286B  0832               	movf	(cncSetPos@stop+2)^(0+128),w
 37176  286C  0143               	movlb	3	; select bank3
 37177  286D  00E2               	movwf	((_cnc+2)^(0+384)+64)
 37178  286E  0141               	movlb	1	; select bank1
 37179  286F  0831               	movf	(cncSetPos@stop+1)^(0+128),w
 37180  2870  0143               	movlb	3	; select bank3
 37181  2871  00E1               	movwf	((_cnc+1)^(0+384)+64)
 37182  2872  0141               	movlb	1	; select bank1
 37183  2873  0830               	movf	cncSetPos@stop^(0+128),w
 37184  2874  0143               	movlb	3	; select bank3
 37185  2875  00E0               	movwf	(_cnc^(0+384)+64)
 37186                           
 37187                           ;cnc.c: 82: long h = convertMMtoSteps(home);
 37188  2876  0141               	movlb	1	; select bank1
 37189  2877  082B               	movf	(cncSetPos@home+3)^(0+128),w
 37190  2878  0140               	movlb	0	; select bank0
 37191  2879  00E3               	movwf	convertMMtoSteps@mm+3
 37192  287A  0141               	movlb	1	; select bank1
 37193  287B  082A               	movf	(cncSetPos@home+2)^(0+128),w
 37194  287C  0140               	movlb	0	; select bank0
 37195  287D  00E2               	movwf	convertMMtoSteps@mm+2
 37196  287E  0141               	movlb	1	; select bank1
 37197  287F  0829               	movf	(cncSetPos@home+1)^(0+128),w
 37198  2880  0140               	movlb	0	; select bank0
 37199  2881  00E1               	movwf	convertMMtoSteps@mm+1
 37200  2882  0141               	movlb	1	; select bank1
 37201  2883  0828               	movf	cncSetPos@home^(0+128),w
 37202  2884  0140               	movlb	0	; select bank0
 37203  2885  00E0               	movwf	convertMMtoSteps@mm
 37204  2886  31D1  21A0  31A8   	fcall	_convertMMtoSteps
 37205  2889  0863               	movf	?_convertMMtoSteps+3,w
 37206  288A  0141               	movlb	1	; select bank1
 37207  288B  00BB               	movwf	(cncSetPos@h+3)^(0+128)
 37208  288C  0140               	movlb	0	; select bank0
 37209  288D  0862               	movf	?_convertMMtoSteps+2,w
 37210  288E  0141               	movlb	1	; select bank1
 37211  288F  00BA               	movwf	(cncSetPos@h+2)^(0+128)
 37212  2890  0140               	movlb	0	; select bank0
 37213  2891  0861               	movf	?_convertMMtoSteps+1,w
 37214  2892  0141               	movlb	1	; select bank1
 37215  2893  00B9               	movwf	(cncSetPos@h+1)^(0+128)
 37216  2894  0140               	movlb	0	; select bank0
 37217  2895  0860               	movf	?_convertMMtoSteps,w
 37218  2896  0141               	movlb	1	; select bank1
 37219  2897  00B8               	movwf	cncSetPos@h^(0+128)
 37220                           
 37221                           ;cnc.c: 83: long s = convertMMtoSteps(start);
 37222  2898  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37223  2899  0140               	movlb	0	; select bank0
 37224  289A  00E3               	movwf	convertMMtoSteps@mm+3
 37225  289B  0141               	movlb	1	; select bank1
 37226  289C  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37227  289D  0140               	movlb	0	; select bank0
 37228  289E  00E2               	movwf	convertMMtoSteps@mm+2
 37229  289F  0141               	movlb	1	; select bank1
 37230  28A0  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37231  28A1  0140               	movlb	0	; select bank0
 37232  28A2  00E1               	movwf	convertMMtoSteps@mm+1
 37233  28A3  0141               	movlb	1	; select bank1
 37234  28A4  082C               	movf	cncSetPos@start^(0+128),w
 37235  28A5  0140               	movlb	0	; select bank0
 37236  28A6  00E0               	movwf	convertMMtoSteps@mm
 37237  28A7  31D1  21A0  31A8   	fcall	_convertMMtoSteps
 37238  28AA  0863               	movf	?_convertMMtoSteps+3,w
 37239  28AB  0141               	movlb	1	; select bank1
 37240  28AC  00BF               	movwf	(cncSetPos@s+3)^(0+128)
 37241  28AD  0140               	movlb	0	; select bank0
 37242  28AE  0862               	movf	?_convertMMtoSteps+2,w
 37243  28AF  0141               	movlb	1	; select bank1
 37244  28B0  00BE               	movwf	(cncSetPos@s+2)^(0+128)
 37245  28B1  0140               	movlb	0	; select bank0
 37246  28B2  0861               	movf	?_convertMMtoSteps+1,w
 37247  28B3  0141               	movlb	1	; select bank1
 37248  28B4  00BD               	movwf	(cncSetPos@s+1)^(0+128)
 37249  28B5  0140               	movlb	0	; select bank0
 37250  28B6  0860               	movf	?_convertMMtoSteps,w
 37251  28B7  0141               	movlb	1	; select bank1
 37252  28B8  00BC               	movwf	cncSetPos@s^(0+128)
 37253                           
 37254                           ;cnc.c: 84: long e = convertMMtoSteps(stop);
 37255  28B9  0833               	movf	(cncSetPos@stop+3)^(0+128),w
 37256  28BA  0140               	movlb	0	; select bank0
 37257  28BB  00E3               	movwf	convertMMtoSteps@mm+3
 37258  28BC  0141               	movlb	1	; select bank1
 37259  28BD  0832               	movf	(cncSetPos@stop+2)^(0+128),w
 37260  28BE  0140               	movlb	0	; select bank0
 37261  28BF  00E2               	movwf	convertMMtoSteps@mm+2
 37262  28C0  0141               	movlb	1	; select bank1
 37263  28C1  0831               	movf	(cncSetPos@stop+1)^(0+128),w
 37264  28C2  0140               	movlb	0	; select bank0
 37265  28C3  00E1               	movwf	convertMMtoSteps@mm+1
 37266  28C4  0141               	movlb	1	; select bank1
 37267  28C5  0830               	movf	cncSetPos@stop^(0+128),w
 37268  28C6  0140               	movlb	0	; select bank0
 37269  28C7  00E0               	movwf	convertMMtoSteps@mm
 37270  28C8  31D1  21A0  31A8   	fcall	_convertMMtoSteps
 37271  28CB  0863               	movf	?_convertMMtoSteps+3,w
 37272  28CC  0141               	movlb	1	; select bank1
 37273  28CD  00C3               	movwf	(cncSetPos@e+3)^(0+128)
 37274  28CE  0140               	movlb	0	; select bank0
 37275  28CF  0862               	movf	?_convertMMtoSteps+2,w
 37276  28D0  0141               	movlb	1	; select bank1
 37277  28D1  00C2               	movwf	(cncSetPos@e+2)^(0+128)
 37278  28D2  0140               	movlb	0	; select bank0
 37279  28D3  0861               	movf	?_convertMMtoSteps+1,w
 37280  28D4  0141               	movlb	1	; select bank1
 37281  28D5  00C1               	movwf	(cncSetPos@e+1)^(0+128)
 37282  28D6  0140               	movlb	0	; select bank0
 37283  28D7  0860               	movf	?_convertMMtoSteps,w
 37284  28D8  0141               	movlb	1	; select bank1
 37285  28D9  00C0               	movwf	cncSetPos@e^(0+128)
 37286                           
 37287                           ;cnc.c: 86: step.Forward.toStart = h;
 37288  28DA  30F8               	movlw	248
 37289  28DB  0086               	movwf	6
 37290  28DC  302E               	movlw	46
 37291  28DD  0087               	movwf	7
 37292  28DE  314F               	addfsr 1,15
 37293  28DF  0838               	movf	cncSetPos@h^(0+128),w
 37294  28E0  3FC0               	movwi [0]fsr1
 37295  28E1  0839               	movf	(cncSetPos@h+1)^(0+128),w
 37296  28E2  3FC1               	movwi [1]fsr1
 37297  28E3  083A               	movf	(cncSetPos@h+2)^(0+128),w
 37298  28E4  3FC2               	movwi [2]fsr1
 37299  28E5  083B               	movf	(cncSetPos@h+3)^(0+128),w
 37300  28E6  3FC3               	movwi [3]fsr1
 37301                           
 37302                           ;cnc.c: 87: step.Forward.toStop = s;
 37303  28E7  30F8               	movlw	248
 37304  28E8  0086               	movwf	6
 37305  28E9  302E               	movlw	46
 37306  28EA  0087               	movwf	7
 37307  28EB  3153               	addfsr 1,19
 37308  28EC  083C               	movf	cncSetPos@s^(0+128),w
 37309  28ED  3FC0               	movwi [0]fsr1
 37310  28EE  083D               	movf	(cncSetPos@s+1)^(0+128),w
 37311  28EF  3FC1               	movwi [1]fsr1
 37312  28F0  083E               	movf	(cncSetPos@s+2)^(0+128),w
 37313  28F1  3FC2               	movwi [2]fsr1
 37314  28F2  083F               	movf	(cncSetPos@s+3)^(0+128),w
 37315  28F3  3FC3               	movwi [3]fsr1
 37316                           
 37317                           ;cnc.c: 88: step.Forward.dist = s-h;
 37318  28F4  0838               	movf	cncSetPos@h^(0+128),w
 37319  28F5  023C               	subwf	cncSetPos@s^(0+128),w
 37320  28F6  00B4               	movwf	??_cncSetPos^(0+128)
 37321  28F7  0839               	movf	(cncSetPos@h+1)^(0+128),w
 37322  28F8  3B3D               	subwfb	(cncSetPos@s+1)^(0+128),w
 37323  28F9  00B5               	movwf	(??_cncSetPos^(0+128)+1)
 37324  28FA  083A               	movf	(cncSetPos@h+2)^(0+128),w
 37325  28FB  3B3E               	subwfb	(cncSetPos@s+2)^(0+128),w
 37326  28FC  00B6               	movwf	(??_cncSetPos^(0+128)+2)
 37327  28FD  083B               	movf	(cncSetPos@h+3)^(0+128),w
 37328  28FE  3B3F               	subwfb	(cncSetPos@s+3)^(0+128),w
 37329  28FF  00B7               	movwf	(??_cncSetPos^(0+128)+3)
 37330  2900  30F8               	movlw	248
 37331  2901  0086               	movwf	6
 37332  2902  302E               	movlw	46
 37333  2903  0087               	movwf	7
 37334  2904  315B               	addfsr 1,27
 37335  2905  0834               	movf	??_cncSetPos^(0+128),w
 37336  2906  3FC0               	movwi [0]fsr1
 37337  2907  0835               	movf	(??_cncSetPos+1)^(0+128),w
 37338  2908  3FC1               	movwi [1]fsr1
 37339  2909  0836               	movf	(??_cncSetPos+2)^(0+128),w
 37340  290A  3FC2               	movwi [2]fsr1
 37341  290B  0837               	movf	(??_cncSetPos+3)^(0+128),w
 37342  290C  3FC3               	movwi [3]fsr1
 37343                           
 37344                           ;cnc.c: 89: step.Forward.Pos = start;
 37345  290D  30F8               	movlw	248
 37346  290E  0086               	movwf	6
 37347  290F  302E               	movlw	46
 37348  2910  0087               	movwf	7
 37349  2911  3147               	addfsr 1,7
 37350  2912  082C               	movf	cncSetPos@start^(0+128),w
 37351  2913  3FC0               	movwi [0]fsr1
 37352  2914  082D               	movf	(cncSetPos@start+1)^(0+128),w
 37353  2915  3FC1               	movwi [1]fsr1
 37354  2916  082E               	movf	(cncSetPos@start+2)^(0+128),w
 37355  2917  3FC2               	movwi [2]fsr1
 37356  2918  082F               	movf	(cncSetPos@start+3)^(0+128),w
 37357  2919  3FC3               	movwi [3]fsr1
 37358                           
 37359                           ;cnc.c: 91: step.Welding.toStart = s;
 37360  291A  3040               	movlw	64
 37361  291B  0086               	movwf	6
 37362  291C  302F               	movlw	47
 37363  291D  0087               	movwf	7
 37364  291E  083C               	movf	cncSetPos@s^(0+128),w
 37365  291F  3FC0               	movwi [0]fsr1
 37366  2920  083D               	movf	(cncSetPos@s+1)^(0+128),w
 37367  2921  3FC1               	movwi [1]fsr1
 37368  2922  083E               	movf	(cncSetPos@s+2)^(0+128),w
 37369  2923  3FC2               	movwi [2]fsr1
 37370  2924  083F               	movf	(cncSetPos@s+3)^(0+128),w
 37371  2925  3FC3               	movwi [3]fsr1
 37372                           
 37373                           ;cnc.c: 92: step.Welding.toStop = e;
 37374  2926  3044               	movlw	68
 37375  2927  0086               	movwf	6
 37376  2928  302F               	movlw	47
 37377  2929  0087               	movwf	7
 37378  292A  0840               	movf	cncSetPos@e^(0+128),w
 37379  292B  3FC0               	movwi [0]fsr1
 37380  292C  0841               	movf	(cncSetPos@e+1)^(0+128),w
 37381  292D  3FC1               	movwi [1]fsr1
 37382  292E  0842               	movf	(cncSetPos@e+2)^(0+128),w
 37383  292F  3FC2               	movwi [2]fsr1
 37384  2930  0843               	movf	(cncSetPos@e+3)^(0+128),w
 37385  2931  3FC3               	movwi [3]fsr1
 37386                           
 37387                           ;cnc.c: 93: step.Welding.dist = e-s;
 37388  2932  083C               	movf	cncSetPos@s^(0+128),w
 37389  2933  0240               	subwf	cncSetPos@e^(0+128),w
 37390  2934  00B4               	movwf	??_cncSetPos^(0+128)
 37391  2935  083D               	movf	(cncSetPos@s+1)^(0+128),w
 37392  2936  3B41               	subwfb	(cncSetPos@e+1)^(0+128),w
 37393  2937  00B5               	movwf	(??_cncSetPos^(0+128)+1)
 37394  2938  083E               	movf	(cncSetPos@s+2)^(0+128),w
 37395  2939  3B42               	subwfb	(cncSetPos@e+2)^(0+128),w
 37396  293A  00B6               	movwf	(??_cncSetPos^(0+128)+2)
 37397  293B  083F               	movf	(cncSetPos@s+3)^(0+128),w
 37398  293C  3B43               	subwfb	(cncSetPos@e+3)^(0+128),w
 37399  293D  00B7               	movwf	(??_cncSetPos^(0+128)+3)
 37400  293E  304C               	movlw	76
 37401  293F  0086               	movwf	6
 37402  2940  302F               	movlw	47
 37403  2941  0087               	movwf	7
 37404  2942  0834               	movf	??_cncSetPos^(0+128),w
 37405  2943  3FC0               	movwi [0]fsr1
 37406  2944  0835               	movf	(??_cncSetPos+1)^(0+128),w
 37407  2945  3FC1               	movwi [1]fsr1
 37408  2946  0836               	movf	(??_cncSetPos+2)^(0+128),w
 37409  2947  3FC2               	movwi [2]fsr1
 37410  2948  0837               	movf	(??_cncSetPos+3)^(0+128),w
 37411  2949  3FC3               	movwi [3]fsr1
 37412                           
 37413                           ;cnc.c: 94: step.Welding.Pos = stop;
 37414  294A  3038               	movlw	56
 37415  294B  0086               	movwf	6
 37416  294C  302F               	movlw	47
 37417  294D  0087               	movwf	7
 37418  294E  0830               	movf	cncSetPos@stop^(0+128),w
 37419  294F  3FC0               	movwi [0]fsr1
 37420  2950  0831               	movf	(cncSetPos@stop+1)^(0+128),w
 37421  2951  3FC1               	movwi [1]fsr1
 37422  2952  0832               	movf	(cncSetPos@stop+2)^(0+128),w
 37423  2953  3FC2               	movwi [2]fsr1
 37424  2954  0833               	movf	(cncSetPos@stop+3)^(0+128),w
 37425  2955  3FC3               	movwi [3]fsr1
 37426                           
 37427                           ;cnc.c: 96: step.Return.toStart = e;
 37428  2956  3079               	movlw	121
 37429  2957  0086               	movwf	6
 37430  2958  302F               	movlw	47
 37431  2959  0087               	movwf	7
 37432  295A  0840               	movf	cncSetPos@e^(0+128),w
 37433  295B  3FC0               	movwi [0]fsr1
 37434  295C  0841               	movf	(cncSetPos@e+1)^(0+128),w
 37435  295D  3FC1               	movwi [1]fsr1
 37436  295E  0842               	movf	(cncSetPos@e+2)^(0+128),w
 37437  295F  3FC2               	movwi [2]fsr1
 37438  2960  0843               	movf	(cncSetPos@e+3)^(0+128),w
 37439  2961  3FC3               	movwi [3]fsr1
 37440                           
 37441                           ;cnc.c: 97: step.Return.toStop = h;
 37442  2962  307D               	movlw	125
 37443  2963  0086               	movwf	6
 37444  2964  302F               	movlw	47
 37445  2965  0087               	movwf	7
 37446  2966  0838               	movf	cncSetPos@h^(0+128),w
 37447  2967  3FC0               	movwi [0]fsr1
 37448  2968  0839               	movf	(cncSetPos@h+1)^(0+128),w
 37449  2969  3FC1               	movwi [1]fsr1
 37450  296A  083A               	movf	(cncSetPos@h+2)^(0+128),w
 37451  296B  3FC2               	movwi [2]fsr1
 37452  296C  083B               	movf	(cncSetPos@h+3)^(0+128),w
 37453  296D  3FC3               	movwi [3]fsr1
 37454                           
 37455                           ;cnc.c: 98: step.Return.dist = e-h;
 37456  296E  0838               	movf	cncSetPos@h^(0+128),w
 37457  296F  0240               	subwf	cncSetPos@e^(0+128),w
 37458  2970  00B4               	movwf	??_cncSetPos^(0+128)
 37459  2971  0839               	movf	(cncSetPos@h+1)^(0+128),w
 37460  2972  3B41               	subwfb	(cncSetPos@e+1)^(0+128),w
 37461  2973  00B5               	movwf	(??_cncSetPos^(0+128)+1)
 37462  2974  083A               	movf	(cncSetPos@h+2)^(0+128),w
 37463  2975  3B42               	subwfb	(cncSetPos@e+2)^(0+128),w
 37464  2976  00B6               	movwf	(??_cncSetPos^(0+128)+2)
 37465  2977  083B               	movf	(cncSetPos@h+3)^(0+128),w
 37466  2978  3B43               	subwfb	(cncSetPos@e+3)^(0+128),w
 37467  2979  00B7               	movwf	(??_cncSetPos^(0+128)+3)
 37468  297A  3085               	movlw	133
 37469  297B  0086               	movwf	6
 37470  297C  302F               	movlw	47
 37471  297D  0087               	movwf	7
 37472  297E  0834               	movf	??_cncSetPos^(0+128),w
 37473  297F  3FC0               	movwi [0]fsr1
 37474  2980  0835               	movf	(??_cncSetPos+1)^(0+128),w
 37475  2981  3FC1               	movwi [1]fsr1
 37476  2982  0836               	movf	(??_cncSetPos+2)^(0+128),w
 37477  2983  3FC2               	movwi [2]fsr1
 37478  2984  0837               	movf	(??_cncSetPos+3)^(0+128),w
 37479  2985  3FC3               	movwi [3]fsr1
 37480                           
 37481                           ;cnc.c: 99: step.Return.Pos = home;
 37482  2986  3071               	movlw	113
 37483  2987  0086               	movwf	6
 37484  2988  302F               	movlw	47
 37485  2989  0087               	movwf	7
 37486  298A  0828               	movf	cncSetPos@home^(0+128),w
 37487  298B  3FC0               	movwi [0]fsr1
 37488  298C  0829               	movf	(cncSetPos@home+1)^(0+128),w
 37489  298D  3FC1               	movwi [1]fsr1
 37490  298E  082A               	movf	(cncSetPos@home+2)^(0+128),w
 37491  298F  3FC2               	movwi [2]fsr1
 37492  2990  082B               	movf	(cncSetPos@home+3)^(0+128),w
 37493  2991  3FC3               	movwi [3]fsr1
 37494  2992  0008               	return
 37495  2993                     __end_of_cncSetPos:
 37496                           
 37497                           	psect	text54
 37498  4D51                     __ptext54:	
 37499 ;; *************** function ___flge *****************
 37500 ;; Defined at:
 37501 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
 37502 ;; Parameters:    Size  Location     Type
 37503 ;;  ff1             4    0[BANK1 ] void 
 37504 ;;  ff2             4    4[BANK1 ] void 
 37505 ;; Auto vars:     Size  Location     Type
 37506 ;;		None
 37507 ;; Return value:  Size  Location     Type
 37508 ;;		None               void
 37509 ;; Registers used:
 37510 ;;		wreg, status,2, status,0
 37511 ;; Tracked objects:
 37512 ;;		On entry : 3F/1
 37513 ;;		On exit  : 3F/1
 37514 ;;		Unchanged: 0/0
 37515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37516 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37519 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37520 ;;Total ram usage:       12 bytes
 37521 ;; Hardware stack levels used: 1
 37522 ;; Hardware stack levels required when called: unknown (due to recursion)
 37523 ;; This function calls:
 37524 ;;		Nothing
 37525 ;; This function is called by:
 37526 ;;		_cncSetPos
 37527 ;;		_cncSetPosHome
 37528 ;;		_cncSetPosStart
 37529 ;;		_cncSetPosStop
 37530 ;;		_navCfgMove
 37531 ;;		__doprnt
 37532 ;; This function uses a non-reentrant model
 37533 ;;
 37534                           
 37535  4D51                     ___flge:	
 37536                           ;psect for function ___flge
 37537                           
 37538                           
 37539                           ;incstack = 0
 37540                           ; Regs used in ___flge: [wreg+status,2+status,0]
 37541  4D51  3000               	movlw	0
 37542  4D52  0520               	andwf	___flge@ff1^(0+128),w
 37543  4D53  0140               	movlb	0	; select bank0
 37544  4D54  00E9               	movwf	??___flge
 37545  4D55  3000               	movlw	0
 37546  4D56  0141               	movlb	1	; select bank1
 37547  4D57  0521               	andwf	(___flge@ff1+1)^(0+128),w
 37548  4D58  0140               	movlb	0	; select bank0
 37549  4D59  00EA               	movwf	??___flge+1
 37550  4D5A  3080               	movlw	128
 37551  4D5B  0141               	movlb	1	; select bank1
 37552  4D5C  0522               	andwf	(___flge@ff1+2)^(0+128),w
 37553  4D5D  0140               	movlb	0	; select bank0
 37554  4D5E  00EB               	movwf	??___flge+2
 37555  4D5F  307F               	movlw	127
 37556  4D60  0141               	movlb	1	; select bank1
 37557  4D61  0523               	andwf	(___flge@ff1+3)^(0+128),w
 37558  4D62  0140               	movlb	0	; select bank0
 37559  4D63  00EC               	movwf	??___flge+3
 37560  4D64  086C               	movf	??___flge+3,w
 37561  4D65  046B               	iorwf	??___flge+2,w
 37562  4D66  046A               	iorwf	??___flge+1,w
 37563  4D67  0469               	iorwf	??___flge,w
 37564  4D68  1D03               	skipz
 37565  4D69  2D73               	goto	l1911
 37566  4D6A  3000               	movlw	0
 37567  4D6B  0141               	movlb	1	; select bank1
 37568  4D6C  00A3               	movwf	(___flge@ff1+3)^(0+128)
 37569  4D6D  3000               	movlw	0
 37570  4D6E  00A2               	movwf	(___flge@ff1+2)^(0+128)
 37571  4D6F  3000               	movlw	0
 37572  4D70  00A1               	movwf	(___flge@ff1+1)^(0+128)
 37573  4D71  3000               	movlw	0
 37574  4D72  00A0               	movwf	___flge@ff1^(0+128)
 37575  4D73                     l1911:
 37576  4D73  3000               	movlw	0
 37577  4D74  0141               	movlb	1	; select bank1
 37578  4D75  0524               	andwf	___flge@ff2^(0+128),w
 37579  4D76  0140               	movlb	0	; select bank0
 37580  4D77  00E9               	movwf	??___flge
 37581  4D78  3000               	movlw	0
 37582  4D79  0141               	movlb	1	; select bank1
 37583  4D7A  0525               	andwf	(___flge@ff2+1)^(0+128),w
 37584  4D7B  0140               	movlb	0	; select bank0
 37585  4D7C  00EA               	movwf	??___flge+1
 37586  4D7D  3080               	movlw	128
 37587  4D7E  0141               	movlb	1	; select bank1
 37588  4D7F  0526               	andwf	(___flge@ff2+2)^(0+128),w
 37589  4D80  0140               	movlb	0	; select bank0
 37590  4D81  00EB               	movwf	??___flge+2
 37591  4D82  307F               	movlw	127
 37592  4D83  0141               	movlb	1	; select bank1
 37593  4D84  0527               	andwf	(___flge@ff2+3)^(0+128),w
 37594  4D85  0140               	movlb	0	; select bank0
 37595  4D86  00EC               	movwf	??___flge+3
 37596  4D87  086C               	movf	??___flge+3,w
 37597  4D88  046B               	iorwf	??___flge+2,w
 37598  4D89  046A               	iorwf	??___flge+1,w
 37599  4D8A  0469               	iorwf	??___flge,w
 37600  4D8B  1D03               	skipz
 37601  4D8C  2D96               	goto	l9484
 37602  4D8D  3000               	movlw	0
 37603  4D8E  0141               	movlb	1	; select bank1
 37604  4D8F  00A7               	movwf	(___flge@ff2+3)^(0+128)
 37605  4D90  3000               	movlw	0
 37606  4D91  00A6               	movwf	(___flge@ff2+2)^(0+128)
 37607  4D92  3000               	movlw	0
 37608  4D93  00A5               	movwf	(___flge@ff2+1)^(0+128)
 37609  4D94  3000               	movlw	0
 37610  4D95  00A4               	movwf	___flge@ff2^(0+128)
 37611  4D96                     l9484:
 37612  4D96  0141               	movlb	1	; select bank1
 37613  4D97  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
 37614  4D98  2DC1               	goto	l9488
 37615  4D99  3000               	movlw	0
 37616  4D9A  0140               	movlb	0	; select bank0
 37617  4D9B  00E9               	movwf	??___flge
 37618  4D9C  3000               	movlw	0
 37619  4D9D  00EA               	movwf	??___flge+1
 37620  4D9E  3000               	movlw	0
 37621  4D9F  00EB               	movwf	??___flge+2
 37622  4DA0  3080               	movlw	128
 37623  4DA1  00EC               	movwf	??___flge+3
 37624  4DA2  0141               	movlb	1	; select bank1
 37625  4DA3  0820               	movf	___flge@ff1^(0+128),w
 37626  4DA4  0140               	movlb	0	; select bank0
 37627  4DA5  02E9               	subwf	??___flge,f
 37628  4DA6  0141               	movlb	1	; select bank1
 37629  4DA7  0821               	movf	(___flge@ff1+1)^(0+128),w
 37630  4DA8  0140               	movlb	0	; select bank0
 37631  4DA9  3BEA               	subwfb	??___flge+1,f
 37632  4DAA  0141               	movlb	1	; select bank1
 37633  4DAB  0822               	movf	(___flge@ff1+2)^(0+128),w
 37634  4DAC  0140               	movlb	0	; select bank0
 37635  4DAD  3BEB               	subwfb	??___flge+2,f
 37636  4DAE  0141               	movlb	1	; select bank1
 37637  4DAF  0823               	movf	(___flge@ff1+3)^(0+128),w
 37638  4DB0  0140               	movlb	0	; select bank0
 37639  4DB1  3BEC               	subwfb	??___flge+3,f
 37640  4DB2  086C               	movf	??___flge+3,w
 37641  4DB3  0141               	movlb	1	; select bank1
 37642  4DB4  00A3               	movwf	(___flge@ff1+3)^(0+128)
 37643  4DB5  0140               	movlb	0	; select bank0
 37644  4DB6  086B               	movf	??___flge+2,w
 37645  4DB7  0141               	movlb	1	; select bank1
 37646  4DB8  00A2               	movwf	(___flge@ff1+2)^(0+128)
 37647  4DB9  0140               	movlb	0	; select bank0
 37648  4DBA  086A               	movf	??___flge+1,w
 37649  4DBB  0141               	movlb	1	; select bank1
 37650  4DBC  00A1               	movwf	(___flge@ff1+1)^(0+128)
 37651  4DBD  0140               	movlb	0	; select bank0
 37652  4DBE  0869               	movf	??___flge,w
 37653  4DBF  0141               	movlb	1	; select bank1
 37654  4DC0  00A0               	movwf	___flge@ff1^(0+128)
 37655  4DC1                     l9488:
 37656  4DC1  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
 37657  4DC2  2DEB               	goto	l1914
 37658  4DC3  3000               	movlw	0
 37659  4DC4  0140               	movlb	0	; select bank0
 37660  4DC5  00E9               	movwf	??___flge
 37661  4DC6  3000               	movlw	0
 37662  4DC7  00EA               	movwf	??___flge+1
 37663  4DC8  3000               	movlw	0
 37664  4DC9  00EB               	movwf	??___flge+2
 37665  4DCA  3080               	movlw	128
 37666  4DCB  00EC               	movwf	??___flge+3
 37667  4DCC  0141               	movlb	1	; select bank1
 37668  4DCD  0824               	movf	___flge@ff2^(0+128),w
 37669  4DCE  0140               	movlb	0	; select bank0
 37670  4DCF  02E9               	subwf	??___flge,f
 37671  4DD0  0141               	movlb	1	; select bank1
 37672  4DD1  0825               	movf	(___flge@ff2+1)^(0+128),w
 37673  4DD2  0140               	movlb	0	; select bank0
 37674  4DD3  3BEA               	subwfb	??___flge+1,f
 37675  4DD4  0141               	movlb	1	; select bank1
 37676  4DD5  0826               	movf	(___flge@ff2+2)^(0+128),w
 37677  4DD6  0140               	movlb	0	; select bank0
 37678  4DD7  3BEB               	subwfb	??___flge+2,f
 37679  4DD8  0141               	movlb	1	; select bank1
 37680  4DD9  0827               	movf	(___flge@ff2+3)^(0+128),w
 37681  4DDA  0140               	movlb	0	; select bank0
 37682  4DDB  3BEC               	subwfb	??___flge+3,f
 37683  4DDC  086C               	movf	??___flge+3,w
 37684  4DDD  0141               	movlb	1	; select bank1
 37685  4DDE  00A7               	movwf	(___flge@ff2+3)^(0+128)
 37686  4DDF  0140               	movlb	0	; select bank0
 37687  4DE0  086B               	movf	??___flge+2,w
 37688  4DE1  0141               	movlb	1	; select bank1
 37689  4DE2  00A6               	movwf	(___flge@ff2+2)^(0+128)
 37690  4DE3  0140               	movlb	0	; select bank0
 37691  4DE4  086A               	movf	??___flge+1,w
 37692  4DE5  0141               	movlb	1	; select bank1
 37693  4DE6  00A5               	movwf	(___flge@ff2+1)^(0+128)
 37694  4DE7  0140               	movlb	0	; select bank0
 37695  4DE8  0869               	movf	??___flge,w
 37696  4DE9  0141               	movlb	1	; select bank1
 37697  4DEA  00A4               	movwf	___flge@ff2^(0+128)
 37698  4DEB                     l1914:
 37699  4DEB  3080               	movlw	128
 37700  4DEC  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
 37701  4DED  3080               	movlw	128
 37702  4DEE  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
 37703  4DEF  0827               	movf	(___flge@ff2+3)^(0+128),w
 37704  4DF0  0223               	subwf	(___flge@ff1+3)^(0+128),w
 37705  4DF1  1D03               	skipz
 37706  4DF2  0008               	return
 37707  4DF3  0826               	movf	(___flge@ff2+2)^(0+128),w
 37708  4DF4  0222               	subwf	(___flge@ff1+2)^(0+128),w
 37709  4DF5  1D03               	skipz
 37710  4DF6  0008               	return
 37711  4DF7  0825               	movf	(___flge@ff2+1)^(0+128),w
 37712  4DF8  0221               	subwf	(___flge@ff1+1)^(0+128),w
 37713  4DF9  1D03               	skipz
 37714  4DFA  0008               	return
 37715  4DFB  0824               	movf	___flge@ff2^(0+128),w
 37716  4DFC  0220               	subwf	___flge@ff1^(0+128),w
 37717  4DFD  0008               	return
 37718  4DFE                     __end_of___flge:
 37719                           
 37720                           	psect	text55
 37721  3C50                     __ptext55:	
 37722 ;; *************** function _cncConfigMove *****************
 37723 ;; Defined at:
 37724 ;;		line 141 in file "cnc.c"
 37725 ;; Parameters:    Size  Location     Type
 37726 ;;  mv              2   68[BANK0 ] PTR struct .
 37727 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 37728 ;;		 -> step(248), 
 37729 ;;  speed           4   70[BANK0 ] float 
 37730 ;;  accel           1   74[BANK0 ] enum E12679
 37731 ;; Auto vars:     Size  Location     Type
 37732 ;;		None
 37733 ;; Return value:  Size  Location     Type
 37734 ;;                  1    wreg      void 
 37735 ;; Registers used:
 37736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 37737 ;; Tracked objects:
 37738 ;;		On entry : 3F/0
 37739 ;;		On exit  : 3F/0
 37740 ;;		Unchanged: 0/0
 37741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37742 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37744 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37745 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37746 ;;Total ram usage:       16 bytes
 37747 ;; Hardware stack levels used: 1
 37748 ;; Hardware stack levels required when called: unknown (due to recursion)
 37749 ;; This function calls:
 37750 ;;		_cncCalcToCruise
 37751 ;;		_convertMMtoSteps
 37752 ;;		_convertStepsToMM
 37753 ;;		_getMoveTime
 37754 ;;		_getSpeedTable
 37755 ;;		_velMax
 37756 ;; This function is called by:
 37757 ;;		_main
 37758 ;;		_cncConfig
 37759 ;;		_cncConfigHome
 37760 ;;		_cncManualMove
 37761 ;;		_cncMoveTo
 37762 ;;		_navCfgMove
 37763 ;; This function uses a non-reentrant model
 37764 ;;
 37765                           
 37766  3C50                     _cncConfigMove:	
 37767                           ;psect for function _cncConfigMove
 37768                           
 37769                           
 37770                           ;cnc.c: 143: mv->accel = accel;
 37771                           
 37772                           ;incstack = 0
 37773                           ; Regs used in _cncConfigMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 37774  3C50  0864               	movf	cncConfigMove@mv,w
 37775  3C51  3E02               	addlw	2
 37776  3C52  0141               	movlb	1	; select bank1
 37777  3C53  00A0               	movwf	??_cncConfigMove^(0+128)
 37778  3C54  3000               	movlw	0
 37779  3C55  0140               	movlb	0	; select bank0
 37780  3C56  3D65               	addwfc	cncConfigMove@mv+1,w
 37781  3C57  0141               	movlb	1	; select bank1
 37782  3C58  00A1               	movwf	(??_cncConfigMove+1)^(0+128)
 37783  3C59  0820               	movf	??_cncConfigMove^(0+128),w
 37784  3C5A  0086               	movwf	6
 37785  3C5B  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 37786  3C5C  0087               	movwf	7
 37787  3C5D  0140               	movlb	0	; select bank0
 37788  3C5E  086A               	movf	cncConfigMove@accel,w
 37789  3C5F  0081               	movwf	1
 37790                           
 37791                           ;cnc.c: 144: mv->Speed = speed;
 37792  3C60  0864               	movf	cncConfigMove@mv,w
 37793  3C61  0086               	movwf	6
 37794  3C62  0865               	movf	cncConfigMove@mv+1,w
 37795  3C63  0087               	movwf	7
 37796  3C64  3143               	addfsr 1,3
 37797  3C65  0866               	movf	cncConfigMove@speed,w
 37798  3C66  3FC0               	movwi [0]fsr1
 37799  3C67  0867               	movf	cncConfigMove@speed+1,w
 37800  3C68  3FC1               	movwi [1]fsr1
 37801  3C69  0868               	movf	cncConfigMove@speed+2,w
 37802  3C6A  3FC2               	movwi [2]fsr1
 37803  3C6B  0869               	movf	cncConfigMove@speed+3,w
 37804  3C6C  3FC3               	movwi [3]fsr1
 37805                           
 37806                           ;cnc.c: 145: mv->vCruise = convertMMtoSteps(speed);
 37807  3C6D  0869               	movf	cncConfigMove@speed+3,w
 37808  3C6E  00E3               	movwf	convertMMtoSteps@mm+3
 37809  3C6F  0868               	movf	cncConfigMove@speed+2,w
 37810  3C70  00E2               	movwf	convertMMtoSteps@mm+2
 37811  3C71  0867               	movf	cncConfigMove@speed+1,w
 37812  3C72  00E1               	movwf	convertMMtoSteps@mm+1
 37813  3C73  0866               	movf	cncConfigMove@speed,w
 37814  3C74  00E0               	movwf	convertMMtoSteps@mm
 37815  3C75  31D1  21A0  31BC   	fcall	_convertMMtoSteps
 37816  3C78  0864               	movf	cncConfigMove@mv,w
 37817  3C79  0086               	movwf	6
 37818  3C7A  0865               	movf	cncConfigMove@mv+1,w
 37819  3C7B  0087               	movwf	7
 37820  3C7C  314B               	addfsr 1,11
 37821  3C7D  0860               	movf	?_convertMMtoSteps,w
 37822  3C7E  3FC0               	movwi [0]fsr1
 37823  3C7F  0861               	movf	?_convertMMtoSteps+1,w
 37824  3C80  3FC1               	movwi [1]fsr1
 37825  3C81  0862               	movf	?_convertMMtoSteps+2,w
 37826  3C82  3FC2               	movwi [2]fsr1
 37827  3C83  0863               	movf	?_convertMMtoSteps+3,w
 37828  3C84  3FC3               	movwi [3]fsr1
 37829                           
 37830                           ;cnc.c: 147: mv->count = 0;
 37831  3C85  0864               	movf	cncConfigMove@mv,w
 37832  3C86  3E17               	addlw	23
 37833  3C87  0141               	movlb	1	; select bank1
 37834  3C88  00A0               	movwf	??_cncConfigMove^(0+128)
 37835  3C89  3000               	movlw	0
 37836  3C8A  0140               	movlb	0	; select bank0
 37837  3C8B  3D65               	addwfc	cncConfigMove@mv+1,w
 37838  3C8C  0141               	movlb	1	; select bank1
 37839  3C8D  00A1               	movwf	(??_cncConfigMove+1)^(0+128)
 37840  3C8E  0820               	movf	??_cncConfigMove^(0+128),w
 37841  3C8F  0086               	movwf	6
 37842  3C90  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 37843  3C91  0087               	movwf	7
 37844  3C92  3000               	movlw	0
 37845  3C93  3FC0               	movwi [0]fsr1
 37846  3C94  3FC1               	movwi [1]fsr1
 37847  3C95  3FC2               	movwi [2]fsr1
 37848  3C96  3FC3               	movwi [3]fsr1
 37849                           
 37850                           ;cnc.c: 148: mv->stop.En = 0;
 37851  3C97  0140               	movlb	0	; select bank0
 37852  3C98  0864               	movf	cncConfigMove@mv,w
 37853  3C99  3E27               	addlw	39
 37854  3C9A  0086               	movwf	6
 37855  3C9B  3000               	movlw	0
 37856  3C9C  3D65               	addwfc	cncConfigMove@mv+1,w
 37857  3C9D  0087               	movwf	7
 37858  3C9E  3000               	movlw	0
 37859  3C9F  3FC0               	movwi [0]fsr1
 37860  3CA0  3FC1               	movwi [1]fsr1
 37861                           
 37862                           ;cnc.c: 150: if(mv->toStart < mv->toStop){
 37863  3CA1  0864               	movf	cncConfigMove@mv,w
 37864  3CA2  0086               	movwf	6
 37865  3CA3  0865               	movf	cncConfigMove@mv+1,w
 37866  3CA4  0087               	movwf	7
 37867  3CA5  3153               	addfsr 1,19
 37868  3CA6  3F40               	moviw [0]fsr1
 37869  3CA7  0141               	movlb	1	; select bank1
 37870  3CA8  00A0               	movwf	??_cncConfigMove^(0+128)
 37871  3CA9  3F41               	moviw [1]fsr1
 37872  3CAA  00A1               	movwf	(??_cncConfigMove^(0+128)+1)
 37873  3CAB  3F42               	moviw [2]fsr1
 37874  3CAC  00A2               	movwf	(??_cncConfigMove^(0+128)+2)
 37875  3CAD  3F43               	moviw [3]fsr1
 37876  3CAE  00A3               	movwf	(??_cncConfigMove^(0+128)+3)
 37877  3CAF  0140               	movlb	0	; select bank0
 37878  3CB0  0864               	movf	cncConfigMove@mv,w
 37879  3CB1  0086               	movwf	6
 37880  3CB2  0865               	movf	cncConfigMove@mv+1,w
 37881  3CB3  0087               	movwf	7
 37882  3CB4  314F               	addfsr 1,15
 37883  3CB5  3F40               	moviw [0]fsr1
 37884  3CB6  0141               	movlb	1	; select bank1
 37885  3CB7  00A4               	movwf	(??_cncConfigMove+4)^(0+128)
 37886  3CB8  3F41               	moviw [1]fsr1
 37887  3CB9  00A5               	movwf	((??_cncConfigMove+4)^(0+128)+1)
 37888  3CBA  3F42               	moviw [2]fsr1
 37889  3CBB  00A6               	movwf	((??_cncConfigMove+4)^(0+128)+2)
 37890  3CBC  3F43               	moviw [3]fsr1
 37891  3CBD  00A7               	movwf	((??_cncConfigMove+4)^(0+128)+3)
 37892  3CBE  0827               	movf	(??_cncConfigMove+7)^(0+128),w
 37893  3CBF  3A80               	xorlw	128
 37894  3CC0  00A8               	movwf	(??_cncConfigMove+8)^(0+128)
 37895  3CC1  0823               	movf	(??_cncConfigMove+3)^(0+128),w
 37896  3CC2  3A80               	xorlw	128
 37897  3CC3  0228               	subwf	(??_cncConfigMove+8)^(0+128),w
 37898  3CC4  1D03               	skipz
 37899  3CC5  2CD0               	goto	u11973
 37900  3CC6  0822               	movf	(??_cncConfigMove+2)^(0+128),w
 37901  3CC7  0226               	subwf	(??_cncConfigMove+6)^(0+128),w
 37902  3CC8  1D03               	skipz
 37903  3CC9  2CD0               	goto	u11973
 37904  3CCA  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 37905  3CCB  0225               	subwf	(??_cncConfigMove+5)^(0+128),w
 37906  3CCC  1D03               	skipz
 37907  3CCD  2CD0               	goto	u11973
 37908  3CCE  0820               	movf	??_cncConfigMove^(0+128),w
 37909  3CCF  0224               	subwf	(??_cncConfigMove+4)^(0+128),w
 37910  3CD0                     u11973:
 37911  3CD0  1803               	skipnc
 37912  3CD1  2D0F               	goto	l10460
 37913                           
 37914                           ;cnc.c: 152: mv->dir = 0;
 37915  3CD2  0140               	movlb	0	; select bank0
 37916  3CD3  0864               	movf	cncConfigMove@mv,w
 37917  3CD4  0086               	movwf	6
 37918  3CD5  0865               	movf	cncConfigMove@mv+1,w
 37919  3CD6  0087               	movwf	7
 37920  3CD7  3000               	movlw	0
 37921  3CD8  3FC0               	movwi [0]fsr1
 37922  3CD9  3FC1               	movwi [1]fsr1
 37923                           
 37924                           ;cnc.c: 153: mv->dist = mv->toStop - mv->toStart;
 37925  3CDA  0864               	movf	cncConfigMove@mv,w
 37926  3CDB  0086               	movwf	6
 37927  3CDC  0865               	movf	cncConfigMove@mv+1,w
 37928  3CDD  0087               	movwf	7
 37929  3CDE  314F               	addfsr 1,15
 37930  3CDF  3F40               	moviw [0]fsr1
 37931  3CE0  0141               	movlb	1	; select bank1
 37932  3CE1  00A0               	movwf	??_cncConfigMove^(0+128)
 37933  3CE2  3F41               	moviw [1]fsr1
 37934  3CE3  00A1               	movwf	(??_cncConfigMove^(0+128)+1)
 37935  3CE4  3F42               	moviw [2]fsr1
 37936  3CE5  00A2               	movwf	(??_cncConfigMove^(0+128)+2)
 37937  3CE6  3F43               	moviw [3]fsr1
 37938  3CE7  00A3               	movwf	(??_cncConfigMove^(0+128)+3)
 37939  3CE8  0140               	movlb	0	; select bank0
 37940  3CE9  0864               	movf	cncConfigMove@mv,w
 37941  3CEA  0086               	movwf	6
 37942  3CEB  0865               	movf	cncConfigMove@mv+1,w
 37943  3CEC  0087               	movwf	7
 37944  3CED  3153               	addfsr 1,19
 37945  3CEE  3F40               	moviw [0]fsr1
 37946  3CEF  0141               	movlb	1	; select bank1
 37947  3CF0  00A4               	movwf	(??_cncConfigMove+4)^(0+128)
 37948  3CF1  3F41               	moviw [1]fsr1
 37949  3CF2  00A5               	movwf	((??_cncConfigMove+4)^(0+128)+1)
 37950  3CF3  3F42               	moviw [2]fsr1
 37951  3CF4  00A6               	movwf	((??_cncConfigMove+4)^(0+128)+2)
 37952  3CF5  3F43               	moviw [3]fsr1
 37953  3CF6  00A7               	movwf	((??_cncConfigMove+4)^(0+128)+3)
 37954  3CF7  0820               	movf	??_cncConfigMove^(0+128),w
 37955  3CF8  02A4               	subwf	(??_cncConfigMove+4)^(0+128),f
 37956  3CF9  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 37957  3CFA  3BA5               	subwfb	((??_cncConfigMove+4)^(0+128)+1),f
 37958  3CFB  0822               	movf	(??_cncConfigMove+2)^(0+128),w
 37959  3CFC  3BA6               	subwfb	((??_cncConfigMove+4)^(0+128)+2),f
 37960  3CFD  0823               	movf	(??_cncConfigMove+3)^(0+128),w
 37961  3CFE  3BA7               	subwfb	((??_cncConfigMove+4)^(0+128)+3),f
 37962  3CFF  0140               	movlb	0	; select bank0
 37963  3D00  0864               	movf	cncConfigMove@mv,w
 37964  3D01  0086               	movwf	6
 37965  3D02  0865               	movf	cncConfigMove@mv+1,w
 37966  3D03  0087               	movwf	7
 37967  3D04  315B               	addfsr 1,27
 37968  3D05  0141               	movlb	1	; select bank1
 37969  3D06  0824               	movf	(??_cncConfigMove+4)^(0+128),w
 37970  3D07  3FC0               	movwi [0]fsr1
 37971  3D08  0825               	movf	(??_cncConfigMove+5)^(0+128),w
 37972  3D09  3FC1               	movwi [1]fsr1
 37973  3D0A  0826               	movf	(??_cncConfigMove+6)^(0+128),w
 37974  3D0B  3FC2               	movwi [2]fsr1
 37975  3D0C  0827               	movf	(??_cncConfigMove+7)^(0+128),w
 37976  3D0D  3FC3               	movwi [3]fsr1
 37977                           
 37978                           ;cnc.c: 154: }
 37979  3D0E  2D4C               	goto	l10462
 37980  3D0F                     l10460:
 37981                           
 37982                           ;cnc.c: 155: else{;cnc.c: 157: mv->dir = 1;
 37983  3D0F  0140               	movlb	0	; select bank0
 37984  3D10  0864               	movf	cncConfigMove@mv,w
 37985  3D11  0086               	movwf	6
 37986  3D12  0865               	movf	cncConfigMove@mv+1,w
 37987  3D13  0087               	movwf	7
 37988  3D14  3001               	movlw	1
 37989  3D15  3FC0               	movwi [0]fsr1
 37990  3D16  3000               	movlw	0
 37991  3D17  3FC1               	movwi [1]fsr1
 37992                           
 37993                           ;cnc.c: 158: mv->dist = mv->toStart - mv->toStop;
 37994  3D18  0864               	movf	cncConfigMove@mv,w
 37995  3D19  0086               	movwf	6
 37996  3D1A  0865               	movf	cncConfigMove@mv+1,w
 37997  3D1B  0087               	movwf	7
 37998  3D1C  3153               	addfsr 1,19
 37999  3D1D  3F40               	moviw [0]fsr1
 38000  3D1E  0141               	movlb	1	; select bank1
 38001  3D1F  00A0               	movwf	??_cncConfigMove^(0+128)
 38002  3D20  3F41               	moviw [1]fsr1
 38003  3D21  00A1               	movwf	(??_cncConfigMove^(0+128)+1)
 38004  3D22  3F42               	moviw [2]fsr1
 38005  3D23  00A2               	movwf	(??_cncConfigMove^(0+128)+2)
 38006  3D24  3F43               	moviw [3]fsr1
 38007  3D25  00A3               	movwf	(??_cncConfigMove^(0+128)+3)
 38008  3D26  0140               	movlb	0	; select bank0
 38009  3D27  0864               	movf	cncConfigMove@mv,w
 38010  3D28  0086               	movwf	6
 38011  3D29  0865               	movf	cncConfigMove@mv+1,w
 38012  3D2A  0087               	movwf	7
 38013  3D2B  314F               	addfsr 1,15
 38014  3D2C  3F40               	moviw [0]fsr1
 38015  3D2D  0141               	movlb	1	; select bank1
 38016  3D2E  00A4               	movwf	(??_cncConfigMove+4)^(0+128)
 38017  3D2F  3F41               	moviw [1]fsr1
 38018  3D30  00A5               	movwf	((??_cncConfigMove+4)^(0+128)+1)
 38019  3D31  3F42               	moviw [2]fsr1
 38020  3D32  00A6               	movwf	((??_cncConfigMove+4)^(0+128)+2)
 38021  3D33  3F43               	moviw [3]fsr1
 38022  3D34  00A7               	movwf	((??_cncConfigMove+4)^(0+128)+3)
 38023  3D35  0820               	movf	??_cncConfigMove^(0+128),w
 38024  3D36  02A4               	subwf	(??_cncConfigMove+4)^(0+128),f
 38025  3D37  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 38026  3D38  3BA5               	subwfb	((??_cncConfigMove+4)^(0+128)+1),f
 38027  3D39  0822               	movf	(??_cncConfigMove+2)^(0+128),w
 38028  3D3A  3BA6               	subwfb	((??_cncConfigMove+4)^(0+128)+2),f
 38029  3D3B  0823               	movf	(??_cncConfigMove+3)^(0+128),w
 38030  3D3C  3BA7               	subwfb	((??_cncConfigMove+4)^(0+128)+3),f
 38031  3D3D  0140               	movlb	0	; select bank0
 38032  3D3E  0864               	movf	cncConfigMove@mv,w
 38033  3D3F  0086               	movwf	6
 38034  3D40  0865               	movf	cncConfigMove@mv+1,w
 38035  3D41  0087               	movwf	7
 38036  3D42  315B               	addfsr 1,27
 38037  3D43  0141               	movlb	1	; select bank1
 38038  3D44  0824               	movf	(??_cncConfigMove+4)^(0+128),w
 38039  3D45  3FC0               	movwi [0]fsr1
 38040  3D46  0825               	movf	(??_cncConfigMove+5)^(0+128),w
 38041  3D47  3FC1               	movwi [1]fsr1
 38042  3D48  0826               	movf	(??_cncConfigMove+6)^(0+128),w
 38043  3D49  3FC2               	movwi [2]fsr1
 38044  3D4A  0827               	movf	(??_cncConfigMove+7)^(0+128),w
 38045  3D4B  3FC3               	movwi [3]fsr1
 38046  3D4C                     l10462:
 38047                           
 38048                           ;cnc.c: 159: };cnc.c: 161: if(mv->vCruise > velMax(mv)){
 38049  3D4C  0140               	movlb	0	; select bank0
 38050  3D4D  0864               	movf	cncConfigMove@mv,w
 38051  3D4E  0086               	movwf	6
 38052  3D4F  0865               	movf	cncConfigMove@mv+1,w
 38053  3D50  0087               	movwf	7
 38054  3D51  314B               	addfsr 1,11
 38055  3D52  3F40               	moviw [0]fsr1
 38056  3D53  0141               	movlb	1	; select bank1
 38057  3D54  00A0               	movwf	??_cncConfigMove^(0+128)
 38058  3D55  3F41               	moviw [1]fsr1
 38059  3D56  00A1               	movwf	(??_cncConfigMove^(0+128)+1)
 38060  3D57  3F42               	moviw [2]fsr1
 38061  3D58  00A2               	movwf	(??_cncConfigMove^(0+128)+2)
 38062  3D59  3F43               	moviw [3]fsr1
 38063  3D5A  00A3               	movwf	(??_cncConfigMove^(0+128)+3)
 38064  3D5B  0140               	movlb	0	; select bank0
 38065  3D5C  0865               	movf	cncConfigMove@mv+1,w
 38066  3D5D  00F2               	movwf	velMax@mv+1
 38067  3D5E  0864               	movf	cncConfigMove@mv,w
 38068  3D5F  00F1               	movwf	velMax@mv
 38069  3D60  31D6  264D  31BC   	fcall	_velMax
 38070  3D63  0874               	movf	?_velMax+3,w
 38071  3D64  3A80               	xorlw	128
 38072  3D65  0141               	movlb	1	; select bank1
 38073  3D66  00A4               	movwf	(??_cncConfigMove+4)^(0+128)
 38074  3D67  0823               	movf	(??_cncConfigMove+3)^(0+128),w
 38075  3D68  3A80               	xorlw	128
 38076  3D69  0224               	subwf	(??_cncConfigMove+4)^(0+128),w
 38077  3D6A  1D03               	skipz
 38078  3D6B  2D76               	goto	u11983
 38079  3D6C  0822               	movf	(??_cncConfigMove+2)^(0+128),w
 38080  3D6D  0273               	subwf	?_velMax+2,w
 38081  3D6E  1D03               	skipz
 38082  3D6F  2D76               	goto	u11983
 38083  3D70  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 38084  3D71  0272               	subwf	?_velMax+1,w
 38085  3D72  1D03               	skipz
 38086  3D73  2D76               	goto	u11983
 38087  3D74  0820               	movf	??_cncConfigMove^(0+128),w
 38088  3D75  0271               	subwf	?_velMax,w
 38089  3D76                     u11983:
 38090  3D76  1803               	skipnc
 38091  3D77  2D8D               	goto	l935
 38092                           
 38093                           ;cnc.c: 162: mv->vCruise = velMax(mv);
 38094  3D78  0140               	movlb	0	; select bank0
 38095  3D79  0865               	movf	cncConfigMove@mv+1,w
 38096  3D7A  00F2               	movwf	velMax@mv+1
 38097  3D7B  0864               	movf	cncConfigMove@mv,w
 38098  3D7C  00F1               	movwf	velMax@mv
 38099  3D7D  31D6  264D  31BC   	fcall	_velMax
 38100  3D80  0864               	movf	cncConfigMove@mv,w
 38101  3D81  0086               	movwf	6
 38102  3D82  0865               	movf	cncConfigMove@mv+1,w
 38103  3D83  0087               	movwf	7
 38104  3D84  314B               	addfsr 1,11
 38105  3D85  0871               	movf	?_velMax,w
 38106  3D86  3FC0               	movwi [0]fsr1
 38107  3D87  0872               	movf	?_velMax+1,w
 38108  3D88  3FC1               	movwi [1]fsr1
 38109  3D89  0873               	movf	?_velMax+2,w
 38110  3D8A  3FC2               	movwi [2]fsr1
 38111  3D8B  0874               	movf	?_velMax+3,w
 38112  3D8C  3FC3               	movwi [3]fsr1
 38113  3D8D                     l935:
 38114                           
 38115                           ;cnc.c: 163: };cnc.c: 166: mv->toCruise = cncCalcToCruise(mv);
 38116  3D8D  0140               	movlb	0	; select bank0
 38117  3D8E  0865               	movf	cncConfigMove@mv+1,w
 38118  3D8F  00AF               	movwf	cncCalcToCruise@mv+1
 38119  3D90  0864               	movf	cncConfigMove@mv,w
 38120  3D91  00AE               	movwf	cncCalcToCruise@mv
 38121  3D92  31B0  2015  31BC   	fcall	_cncCalcToCruise
 38122  3D95  0864               	movf	cncConfigMove@mv,w
 38123  3D96  0086               	movwf	6
 38124  3D97  0865               	movf	cncConfigMove@mv+1,w
 38125  3D98  0087               	movwf	7
 38126  3D99  315F               	addfsr 1,31
 38127  3D9A  082E               	movf	?_cncCalcToCruise,w
 38128  3D9B  3FC0               	movwi [0]fsr1
 38129  3D9C  082F               	movf	?_cncCalcToCruise+1,w
 38130  3D9D  3FC1               	movwi [1]fsr1
 38131  3D9E  0830               	movf	?_cncCalcToCruise+2,w
 38132  3D9F  3FC2               	movwi [2]fsr1
 38133  3DA0  0831               	movf	?_cncCalcToCruise+3,w
 38134  3DA1  3FC3               	movwi [3]fsr1
 38135                           
 38136                           ;cnc.c: 167: mv->toBrake = mv->dist - mv->toCruise;
 38137  3DA2  0864               	movf	cncConfigMove@mv,w
 38138  3DA3  0086               	movwf	6
 38139  3DA4  0865               	movf	cncConfigMove@mv+1,w
 38140  3DA5  0087               	movwf	7
 38141  3DA6  315F               	addfsr 1,31
 38142  3DA7  3F40               	moviw [0]fsr1
 38143  3DA8  0141               	movlb	1	; select bank1
 38144  3DA9  00A0               	movwf	??_cncConfigMove^(0+128)
 38145  3DAA  3F41               	moviw [1]fsr1
 38146  3DAB  00A1               	movwf	(??_cncConfigMove^(0+128)+1)
 38147  3DAC  3F42               	moviw [2]fsr1
 38148  3DAD  00A2               	movwf	(??_cncConfigMove^(0+128)+2)
 38149  3DAE  3F43               	moviw [3]fsr1
 38150  3DAF  00A3               	movwf	(??_cncConfigMove^(0+128)+3)
 38151  3DB0  0140               	movlb	0	; select bank0
 38152  3DB1  0864               	movf	cncConfigMove@mv,w
 38153  3DB2  0086               	movwf	6
 38154  3DB3  0865               	movf	cncConfigMove@mv+1,w
 38155  3DB4  0087               	movwf	7
 38156  3DB5  315B               	addfsr 1,27
 38157  3DB6  3F40               	moviw [0]fsr1
 38158  3DB7  0141               	movlb	1	; select bank1
 38159  3DB8  00A4               	movwf	(??_cncConfigMove+4)^(0+128)
 38160  3DB9  3F41               	moviw [1]fsr1
 38161  3DBA  00A5               	movwf	((??_cncConfigMove+4)^(0+128)+1)
 38162  3DBB  3F42               	moviw [2]fsr1
 38163  3DBC  00A6               	movwf	((??_cncConfigMove+4)^(0+128)+2)
 38164  3DBD  3F43               	moviw [3]fsr1
 38165  3DBE  00A7               	movwf	((??_cncConfigMove+4)^(0+128)+3)
 38166  3DBF  0820               	movf	??_cncConfigMove^(0+128),w
 38167  3DC0  02A4               	subwf	(??_cncConfigMove+4)^(0+128),f
 38168  3DC1  0821               	movf	(??_cncConfigMove+1)^(0+128),w
 38169  3DC2  3BA5               	subwfb	((??_cncConfigMove+4)^(0+128)+1),f
 38170  3DC3  0822               	movf	(??_cncConfigMove+2)^(0+128),w
 38171  3DC4  3BA6               	subwfb	((??_cncConfigMove+4)^(0+128)+2),f
 38172  3DC5  0823               	movf	(??_cncConfigMove+3)^(0+128),w
 38173  3DC6  3BA7               	subwfb	((??_cncConfigMove+4)^(0+128)+3),f
 38174  3DC7  0140               	movlb	0	; select bank0
 38175  3DC8  0864               	movf	cncConfigMove@mv,w
 38176  3DC9  3E23               	addlw	35
 38177  3DCA  0086               	movwf	6
 38178  3DCB  3000               	movlw	0
 38179  3DCC  3D65               	addwfc	cncConfigMove@mv+1,w
 38180  3DCD  0087               	movwf	7
 38181  3DCE  0141               	movlb	1	; select bank1
 38182  3DCF  0824               	movf	(??_cncConfigMove+4)^(0+128),w
 38183  3DD0  3FC0               	movwi [0]fsr1
 38184  3DD1  0825               	movf	(??_cncConfigMove+5)^(0+128),w
 38185  3DD2  3FC1               	movwi [1]fsr1
 38186  3DD3  0826               	movf	(??_cncConfigMove+6)^(0+128),w
 38187  3DD4  3FC2               	movwi [2]fsr1
 38188  3DD5  0827               	movf	(??_cncConfigMove+7)^(0+128),w
 38189  3DD6  3FC3               	movwi [3]fsr1
 38190                           
 38191                           ;cnc.c: 169: mv->vCruise = getSpeedTable(mv->accel,mv->toCruise);
 38192  3DD7  0140               	movlb	0	; select bank0
 38193  3DD8  0864               	movf	cncConfigMove@mv,w
 38194  3DD9  0086               	movwf	6
 38195  3DDA  0865               	movf	cncConfigMove@mv+1,w
 38196  3DDB  0087               	movwf	7
 38197  3DDC  315F               	addfsr 1,31
 38198  3DDD  3F40               	moviw [0]fsr1
 38199  3DDE  00AE               	movwf	getSpeedTable@i
 38200  3DDF  3F41               	moviw [1]fsr1
 38201  3DE0  00AF               	movwf	getSpeedTable@i+1
 38202  3DE1  3F42               	moviw [2]fsr1
 38203  3DE2  00B0               	movwf	getSpeedTable@i+2
 38204  3DE3  3F43               	moviw [3]fsr1
 38205  3DE4  00B1               	movwf	getSpeedTable@i+3
 38206  3DE5  0864               	movf	cncConfigMove@mv,w
 38207  3DE6  0086               	movwf	6
 38208  3DE7  0865               	movf	cncConfigMove@mv+1,w
 38209  3DE8  0087               	movwf	7
 38210  3DE9  3142               	addfsr 1,2
 38211  3DEA  0801               	movf	1,w
 38212  3DEB  31D5  2534  31BC   	fcall	_getSpeedTable
 38213  3DEE  0864               	movf	cncConfigMove@mv,w
 38214  3DEF  0086               	movwf	6
 38215  3DF0  0865               	movf	cncConfigMove@mv+1,w
 38216  3DF1  0087               	movwf	7
 38217  3DF2  314B               	addfsr 1,11
 38218  3DF3  082E               	movf	?_getSpeedTable,w
 38219  3DF4  3FC0               	movwi [0]fsr1
 38220  3DF5  082F               	movf	?_getSpeedTable+1,w
 38221  3DF6  3FC1               	movwi [1]fsr1
 38222  3DF7  0830               	movf	?_getSpeedTable+2,w
 38223  3DF8  3FC2               	movwi [2]fsr1
 38224  3DF9  0831               	movf	?_getSpeedTable+3,w
 38225  3DFA  3FC3               	movwi [3]fsr1
 38226                           
 38227                           ;cnc.c: 170: mv->Speed = convertStepsToMM(mv->vCruise);
 38228  3DFB  0864               	movf	cncConfigMove@mv,w
 38229  3DFC  0086               	movwf	6
 38230  3DFD  0865               	movf	cncConfigMove@mv+1,w
 38231  3DFE  0087               	movwf	7
 38232  3DFF  314B               	addfsr 1,11
 38233  3E00  3F40               	moviw [0]fsr1
 38234  3E01  00C0               	movwf	convertStepsToMM@steps
 38235  3E02  3F41               	moviw [1]fsr1
 38236  3E03  00C1               	movwf	convertStepsToMM@steps+1
 38237  3E04  3F42               	moviw [2]fsr1
 38238  3E05  00C2               	movwf	convertStepsToMM@steps+2
 38239  3E06  3F43               	moviw [3]fsr1
 38240  3E07  00C3               	movwf	convertStepsToMM@steps+3
 38241  3E08  31D1  21CB  31BC   	fcall	_convertStepsToMM
 38242  3E0B  0864               	movf	cncConfigMove@mv,w
 38243  3E0C  0086               	movwf	6
 38244  3E0D  0865               	movf	cncConfigMove@mv+1,w
 38245  3E0E  0087               	movwf	7
 38246  3E0F  3143               	addfsr 1,3
 38247  3E10  0840               	movf	?_convertStepsToMM,w
 38248  3E11  3FC0               	movwi [0]fsr1
 38249  3E12  0841               	movf	?_convertStepsToMM+1,w
 38250  3E13  3FC1               	movwi [1]fsr1
 38251  3E14  0842               	movf	?_convertStepsToMM+2,w
 38252  3E15  3FC2               	movwi [2]fsr1
 38253  3E16  0843               	movf	?_convertStepsToMM+3,w
 38254  3E17  3FC3               	movwi [3]fsr1
 38255                           
 38256                           ;cnc.c: 172: getMoveTime(mv);
 38257  3E18  0865               	movf	cncConfigMove@mv+1,w
 38258  3E19  00C1               	movwf	getMoveTime@mv+1
 38259  3E1A  0864               	movf	cncConfigMove@mv,w
 38260  3E1B  00C0               	movwf	getMoveTime@mv
 38261  3E1C  319C  2491         	fcall	_getMoveTime
 38262  3E1E  0008               	return
 38263  3E1F                     __end_of_cncConfigMove:
 38264                           
 38265                           	psect	text56
 38266  564D                     __ptext56:	
 38267 ;; *************** function _velMax *****************
 38268 ;; Defined at:
 38269 ;;		line 519 in file "cnc.c"
 38270 ;; Parameters:    Size  Location     Type
 38271 ;;  mv              2    1[COMMON] PTR struct .
 38272 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 38273 ;;		 -> step(248), 
 38274 ;; Auto vars:     Size  Location     Type
 38275 ;;		None
 38276 ;; Return value:  Size  Location     Type
 38277 ;;                  4    1[COMMON] long 
 38278 ;; Registers used:
 38279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 38280 ;; Tracked objects:
 38281 ;;		On entry : 3F/0
 38282 ;;		On exit  : 3F/0
 38283 ;;		Unchanged: 3F/0
 38284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38289 ;;Total ram usage:        4 bytes
 38290 ;; Hardware stack levels used: 1
 38291 ;; Hardware stack levels required when called: unknown (due to recursion)
 38292 ;; This function calls:
 38293 ;;		Nothing
 38294 ;; This function is called by:
 38295 ;;		_cncConfigMove
 38296 ;; This function uses a non-reentrant model
 38297 ;;
 38298                           
 38299  564D                     _velMax:	
 38300                           ;psect for function _velMax
 38301                           
 38302                           
 38303                           ;cnc.c: 520: switch(mv->accel){
 38304                           
 38305                           ;incstack = 0
 38306                           ; Regs used in _velMax: [wreg-fsr1h+status,2+status,0]
 38307  564D  2E96               	goto	l9970
 38308  564E                     l9936:
 38309                           
 38310                           ;cnc.c: 522: return 40000;
 38311  564E  3000               	movlw	0
 38312  564F  00F4               	movwf	?_velMax+3
 38313  5650  3000               	movlw	0
 38314  5651  00F3               	movwf	?_velMax+2
 38315  5652  309C               	movlw	156
 38316  5653  00F2               	movwf	?_velMax+1
 38317  5654  3040               	movlw	64
 38318  5655  00F1               	movwf	?_velMax
 38319  5656  0008               	return
 38320  5657                     l9940:
 38321                           
 38322                           ;cnc.c: 524: return 32000;
 38323  5657  3000               	movlw	0
 38324  5658  00F4               	movwf	?_velMax+3
 38325  5659  3000               	movlw	0
 38326  565A  00F3               	movwf	?_velMax+2
 38327  565B  307D               	movlw	125
 38328  565C  00F2               	movwf	?_velMax+1
 38329  565D  3000               	movlw	0
 38330  565E  00F1               	movwf	?_velMax
 38331  565F  0008               	return
 38332  5660                     l9944:
 38333                           
 38334                           ;cnc.c: 526: return 26666;
 38335  5660  3000               	movlw	0
 38336  5661  00F4               	movwf	?_velMax+3
 38337  5662  3000               	movlw	0
 38338  5663  00F3               	movwf	?_velMax+2
 38339  5664  3068               	movlw	104
 38340  5665  00F2               	movwf	?_velMax+1
 38341  5666  302A               	movlw	42
 38342  5667  00F1               	movwf	?_velMax
 38343  5668  0008               	return
 38344  5669                     l9948:
 38345                           
 38346                           ;cnc.c: 528: return 20000;
 38347  5669  3000               	movlw	0
 38348  566A  00F4               	movwf	?_velMax+3
 38349  566B  3000               	movlw	0
 38350  566C  00F3               	movwf	?_velMax+2
 38351  566D  304E               	movlw	78
 38352  566E  00F2               	movwf	?_velMax+1
 38353  566F  3020               	movlw	32
 38354  5670  00F1               	movwf	?_velMax
 38355  5671  0008               	return
 38356  5672                     l9952:
 38357                           
 38358                           ;cnc.c: 530: return 10000;
 38359  5672  3000               	movlw	0
 38360  5673  00F4               	movwf	?_velMax+3
 38361  5674  3000               	movlw	0
 38362  5675  00F3               	movwf	?_velMax+2
 38363  5676  3027               	movlw	39
 38364  5677  00F2               	movwf	?_velMax+1
 38365  5678  3010               	movlw	16
 38366  5679  00F1               	movwf	?_velMax
 38367  567A  0008               	return
 38368  567B                     l9956:
 38369                           
 38370                           ;cnc.c: 532: return 5000;
 38371  567B  3000               	movlw	0
 38372  567C  00F4               	movwf	?_velMax+3
 38373  567D  3000               	movlw	0
 38374  567E  00F3               	movwf	?_velMax+2
 38375  567F  3013               	movlw	19
 38376  5680  00F2               	movwf	?_velMax+1
 38377  5681  3088               	movlw	136
 38378  5682  00F1               	movwf	?_velMax
 38379  5683  0008               	return
 38380  5684                     l9960:
 38381                           
 38382                           ;cnc.c: 534: return 1250;
 38383  5684  3000               	movlw	0
 38384  5685  00F4               	movwf	?_velMax+3
 38385  5686  3000               	movlw	0
 38386  5687  00F3               	movwf	?_velMax+2
 38387  5688  3004               	movlw	4
 38388  5689  00F2               	movwf	?_velMax+1
 38389  568A  30E2               	movlw	226
 38390  568B  00F1               	movwf	?_velMax
 38391  568C  0008               	return
 38392  568D                     l9964:
 38393                           
 38394                           ;cnc.c: 536: return 0;
 38395  568D  3000               	movlw	0
 38396  568E  00F4               	movwf	?_velMax+3
 38397  568F  3000               	movlw	0
 38398  5690  00F3               	movwf	?_velMax+2
 38399  5691  3000               	movlw	0
 38400  5692  00F2               	movwf	?_velMax+1
 38401  5693  3000               	movlw	0
 38402  5694  00F1               	movwf	?_velMax
 38403  5695  0008               	return
 38404  5696                     l9970:
 38405  5696  0871               	movf	velMax@mv,w
 38406  5697  0086               	movwf	6
 38407  5698  0872               	movf	velMax@mv+1,w
 38408  5699  0087               	movwf	7
 38409  569A  3142               	addfsr 1,2
 38410  569B  0801               	movf	1,w
 38411                           
 38412                           ; Switch size 1, requested type "simple"
 38413                           ; Number of cases is 7, Range of values is 0 to 6
 38414                           ; switch strategies available:
 38415                           ; Name         Instructions Cycles
 38416                           ; direct_byte           20     6 (fixed)
 38417                           ; simple_byte           22    12 (average)
 38418                           ; jumptable            260     6 (fixed)
 38419                           ;	Chosen strategy is simple_byte
 38420  569C  3A00               	xorlw	0	; case 0
 38421  569D  1903               	skipnz
 38422  569E  2E4E               	goto	l9936
 38423  569F  3A01               	xorlw	1	; case 1
 38424  56A0  1903               	skipnz
 38425  56A1  2E57               	goto	l9940
 38426  56A2  3A03               	xorlw	3	; case 2
 38427  56A3  1903               	skipnz
 38428  56A4  2E60               	goto	l9944
 38429  56A5  3A01               	xorlw	1	; case 3
 38430  56A6  1903               	skipnz
 38431  56A7  2E69               	goto	l9948
 38432  56A8  3A07               	xorlw	7	; case 4
 38433  56A9  1903               	skipnz
 38434  56AA  2E72               	goto	l9952
 38435  56AB  3A01               	xorlw	1	; case 5
 38436  56AC  1903               	skipnz
 38437  56AD  2E7B               	goto	l9956
 38438  56AE  3A03               	xorlw	3	; case 6
 38439  56AF  1903               	skipnz
 38440  56B0  2E84               	goto	l9960
 38441  56B1  2E8D               	goto	l9964
 38442  56B2  0008               	return
 38443  56B3                     __end_of_velMax:
 38444                           
 38445                           	psect	text57
 38446  5534                     __ptext57:	
 38447 ;; *************** function _getSpeedTable *****************
 38448 ;; Defined at:
 38449 ;;		line 579 in file "cnc.c"
 38450 ;; Parameters:    Size  Location     Type
 38451 ;;  accel           1    wreg     enum E12679
 38452 ;;  i               4   14[BANK0 ] long 
 38453 ;; Auto vars:     Size  Location     Type
 38454 ;;  accel           1    9[COMMON] enum E12679
 38455 ;; Return value:  Size  Location     Type
 38456 ;;                  4   14[BANK0 ] long 
 38457 ;; Registers used:
 38458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 38459 ;; Tracked objects:
 38460 ;;		On entry : 3E/1
 38461 ;;		On exit  : 3F/0
 38462 ;;		Unchanged: 0/0
 38463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38466 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38467 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38468 ;;Total ram usage:       10 bytes
 38469 ;; Hardware stack levels used: 1
 38470 ;; Hardware stack levels required when called: unknown (due to recursion)
 38471 ;; This function calls:
 38472 ;;		___aldiv
 38473 ;;		_getAccelTable
 38474 ;; This function is called by:
 38475 ;;		_cncConfigMove
 38476 ;;		_navCfgMove
 38477 ;; This function uses a non-reentrant model
 38478 ;;
 38479                           
 38480  5534                     _getSpeedTable:	
 38481                           ;psect for function _getSpeedTable
 38482                           
 38483                           
 38484                           ;incstack = 0
 38485                           ; Regs used in _getSpeedTable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 38486                           ;getSpeedTable@accel stored from wreg
 38487  5534  00F9               	movwf	getSpeedTable@accel
 38488                           
 38489                           ;cnc.c: 580: if(i < 0) i = 0;
 38490  5535  0140               	movlb	0	; select bank0
 38491  5536  1FB1               	btfss	getSpeedTable@i+3,7
 38492  5537  2D40               	goto	l10012
 38493  5538  3000               	movlw	0
 38494  5539  00B1               	movwf	getSpeedTable@i+3
 38495  553A  3000               	movlw	0
 38496  553B  00B0               	movwf	getSpeedTable@i+2
 38497  553C  3000               	movlw	0
 38498  553D  00AF               	movwf	getSpeedTable@i+1
 38499  553E  3000               	movlw	0
 38500  553F  2D56               	goto	L46
 38501  5540                     l10012:
 38502                           
 38503                           ;cnc.c: 581: else if(i > 3560) i = 3560;
 38504  5540  1BB1               	btfsc	getSpeedTable@i+3,7
 38505  5541  2D57               	goto	l10016
 38506  5542  0831               	movf	getSpeedTable@i+3,w
 38507  5543  1D03               	btfss	3,2
 38508  5544  2D4E               	goto	l10014
 38509  5545  0830               	movf	getSpeedTable@i+2,w
 38510  5546  1D03               	btfss	3,2
 38511  5547  2D4E               	goto	l10014
 38512  5548  30E9               	movlw	233
 38513  5549  022E               	subwf	getSpeedTable@i,w
 38514  554A  300D               	movlw	13
 38515  554B  3B2F               	subwfb	getSpeedTable@i+1,w
 38516  554C  1C03               	btfss	3,0
 38517  554D  2D57               	goto	l10016
 38518  554E                     l10014:
 38519  554E  3000               	movlw	0
 38520  554F  0140               	movlb	0	; select bank0
 38521  5550  00B1               	movwf	getSpeedTable@i+3
 38522  5551  3000               	movlw	0
 38523  5552  00B0               	movwf	getSpeedTable@i+2
 38524  5553  300D               	movlw	13
 38525  5554  00AF               	movwf	getSpeedTable@i+1
 38526  5555  30E8               	movlw	232
 38527  5556                     L46:
 38528  5556  00AE               	movwf	getSpeedTable@i
 38529  5557                     l10016:
 38530                           
 38531                           ;cnc.c: 583: return 1000000/((long)getAccelTable(&accel,&i));
 38532  5557  302E               	movlw	(low (getSpeedTable@i| 0))& (0+255)
 38533  5558  0140               	movlb	0	; select bank0
 38534  5559  00B2               	movwf	??_getSpeedTable
 38535  555A  0832               	movf	??_getSpeedTable,w
 38536  555B  00F3               	movwf	getAccelTable@i
 38537  555C  3079               	movlw	low getSpeedTable@accel
 38538  555D  00F1               	movwf	getAccelTable@accel
 38539  555E  3000               	movlw	high getSpeedTable@accel
 38540  555F  00F2               	movwf	getAccelTable@accel+1
 38541  5560  31C8  205A  31D5   	fcall	_getAccelTable
 38542  5563  0871               	movf	?_getAccelTable,w
 38543  5564  0140               	movlb	0	; select bank0
 38544  5565  00B3               	movwf	??_getSpeedTable+1
 38545  5566  0872               	movf	?_getAccelTable+1,w
 38546  5567  00B4               	movwf	??_getSpeedTable+2
 38547  5568  01B5               	clrf	??_getSpeedTable+3
 38548  5569  01B6               	clrf	??_getSpeedTable+4
 38549  556A  0836               	movf	??_getSpeedTable+4,w
 38550  556B  00A3               	movwf	___aldiv@divisor+3
 38551  556C  0835               	movf	??_getSpeedTable+3,w
 38552  556D  00A2               	movwf	___aldiv@divisor+2
 38553  556E  0834               	movf	??_getSpeedTable+2,w
 38554  556F  00A1               	movwf	___aldiv@divisor+1
 38555  5570  0833               	movf	??_getSpeedTable+1,w
 38556  5571  00A0               	movwf	___aldiv@divisor
 38557  5572  3000               	movlw	0
 38558  5573  00A7               	movwf	___aldiv@dividend+3
 38559  5574  300F               	movlw	15
 38560  5575  00A6               	movwf	___aldiv@dividend+2
 38561  5576  3042               	movlw	66
 38562  5577  00A5               	movwf	___aldiv@dividend+1
 38563  5578  3040               	movlw	64
 38564  5579  00A4               	movwf	___aldiv@dividend
 38565  557A  31C9  2155         	fcall	___aldiv
 38566  557C  0823               	movf	?___aldiv+3,w
 38567  557D  00B1               	movwf	?_getSpeedTable+3
 38568  557E  0822               	movf	?___aldiv+2,w
 38569  557F  00B0               	movwf	?_getSpeedTable+2
 38570  5580  0821               	movf	?___aldiv+1,w
 38571  5581  00AF               	movwf	?_getSpeedTable+1
 38572  5582  0820               	movf	?___aldiv,w
 38573  5583  00AE               	movwf	?_getSpeedTable
 38574  5584  0008               	return
 38575  5585                     __end_of_getSpeedTable:
 38576                           
 38577                           	psect	text58
 38578  1C91                     __ptext58:	
 38579 ;; *************** function _getMoveTime *****************
 38580 ;; Defined at:
 38581 ;;		line 247 in file "cnc.c"
 38582 ;; Parameters:    Size  Location     Type
 38583 ;;  mv              2   32[BANK0 ] PTR struct .
 38584 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 38585 ;;		 -> step(248), 
 38586 ;; Auto vars:     Size  Location     Type
 38587 ;;  count           4   45[BANK0 ] long 
 38588 ;;  usAcc           4   41[BANK0 ] long 
 38589 ;; Return value:  Size  Location     Type
 38590 ;;                  4   32[BANK0 ] float 
 38591 ;; Registers used:
 38592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 38593 ;; Tracked objects:
 38594 ;;		On entry : 3F/0
 38595 ;;		On exit  : 3F/0
 38596 ;;		Unchanged: 0/0
 38597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38599 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38600 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38601 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38602 ;;Total ram usage:       17 bytes
 38603 ;; Hardware stack levels used: 1
 38604 ;; Hardware stack levels required when called: unknown (due to recursion)
 38605 ;; This function calls:
 38606 ;;		___fldiv
 38607 ;;		___lmul
 38608 ;;		___xxtofl
 38609 ;;		_getAccelTable
 38610 ;; This function is called by:
 38611 ;;		_cncConfigMove
 38612 ;;		_navCfgMove
 38613 ;;		_navTelas
 38614 ;; This function uses a non-reentrant model
 38615 ;;
 38616                           
 38617  1C91                     _getMoveTime:	
 38618                           ;psect for function _getMoveTime
 38619                           
 38620                           
 38621                           ;cnc.c: 248: long count = 0;
 38622                           
 38623                           ;incstack = 0
 38624                           ; Regs used in _getMoveTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 38625  1C91  3000               	movlw	0
 38626  1C92  00D0               	movwf	getMoveTime@count+3
 38627  1C93  3000               	movlw	0
 38628  1C94  00CF               	movwf	getMoveTime@count+2
 38629  1C95  3000               	movlw	0
 38630  1C96  00CE               	movwf	getMoveTime@count+1
 38631  1C97  3000               	movlw	0
 38632  1C98  00CD               	movwf	getMoveTime@count
 38633                           
 38634                           ;cnc.c: 250: mv->us.accel = 0;
 38635  1C99  0840               	movf	getMoveTime@mv,w
 38636  1C9A  3E2D               	addlw	45
 38637  1C9B  00C4               	movwf	??_getMoveTime
 38638  1C9C  3000               	movlw	0
 38639  1C9D  3D41               	addwfc	getMoveTime@mv+1,w
 38640  1C9E  00C5               	movwf	??_getMoveTime+1
 38641  1C9F  0844               	movf	??_getMoveTime,w
 38642  1CA0  0086               	movwf	6
 38643  1CA1  0845               	movf	??_getMoveTime+1,w
 38644  1CA2  0087               	movwf	7
 38645  1CA3  3000               	movlw	0
 38646  1CA4  3FC0               	movwi [0]fsr1
 38647  1CA5  3FC1               	movwi [1]fsr1
 38648  1CA6  3FC2               	movwi [2]fsr1
 38649  1CA7  3FC3               	movwi [3]fsr1
 38650  1CA8                     l10024:
 38651                           
 38652                           ;cnc.c: 253: usAcc = (long)getAccelTable(&mv->accel,&count);
 38653  1CA8  0840               	movf	getMoveTime@mv,w
 38654  1CA9  3E02               	addlw	2
 38655  1CAA  00F1               	movwf	getAccelTable@accel
 38656  1CAB  3000               	movlw	0
 38657  1CAC  3D41               	addwfc	getMoveTime@mv+1,w
 38658  1CAD  00F2               	movwf	getAccelTable@accel+1
 38659  1CAE  304D               	movlw	(low (getMoveTime@count| 0))& (0+255)
 38660  1CAF  00C4               	movwf	??_getMoveTime
 38661  1CB0  0844               	movf	??_getMoveTime,w
 38662  1CB1  00F3               	movwf	getAccelTable@i
 38663  1CB2  31C8  205A  319C   	fcall	_getAccelTable
 38664  1CB5  0871               	movf	?_getAccelTable,w
 38665  1CB6  0140               	movlb	0	; select bank0
 38666  1CB7  00C9               	movwf	getMoveTime@usAcc
 38667  1CB8  0872               	movf	?_getAccelTable+1,w
 38668  1CB9  00CA               	movwf	getMoveTime@usAcc+1
 38669  1CBA  01CB               	clrf	getMoveTime@usAcc+2
 38670  1CBB  01CC               	clrf	getMoveTime@usAcc+3
 38671                           
 38672                           ;cnc.c: 254: count++;
 38673  1CBC  3001               	movlw	1
 38674  1CBD  07CD               	addwf	getMoveTime@count,f
 38675  1CBE  3000               	movlw	0
 38676  1CBF  3DCE               	addwfc	getMoveTime@count+1,f
 38677  1CC0  3000               	movlw	0
 38678  1CC1  3DCF               	addwfc	getMoveTime@count+2,f
 38679  1CC2  3000               	movlw	0
 38680  1CC3  3DD0               	addwfc	getMoveTime@count+3,f
 38681                           
 38682                           ;cnc.c: 255: mv->us.accel += usAcc;
 38683  1CC4  0840               	movf	getMoveTime@mv,w
 38684  1CC5  3E2D               	addlw	45
 38685  1CC6  0086               	movwf	6
 38686  1CC7  3000               	movlw	0
 38687  1CC8  3D41               	addwfc	getMoveTime@mv+1,w
 38688  1CC9  0087               	movwf	7
 38689  1CCA  0849               	movf	getMoveTime@usAcc,w
 38690  1CCB  0781               	addwf	1,f
 38691  1CCC  3141               	addfsr 1,1
 38692  1CCD  084A               	movf	getMoveTime@usAcc+1,w
 38693  1CCE  3D81               	addwfc	1,f
 38694  1CCF  3141               	addfsr 1,1
 38695  1CD0  084B               	movf	getMoveTime@usAcc+2,w
 38696  1CD1  3D81               	addwfc	1,f
 38697  1CD2  3141               	addfsr 1,1
 38698  1CD3  084C               	movf	getMoveTime@usAcc+3,w
 38699  1CD4  3D81               	addwfc	1,f
 38700                           
 38701                           ;cnc.c: 257: }while(count < mv->toCruise);
 38702  1CD5  0840               	movf	getMoveTime@mv,w
 38703  1CD6  0086               	movwf	6
 38704  1CD7  0841               	movf	getMoveTime@mv+1,w
 38705  1CD8  0087               	movwf	7
 38706  1CD9  315F               	addfsr 1,31
 38707  1CDA  3F40               	moviw [0]fsr1
 38708  1CDB  00C4               	movwf	??_getMoveTime
 38709  1CDC  3F41               	moviw [1]fsr1
 38710  1CDD  00C5               	movwf	??_getMoveTime+1
 38711  1CDE  3F42               	moviw [2]fsr1
 38712  1CDF  00C6               	movwf	??_getMoveTime+2
 38713  1CE0  3F43               	moviw [3]fsr1
 38714  1CE1  00C7               	movwf	??_getMoveTime+3
 38715  1CE2  0850               	movf	getMoveTime@count+3,w
 38716  1CE3  3A80               	xorlw	128
 38717  1CE4  00C8               	movwf	??_getMoveTime+4
 38718  1CE5  0847               	movf	??_getMoveTime+3,w
 38719  1CE6  3A80               	xorlw	128
 38720  1CE7  0248               	subwf	??_getMoveTime+4,w
 38721  1CE8  1D03               	skipz
 38722  1CE9  2CF4               	goto	u11363
 38723  1CEA  0846               	movf	??_getMoveTime+2,w
 38724  1CEB  024F               	subwf	getMoveTime@count+2,w
 38725  1CEC  1D03               	skipz
 38726  1CED  2CF4               	goto	u11363
 38727  1CEE  0845               	movf	??_getMoveTime+1,w
 38728  1CEF  024E               	subwf	getMoveTime@count+1,w
 38729  1CF0  1D03               	skipz
 38730  1CF1  2CF4               	goto	u11363
 38731  1CF2  0844               	movf	??_getMoveTime,w
 38732  1CF3  024D               	subwf	getMoveTime@count,w
 38733  1CF4                     u11363:
 38734  1CF4  1C03               	skipc
 38735  1CF5  2CA8               	goto	l10024
 38736                           
 38737                           ;cnc.c: 259: count = 2*mv->toCruise;
 38738  1CF6  0840               	movf	getMoveTime@mv,w
 38739  1CF7  0086               	movwf	6
 38740  1CF8  0841               	movf	getMoveTime@mv+1,w
 38741  1CF9  0087               	movwf	7
 38742  1CFA  315F               	addfsr 1,31
 38743  1CFB  3F40               	moviw [0]fsr1
 38744  1CFC  00C4               	movwf	??_getMoveTime
 38745  1CFD  3F41               	moviw [1]fsr1
 38746  1CFE  00C5               	movwf	??_getMoveTime+1
 38747  1CFF  3F42               	moviw [2]fsr1
 38748  1D00  00C6               	movwf	??_getMoveTime+2
 38749  1D01  3F43               	moviw [3]fsr1
 38750  1D02  00C7               	movwf	??_getMoveTime+3
 38751  1D03  3544               	lslf	??_getMoveTime,w
 38752  1D04  00CD               	movwf	getMoveTime@count
 38753  1D05  0D45               	rlf	??_getMoveTime+1,w
 38754  1D06  00CE               	movwf	getMoveTime@count+1
 38755  1D07  0D46               	rlf	??_getMoveTime+2,w
 38756  1D08  00CF               	movwf	getMoveTime@count+2
 38757  1D09  0D47               	rlf	??_getMoveTime+3,w
 38758  1D0A  00D0               	movwf	getMoveTime@count+3
 38759                           
 38760                           ;cnc.c: 261: mv->us.cruise = (mv->dist - count) * usAcc;
 38761  1D0B  0840               	movf	getMoveTime@mv,w
 38762  1D0C  0086               	movwf	6
 38763  1D0D  0841               	movf	getMoveTime@mv+1,w
 38764  1D0E  0087               	movwf	7
 38765  1D0F  315B               	addfsr 1,27
 38766  1D10  3F40               	moviw [0]fsr1
 38767  1D11  00C4               	movwf	??_getMoveTime
 38768  1D12  3F41               	moviw [1]fsr1
 38769  1D13  00C5               	movwf	??_getMoveTime+1
 38770  1D14  3F42               	moviw [2]fsr1
 38771  1D15  00C6               	movwf	??_getMoveTime+2
 38772  1D16  3F43               	moviw [3]fsr1
 38773  1D17  00C7               	movwf	??_getMoveTime+3
 38774  1D18  084D               	movf	getMoveTime@count,w
 38775  1D19  02C4               	subwf	??_getMoveTime,f
 38776  1D1A  084E               	movf	getMoveTime@count+1,w
 38777  1D1B  3BC5               	subwfb	??_getMoveTime+1,f
 38778  1D1C  084F               	movf	getMoveTime@count+2,w
 38779  1D1D  3BC6               	subwfb	??_getMoveTime+2,f
 38780  1D1E  0850               	movf	getMoveTime@count+3,w
 38781  1D1F  3BC7               	subwfb	??_getMoveTime+3,f
 38782  1D20  0847               	movf	??_getMoveTime+3,w
 38783  1D21  00F4               	movwf	___lmul@multiplier+3
 38784  1D22  0846               	movf	??_getMoveTime+2,w
 38785  1D23  00F3               	movwf	___lmul@multiplier+2
 38786  1D24  0845               	movf	??_getMoveTime+1,w
 38787  1D25  00F2               	movwf	___lmul@multiplier+1
 38788  1D26  0844               	movf	??_getMoveTime,w
 38789  1D27  00F1               	movwf	___lmul@multiplier
 38790  1D28  084C               	movf	getMoveTime@usAcc+3,w
 38791  1D29  00F8               	movwf	___lmul@multiplicand+3
 38792  1D2A  084B               	movf	getMoveTime@usAcc+2,w
 38793  1D2B  00F7               	movwf	___lmul@multiplicand+2
 38794  1D2C  084A               	movf	getMoveTime@usAcc+1,w
 38795  1D2D  00F6               	movwf	___lmul@multiplicand+1
 38796  1D2E  0849               	movf	getMoveTime@usAcc,w
 38797  1D2F  00F5               	movwf	___lmul@multiplicand
 38798  1D30  31C0  2002  319C   	fcall	___lmul
 38799  1D33  0840               	movf	getMoveTime@mv,w
 38800  1D34  3E31               	addlw	49
 38801  1D35  0086               	movwf	6
 38802  1D36  3000               	movlw	0
 38803  1D37  3D41               	addwfc	getMoveTime@mv+1,w
 38804  1D38  0087               	movwf	7
 38805  1D39  0871               	movf	?___lmul,w
 38806  1D3A  3FC0               	movwi [0]fsr1
 38807  1D3B  0872               	movf	?___lmul+1,w
 38808  1D3C  3FC1               	movwi [1]fsr1
 38809  1D3D  0873               	movf	?___lmul+2,w
 38810  1D3E  3FC2               	movwi [2]fsr1
 38811  1D3F  0874               	movf	?___lmul+3,w
 38812  1D40  3FC3               	movwi [3]fsr1
 38813                           
 38814                           ;cnc.c: 262: mv->us.total = mv->us.cruise + mv->us.accel;
 38815  1D41  0840               	movf	getMoveTime@mv,w
 38816  1D42  3E2D               	addlw	45
 38817  1D43  0086               	movwf	6
 38818  1D44  3000               	movlw	0
 38819  1D45  3D41               	addwfc	getMoveTime@mv+1,w
 38820  1D46  0087               	movwf	7
 38821  1D47  3F40               	moviw [0]fsr1
 38822  1D48  00C4               	movwf	??_getMoveTime
 38823  1D49  3F41               	moviw [1]fsr1
 38824  1D4A  00C5               	movwf	??_getMoveTime+1
 38825  1D4B  3F42               	moviw [2]fsr1
 38826  1D4C  00C6               	movwf	??_getMoveTime+2
 38827  1D4D  3F43               	moviw [3]fsr1
 38828  1D4E  00C7               	movwf	??_getMoveTime+3
 38829  1D4F  0840               	movf	getMoveTime@mv,w
 38830  1D50  3E31               	addlw	49
 38831  1D51  0086               	movwf	6
 38832  1D52  3000               	movlw	0
 38833  1D53  3D41               	addwfc	getMoveTime@mv+1,w
 38834  1D54  0087               	movwf	7
 38835  1D55  3F40               	moviw [0]fsr1
 38836  1D56  07C4               	addwf	??_getMoveTime,f
 38837  1D57  3F41               	moviw [1]fsr1
 38838  1D58  3DC5               	addwfc	??_getMoveTime+1,f
 38839  1D59  3F42               	moviw [2]fsr1
 38840  1D5A  3DC6               	addwfc	??_getMoveTime+2,f
 38841  1D5B  3F43               	moviw [3]fsr1
 38842  1D5C  3DC7               	addwfc	??_getMoveTime+3,f
 38843  1D5D  0840               	movf	getMoveTime@mv,w
 38844  1D5E  3E35               	addlw	53
 38845  1D5F  0086               	movwf	6
 38846  1D60  3000               	movlw	0
 38847  1D61  3D41               	addwfc	getMoveTime@mv+1,w
 38848  1D62  0087               	movwf	7
 38849  1D63  0844               	movf	??_getMoveTime,w
 38850  1D64  3FC0               	movwi [0]fsr1
 38851  1D65  0845               	movf	??_getMoveTime+1,w
 38852  1D66  3FC1               	movwi [1]fsr1
 38853  1D67  0846               	movf	??_getMoveTime+2,w
 38854  1D68  3FC2               	movwi [2]fsr1
 38855  1D69  0847               	movf	??_getMoveTime+3,w
 38856  1D6A  3FC3               	movwi [3]fsr1
 38857                           
 38858                           ;cnc.c: 264: return ((float)mv->us.total)/1000000.0;
 38859  1D6B  3049               	movlw	73
 38860  1D6C  00A9               	movwf	___fldiv@a+3
 38861  1D6D  3074               	movlw	116
 38862  1D6E  00A8               	movwf	___fldiv@a+2
 38863  1D6F  3024               	movlw	36
 38864  1D70  00A7               	movwf	___fldiv@a+1
 38865  1D71  3000               	movlw	0
 38866  1D72  00A6               	movwf	___fldiv@a
 38867  1D73  0840               	movf	getMoveTime@mv,w
 38868  1D74  3E35               	addlw	53
 38869  1D75  0086               	movwf	6
 38870  1D76  3000               	movlw	0
 38871  1D77  3D41               	addwfc	getMoveTime@mv+1,w
 38872  1D78  0087               	movwf	7
 38873  1D79  3F40               	moviw [0]fsr1
 38874  1D7A  00F1               	movwf	___xxtofl@val
 38875  1D7B  3F41               	moviw [1]fsr1
 38876  1D7C  00F2               	movwf	___xxtofl@val+1
 38877  1D7D  3F42               	moviw [2]fsr1
 38878  1D7E  00F3               	movwf	___xxtofl@val+2
 38879  1D7F  3F43               	moviw [3]fsr1
 38880  1D80  00F4               	movwf	___xxtofl@val+3
 38881  1D81  3001               	movlw	1
 38882  1D82  31CA  22DB  319C   	fcall	___xxtofl
 38883  1D85  0874               	movf	?___xxtofl+3,w
 38884  1D86  00AD               	movwf	___fldiv@b+3
 38885  1D87  0873               	movf	?___xxtofl+2,w
 38886  1D88  00AC               	movwf	___fldiv@b+2
 38887  1D89  0872               	movf	?___xxtofl+1,w
 38888  1D8A  00AB               	movwf	___fldiv@b+1
 38889  1D8B  0871               	movf	?___xxtofl,w
 38890  1D8C  00AA               	movwf	___fldiv@b
 38891  1D8D  31C6  2687         	fcall	___fldiv
 38892  1D8F  0829               	movf	?___fldiv+3,w
 38893  1D90  00C3               	movwf	?_getMoveTime+3
 38894  1D91  0828               	movf	?___fldiv+2,w
 38895  1D92  00C2               	movwf	?_getMoveTime+2
 38896  1D93  0827               	movf	?___fldiv+1,w
 38897  1D94  00C1               	movwf	?_getMoveTime+1
 38898  1D95  0826               	movf	?___fldiv,w
 38899  1D96  00C0               	movwf	?_getMoveTime
 38900  1D97  0008               	return
 38901  1D98                     __end_of_getMoveTime:
 38902                           
 38903                           	psect	text59
 38904  485A                     __ptext59:	
 38905 ;; *************** function _getAccelTable *****************
 38906 ;; Defined at:
 38907 ;;		line 546 in file "cnc.c"
 38908 ;; Parameters:    Size  Location     Type
 38909 ;;  accel           2    1[COMMON] PTR enum E12679
 38910 ;;		 -> NULL(0), getSpeedTable@accel(1), RAM(8192), step.Return(57), 
 38911 ;;		 -> step.Welding(57), step.Forward(57), step(248), 
 38912 ;;  i               1    3[COMMON] PTR long 
 38913 ;;		 -> getBackTableSpeed@count(4), getFrontTableSpeed@count(4), getSpeedTable@i(4), cncMove@timeSteps(4), 
 38914 ;;		 -> cncHomeMove@timeSteps(4), getMoveTime@count(4), cncCalcToCruise_Table@count(4), 
 38915 ;; Auto vars:     Size  Location     Type
 38916 ;;		None
 38917 ;; Return value:  Size  Location     Type
 38918 ;;                  2    1[COMMON] unsigned int 
 38919 ;; Registers used:
 38920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 38921 ;; Tracked objects:
 38922 ;;		On entry : 3F/0
 38923 ;;		On exit  : 3F/2
 38924 ;;		Unchanged: 0/0
 38925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38926 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38930 ;;Total ram usage:        7 bytes
 38931 ;; Hardware stack levels used: 1
 38932 ;; Hardware stack levels required when called: unknown (due to recursion)
 38933 ;; This function calls:
 38934 ;;		Nothing
 38935 ;; This function is called by:
 38936 ;;		_getMoveTime
 38937 ;;		_cncHomeMove
 38938 ;;		_cncMove
 38939 ;;		_getSpeedTable
 38940 ;;		_getFrontTableSpeed
 38941 ;;		_getBackTableSpeed
 38942 ;; This function uses a non-reentrant model
 38943 ;;
 38944                           
 38945  485A                     _getAccelTable:	
 38946                           ;psect for function _getAccelTable
 38947                           
 38948                           
 38949                           ;cnc.c: 548: static uint us;;cnc.c: 550: us = acce200[*i];
 38950                           
 38951                           ;incstack = 0
 38952                           ; Regs used in _getAccelTable: [wreg-fsr1h+status,2+status,0+pclath]
 38953  485A  0873               	movf	getAccelTable@i,w
 38954  485B  0086               	movwf	6
 38955  485C  0187               	clrf	7
 38956  485D  3F40               	moviw [0]fsr1
 38957  485E  00F4               	movwf	??_getAccelTable
 38958  485F  3F41               	moviw [1]fsr1
 38959  4860  00F5               	movwf	??_getAccelTable+1
 38960  4861  35F4               	lslf	??_getAccelTable,f
 38961  4862  0DF5               	rlf	??_getAccelTable+1,f
 38962  4863  30AC               	movlw	low (_acce200| (0+32768))
 38963  4864  0774               	addwf	??_getAccelTable,w
 38964  4865  0084               	movwf	4
 38965  4866  3080               	movlw	high (_acce200| (0+32768))
 38966  4867  3D75               	addwfc	??_getAccelTable+1,w
 38967  4868  0085               	movwf	5
 38968  4869  3F00               	moviw [0]fsr0
 38969  486A  0142               	movlb	2	; select bank2
 38970  486B  00AA               	movwf	getAccelTable@us^(0+256)
 38971  486C  3F01               	moviw [1]fsr0
 38972  486D  00AB               	movwf	(getAccelTable@us+1)^(0+256)
 38973                           
 38974                           ;cnc.c: 552: switch(*accel){
 38975  486E  28B7               	goto	l9346
 38976  486F                     l9332:
 38977                           
 38978                           ;cnc.c: 557: us += (acce200[*i]>>2);
 38979  486F  0873               	movf	getAccelTable@i,w
 38980  4870  0086               	movwf	6
 38981  4871  0187               	clrf	7
 38982  4872  3F40               	moviw [0]fsr1
 38983  4873  00F4               	movwf	??_getAccelTable
 38984  4874  3F41               	moviw [1]fsr1
 38985  4875  00F5               	movwf	??_getAccelTable+1
 38986  4876  35F4               	lslf	??_getAccelTable,f
 38987  4877  0DF5               	rlf	??_getAccelTable+1,f
 38988  4878  30AC               	movlw	low (_acce200| (0+32768))
 38989  4879  0774               	addwf	??_getAccelTable,w
 38990  487A  0084               	movwf	4
 38991  487B  3080               	movlw	high (_acce200| (0+32768))
 38992  487C  3D75               	addwfc	??_getAccelTable+1,w
 38993  487D  0085               	movwf	5
 38994  487E  3F00               	moviw [0]fsr0
 38995  487F  00F6               	movwf	??_getAccelTable+2
 38996  4880  3F01               	moviw [1]fsr0
 38997  4881  00F7               	movwf	??_getAccelTable+3
 38998  4882  36F7               	lsrf	??_getAccelTable+3,f
 38999  4883  0CF6               	rrf	??_getAccelTable+2,f
 39000  4884  2898               	goto	L47
 39001  4885                     l9334:	
 39002                           ;cnc.c: 558: break;
 39003                           
 39004                           
 39005                           ;cnc.c: 560: us += (acce200[*i]>>1);
 39006  4885  0873               	movf	getAccelTable@i,w
 39007  4886  0086               	movwf	6
 39008  4887  0187               	clrf	7
 39009  4888  3F40               	moviw [0]fsr1
 39010  4889  00F4               	movwf	??_getAccelTable
 39011  488A  3F41               	moviw [1]fsr1
 39012  488B  00F5               	movwf	??_getAccelTable+1
 39013  488C  35F4               	lslf	??_getAccelTable,f
 39014  488D  0DF5               	rlf	??_getAccelTable+1,f
 39015  488E  30AC               	movlw	low (_acce200| (0+32768))
 39016  488F  0774               	addwf	??_getAccelTable,w
 39017  4890  0084               	movwf	4
 39018  4891  3080               	movlw	high (_acce200| (0+32768))
 39019  4892  3D75               	addwfc	??_getAccelTable+1,w
 39020  4893  0085               	movwf	5
 39021  4894  3F00               	moviw [0]fsr0
 39022  4895  00F6               	movwf	??_getAccelTable+2
 39023  4896  3F01               	moviw [1]fsr0
 39024  4897  00F7               	movwf	??_getAccelTable+3
 39025  4898                     L47:
 39026  4898  36F7               	lsrf	??_getAccelTable+3,f
 39027  4899  0CF6               	rrf	??_getAccelTable+2,f
 39028  489A  0876               	movf	??_getAccelTable+2,w
 39029  489B  07AA               	addwf	getAccelTable@us^(0+256),f
 39030  489C  0877               	movf	??_getAccelTable+3,w
 39031  489D  3DAB               	addwfc	(getAccelTable@us+1)^(0+256),f
 39032                           
 39033                           ;cnc.c: 561: break;
 39034  489E  28D2               	goto	l9348
 39035  489F                     l9336:
 39036                           
 39037                           ;cnc.c: 563: us <<= 1;
 39038  489F  3001               	movlw	1
 39039  48A0                     u9955:
 39040  48A0  35AA               	lslf	getAccelTable@us^(0+256),f
 39041  48A1  0DAB               	rlf	(getAccelTable@us+1)^(0+256),f
 39042  48A2  0B89               	decfsz	9,f
 39043  48A3  28A0               	goto	u9955
 39044                           
 39045                           ;cnc.c: 564: break;
 39046  48A4  28D2               	goto	l9348
 39047  48A5                     l9338:
 39048                           
 39049                           ;cnc.c: 566: us <<= 2;
 39050  48A5  3002               	movlw	2
 39051  48A6                     u9965:
 39052  48A6  35AA               	lslf	getAccelTable@us^(0+256),f
 39053  48A7  0DAB               	rlf	(getAccelTable@us+1)^(0+256),f
 39054  48A8  0B89               	decfsz	9,f
 39055  48A9  28A6               	goto	u9965
 39056                           
 39057                           ;cnc.c: 567: break;
 39058  48AA  28D2               	goto	l9348
 39059  48AB                     l9340:
 39060                           
 39061                           ;cnc.c: 569: us <<= 3;
 39062  48AB  3003               	movlw	3
 39063  48AC                     u9975:
 39064  48AC  35AA               	lslf	getAccelTable@us^(0+256),f
 39065  48AD  0DAB               	rlf	(getAccelTable@us+1)^(0+256),f
 39066  48AE  0B89               	decfsz	9,f
 39067  48AF  28AC               	goto	u9975
 39068                           
 39069                           ;cnc.c: 570: break;
 39070  48B0  28D2               	goto	l9348
 39071  48B1                     l9342:
 39072                           
 39073                           ;cnc.c: 572: us <<= 5;
 39074  48B1  3005               	movlw	5
 39075  48B2                     u9985:
 39076  48B2  35AA               	lslf	getAccelTable@us^(0+256),f
 39077  48B3  0DAB               	rlf	(getAccelTable@us+1)^(0+256),f
 39078  48B4  0B89               	decfsz	9,f
 39079  48B5  28B2               	goto	u9985
 39080                           
 39081                           ;cnc.c: 573: break;
 39082  48B6  28D2               	goto	l9348
 39083  48B7                     l9346:
 39084  48B7  0871               	movf	getAccelTable@accel,w
 39085  48B8  0086               	movwf	6
 39086  48B9  0872               	movf	getAccelTable@accel+1,w
 39087  48BA  0087               	movwf	7
 39088  48BB  0801               	movf	1,w
 39089                           
 39090                           ; Switch size 1, requested type "simple"
 39091                           ; Number of cases is 7, Range of values is 0 to 6
 39092                           ; switch strategies available:
 39093                           ; Name         Instructions Cycles
 39094                           ; direct_byte           20     6 (fixed)
 39095                           ; simple_byte           22    12 (average)
 39096                           ; jumptable            260     6 (fixed)
 39097                           ;	Chosen strategy is simple_byte
 39098  48BC  3A00               	xorlw	0	; case 0
 39099  48BD  1903               	skipnz
 39100  48BE  28D2               	goto	l9348
 39101  48BF  3A01               	xorlw	1	; case 1
 39102  48C0  1903               	skipnz
 39103  48C1  286F               	goto	l9332
 39104  48C2  3A03               	xorlw	3	; case 2
 39105  48C3  1903               	skipnz
 39106  48C4  2885               	goto	l9334
 39107  48C5  3A01               	xorlw	1	; case 3
 39108  48C6  1903               	skipnz
 39109  48C7  289F               	goto	l9336
 39110  48C8  3A07               	xorlw	7	; case 4
 39111  48C9  1903               	skipnz
 39112  48CA  28A5               	goto	l9338
 39113  48CB  3A01               	xorlw	1	; case 5
 39114  48CC  1903               	skipnz
 39115  48CD  28AB               	goto	l9340
 39116  48CE  3A03               	xorlw	3	; case 6
 39117  48CF  1903               	skipnz
 39118  48D0  28B1               	goto	l9342
 39119  48D1  28D2               	goto	l9348
 39120  48D2                     l9348:
 39121                           
 39122                           ;cnc.c: 575: return us;
 39123  48D2  082B               	movf	(getAccelTable@us+1)^(0+256),w
 39124  48D3  00F2               	movwf	?_getAccelTable+1
 39125  48D4  082A               	movf	getAccelTable@us^(0+256),w
 39126  48D5  00F1               	movwf	?_getAccelTable
 39127  48D6  0008               	return
 39128  48D7                     __end_of_getAccelTable:
 39129                           
 39130                           	psect	text60
 39131  4687                     __ptext60:	
 39132 ;; *************** function ___fldiv *****************
 39133 ;; Defined at:
 39134 ;;		line 8 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
 39135 ;; Parameters:    Size  Location     Type
 39136 ;;  a               4    6[BANK0 ] unsigned int 
 39137 ;;  b               4   10[BANK0 ] unsigned int 
 39138 ;; Auto vars:     Size  Location     Type
 39139 ;;  grs             4   26[BANK0 ] unsigned long 
 39140 ;;  rem             4   19[BANK0 ] unsigned long 
 39141 ;;  new_exp         2   24[BANK0 ] int 
 39142 ;;  aexp            1   31[BANK0 ] unsigned char 
 39143 ;;  bexp            1   30[BANK0 ] unsigned char 
 39144 ;;  sign            1   23[BANK0 ] unsigned char 
 39145 ;; Return value:  Size  Location     Type
 39146 ;;                  4    6[BANK0 ] unsigned char 
 39147 ;; Registers used:
 39148 ;;		wreg, status,2, status,0
 39149 ;; Tracked objects:
 39150 ;;		On entry : 3F/0
 39151 ;;		On exit  : 3F/0
 39152 ;;		Unchanged: 0/0
 39153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39154 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39155 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39157 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39158 ;;Total ram usage:       26 bytes
 39159 ;; Hardware stack levels used: 1
 39160 ;; Hardware stack levels required when called: unknown (due to recursion)
 39161 ;; This function calls:
 39162 ;;		Nothing
 39163 ;; This function is called by:
 39164 ;;		_cncConfig
 39165 ;;		_getMoveTime
 39166 ;;		_getValueCMD
 39167 ;;		_navCfgMove
 39168 ;; This function uses a non-reentrant model
 39169 ;;
 39170                           
 39171  4687                     ___fldiv:	
 39172                           ;psect for function ___fldiv
 39173                           
 39174                           
 39175                           ;incstack = 0
 39176                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 39177  4687  082D               	movf	___fldiv@b+3,w
 39178  4688  3980               	andlw	128
 39179  4689  00AE               	movwf	??___fldiv
 39180  468A  082E               	movf	??___fldiv,w
 39181  468B  00B7               	movwf	___fldiv@sign
 39182  468C  352D               	lslf	___fldiv@b+3,w
 39183  468D  00AE               	movwf	??___fldiv
 39184  468E  082E               	movf	??___fldiv,w
 39185  468F  00BE               	movwf	___fldiv@bexp
 39186  4690  1BAC               	btfsc	___fldiv@b+2,7
 39187  4691  143E               	bsf	___fldiv@bexp,0
 39188  4692  083E               	movf	___fldiv@bexp,w
 39189  4693  1903               	btfsc	3,2
 39190  4694  2EA3               	goto	l9586
 39191  4695  0A3E               	incf	___fldiv@bexp,w
 39192  4696  1D03               	btfss	3,2
 39193  4697  2EA0               	goto	l9582
 39194  4698  3000               	movlw	0
 39195  4699  00AD               	movwf	___fldiv@b+3
 39196  469A  3000               	movlw	0
 39197  469B  00AC               	movwf	___fldiv@b+2
 39198  469C  3000               	movlw	0
 39199  469D  00AB               	movwf	___fldiv@b+1
 39200  469E  3000               	movlw	0
 39201  469F  00AA               	movwf	___fldiv@b
 39202  46A0                     l9582:
 39203  46A0  17AC               	bsf	___fldiv@b+2,7
 39204  46A1  01AD               	clrf	___fldiv@b+3
 39205  46A2  2EAB               	goto	l9588
 39206  46A3                     l9586:
 39207  46A3  3000               	movlw	0
 39208  46A4  00AD               	movwf	___fldiv@b+3
 39209  46A5  3000               	movlw	0
 39210  46A6  00AC               	movwf	___fldiv@b+2
 39211  46A7  3000               	movlw	0
 39212  46A8  00AB               	movwf	___fldiv@b+1
 39213  46A9  3000               	movlw	0
 39214  46AA  00AA               	movwf	___fldiv@b
 39215  46AB                     l9588:
 39216  46AB  0829               	movf	___fldiv@a+3,w
 39217  46AC  3980               	andlw	128
 39218  46AD  00AE               	movwf	??___fldiv
 39219  46AE  082E               	movf	??___fldiv,w
 39220  46AF  06B7               	xorwf	___fldiv@sign,f
 39221  46B0  3529               	lslf	___fldiv@a+3,w
 39222  46B1  00AE               	movwf	??___fldiv
 39223  46B2  082E               	movf	??___fldiv,w
 39224  46B3  00BF               	movwf	___fldiv@aexp
 39225  46B4  1BA8               	btfsc	___fldiv@a+2,7
 39226  46B5  143F               	bsf	___fldiv@aexp,0
 39227  46B6  083F               	movf	___fldiv@aexp,w
 39228  46B7  1903               	btfsc	3,2
 39229  46B8  2EC7               	goto	l9606
 39230  46B9  0A3F               	incf	___fldiv@aexp,w
 39231  46BA  1D03               	btfss	3,2
 39232  46BB  2EC4               	goto	l9602
 39233  46BC  3000               	movlw	0
 39234  46BD  00A9               	movwf	___fldiv@a+3
 39235  46BE  3000               	movlw	0
 39236  46BF  00A8               	movwf	___fldiv@a+2
 39237  46C0  3000               	movlw	0
 39238  46C1  00A7               	movwf	___fldiv@a+1
 39239  46C2  3000               	movlw	0
 39240  46C3  00A6               	movwf	___fldiv@a
 39241  46C4                     l9602:
 39242  46C4  17A8               	bsf	___fldiv@a+2,7
 39243  46C5  01A9               	clrf	___fldiv@a+3
 39244  46C6  2ECF               	goto	l2086
 39245  46C7                     l9606:
 39246  46C7  3000               	movlw	0
 39247  46C8  00A9               	movwf	___fldiv@a+3
 39248  46C9  3000               	movlw	0
 39249  46CA  00A8               	movwf	___fldiv@a+2
 39250  46CB  3000               	movlw	0
 39251  46CC  00A7               	movwf	___fldiv@a+1
 39252  46CD  3000               	movlw	0
 39253  46CE  00A6               	movwf	___fldiv@a
 39254  46CF                     l2086:
 39255  46CF  0829               	movf	___fldiv@a+3,w
 39256  46D0  0428               	iorwf	___fldiv@a+2,w
 39257  46D1  0427               	iorwf	___fldiv@a+1,w
 39258  46D2  0426               	iorwf	___fldiv@a,w
 39259  46D3  1D03               	skipz
 39260  46D4  2EEE               	goto	l9616
 39261  46D5  3000               	movlw	0
 39262  46D6  00AD               	movwf	___fldiv@b+3
 39263  46D7  3000               	movlw	0
 39264  46D8  00AC               	movwf	___fldiv@b+2
 39265  46D9  3000               	movlw	0
 39266  46DA  00AB               	movwf	___fldiv@b+1
 39267  46DB  3000               	movlw	0
 39268  46DC  00AA               	movwf	___fldiv@b
 39269  46DD  3080               	movlw	128
 39270  46DE  04AC               	iorwf	___fldiv@b+2,f
 39271  46DF  307F               	movlw	127
 39272  46E0  04AD               	iorwf	___fldiv@b+3,f
 39273  46E1                     L48:
 39274  46E1  0837               	movf	___fldiv@sign,w
 39275  46E2  00AE               	movwf	??___fldiv
 39276  46E3  082E               	movf	??___fldiv,w
 39277  46E4  04AD               	iorwf	___fldiv@b+3,f
 39278  46E5  082D               	movf	___fldiv@b+3,w
 39279  46E6  00A9               	movwf	?___fldiv+3
 39280  46E7  082C               	movf	___fldiv@b+2,w
 39281  46E8  00A8               	movwf	?___fldiv+2
 39282  46E9  082B               	movf	___fldiv@b+1,w
 39283  46EA  00A7               	movwf	?___fldiv+1
 39284  46EB  082A               	movf	___fldiv@b,w
 39285  46EC  00A6               	movwf	?___fldiv
 39286  46ED  0008               	return
 39287  46EE                     l9616:
 39288  46EE  083E               	movf	___fldiv@bexp,w
 39289  46EF  1D03               	btfss	3,2
 39290  46F0  2EFA               	goto	l9622
 39291  46F1  3000               	movlw	0
 39292  46F2  00A9               	movwf	?___fldiv+3
 39293  46F3  3000               	movlw	0
 39294  46F4  00A8               	movwf	?___fldiv+2
 39295  46F5  3000               	movlw	0
 39296  46F6  00A7               	movwf	?___fldiv+1
 39297  46F7  3000               	movlw	0
 39298  46F8  00A6               	movwf	?___fldiv
 39299  46F9  0008               	return
 39300  46FA                     l9622:
 39301  46FA  083E               	movf	___fldiv@bexp,w
 39302  46FB  00AE               	movwf	??___fldiv
 39303  46FC  01AF               	clrf	??___fldiv+1
 39304  46FD  082F               	movf	??___fldiv+1,w
 39305  46FE  00B1               	movwf	??___fldiv+3
 39306  46FF  083F               	movf	___fldiv@aexp,w
 39307  4700  022E               	subwf	??___fldiv,w
 39308  4701  00B0               	movwf	??___fldiv+2
 39309  4702  1C03               	skipc
 39310  4703  03B1               	decf	??___fldiv+3,f
 39311  4704  0830               	movf	??___fldiv+2,w
 39312  4705  3E7F               	addlw	127
 39313  4706  00B8               	movwf	___fldiv@new_exp
 39314  4707  3000               	movlw	0
 39315  4708  3D31               	addwfc	??___fldiv+3,w
 39316  4709  00B9               	movwf	___fldiv@new_exp+1
 39317  470A  082D               	movf	___fldiv@b+3,w
 39318  470B  00B6               	movwf	___fldiv@rem+3
 39319  470C  082C               	movf	___fldiv@b+2,w
 39320  470D  00B5               	movwf	___fldiv@rem+2
 39321  470E  082B               	movf	___fldiv@b+1,w
 39322  470F  00B4               	movwf	___fldiv@rem+1
 39323  4710  082A               	movf	___fldiv@b,w
 39324  4711  00B3               	movwf	___fldiv@rem
 39325  4712  3000               	movlw	0
 39326  4713  00AD               	movwf	___fldiv@b+3
 39327  4714  3000               	movlw	0
 39328  4715  00AC               	movwf	___fldiv@b+2
 39329  4716  3000               	movlw	0
 39330  4717  00AB               	movwf	___fldiv@b+1
 39331  4718  3000               	movlw	0
 39332  4719  00AA               	movwf	___fldiv@b
 39333  471A  3000               	movlw	0
 39334  471B  00BD               	movwf	___fldiv@grs+3
 39335  471C  3000               	movlw	0
 39336  471D  00BC               	movwf	___fldiv@grs+2
 39337  471E  3000               	movlw	0
 39338  471F  00BB               	movwf	___fldiv@grs+1
 39339  4720  3000               	movlw	0
 39340  4721  00BA               	movwf	___fldiv@grs
 39341  4722  01BF               	clrf	___fldiv@aexp
 39342  4723                     l9650:
 39343  4723  301A               	movlw	26
 39344  4724  023F               	subwf	___fldiv@aexp,w
 39345  4725  1803               	btfsc	3,0
 39346  4726  2F5F               	goto	l9652
 39347  4727  083F               	movf	___fldiv@aexp,w
 39348  4728  1903               	btfsc	3,2
 39349  4729  2F41               	goto	l9642
 39350  472A  3001               	movlw	1
 39351  472B                     u10635:
 39352  472B  35B3               	lslf	___fldiv@rem,f
 39353  472C  0DB4               	rlf	___fldiv@rem+1,f
 39354  472D  0DB5               	rlf	___fldiv@rem+2,f
 39355  472E  0DB6               	rlf	___fldiv@rem+3,f
 39356  472F  0B89               	decfsz	9,f
 39357  4730  2F2B               	goto	u10635
 39358  4731  3001               	movlw	1
 39359  4732                     u10645:
 39360  4732  35AA               	lslf	___fldiv@b,f
 39361  4733  0DAB               	rlf	___fldiv@b+1,f
 39362  4734  0DAC               	rlf	___fldiv@b+2,f
 39363  4735  0DAD               	rlf	___fldiv@b+3,f
 39364  4736  0B89               	decfsz	9,f
 39365  4737  2F32               	goto	u10645
 39366  4738  1BBD               	btfsc	___fldiv@grs+3,7
 39367  4739  142A               	bsf	___fldiv@b,0
 39368  473A  3001               	movlw	1
 39369  473B                     u10665:
 39370  473B  35BA               	lslf	___fldiv@grs,f
 39371  473C  0DBB               	rlf	___fldiv@grs+1,f
 39372  473D  0DBC               	rlf	___fldiv@grs+2,f
 39373  473E  0DBD               	rlf	___fldiv@grs+3,f
 39374  473F  0B89               	decfsz	9,f
 39375  4740  2F3B               	goto	u10665
 39376  4741                     l9642:
 39377  4741  0829               	movf	___fldiv@a+3,w
 39378  4742  0236               	subwf	___fldiv@rem+3,w
 39379  4743  1D03               	skipz
 39380  4744  2F4F               	goto	u10675
 39381  4745  0828               	movf	___fldiv@a+2,w
 39382  4746  0235               	subwf	___fldiv@rem+2,w
 39383  4747  1D03               	skipz
 39384  4748  2F4F               	goto	u10675
 39385  4749  0827               	movf	___fldiv@a+1,w
 39386  474A  0234               	subwf	___fldiv@rem+1,w
 39387  474B  1D03               	skipz
 39388  474C  2F4F               	goto	u10675
 39389  474D  0826               	movf	___fldiv@a,w
 39390  474E  0233               	subwf	___fldiv@rem,w
 39391  474F                     u10675:
 39392  474F  1C03               	skipc
 39393  4750  2F5A               	goto	l9648
 39394  4751  173D               	bsf	___fldiv@grs+3,6
 39395  4752  0826               	movf	___fldiv@a,w
 39396  4753  02B3               	subwf	___fldiv@rem,f
 39397  4754  0827               	movf	___fldiv@a+1,w
 39398  4755  3BB4               	subwfb	___fldiv@rem+1,f
 39399  4756  0828               	movf	___fldiv@a+2,w
 39400  4757  3BB5               	subwfb	___fldiv@rem+2,f
 39401  4758  0829               	movf	___fldiv@a+3,w
 39402  4759  3BB6               	subwfb	___fldiv@rem+3,f
 39403  475A                     l9648:
 39404  475A  3001               	movlw	1
 39405  475B  00AE               	movwf	??___fldiv
 39406  475C  082E               	movf	??___fldiv,w
 39407  475D  07BF               	addwf	___fldiv@aexp,f
 39408  475E  2F23               	goto	l9650
 39409  475F                     l9652:
 39410  475F  0836               	movf	___fldiv@rem+3,w
 39411  4760  0435               	iorwf	___fldiv@rem+2,w
 39412  4761  0434               	iorwf	___fldiv@rem+1,w
 39413  4762  0433               	iorwf	___fldiv@rem,w
 39414  4763  1D03               	btfss	3,2
 39415  4764  143A               	bsf	___fldiv@grs,0
 39416  4765                     l9666:
 39417  4765  1BAC               	btfsc	___fldiv@b+2,7
 39418  4766  2F7C               	goto	l9668
 39419  4767  3001               	movlw	1
 39420  4768                     u10705:
 39421  4768  35AA               	lslf	___fldiv@b,f
 39422  4769  0DAB               	rlf	___fldiv@b+1,f
 39423  476A  0DAC               	rlf	___fldiv@b+2,f
 39424  476B  0DAD               	rlf	___fldiv@b+3,f
 39425  476C  0B89               	decfsz	9,f
 39426  476D  2F68               	goto	u10705
 39427  476E  1BBD               	btfsc	___fldiv@grs+3,7
 39428  476F  142A               	bsf	___fldiv@b,0
 39429  4770  3001               	movlw	1
 39430  4771                     u10725:
 39431  4771  35BA               	lslf	___fldiv@grs,f
 39432  4772  0DBB               	rlf	___fldiv@grs+1,f
 39433  4773  0DBC               	rlf	___fldiv@grs+2,f
 39434  4774  0DBD               	rlf	___fldiv@grs+3,f
 39435  4775  0B89               	decfsz	9,f
 39436  4776  2F71               	goto	u10725
 39437  4777  30FF               	movlw	255
 39438  4778  07B8               	addwf	___fldiv@new_exp,f
 39439  4779  30FF               	movlw	255
 39440  477A  3DB9               	addwfc	___fldiv@new_exp+1,f
 39441  477B  2F65               	goto	l9666
 39442  477C                     l9668:
 39443  477C  01BF               	clrf	___fldiv@aexp
 39444  477D  1FBD               	btfss	___fldiv@grs+3,7
 39445  477E  2F95               	goto	l9678
 39446  477F  30FF               	movlw	255
 39447  4780  053A               	andwf	___fldiv@grs,w
 39448  4781  00AE               	movwf	??___fldiv
 39449  4782  30FF               	movlw	255
 39450  4783  053B               	andwf	___fldiv@grs+1,w
 39451  4784  00AF               	movwf	??___fldiv+1
 39452  4785  30FF               	movlw	255
 39453  4786  053C               	andwf	___fldiv@grs+2,w
 39454  4787  00B0               	movwf	??___fldiv+2
 39455  4788  307F               	movlw	127
 39456  4789  053D               	andwf	___fldiv@grs+3,w
 39457  478A  00B1               	movwf	??___fldiv+3
 39458  478B  0831               	movf	??___fldiv+3,w
 39459  478C  0430               	iorwf	??___fldiv+2,w
 39460  478D  042F               	iorwf	??___fldiv+1,w
 39461  478E  042E               	iorwf	??___fldiv,w
 39462  478F  1903               	skipnz
 39463  4790  182A               	btfsc	___fldiv@b,0
 39464  4791  2F93               	goto	l9674
 39465  4792  2F95               	goto	l9678
 39466  4793                     l9674:
 39467  4793  01BF               	clrf	___fldiv@aexp
 39468  4794  0ABF               	incf	___fldiv@aexp,f
 39469  4795                     l9678:
 39470  4795  083F               	movf	___fldiv@aexp,w
 39471  4796  1903               	btfsc	3,2
 39472  4797  2FBE               	goto	l9688
 39473  4798  3001               	movlw	1
 39474  4799  07AA               	addwf	___fldiv@b,f
 39475  479A  3000               	movlw	0
 39476  479B  3DAB               	addwfc	___fldiv@b+1,f
 39477  479C  3000               	movlw	0
 39478  479D  3DAC               	addwfc	___fldiv@b+2,f
 39479  479E  3000               	movlw	0
 39480  479F  3DAD               	addwfc	___fldiv@b+3,f
 39481  47A0  1C2D               	btfss	___fldiv@b+3,0
 39482  47A1  2FBE               	goto	l9688
 39483  47A2  082A               	movf	___fldiv@b,w
 39484  47A3  00AE               	movwf	??___fldiv
 39485  47A4  082B               	movf	___fldiv@b+1,w
 39486  47A5  00AF               	movwf	??___fldiv+1
 39487  47A6  082C               	movf	___fldiv@b+2,w
 39488  47A7  00B0               	movwf	??___fldiv+2
 39489  47A8  082D               	movf	___fldiv@b+3,w
 39490  47A9  00B1               	movwf	??___fldiv+3
 39491  47AA  3001               	movlw	1
 39492  47AB  00B2               	movwf	??___fldiv+4
 39493  47AC                     u10795:
 39494  47AC  37B1               	asrf	??___fldiv+3,f
 39495  47AD  0CB0               	rrf	??___fldiv+2,f
 39496  47AE  0CAF               	rrf	??___fldiv+1,f
 39497  47AF  0CAE               	rrf	??___fldiv,f
 39498  47B0  0BB2               	decfsz	??___fldiv+4,f
 39499  47B1  2FAC               	goto	u10795
 39500  47B2  0831               	movf	??___fldiv+3,w
 39501  47B3  00AD               	movwf	___fldiv@b+3
 39502  47B4  0830               	movf	??___fldiv+2,w
 39503  47B5  00AC               	movwf	___fldiv@b+2
 39504  47B6  082F               	movf	??___fldiv+1,w
 39505  47B7  00AB               	movwf	___fldiv@b+1
 39506  47B8  082E               	movf	??___fldiv,w
 39507  47B9  00AA               	movwf	___fldiv@b
 39508  47BA  3001               	movlw	1
 39509  47BB  07B8               	addwf	___fldiv@new_exp,f
 39510  47BC  3000               	movlw	0
 39511  47BD  3DB9               	addwfc	___fldiv@new_exp+1,f
 39512  47BE                     l9688:
 39513  47BE  0839               	movf	___fldiv@new_exp+1,w
 39514  47BF  3A80               	xorlw	128
 39515  47C0  00AE               	movwf	??___fldiv
 39516  47C1  3080               	movlw	128
 39517  47C2  022E               	subwf	??___fldiv,w
 39518  47C3  1D03               	skipz
 39519  47C4  2FC7               	goto	u10805
 39520  47C5  30FF               	movlw	255
 39521  47C6  0238               	subwf	___fldiv@new_exp,w
 39522  47C7                     u10805:
 39523  47C7  1C03               	skipc
 39524  47C8  2FD6               	goto	l2107
 39525  47C9  30FF               	movlw	255
 39526  47CA  0140               	movlb	0	; select bank0
 39527  47CB  00B8               	movwf	___fldiv@new_exp
 39528  47CC  3000               	movlw	0
 39529  47CD  00B9               	movwf	___fldiv@new_exp+1
 39530  47CE  3000               	movlw	0
 39531  47CF  00AD               	movwf	___fldiv@b+3
 39532  47D0  3000               	movlw	0
 39533  47D1  00AC               	movwf	___fldiv@b+2
 39534  47D2  3000               	movlw	0
 39535  47D3  00AB               	movwf	___fldiv@b+1
 39536  47D4  3000               	movlw	0
 39537  47D5  00AA               	movwf	___fldiv@b
 39538  47D6                     l2107:
 39539  47D6  0140               	movlb	0	; select bank0
 39540  47D7  0839               	movf	___fldiv@new_exp+1,w
 39541  47D8  3A80               	xorlw	128
 39542  47D9  00AE               	movwf	??___fldiv
 39543  47DA  3080               	movlw	128
 39544  47DB  022E               	subwf	??___fldiv,w
 39545  47DC  1D03               	skipz
 39546  47DD  2FE0               	goto	u10815
 39547  47DE  3001               	movlw	1
 39548  47DF  0238               	subwf	___fldiv@new_exp,w
 39549  47E0                     u10815:
 39550  47E0  1803               	skipnc
 39551  47E1  2FEE               	goto	l2108
 39552  47E2  0140               	movlb	0	; select bank0
 39553  47E3  01B8               	clrf	___fldiv@new_exp
 39554  47E4  01B9               	clrf	___fldiv@new_exp+1
 39555  47E5  3000               	movlw	0
 39556  47E6  00AD               	movwf	___fldiv@b+3
 39557  47E7  3000               	movlw	0
 39558  47E8  00AC               	movwf	___fldiv@b+2
 39559  47E9  3000               	movlw	0
 39560  47EA  00AB               	movwf	___fldiv@b+1
 39561  47EB  3000               	movlw	0
 39562  47EC  00AA               	movwf	___fldiv@b
 39563  47ED  01B7               	clrf	___fldiv@sign
 39564  47EE                     l2108:
 39565  47EE  0140               	movlb	0	; select bank0
 39566  47EF  0838               	movf	___fldiv@new_exp,w
 39567  47F0  00AE               	movwf	??___fldiv
 39568  47F1  082E               	movf	??___fldiv,w
 39569  47F2  00BE               	movwf	___fldiv@bexp
 39570  47F3  1C3E               	btfss	___fldiv@bexp,0
 39571  47F4  2FF7               	goto	l9702
 39572  47F5  17AC               	bsf	___fldiv@b+2,7
 39573  47F6  2FFB               	goto	l2110
 39574  47F7                     l9702:
 39575  47F7  307F               	movlw	127
 39576  47F8  00AE               	movwf	??___fldiv
 39577  47F9  082E               	movf	??___fldiv,w
 39578  47FA  05AC               	andwf	___fldiv@b+2,f
 39579  47FB                     l2110:
 39580  47FB  363E               	lsrf	___fldiv@bexp,w
 39581  47FC  00AE               	movwf	??___fldiv
 39582  47FD  082E               	movf	??___fldiv,w
 39583  47FE  00AD               	movwf	___fldiv@b+3
 39584  47FF  2EE1               	goto	L48
 39585  4800                     __end_of___fldiv:
 39586                           
 39587                           	psect	text61
 39588  51CB                     __ptext61:	
 39589 ;; *************** function _convertStepsToMM *****************
 39590 ;; Defined at:
 39591 ;;		line 509 in file "cnc.c"
 39592 ;; Parameters:    Size  Location     Type
 39593 ;;  steps           4   32[BANK0 ] long 
 39594 ;; Auto vars:     Size  Location     Type
 39595 ;;		None
 39596 ;; Return value:  Size  Location     Type
 39597 ;;                  4   32[BANK0 ] float 
 39598 ;; Registers used:
 39599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 39600 ;; Tracked objects:
 39601 ;;		On entry : 3F/0
 39602 ;;		On exit  : 3F/0
 39603 ;;		Unchanged: 0/0
 39604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39609 ;;Total ram usage:        4 bytes
 39610 ;; Hardware stack levels used: 1
 39611 ;; Hardware stack levels required when called: unknown (due to recursion)
 39612 ;; This function calls:
 39613 ;;		___flmul
 39614 ;;		___xxtofl
 39615 ;; This function is called by:
 39616 ;;		_main
 39617 ;;		_cncConfigMove
 39618 ;;		_navCfgMove
 39619 ;; This function uses a non-reentrant model
 39620 ;;
 39621                           
 39622  51CB                     _convertStepsToMM:	
 39623                           ;psect for function _convertStepsToMM
 39624                           
 39625                           
 39626                           ;cnc.c: 510: return ((float)steps)*cnc.parm.mmpp;
 39627                           
 39628                           ;incstack = 0
 39629                           ; Regs used in _convertStepsToMM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 39630  51CB  3008               	movlw	8
 39631  51CC  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 39632  51CD  0086               	movwf	6
 39633  51CE  3001               	movlw	1	; select bank3/4
 39634  51CF  0087               	movwf	7
 39635  51D0  3F40               	moviw [0]fsr1
 39636  51D1  00A6               	movwf	___flmul@b
 39637  51D2  3F41               	moviw [1]fsr1
 39638  51D3  00A7               	movwf	___flmul@b+1
 39639  51D4  3F42               	moviw [2]fsr1
 39640  51D5  00A8               	movwf	___flmul@b+2
 39641  51D6  3F43               	moviw [3]fsr1
 39642  51D7  00A9               	movwf	___flmul@b+3
 39643  51D8  0843               	movf	convertStepsToMM@steps+3,w
 39644  51D9  00F4               	movwf	___xxtofl@val+3
 39645  51DA  0842               	movf	convertStepsToMM@steps+2,w
 39646  51DB  00F3               	movwf	___xxtofl@val+2
 39647  51DC  0841               	movf	convertStepsToMM@steps+1,w
 39648  51DD  00F2               	movwf	___xxtofl@val+1
 39649  51DE  0840               	movf	convertStepsToMM@steps,w
 39650  51DF  00F1               	movwf	___xxtofl@val
 39651  51E0  3001               	movlw	1
 39652  51E1  31CA  22DB  31D1   	fcall	___xxtofl
 39653  51E4  0874               	movf	?___xxtofl+3,w
 39654  51E5  00AD               	movwf	___flmul@a+3
 39655  51E6  0873               	movf	?___xxtofl+2,w
 39656  51E7  00AC               	movwf	___flmul@a+2
 39657  51E8  0872               	movf	?___xxtofl+1,w
 39658  51E9  00AB               	movwf	___flmul@a+1
 39659  51EA  0871               	movf	?___xxtofl,w
 39660  51EB  00AA               	movwf	___flmul@a
 39661  51EC  31B1  2135         	fcall	___flmul
 39662  51EE  0829               	movf	?___flmul+3,w
 39663  51EF  00C3               	movwf	?_convertStepsToMM+3
 39664  51F0  0828               	movf	?___flmul+2,w
 39665  51F1  00C2               	movwf	?_convertStepsToMM+2
 39666  51F2  0827               	movf	?___flmul+1,w
 39667  51F3  00C1               	movwf	?_convertStepsToMM+1
 39668  51F4  0826               	movf	?___flmul,w
 39669  51F5  00C0               	movwf	?_convertStepsToMM
 39670  51F6  0008               	return
 39671  51F7                     __end_of_convertStepsToMM:
 39672                           
 39673                           	psect	text62
 39674  4ADB                     __ptext62:	
 39675 ;; *************** function ___xxtofl *****************
 39676 ;; Defined at:
 39677 ;;		line 10 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
 39678 ;; Parameters:    Size  Location     Type
 39679 ;;  sign            1    wreg     unsigned char 
 39680 ;;  val             4    1[COMMON] long 
 39681 ;; Auto vars:     Size  Location     Type
 39682 ;;  sign            1    0[BANK0 ] unsigned char 
 39683 ;;  arg             4    2[BANK0 ] unsigned long 
 39684 ;;  exp             1    1[BANK0 ] unsigned char 
 39685 ;; Return value:  Size  Location     Type
 39686 ;;                  4    1[COMMON] unsigned char 
 39687 ;; Registers used:
 39688 ;;		wreg, status,2, status,0
 39689 ;; Tracked objects:
 39690 ;;		On entry : 3E/1
 39691 ;;		On exit  : 3F/0
 39692 ;;		Unchanged: 0/0
 39693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39695 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39696 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39697 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39698 ;;Total ram usage:       14 bytes
 39699 ;; Hardware stack levels used: 1
 39700 ;; Hardware stack levels required when called: unknown (due to recursion)
 39701 ;; This function calls:
 39702 ;;		Nothing
 39703 ;; This function is called by:
 39704 ;;		_getMoveTime
 39705 ;;		_convertStepsToMM
 39706 ;;		__doprnt
 39707 ;; This function uses a non-reentrant model
 39708 ;;
 39709                           
 39710  4ADB                     ___xxtofl:	
 39711                           ;psect for function ___xxtofl
 39712                           
 39713                           
 39714                           ;incstack = 0
 39715                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 39716                           ;___xxtofl@sign stored from wreg
 39717  4ADB  0140               	movlb	0	; select bank0
 39718  4ADC  00A0               	movwf	___xxtofl@sign
 39719  4ADD  0820               	movf	___xxtofl@sign,w
 39720  4ADE  1D03               	btfss	3,2
 39721  4ADF  1FF4               	btfss	___xxtofl@val+3,7
 39722  4AE0  2AF1               	goto	l9714
 39723  4AE1  0971               	comf	___xxtofl@val,w
 39724  4AE2  00A2               	movwf	___xxtofl@arg
 39725  4AE3  0972               	comf	___xxtofl@val+1,w
 39726  4AE4  00A3               	movwf	___xxtofl@arg+1
 39727  4AE5  0973               	comf	___xxtofl@val+2,w
 39728  4AE6  00A4               	movwf	___xxtofl@arg+2
 39729  4AE7  0974               	comf	___xxtofl@val+3,w
 39730  4AE8  00A5               	movwf	___xxtofl@arg+3
 39731  4AE9  0AA2               	incf	___xxtofl@arg,f
 39732  4AEA  1903               	skipnz
 39733  4AEB  0AA3               	incf	___xxtofl@arg+1,f
 39734  4AEC  1903               	skipnz
 39735  4AED  0AA4               	incf	___xxtofl@arg+2,f
 39736  4AEE  1903               	skipnz
 39737  4AEF  0AA5               	incf	___xxtofl@arg+3,f
 39738  4AF0  2AF9               	goto	l2170
 39739  4AF1                     l9714:
 39740  4AF1  0874               	movf	___xxtofl@val+3,w
 39741  4AF2  00A5               	movwf	___xxtofl@arg+3
 39742  4AF3  0873               	movf	___xxtofl@val+2,w
 39743  4AF4  00A4               	movwf	___xxtofl@arg+2
 39744  4AF5  0872               	movf	___xxtofl@val+1,w
 39745  4AF6  00A3               	movwf	___xxtofl@arg+1
 39746  4AF7  0871               	movf	___xxtofl@val,w
 39747  4AF8  00A2               	movwf	___xxtofl@arg
 39748  4AF9                     l2170:
 39749  4AF9  0874               	movf	___xxtofl@val+3,w
 39750  4AFA  0473               	iorwf	___xxtofl@val+2,w
 39751  4AFB  0472               	iorwf	___xxtofl@val+1,w
 39752  4AFC  0471               	iorwf	___xxtofl@val,w
 39753  4AFD  1D03               	skipz
 39754  4AFE  2B08               	goto	l9720
 39755  4AFF  3000               	movlw	0
 39756  4B00  00F4               	movwf	?___xxtofl+3
 39757  4B01  3000               	movlw	0
 39758  4B02  00F3               	movwf	?___xxtofl+2
 39759  4B03  3000               	movlw	0
 39760  4B04  00F2               	movwf	?___xxtofl+1
 39761  4B05  3000               	movlw	0
 39762  4B06  00F1               	movwf	?___xxtofl
 39763  4B07  0008               	return
 39764  4B08                     l9720:
 39765  4B08  3096               	movlw	150
 39766  4B09  00F5               	movwf	??___xxtofl
 39767  4B0A  0875               	movf	??___xxtofl,w
 39768  4B0B  00A1               	movwf	___xxtofl@exp
 39769  4B0C                     l9724:
 39770  4B0C  30FE               	movlw	254
 39771  4B0D  0525               	andwf	___xxtofl@arg+3,w
 39772  4B0E  1903               	btfsc	3,2
 39773  4B0F  2B2F               	goto	l2176
 39774  4B10  3001               	movlw	1
 39775  4B11  00F5               	movwf	??___xxtofl
 39776  4B12  0875               	movf	??___xxtofl,w
 39777  4B13  07A1               	addwf	___xxtofl@exp,f
 39778  4B14  3001               	movlw	1
 39779  4B15                     u10865:
 39780  4B15  36A5               	lsrf	___xxtofl@arg+3,f
 39781  4B16  0CA4               	rrf	___xxtofl@arg+2,f
 39782  4B17  0CA3               	rrf	___xxtofl@arg+1,f
 39783  4B18  0CA2               	rrf	___xxtofl@arg,f
 39784  4B19  0B89               	decfsz	9,f
 39785  4B1A  2B15               	goto	u10865
 39786  4B1B  2B0C               	goto	l9724
 39787  4B1C                     l9726:
 39788  4B1C  3001               	movlw	1
 39789  4B1D  00F5               	movwf	??___xxtofl
 39790  4B1E  0875               	movf	??___xxtofl,w
 39791  4B1F  07A1               	addwf	___xxtofl@exp,f
 39792  4B20  3001               	movlw	1
 39793  4B21  07A2               	addwf	___xxtofl@arg,f
 39794  4B22  3000               	movlw	0
 39795  4B23  3DA3               	addwfc	___xxtofl@arg+1,f
 39796  4B24  3000               	movlw	0
 39797  4B25  3DA4               	addwfc	___xxtofl@arg+2,f
 39798  4B26  3000               	movlw	0
 39799  4B27  3DA5               	addwfc	___xxtofl@arg+3,f
 39800  4B28  3001               	movlw	1
 39801  4B29                     u10885:
 39802  4B29  36A5               	lsrf	___xxtofl@arg+3,f
 39803  4B2A  0CA4               	rrf	___xxtofl@arg+2,f
 39804  4B2B  0CA3               	rrf	___xxtofl@arg+1,f
 39805  4B2C  0CA2               	rrf	___xxtofl@arg,f
 39806  4B2D  0B89               	decfsz	9,f
 39807  4B2E  2B29               	goto	u10885
 39808  4B2F                     l2176:
 39809  4B2F  30FF               	movlw	255
 39810  4B30  0525               	andwf	___xxtofl@arg+3,w
 39811  4B31  1903               	btfsc	3,2
 39812  4B32  2B41               	goto	l9734
 39813  4B33  2B1C               	goto	l9726
 39814  4B34                     l9736:
 39815  4B34  3002               	movlw	2
 39816  4B35  0221               	subwf	___xxtofl@exp,w
 39817  4B36  1C03               	btfss	3,0
 39818  4B37  2B43               	goto	l2183
 39819  4B38  3001               	movlw	1
 39820  4B39  02A1               	subwf	___xxtofl@exp,f
 39821  4B3A  3001               	movlw	1
 39822  4B3B                     u10905:
 39823  4B3B  35A2               	lslf	___xxtofl@arg,f
 39824  4B3C  0DA3               	rlf	___xxtofl@arg+1,f
 39825  4B3D  0DA4               	rlf	___xxtofl@arg+2,f
 39826  4B3E  0DA5               	rlf	___xxtofl@arg+3,f
 39827  4B3F  0B89               	decfsz	9,f
 39828  4B40  2B3B               	goto	u10905
 39829  4B41                     l9734:
 39830  4B41  1FA4               	btfss	___xxtofl@arg+2,7
 39831  4B42  2B34               	goto	l9736
 39832  4B43                     l2183:
 39833  4B43  1821               	btfsc	___xxtofl@exp,0
 39834  4B44  2B4D               	goto	l2184
 39835  4B45  30FF               	movlw	255
 39836  4B46  05A2               	andwf	___xxtofl@arg,f
 39837  4B47  30FF               	movlw	255
 39838  4B48  05A3               	andwf	___xxtofl@arg+1,f
 39839  4B49  307F               	movlw	127
 39840  4B4A  05A4               	andwf	___xxtofl@arg+2,f
 39841  4B4B  30FF               	movlw	255
 39842  4B4C  05A5               	andwf	___xxtofl@arg+3,f
 39843  4B4D                     l2184:
 39844  4B4D  1003               	clrc
 39845  4B4E  0CA1               	rrf	___xxtofl@exp,f
 39846  4B4F  0821               	movf	___xxtofl@exp,w
 39847  4B50  00F5               	movwf	??___xxtofl
 39848  4B51  01F6               	clrf	??___xxtofl+1
 39849  4B52  01F7               	clrf	??___xxtofl+2
 39850  4B53  01F8               	clrf	??___xxtofl+3
 39851  4B54  3018               	movlw	24
 39852  4B55                     u10945:
 39853  4B55  35F5               	lslf	??___xxtofl,f
 39854  4B56  0DF6               	rlf	??___xxtofl+1,f
 39855  4B57  0DF7               	rlf	??___xxtofl+2,f
 39856  4B58  0DF8               	rlf	??___xxtofl+3,f
 39857  4B59  0B89               	decfsz	9,f
 39858  4B5A  2B55               	goto	u10945
 39859  4B5B  0875               	movf	??___xxtofl,w
 39860  4B5C  04A2               	iorwf	___xxtofl@arg,f
 39861  4B5D  0876               	movf	??___xxtofl+1,w
 39862  4B5E  04A3               	iorwf	___xxtofl@arg+1,f
 39863  4B5F  0877               	movf	??___xxtofl+2,w
 39864  4B60  04A4               	iorwf	___xxtofl@arg+2,f
 39865  4B61  0878               	movf	??___xxtofl+3,w
 39866  4B62  04A5               	iorwf	___xxtofl@arg+3,f
 39867  4B63  0820               	movf	___xxtofl@sign,w
 39868  4B64  1D03               	btfss	3,2
 39869  4B65  1FF4               	btfss	___xxtofl@val+3,7
 39870  4B66  2B68               	goto	l9748
 39871  4B67  17A5               	bsf	___xxtofl@arg+3,7
 39872  4B68                     l9748:
 39873  4B68  0825               	movf	___xxtofl@arg+3,w
 39874  4B69  00F4               	movwf	?___xxtofl+3
 39875  4B6A  0824               	movf	___xxtofl@arg+2,w
 39876  4B6B  00F3               	movwf	?___xxtofl+2
 39877  4B6C  0823               	movf	___xxtofl@arg+1,w
 39878  4B6D  00F2               	movwf	?___xxtofl+1
 39879  4B6E  0822               	movf	___xxtofl@arg,w
 39880  4B6F  00F1               	movwf	?___xxtofl
 39881  4B70  0008               	return
 39882  4B71                     __end_of___xxtofl:
 39883                           
 39884                           	psect	text63
 39885  51A0                     __ptext63:	
 39886 ;; *************** function _convertMMtoSteps *****************
 39887 ;; Defined at:
 39888 ;;		line 514 in file "cnc.c"
 39889 ;; Parameters:    Size  Location     Type
 39890 ;;  mm              4   64[BANK0 ] float 
 39891 ;; Auto vars:     Size  Location     Type
 39892 ;;		None
 39893 ;; Return value:  Size  Location     Type
 39894 ;;                  4   64[BANK0 ] long 
 39895 ;; Registers used:
 39896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 39897 ;; Tracked objects:
 39898 ;;		On entry : 3F/0
 39899 ;;		On exit  : 3F/0
 39900 ;;		Unchanged: 0/0
 39901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39906 ;;Total ram usage:        4 bytes
 39907 ;; Hardware stack levels used: 1
 39908 ;; Hardware stack levels required when called: unknown (due to recursion)
 39909 ;; This function calls:
 39910 ;;		___flmul
 39911 ;;		___fltol
 39912 ;; This function is called by:
 39913 ;;		_cncTeste
 39914 ;;		_cncConfig
 39915 ;;		_cncSetPos
 39916 ;;		_cncConfigMove
 39917 ;;		_cncConfigHome
 39918 ;; This function uses a non-reentrant model
 39919 ;;
 39920                           
 39921  51A0                     _convertMMtoSteps:	
 39922                           ;psect for function _convertMMtoSteps
 39923                           
 39924                           
 39925                           ;cnc.c: 515: return (long)(((float)mm)*cnc.parm.ppmm);
 39926                           
 39927                           ;incstack = 0
 39928                           ; Regs used in _convertMMtoSteps: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 39929  51A0  300C               	movlw	12
 39930  51A1  3EA0               	addlw	(low (_cnc| (0+256)))& (0+255)
 39931  51A2  0086               	movwf	6
 39932  51A3  3001               	movlw	1	; select bank3/4
 39933  51A4  0087               	movwf	7
 39934  51A5  3F40               	moviw [0]fsr1
 39935  51A6  00AA               	movwf	___flmul@a
 39936  51A7  3F41               	moviw [1]fsr1
 39937  51A8  00AB               	movwf	___flmul@a+1
 39938  51A9  3F42               	moviw [2]fsr1
 39939  51AA  00AC               	movwf	___flmul@a+2
 39940  51AB  3F43               	moviw [3]fsr1
 39941  51AC  00AD               	movwf	___flmul@a+3
 39942  51AD  0863               	movf	convertMMtoSteps@mm+3,w
 39943  51AE  00A9               	movwf	___flmul@b+3
 39944  51AF  0862               	movf	convertMMtoSteps@mm+2,w
 39945  51B0  00A8               	movwf	___flmul@b+2
 39946  51B1  0861               	movf	convertMMtoSteps@mm+1,w
 39947  51B2  00A7               	movwf	___flmul@b+1
 39948  51B3  0860               	movf	convertMMtoSteps@mm,w
 39949  51B4  00A6               	movwf	___flmul@b
 39950  51B5  31B1  2135  31D1   	fcall	___flmul
 39951  51B8  0829               	movf	?___flmul+3,w
 39952  51B9  00D8               	movwf	___fltol@f1+3
 39953  51BA  0828               	movf	?___flmul+2,w
 39954  51BB  00D7               	movwf	___fltol@f1+2
 39955  51BC  0827               	movf	?___flmul+1,w
 39956  51BD  00D6               	movwf	___fltol@f1+1
 39957  51BE  0826               	movf	?___flmul,w
 39958  51BF  00D5               	movwf	___fltol@f1
 39959  51C0  31D5  25E8         	fcall	___fltol
 39960  51C2  0858               	movf	?___fltol+3,w
 39961  51C3  00E3               	movwf	?_convertMMtoSteps+3
 39962  51C4  0857               	movf	?___fltol+2,w
 39963  51C5  00E2               	movwf	?_convertMMtoSteps+2
 39964  51C6  0856               	movf	?___fltol+1,w
 39965  51C7  00E1               	movwf	?_convertMMtoSteps+1
 39966  51C8  0855               	movf	?___fltol,w
 39967  51C9  00E0               	movwf	?_convertMMtoSteps
 39968  51CA  0008               	return
 39969  51CB                     __end_of_convertMMtoSteps:
 39970                           
 39971                           	psect	text64
 39972  55E8                     __ptext64:	
 39973 ;; *************** function ___fltol *****************
 39974 ;; Defined at:
 39975 ;;		line 43 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
 39976 ;; Parameters:    Size  Location     Type
 39977 ;;  f1              4   53[BANK0 ] long 
 39978 ;; Auto vars:     Size  Location     Type
 39979 ;;  exp1            1   63[BANK0 ] unsigned char 
 39980 ;;  sign1           1   62[BANK0 ] unsigned char 
 39981 ;; Return value:  Size  Location     Type
 39982 ;;                  4   53[BANK0 ] long 
 39983 ;; Registers used:
 39984 ;;		wreg, status,2, status,0
 39985 ;; Tracked objects:
 39986 ;;		On entry : 3F/0
 39987 ;;		On exit  : 3F/0
 39988 ;;		Unchanged: 0/0
 39989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39992 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39993 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39994 ;;Total ram usage:       11 bytes
 39995 ;; Hardware stack levels used: 1
 39996 ;; Hardware stack levels required when called: unknown (due to recursion)
 39997 ;; This function calls:
 39998 ;;		Nothing
 39999 ;; This function is called by:
 40000 ;;		_convertMMtoSteps
 40001 ;;		_getValueCMD
 40002 ;;		__doprnt
 40003 ;; This function uses a non-reentrant model
 40004 ;;
 40005                           
 40006  55E8                     ___fltol:	
 40007                           ;psect for function ___fltol
 40008                           
 40009                           
 40010                           ;incstack = 0
 40011                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 40012  55E8  1003               	clrc
 40013  55E9  0D57               	rlf	___fltol@f1+2,w
 40014  55EA  0D58               	rlf	___fltol@f1+3,w
 40015  55EB  00D9               	movwf	??___fltol
 40016  55EC  0859               	movf	??___fltol,w
 40017  55ED  00DF               	movwf	___fltol@exp1
 40018  55EE  085F               	movf	___fltol@exp1,w
 40019  55EF  1D03               	btfss	3,2
 40020  55F0  2DFA               	goto	l9512
 40021  55F1                     l9508:
 40022  55F1  3000               	movlw	0
 40023  55F2  00D8               	movwf	?___fltol+3
 40024  55F3  3000               	movlw	0
 40025  55F4  00D7               	movwf	?___fltol+2
 40026  55F5  3000               	movlw	0
 40027  55F6  00D6               	movwf	?___fltol+1
 40028  55F7  3000               	movlw	0
 40029  55F8  00D5               	movwf	?___fltol
 40030  55F9  0008               	return
 40031  55FA                     l9512:
 40032  55FA  0855               	movf	___fltol@f1,w
 40033  55FB  00D9               	movwf	??___fltol
 40034  55FC  0856               	movf	___fltol@f1+1,w
 40035  55FD  00DA               	movwf	??___fltol+1
 40036  55FE  0857               	movf	___fltol@f1+2,w
 40037  55FF  00DB               	movwf	??___fltol+2
 40038  5600  0858               	movf	___fltol@f1+3,w
 40039  5601  00DC               	movwf	??___fltol+3
 40040  5602  301F               	movlw	31
 40041  5603                     u10395:
 40042  5603  36DC               	lsrf	??___fltol+3,f
 40043  5604  0CDB               	rrf	??___fltol+2,f
 40044  5605  0CDA               	rrf	??___fltol+1,f
 40045  5606  0CD9               	rrf	??___fltol,f
 40046  5607  0B89               	decfsz	9,f
 40047  5608  2E03               	goto	u10395
 40048  5609  0859               	movf	??___fltol,w
 40049  560A  00DD               	movwf	??___fltol+4
 40050  560B  085D               	movf	??___fltol+4,w
 40051  560C  00DE               	movwf	___fltol@sign1
 40052  560D  17D7               	bsf	___fltol@f1+2,7
 40053  560E  30FF               	movlw	255
 40054  560F  05D5               	andwf	___fltol@f1,f
 40055  5610  30FF               	movlw	255
 40056  5611  05D6               	andwf	___fltol@f1+1,f
 40057  5612  30FF               	movlw	255
 40058  5613  05D7               	andwf	___fltol@f1+2,f
 40059  5614  3000               	movlw	0
 40060  5615  05D8               	andwf	___fltol@f1+3,f
 40061  5616  3096               	movlw	150
 40062  5617  02DF               	subwf	___fltol@exp1,f
 40063  5618  1FDF               	btfss	___fltol@exp1,7
 40064  5619  2E2D               	goto	l9530
 40065  561A  085F               	movf	___fltol@exp1,w
 40066  561B  3A80               	xorlw	128
 40067  561C  3E97               	addlw	151
 40068  561D  1C03               	btfss	3,0
 40069  561E  2DF1               	goto	l9508
 40070  561F                     l9528:
 40071  561F  3001               	movlw	1
 40072  5620                     u10425:
 40073  5620  36D8               	lsrf	___fltol@f1+3,f
 40074  5621  0CD7               	rrf	___fltol@f1+2,f
 40075  5622  0CD6               	rrf	___fltol@f1+1,f
 40076  5623  0CD5               	rrf	___fltol@f1,f
 40077  5624  0B89               	decfsz	9,f
 40078  5625  2E20               	goto	u10425
 40079  5626  3001               	movlw	1
 40080  5627  00D9               	movwf	??___fltol
 40081  5628  0859               	movf	??___fltol,w
 40082  5629  07DF               	addwf	___fltol@exp1,f
 40083  562A  1903               	btfsc	3,2
 40084  562B  2E3E               	goto	l9538
 40085  562C  2E1F               	goto	l9528
 40086  562D                     l9530:
 40087  562D  3020               	movlw	32
 40088  562E  025F               	subwf	___fltol@exp1,w
 40089  562F  1803               	btfsc	3,0
 40090  5630  2DF1               	goto	l9508
 40091  5631                     l1930:
 40092  5631  085F               	movf	___fltol@exp1,w
 40093  5632  1903               	btfsc	3,2
 40094  5633  2E3E               	goto	l9538
 40095  5634  3001               	movlw	1
 40096  5635                     u10455:
 40097  5635  35D5               	lslf	___fltol@f1,f
 40098  5636  0DD6               	rlf	___fltol@f1+1,f
 40099  5637  0DD7               	rlf	___fltol@f1+2,f
 40100  5638  0DD8               	rlf	___fltol@f1+3,f
 40101  5639  0B89               	decfsz	9,f
 40102  563A  2E35               	goto	u10455
 40103  563B  3001               	movlw	1
 40104  563C  02DF               	subwf	___fltol@exp1,f
 40105  563D  2E31               	goto	l1930
 40106  563E                     l9538:
 40107  563E  085E               	movf	___fltol@sign1,w
 40108  563F  1903               	btfsc	3,2
 40109  5640  0008               	return
 40110  5641  09D5               	comf	___fltol@f1,f
 40111  5642  09D6               	comf	___fltol@f1+1,f
 40112  5643  09D7               	comf	___fltol@f1+2,f
 40113  5644  09D8               	comf	___fltol@f1+3,f
 40114  5645  0AD5               	incf	___fltol@f1,f
 40115  5646  1903               	skipnz
 40116  5647  0AD6               	incf	___fltol@f1+1,f
 40117  5648  1903               	skipnz
 40118  5649  0AD7               	incf	___fltol@f1+2,f
 40119  564A  1903               	skipnz
 40120  564B  0AD8               	incf	___fltol@f1+3,f
 40121  564C  0008               	return
 40122  564D                     __end_of___fltol:
 40123                           
 40124                           	psect	text65
 40125  3135                     __ptext65:	
 40126 ;; *************** function ___flmul *****************
 40127 ;; Defined at:
 40128 ;;		line 8 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
 40129 ;; Parameters:    Size  Location     Type
 40130 ;;  b               4    6[BANK0 ] long 
 40131 ;;  a               4   10[BANK0 ] long 
 40132 ;; Auto vars:     Size  Location     Type
 40133 ;;  prod            4   26[BANK0 ] struct .
 40134 ;;  grs             4   22[BANK0 ] unsigned long 
 40135 ;;  temp            2   30[BANK0 ] struct .
 40136 ;;  bexp            1   21[BANK0 ] unsigned char 
 40137 ;;  aexp            1   20[BANK0 ] unsigned char 
 40138 ;;  sign            1   19[BANK0 ] unsigned char 
 40139 ;; Return value:  Size  Location     Type
 40140 ;;                  4    6[BANK0 ] unsigned char 
 40141 ;; Registers used:
 40142 ;;		wreg, status,2, status,0, pclath, cstack
 40143 ;; Tracked objects:
 40144 ;;		On entry : 3F/0
 40145 ;;		On exit  : 3F/0
 40146 ;;		Unchanged: 0/0
 40147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40148 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40149 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40150 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40151 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40152 ;;Total ram usage:       26 bytes
 40153 ;; Hardware stack levels used: 1
 40154 ;; Hardware stack levels required when called: unknown (due to recursion)
 40155 ;; This function calls:
 40156 ;;		__Umul8_16
 40157 ;; This function is called by:
 40158 ;;		_convertStepsToMM
 40159 ;;		_convertMMtoSteps
 40160 ;;		_getValueCMD
 40161 ;;		_navCfgMove
 40162 ;;		_fround
 40163 ;;		_scale
 40164 ;;		__doprnt
 40165 ;; This function uses a non-reentrant model
 40166 ;;
 40167                           
 40168  3135                     ___flmul:	
 40169                           ;psect for function ___flmul
 40170                           
 40171                           
 40172                           ;incstack = 0
 40173                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 40174  3135  0829               	movf	___flmul@b+3,w
 40175  3136  3980               	andlw	128
 40176  3137  00AE               	movwf	??___flmul
 40177  3138  082E               	movf	??___flmul,w
 40178  3139  00B3               	movwf	___flmul@sign
 40179  313A  3529               	lslf	___flmul@b+3,w
 40180  313B  00AE               	movwf	??___flmul
 40181  313C  082E               	movf	??___flmul,w
 40182  313D  00B5               	movwf	___flmul@bexp
 40183  313E  1BA8               	btfsc	___flmul@b+2,7
 40184  313F  1435               	bsf	___flmul@bexp,0
 40185  3140  0835               	movf	___flmul@bexp,w
 40186  3141  1903               	btfsc	3,2
 40187  3142  2950               	goto	l9204
 40188  3143  0A35               	incf	___flmul@bexp,w
 40189  3144  1D03               	btfss	3,2
 40190  3145  294E               	goto	l9202
 40191  3146  3000               	movlw	0
 40192  3147  00A9               	movwf	___flmul@b+3
 40193  3148  3000               	movlw	0
 40194  3149  00A8               	movwf	___flmul@b+2
 40195  314A  3000               	movlw	0
 40196  314B  00A7               	movwf	___flmul@b+1
 40197  314C  3000               	movlw	0
 40198  314D  00A6               	movwf	___flmul@b
 40199  314E                     l9202:
 40200  314E  17A8               	bsf	___flmul@b+2,7
 40201  314F  2958               	goto	l9206
 40202  3150                     l9204:
 40203  3150  3000               	movlw	0
 40204  3151  00A9               	movwf	___flmul@b+3
 40205  3152  3000               	movlw	0
 40206  3153  00A8               	movwf	___flmul@b+2
 40207  3154  3000               	movlw	0
 40208  3155  00A7               	movwf	___flmul@b+1
 40209  3156  3000               	movlw	0
 40210  3157  00A6               	movwf	___flmul@b
 40211  3158                     l9206:
 40212  3158  082D               	movf	___flmul@a+3,w
 40213  3159  3980               	andlw	128
 40214  315A  00AE               	movwf	??___flmul
 40215  315B  082E               	movf	??___flmul,w
 40216  315C  06B3               	xorwf	___flmul@sign,f
 40217  315D  352D               	lslf	___flmul@a+3,w
 40218  315E  00AE               	movwf	??___flmul
 40219  315F  082E               	movf	??___flmul,w
 40220  3160  00B4               	movwf	___flmul@aexp
 40221  3161  1BAC               	btfsc	___flmul@a+2,7
 40222  3162  1434               	bsf	___flmul@aexp,0
 40223  3163  0834               	movf	___flmul@aexp,w
 40224  3164  1903               	btfsc	3,2
 40225  3165  2973               	goto	l9222
 40226  3166  0A34               	incf	___flmul@aexp,w
 40227  3167  1D03               	btfss	3,2
 40228  3168  2971               	goto	l9220
 40229  3169  3000               	movlw	0
 40230  316A  00AD               	movwf	___flmul@a+3
 40231  316B  3000               	movlw	0
 40232  316C  00AC               	movwf	___flmul@a+2
 40233  316D  3000               	movlw	0
 40234  316E  00AB               	movwf	___flmul@a+1
 40235  316F  3000               	movlw	0
 40236  3170  00AA               	movwf	___flmul@a
 40237  3171                     l9220:
 40238  3171  17AC               	bsf	___flmul@a+2,7
 40239  3172  297B               	goto	l9224
 40240  3173                     l9222:
 40241  3173  3000               	movlw	0
 40242  3174  00AD               	movwf	___flmul@a+3
 40243  3175  3000               	movlw	0
 40244  3176  00AC               	movwf	___flmul@a+2
 40245  3177  3000               	movlw	0
 40246  3178  00AB               	movwf	___flmul@a+1
 40247  3179  3000               	movlw	0
 40248  317A  00AA               	movwf	___flmul@a
 40249  317B                     l9224:
 40250  317B  0834               	movf	___flmul@aexp,w
 40251  317C  1D03               	btfss	3,2
 40252  317D  0835               	movf	___flmul@bexp,w
 40253  317E  1D03               	btfss	3,2
 40254  317F  2989               	goto	l9232
 40255  3180  3000               	movlw	0
 40256  3181  00A9               	movwf	?___flmul+3
 40257  3182  3000               	movlw	0
 40258  3183  00A8               	movwf	?___flmul+2
 40259  3184  3000               	movlw	0
 40260  3185  00A7               	movwf	?___flmul+1
 40261  3186  3000               	movlw	0
 40262  3187  00A6               	movwf	?___flmul
 40263  3188  0008               	return
 40264  3189                     l9232:
 40265  3189  0826               	movf	___flmul@b,w
 40266  318A  00AE               	movwf	??___flmul
 40267  318B  082E               	movf	??___flmul,w
 40268  318C  00F1               	movwf	__Umul8_16@multiplicand
 40269  318D  082C               	movf	___flmul@a+2,w
 40270  318E  31D0  2093  31B1   	fcall	__Umul8_16
 40271  3191  0872               	movf	?__Umul8_16+1,w
 40272  3192  00BF               	movwf	___flmul@temp+1
 40273  3193  0871               	movf	?__Umul8_16,w
 40274  3194  00BE               	movwf	___flmul@temp
 40275  3195  083E               	movf	___flmul@temp,w
 40276  3196  00AE               	movwf	??___flmul
 40277  3197  01AF               	clrf	??___flmul+1
 40278  3198  01B0               	clrf	??___flmul+2
 40279  3199  01B1               	clrf	??___flmul+3
 40280  319A  0831               	movf	??___flmul+3,w
 40281  319B  00B9               	movwf	___flmul@grs+3
 40282  319C  0830               	movf	??___flmul+2,w
 40283  319D  00B8               	movwf	___flmul@grs+2
 40284  319E  082F               	movf	??___flmul+1,w
 40285  319F  00B7               	movwf	___flmul@grs+1
 40286  31A0  082E               	movf	??___flmul,w
 40287  31A1  00B6               	movwf	___flmul@grs
 40288  31A2  083F               	movf	___flmul@temp+1,w
 40289  31A3  00AE               	movwf	??___flmul
 40290  31A4  01AF               	clrf	??___flmul+1
 40291  31A5  01B0               	clrf	??___flmul+2
 40292  31A6  01B1               	clrf	??___flmul+3
 40293  31A7  0831               	movf	??___flmul+3,w
 40294  31A8  00BD               	movwf	___flmul@prod+3
 40295  31A9  0830               	movf	??___flmul+2,w
 40296  31AA  00BC               	movwf	___flmul@prod+2
 40297  31AB  082F               	movf	??___flmul+1,w
 40298  31AC  00BB               	movwf	___flmul@prod+1
 40299  31AD  082E               	movf	??___flmul,w
 40300  31AE  00BA               	movwf	___flmul@prod
 40301  31AF  0827               	movf	___flmul@b+1,w
 40302  31B0  00AE               	movwf	??___flmul
 40303  31B1  082E               	movf	??___flmul,w
 40304  31B2  00F1               	movwf	__Umul8_16@multiplicand
 40305  31B3  082B               	movf	___flmul@a+1,w
 40306  31B4  31D0  2093  31B1   	fcall	__Umul8_16
 40307  31B7  0872               	movf	?__Umul8_16+1,w
 40308  31B8  00BF               	movwf	___flmul@temp+1
 40309  31B9  0871               	movf	?__Umul8_16,w
 40310  31BA  00BE               	movwf	___flmul@temp
 40311  31BB  083E               	movf	___flmul@temp,w
 40312  31BC  00AE               	movwf	??___flmul
 40313  31BD  01AF               	clrf	??___flmul+1
 40314  31BE  01B0               	clrf	??___flmul+2
 40315  31BF  01B1               	clrf	??___flmul+3
 40316  31C0  082E               	movf	??___flmul,w
 40317  31C1  07B6               	addwf	___flmul@grs,f
 40318  31C2  082F               	movf	??___flmul+1,w
 40319  31C3  3DB7               	addwfc	___flmul@grs+1,f
 40320  31C4  0830               	movf	??___flmul+2,w
 40321  31C5  3DB8               	addwfc	___flmul@grs+2,f
 40322  31C6  0831               	movf	??___flmul+3,w
 40323  31C7  3DB9               	addwfc	___flmul@grs+3,f
 40324  31C8  083F               	movf	___flmul@temp+1,w
 40325  31C9  00AE               	movwf	??___flmul
 40326  31CA  01AF               	clrf	??___flmul+1
 40327  31CB  01B0               	clrf	??___flmul+2
 40328  31CC  01B1               	clrf	??___flmul+3
 40329  31CD  082E               	movf	??___flmul,w
 40330  31CE  07BA               	addwf	___flmul@prod,f
 40331  31CF  082F               	movf	??___flmul+1,w
 40332  31D0  3DBB               	addwfc	___flmul@prod+1,f
 40333  31D1  0830               	movf	??___flmul+2,w
 40334  31D2  3DBC               	addwfc	___flmul@prod+2,f
 40335  31D3  0831               	movf	??___flmul+3,w
 40336  31D4  3DBD               	addwfc	___flmul@prod+3,f
 40337  31D5  0828               	movf	___flmul@b+2,w
 40338  31D6  00AE               	movwf	??___flmul
 40339  31D7  082E               	movf	??___flmul,w
 40340  31D8  00F1               	movwf	__Umul8_16@multiplicand
 40341  31D9  082A               	movf	___flmul@a,w
 40342  31DA  31D0  2093  31B1   	fcall	__Umul8_16
 40343  31DD  0872               	movf	?__Umul8_16+1,w
 40344  31DE  00BF               	movwf	___flmul@temp+1
 40345  31DF  0871               	movf	?__Umul8_16,w
 40346  31E0  00BE               	movwf	___flmul@temp
 40347  31E1  083E               	movf	___flmul@temp,w
 40348  31E2  00AE               	movwf	??___flmul
 40349  31E3  01AF               	clrf	??___flmul+1
 40350  31E4  01B0               	clrf	??___flmul+2
 40351  31E5  01B1               	clrf	??___flmul+3
 40352  31E6  082E               	movf	??___flmul,w
 40353  31E7  07B6               	addwf	___flmul@grs,f
 40354  31E8  082F               	movf	??___flmul+1,w
 40355  31E9  3DB7               	addwfc	___flmul@grs+1,f
 40356  31EA  0830               	movf	??___flmul+2,w
 40357  31EB  3DB8               	addwfc	___flmul@grs+2,f
 40358  31EC  0831               	movf	??___flmul+3,w
 40359  31ED  3DB9               	addwfc	___flmul@grs+3,f
 40360  31EE  083F               	movf	___flmul@temp+1,w
 40361  31EF  00AE               	movwf	??___flmul
 40362  31F0  01AF               	clrf	??___flmul+1
 40363  31F1  01B0               	clrf	??___flmul+2
 40364  31F2  01B1               	clrf	??___flmul+3
 40365  31F3  082E               	movf	??___flmul,w
 40366  31F4  07BA               	addwf	___flmul@prod,f
 40367  31F5  082F               	movf	??___flmul+1,w
 40368  31F6  3DBB               	addwfc	___flmul@prod+1,f
 40369  31F7  0830               	movf	??___flmul+2,w
 40370  31F8  3DBC               	addwfc	___flmul@prod+2,f
 40371  31F9  0831               	movf	??___flmul+3,w
 40372  31FA  3DBD               	addwfc	___flmul@prod+3,f
 40373  31FB  3008               	movlw	8
 40374  31FC                     u9785:
 40375  31FC  35B6               	lslf	___flmul@grs,f
 40376  31FD  0DB7               	rlf	___flmul@grs+1,f
 40377  31FE  0DB8               	rlf	___flmul@grs+2,f
 40378  31FF  0DB9               	rlf	___flmul@grs+3,f
 40379  3200  0B89               	decfsz	9,f
 40380  3201  29FC               	goto	u9785
 40381  3202  0827               	movf	___flmul@b+1,w
 40382  3203  00AE               	movwf	??___flmul
 40383  3204  082E               	movf	??___flmul,w
 40384  3205  00F1               	movwf	__Umul8_16@multiplicand
 40385  3206  082A               	movf	___flmul@a,w
 40386  3207  31D0  2093  31B1   	fcall	__Umul8_16
 40387  320A  0872               	movf	?__Umul8_16+1,w
 40388  320B  00BF               	movwf	___flmul@temp+1
 40389  320C  0871               	movf	?__Umul8_16,w
 40390  320D  00BE               	movwf	___flmul@temp
 40391  320E  083E               	movf	___flmul@temp,w
 40392  320F  07B6               	addwf	___flmul@grs,f
 40393  3210  083F               	movf	___flmul@temp+1,w
 40394  3211  3DB7               	addwfc	___flmul@grs+1,f
 40395  3212  3000               	movlw	0
 40396  3213  3DB8               	addwfc	___flmul@grs+2,f
 40397  3214  3DB9               	addwfc	___flmul@grs+3,f
 40398  3215  0826               	movf	___flmul@b,w
 40399  3216  00AE               	movwf	??___flmul
 40400  3217  082E               	movf	??___flmul,w
 40401  3218  00F1               	movwf	__Umul8_16@multiplicand
 40402  3219  082B               	movf	___flmul@a+1,w
 40403  321A  31D0  2093  31B1   	fcall	__Umul8_16
 40404  321D  0872               	movf	?__Umul8_16+1,w
 40405  321E  00BF               	movwf	___flmul@temp+1
 40406  321F  0871               	movf	?__Umul8_16,w
 40407  3220  00BE               	movwf	___flmul@temp
 40408  3221  083E               	movf	___flmul@temp,w
 40409  3222  07B6               	addwf	___flmul@grs,f
 40410  3223  083F               	movf	___flmul@temp+1,w
 40411  3224  3DB7               	addwfc	___flmul@grs+1,f
 40412  3225  3000               	movlw	0
 40413  3226  3DB8               	addwfc	___flmul@grs+2,f
 40414  3227  3DB9               	addwfc	___flmul@grs+3,f
 40415  3228  3008               	movlw	8
 40416  3229                     u9795:
 40417  3229  35B6               	lslf	___flmul@grs,f
 40418  322A  0DB7               	rlf	___flmul@grs+1,f
 40419  322B  0DB8               	rlf	___flmul@grs+2,f
 40420  322C  0DB9               	rlf	___flmul@grs+3,f
 40421  322D  0B89               	decfsz	9,f
 40422  322E  2A29               	goto	u9795
 40423  322F  0826               	movf	___flmul@b,w
 40424  3230  00AE               	movwf	??___flmul
 40425  3231  082E               	movf	??___flmul,w
 40426  3232  00F1               	movwf	__Umul8_16@multiplicand
 40427  3233  082A               	movf	___flmul@a,w
 40428  3234  31D0  2093  31B1   	fcall	__Umul8_16
 40429  3237  0872               	movf	?__Umul8_16+1,w
 40430  3238  00BF               	movwf	___flmul@temp+1
 40431  3239  0871               	movf	?__Umul8_16,w
 40432  323A  00BE               	movwf	___flmul@temp
 40433  323B  083E               	movf	___flmul@temp,w
 40434  323C  07B6               	addwf	___flmul@grs,f
 40435  323D  083F               	movf	___flmul@temp+1,w
 40436  323E  3DB7               	addwfc	___flmul@grs+1,f
 40437  323F  3000               	movlw	0
 40438  3240  3DB8               	addwfc	___flmul@grs+2,f
 40439  3241  3DB9               	addwfc	___flmul@grs+3,f
 40440  3242  0827               	movf	___flmul@b+1,w
 40441  3243  00AE               	movwf	??___flmul
 40442  3244  082E               	movf	??___flmul,w
 40443  3245  00F1               	movwf	__Umul8_16@multiplicand
 40444  3246  082C               	movf	___flmul@a+2,w
 40445  3247  31D0  2093  31B1   	fcall	__Umul8_16
 40446  324A  0872               	movf	?__Umul8_16+1,w
 40447  324B  00BF               	movwf	___flmul@temp+1
 40448  324C  0871               	movf	?__Umul8_16,w
 40449  324D  00BE               	movwf	___flmul@temp
 40450  324E  083E               	movf	___flmul@temp,w
 40451  324F  07BA               	addwf	___flmul@prod,f
 40452  3250  083F               	movf	___flmul@temp+1,w
 40453  3251  3DBB               	addwfc	___flmul@prod+1,f
 40454  3252  3000               	movlw	0
 40455  3253  3DBC               	addwfc	___flmul@prod+2,f
 40456  3254  3DBD               	addwfc	___flmul@prod+3,f
 40457  3255  0828               	movf	___flmul@b+2,w
 40458  3256  00AE               	movwf	??___flmul
 40459  3257  082E               	movf	??___flmul,w
 40460  3258  00F1               	movwf	__Umul8_16@multiplicand
 40461  3259  082B               	movf	___flmul@a+1,w
 40462  325A  31D0  2093  31B1   	fcall	__Umul8_16
 40463  325D  0872               	movf	?__Umul8_16+1,w
 40464  325E  00BF               	movwf	___flmul@temp+1
 40465  325F  0871               	movf	?__Umul8_16,w
 40466  3260  00BE               	movwf	___flmul@temp
 40467  3261  083E               	movf	___flmul@temp,w
 40468  3262  07BA               	addwf	___flmul@prod,f
 40469  3263  083F               	movf	___flmul@temp+1,w
 40470  3264  3DBB               	addwfc	___flmul@prod+1,f
 40471  3265  3000               	movlw	0
 40472  3266  3DBC               	addwfc	___flmul@prod+2,f
 40473  3267  3DBD               	addwfc	___flmul@prod+3,f
 40474  3268  0828               	movf	___flmul@b+2,w
 40475  3269  00AE               	movwf	??___flmul
 40476  326A  082E               	movf	??___flmul,w
 40477  326B  00F1               	movwf	__Umul8_16@multiplicand
 40478  326C  082C               	movf	___flmul@a+2,w
 40479  326D  31D0  2093  31B1   	fcall	__Umul8_16
 40480  3270  0872               	movf	?__Umul8_16+1,w
 40481  3271  00BF               	movwf	___flmul@temp+1
 40482  3272  0871               	movf	?__Umul8_16,w
 40483  3273  00BE               	movwf	___flmul@temp
 40484  3274  083E               	movf	___flmul@temp,w
 40485  3275  00AE               	movwf	??___flmul
 40486  3276  083F               	movf	___flmul@temp+1,w
 40487  3277  00AF               	movwf	??___flmul+1
 40488  3278  01B0               	clrf	??___flmul+2
 40489  3279  01B1               	clrf	??___flmul+3
 40490  327A  3008               	movlw	8
 40491  327B                     u9805:
 40492  327B  35AE               	lslf	??___flmul,f
 40493  327C  0DAF               	rlf	??___flmul+1,f
 40494  327D  0DB0               	rlf	??___flmul+2,f
 40495  327E  0DB1               	rlf	??___flmul+3,f
 40496  327F  0B89               	decfsz	9,f
 40497  3280  2A7B               	goto	u9805
 40498  3281  082E               	movf	??___flmul,w
 40499  3282  07BA               	addwf	___flmul@prod,f
 40500  3283  082F               	movf	??___flmul+1,w
 40501  3284  3DBB               	addwfc	___flmul@prod+1,f
 40502  3285  0830               	movf	??___flmul+2,w
 40503  3286  3DBC               	addwfc	___flmul@prod+2,f
 40504  3287  0831               	movf	??___flmul+3,w
 40505  3288  3DBD               	addwfc	___flmul@prod+3,f
 40506  3289  0839               	movf	___flmul@grs+3,w
 40507  328A  00AE               	movwf	??___flmul
 40508  328B  01AF               	clrf	??___flmul+1
 40509  328C  01B0               	clrf	??___flmul+2
 40510  328D  01B1               	clrf	??___flmul+3
 40511  328E  082E               	movf	??___flmul,w
 40512  328F  07BA               	addwf	___flmul@prod,f
 40513  3290  082F               	movf	??___flmul+1,w
 40514  3291  3DBB               	addwfc	___flmul@prod+1,f
 40515  3292  0830               	movf	??___flmul+2,w
 40516  3293  3DBC               	addwfc	___flmul@prod+2,f
 40517  3294  0831               	movf	??___flmul+3,w
 40518  3295  3DBD               	addwfc	___flmul@prod+3,f
 40519  3296  3008               	movlw	8
 40520  3297                     u9815:
 40521  3297  35B6               	lslf	___flmul@grs,f
 40522  3298  0DB7               	rlf	___flmul@grs+1,f
 40523  3299  0DB8               	rlf	___flmul@grs+2,f
 40524  329A  0DB9               	rlf	___flmul@grs+3,f
 40525  329B  0B89               	decfsz	9,f
 40526  329C  2A97               	goto	u9815
 40527  329D  0835               	movf	___flmul@bexp,w
 40528  329E  0734               	addwf	___flmul@aexp,w
 40529  329F  00AE               	movwf	??___flmul
 40530  32A0  01AF               	clrf	??___flmul+1
 40531  32A1  0DAF               	rlf	??___flmul+1,f
 40532  32A2  082E               	movf	??___flmul,w
 40533  32A3  3E82               	addlw	130
 40534  32A4  00BE               	movwf	___flmul@temp
 40535  32A5  30FF               	movlw	255
 40536  32A6  3D2F               	addwfc	??___flmul+1,w
 40537  32A7  00BF               	movwf	___flmul@temp+1
 40538  32A8                     l9284:
 40539  32A8  1BBC               	btfsc	___flmul@prod+2,7
 40540  32A9  2ABF               	goto	l9286
 40541  32AA  3001               	movlw	1
 40542  32AB                     u9825:
 40543  32AB  35BA               	lslf	___flmul@prod,f
 40544  32AC  0DBB               	rlf	___flmul@prod+1,f
 40545  32AD  0DBC               	rlf	___flmul@prod+2,f
 40546  32AE  0DBD               	rlf	___flmul@prod+3,f
 40547  32AF  0B89               	decfsz	9,f
 40548  32B0  2AAB               	goto	u9825
 40549  32B1  1BB9               	btfsc	___flmul@grs+3,7
 40550  32B2  143A               	bsf	___flmul@prod,0
 40551  32B3  3001               	movlw	1
 40552  32B4                     u9845:
 40553  32B4  35B6               	lslf	___flmul@grs,f
 40554  32B5  0DB7               	rlf	___flmul@grs+1,f
 40555  32B6  0DB8               	rlf	___flmul@grs+2,f
 40556  32B7  0DB9               	rlf	___flmul@grs+3,f
 40557  32B8  0B89               	decfsz	9,f
 40558  32B9  2AB4               	goto	u9845
 40559  32BA  30FF               	movlw	255
 40560  32BB  07BE               	addwf	___flmul@temp,f
 40561  32BC  30FF               	movlw	255
 40562  32BD  3DBF               	addwfc	___flmul@temp+1,f
 40563  32BE  2AA8               	goto	l9284
 40564  32BF                     l9286:
 40565  32BF  01B4               	clrf	___flmul@aexp
 40566  32C0  1FB9               	btfss	___flmul@grs+3,7
 40567  32C1  2AD8               	goto	l9296
 40568  32C2  30FF               	movlw	255
 40569  32C3  0536               	andwf	___flmul@grs,w
 40570  32C4  00AE               	movwf	??___flmul
 40571  32C5  30FF               	movlw	255
 40572  32C6  0537               	andwf	___flmul@grs+1,w
 40573  32C7  00AF               	movwf	??___flmul+1
 40574  32C8  30FF               	movlw	255
 40575  32C9  0538               	andwf	___flmul@grs+2,w
 40576  32CA  00B0               	movwf	??___flmul+2
 40577  32CB  307F               	movlw	127
 40578  32CC  0539               	andwf	___flmul@grs+3,w
 40579  32CD  00B1               	movwf	??___flmul+3
 40580  32CE  0831               	movf	??___flmul+3,w
 40581  32CF  0430               	iorwf	??___flmul+2,w
 40582  32D0  042F               	iorwf	??___flmul+1,w
 40583  32D1  042E               	iorwf	??___flmul,w
 40584  32D2  1903               	skipnz
 40585  32D3  183A               	btfsc	___flmul@prod,0
 40586  32D4  2AD6               	goto	l9292
 40587  32D5  2AD8               	goto	l9296
 40588  32D6                     l9292:
 40589  32D6  01B4               	clrf	___flmul@aexp
 40590  32D7  0AB4               	incf	___flmul@aexp,f
 40591  32D8                     l9296:
 40592  32D8  0834               	movf	___flmul@aexp,w
 40593  32D9  1903               	btfsc	3,2
 40594  32DA  2B01               	goto	l9306
 40595  32DB  3001               	movlw	1
 40596  32DC  07BA               	addwf	___flmul@prod,f
 40597  32DD  3000               	movlw	0
 40598  32DE  3DBB               	addwfc	___flmul@prod+1,f
 40599  32DF  3000               	movlw	0
 40600  32E0  3DBC               	addwfc	___flmul@prod+2,f
 40601  32E1  3000               	movlw	0
 40602  32E2  3DBD               	addwfc	___flmul@prod+3,f
 40603  32E3  1C3D               	btfss	___flmul@prod+3,0
 40604  32E4  2B01               	goto	l9306
 40605  32E5  083A               	movf	___flmul@prod,w
 40606  32E6  00AE               	movwf	??___flmul
 40607  32E7  083B               	movf	___flmul@prod+1,w
 40608  32E8  00AF               	movwf	??___flmul+1
 40609  32E9  083C               	movf	___flmul@prod+2,w
 40610  32EA  00B0               	movwf	??___flmul+2
 40611  32EB  083D               	movf	___flmul@prod+3,w
 40612  32EC  00B1               	movwf	??___flmul+3
 40613  32ED  3001               	movlw	1
 40614  32EE  00B2               	movwf	??___flmul+4
 40615  32EF                     u9915:
 40616  32EF  37B1               	asrf	??___flmul+3,f
 40617  32F0  0CB0               	rrf	??___flmul+2,f
 40618  32F1  0CAF               	rrf	??___flmul+1,f
 40619  32F2  0CAE               	rrf	??___flmul,f
 40620  32F3  0BB2               	decfsz	??___flmul+4,f
 40621  32F4  2AEF               	goto	u9915
 40622  32F5  0831               	movf	??___flmul+3,w
 40623  32F6  00BD               	movwf	___flmul@prod+3
 40624  32F7  0830               	movf	??___flmul+2,w
 40625  32F8  00BC               	movwf	___flmul@prod+2
 40626  32F9  082F               	movf	??___flmul+1,w
 40627  32FA  00BB               	movwf	___flmul@prod+1
 40628  32FB  082E               	movf	??___flmul,w
 40629  32FC  00BA               	movwf	___flmul@prod
 40630  32FD  3001               	movlw	1
 40631  32FE  07BE               	addwf	___flmul@temp,f
 40632  32FF  3000               	movlw	0
 40633  3300  3DBF               	addwfc	___flmul@temp+1,f
 40634  3301                     l9306:
 40635  3301  083F               	movf	___flmul@temp+1,w
 40636  3302  3A80               	xorlw	128
 40637  3303  00AE               	movwf	??___flmul
 40638  3304  3080               	movlw	128
 40639  3305  022E               	subwf	??___flmul,w
 40640  3306  1D03               	skipz
 40641  3307  2B0A               	goto	u9925
 40642  3308  30FF               	movlw	255
 40643  3309  023E               	subwf	___flmul@temp,w
 40644  330A                     u9925:
 40645  330A  1C03               	skipc
 40646  330B  2B16               	goto	l9310
 40647  330C  307F               	movlw	127
 40648  330D  0140               	movlb	0	; select bank0
 40649  330E  00BD               	movwf	___flmul@prod+3
 40650  330F  3080               	movlw	128
 40651  3310  00BC               	movwf	___flmul@prod+2
 40652  3311  3000               	movlw	0
 40653  3312  00BB               	movwf	___flmul@prod+1
 40654  3313  3000               	movlw	0
 40655  3314  00BA               	movwf	___flmul@prod
 40656  3315  2B40               	goto	l2138
 40657  3316                     l9310:
 40658  3316  0140               	movlb	0	; select bank0
 40659  3317  083F               	movf	___flmul@temp+1,w
 40660  3318  3A80               	xorlw	128
 40661  3319  00AE               	movwf	??___flmul
 40662  331A  3080               	movlw	128
 40663  331B  022E               	subwf	??___flmul,w
 40664  331C  1D03               	skipz
 40665  331D  2B20               	goto	u9935
 40666  331E  3001               	movlw	1
 40667  331F  023E               	subwf	___flmul@temp,w
 40668  3320                     u9935:
 40669  3320  1803               	skipnc
 40670  3321  2B2D               	goto	l9316
 40671  3322  3000               	movlw	0
 40672  3323  0140               	movlb	0	; select bank0
 40673  3324  00BD               	movwf	___flmul@prod+3
 40674  3325  3000               	movlw	0
 40675  3326  00BC               	movwf	___flmul@prod+2
 40676  3327  3000               	movlw	0
 40677  3328  00BB               	movwf	___flmul@prod+1
 40678  3329  3000               	movlw	0
 40679  332A  00BA               	movwf	___flmul@prod
 40680  332B  01B3               	clrf	___flmul@sign
 40681  332C  2B40               	goto	l2138
 40682  332D                     l9316:
 40683  332D  0140               	movlb	0	; select bank0
 40684  332E  083E               	movf	___flmul@temp,w
 40685  332F  00AE               	movwf	??___flmul
 40686  3330  082E               	movf	??___flmul,w
 40687  3331  00B5               	movwf	___flmul@bexp
 40688  3332  30FF               	movlw	255
 40689  3333  05BA               	andwf	___flmul@prod,f
 40690  3334  30FF               	movlw	255
 40691  3335  05BB               	andwf	___flmul@prod+1,f
 40692  3336  307F               	movlw	127
 40693  3337  05BC               	andwf	___flmul@prod+2,f
 40694  3338  3000               	movlw	0
 40695  3339  05BD               	andwf	___flmul@prod+3,f
 40696  333A  1835               	btfsc	___flmul@bexp,0
 40697  333B  17BC               	bsf	___flmul@prod+2,7
 40698  333C  3635               	lsrf	___flmul@bexp,w
 40699  333D  00AE               	movwf	??___flmul
 40700  333E  082E               	movf	??___flmul,w
 40701  333F  00BD               	movwf	___flmul@prod+3
 40702  3340                     l2138:
 40703  3340  0833               	movf	___flmul@sign,w
 40704  3341  00AE               	movwf	??___flmul
 40705  3342  082E               	movf	??___flmul,w
 40706  3343  04BD               	iorwf	___flmul@prod+3,f
 40707  3344  083D               	movf	___flmul@prod+3,w
 40708  3345  00A9               	movwf	?___flmul+3
 40709  3346  083C               	movf	___flmul@prod+2,w
 40710  3347  00A8               	movwf	?___flmul+2
 40711  3348  083B               	movf	___flmul@prod+1,w
 40712  3349  00A7               	movwf	?___flmul+1
 40713  334A  083A               	movf	___flmul@prod,w
 40714  334B  00A6               	movwf	?___flmul
 40715  334C  0008               	return
 40716  334D                     __end_of___flmul:
 40717                           
 40718                           	psect	text66
 40719  5093                     __ptext66:	
 40720 ;; *************** function __Umul8_16 *****************
 40721 ;; Defined at:
 40722 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
 40723 ;; Parameters:    Size  Location     Type
 40724 ;;  multiplier      1    wreg     unsigned char 
 40725 ;;  multiplicand    1    1[COMMON] unsigned char 
 40726 ;; Auto vars:     Size  Location     Type
 40727 ;;  multiplier      1    9[COMMON] unsigned char 
 40728 ;;  word_mpld       2    7[COMMON] unsigned int 
 40729 ;;  product         2    5[COMMON] unsigned int 
 40730 ;; Return value:  Size  Location     Type
 40731 ;;                  2    1[COMMON] unsigned int 
 40732 ;; Registers used:
 40733 ;;		wreg, status,2, status,0
 40734 ;; Tracked objects:
 40735 ;;		On entry : 3F/0
 40736 ;;		On exit  : 3F/0
 40737 ;;		Unchanged: 3F/0
 40738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40740 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40742 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40743 ;;Total ram usage:        9 bytes
 40744 ;; Hardware stack levels used: 1
 40745 ;; Hardware stack levels required when called: unknown (due to recursion)
 40746 ;; This function calls:
 40747 ;;		Nothing
 40748 ;; This function is called by:
 40749 ;;		___flmul
 40750 ;; This function uses a non-reentrant model
 40751 ;;
 40752                           
 40753  5093                     __Umul8_16:	
 40754                           ;psect for function __Umul8_16
 40755                           
 40756                           
 40757                           ;incstack = 0
 40758                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 40759                           ;__Umul8_16@multiplier stored from wreg
 40760  5093  00F9               	movwf	__Umul8_16@multiplier
 40761  5094  01F5               	clrf	__Umul8_16@product
 40762  5095  01F6               	clrf	__Umul8_16@product+1
 40763  5096  0871               	movf	__Umul8_16@multiplicand,w
 40764  5097  00F3               	movwf	??__Umul8_16
 40765  5098  01F4               	clrf	??__Umul8_16+1
 40766  5099  0873               	movf	??__Umul8_16,w
 40767  509A  00F7               	movwf	__Umul8_16@word_mpld
 40768  509B  0874               	movf	??__Umul8_16+1,w
 40769  509C  00F8               	movwf	__Umul8_16@word_mpld+1
 40770  509D                     l8842:
 40771  509D  1C79               	btfss	__Umul8_16@multiplier,0
 40772  509E  28A3               	goto	l2145
 40773  509F  0877               	movf	__Umul8_16@word_mpld,w
 40774  50A0  07F5               	addwf	__Umul8_16@product,f
 40775  50A1  0878               	movf	__Umul8_16@word_mpld+1,w
 40776  50A2  3DF6               	addwfc	__Umul8_16@product+1,f
 40777  50A3                     l2145:
 40778  50A3  3001               	movlw	1
 40779  50A4                     u8965:
 40780  50A4  35F7               	lslf	__Umul8_16@word_mpld,f
 40781  50A5  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 40782  50A6  0B89               	decfsz	9,f
 40783  50A7  28A4               	goto	u8965
 40784  50A8  1003               	clrc
 40785  50A9  0CF9               	rrf	__Umul8_16@multiplier,f
 40786  50AA  0879               	movf	__Umul8_16@multiplier,w
 40787  50AB  1D03               	btfss	3,2
 40788  50AC  289D               	goto	l8842
 40789  50AD  0876               	movf	__Umul8_16@product+1,w
 40790  50AE  00F2               	movwf	?__Umul8_16+1
 40791  50AF  0875               	movf	__Umul8_16@product,w
 40792  50B0  00F1               	movwf	?__Umul8_16
 40793  50B1  0008               	return
 40794  50B2                     __end_of__Umul8_16:
 40795                           
 40796                           	psect	text67
 40797  3015                     __ptext67:	
 40798 ;; *************** function _cncCalcToCruise *****************
 40799 ;; Defined at:
 40800 ;;		line 198 in file "cnc.c"
 40801 ;; Parameters:    Size  Location     Type
 40802 ;;  mv              2   14[BANK0 ] PTR struct .
 40803 ;;		 -> NULL(0), step.Return(57), step.Welding(57), step.Forward(57), 
 40804 ;;		 -> step(248), 
 40805 ;; Auto vars:     Size  Location     Type
 40806 ;;  a               4   30[BANK0 ] long 
 40807 ;;  len             4   26[BANK0 ] long 
 40808 ;;  S               4   22[BANK0 ] long 
 40809 ;;  V               4   18[BANK0 ] long 
 40810 ;; Return value:  Size  Location     Type
 40811 ;;                  4   14[BANK0 ] long 
 40812 ;; Registers used:
 40813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 40814 ;; Tracked objects:
 40815 ;;		On entry : 3F/0
 40816 ;;		On exit  : 3F/0
 40817 ;;		Unchanged: 0/0
 40818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40820 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40822 ;;      Totals:         1      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40823 ;;Total ram usage:       21 bytes
 40824 ;; Hardware stack levels used: 1
 40825 ;; Hardware stack levels required when called: unknown (due to recursion)
 40826 ;; This function calls:
 40827 ;;		___aldiv
 40828 ;;		___lmul
 40829 ;;		_labs
 40830 ;; This function is called by:
 40831 ;;		_cncConfigMove
 40832 ;; This function uses a non-reentrant model
 40833 ;;
 40834                           
 40835  3015                     _cncCalcToCruise:	
 40836                           ;psect for function _cncCalcToCruise
 40837                           
 40838                           
 40839                           ;cnc.c: 199: long S,V,a;;cnc.c: 200: long len = (((3560) < (labs(mv->dist)/2)) ? (3560) 
      +                          : (labs(mv->dist)/2));
 40840                           
 40841                           ;incstack = 0
 40842                           ; Regs used in _cncCalcToCruise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 40843  3015  3000               	movlw	0
 40844  3016  00A3               	movwf	___aldiv@divisor+3
 40845  3017  3000               	movlw	0
 40846  3018  00A2               	movwf	___aldiv@divisor+2
 40847  3019  3000               	movlw	0
 40848  301A  00A1               	movwf	___aldiv@divisor+1
 40849  301B  3002               	movlw	2
 40850  301C  00A0               	movwf	___aldiv@divisor
 40851  301D  082E               	movf	cncCalcToCruise@mv,w
 40852  301E  0086               	movwf	6
 40853  301F  082F               	movf	cncCalcToCruise@mv+1,w
 40854  3020  0087               	movwf	7
 40855  3021  315B               	addfsr 1,27
 40856  3022  3F40               	moviw [0]fsr1
 40857  3023  00F1               	movwf	labs@l
 40858  3024  3F41               	moviw [1]fsr1
 40859  3025  00F2               	movwf	labs@l+1
 40860  3026  3F42               	moviw [2]fsr1
 40861  3027  00F3               	movwf	labs@l+2
 40862  3028  3F43               	moviw [3]fsr1
 40863  3029  00F4               	movwf	labs@l+3
 40864  302A  31DF  273D  31B0   	fcall	_labs
 40865  302D  0874               	movf	?_labs+3,w
 40866  302E  00A7               	movwf	___aldiv@dividend+3
 40867  302F  0873               	movf	?_labs+2,w
 40868  3030  00A6               	movwf	___aldiv@dividend+2
 40869  3031  0872               	movf	?_labs+1,w
 40870  3032  00A5               	movwf	___aldiv@dividend+1
 40871  3033  0871               	movf	?_labs,w
 40872  3034  00A4               	movwf	___aldiv@dividend
 40873  3035  31C9  2155  31B0   	fcall	___aldiv
 40874  3038  1BA3               	btfsc	?___aldiv+3,7
 40875  3039  2846               	goto	l9974
 40876  303A  0823               	movf	?___aldiv+3,w
 40877  303B  1D03               	btfss	3,2
 40878  303C  2872               	goto	l9976
 40879  303D  0822               	movf	?___aldiv+2,w
 40880  303E  1D03               	btfss	3,2
 40881  303F  2872               	goto	l9976
 40882  3040  30E9               	movlw	233
 40883  3041  0220               	subwf	?___aldiv,w
 40884  3042  300D               	movlw	13
 40885  3043  3B21               	subwfb	?___aldiv+1,w
 40886  3044  1803               	btfsc	3,0
 40887  3045  2872               	goto	l9976
 40888  3046                     l9974:
 40889  3046  3000               	movlw	0
 40890  3047  0140               	movlb	0	; select bank0
 40891  3048  00A3               	movwf	___aldiv@divisor+3
 40892  3049  3000               	movlw	0
 40893  304A  00A2               	movwf	___aldiv@divisor+2
 40894  304B  3000               	movlw	0
 40895  304C  00A1               	movwf	___aldiv@divisor+1
 40896  304D  3002               	movlw	2
 40897  304E  00A0               	movwf	___aldiv@divisor
 40898  304F  082E               	movf	cncCalcToCruise@mv,w
 40899  3050  0086               	movwf	6
 40900  3051  082F               	movf	cncCalcToCruise@mv+1,w
 40901  3052  0087               	movwf	7
 40902  3053  315B               	addfsr 1,27
 40903  3054  3F40               	moviw [0]fsr1
 40904  3055  00F1               	movwf	labs@l
 40905  3056  3F41               	moviw [1]fsr1
 40906  3057  00F2               	movwf	labs@l+1
 40907  3058  3F42               	moviw [2]fsr1
 40908  3059  00F3               	movwf	labs@l+2
 40909  305A  3F43               	moviw [3]fsr1
 40910  305B  00F4               	movwf	labs@l+3
 40911  305C  31DF  273D  31B0   	fcall	_labs
 40912  305F  0874               	movf	?_labs+3,w
 40913  3060  00A7               	movwf	___aldiv@dividend+3
 40914  3061  0873               	movf	?_labs+2,w
 40915  3062  00A6               	movwf	___aldiv@dividend+2
 40916  3063  0872               	movf	?_labs+1,w
 40917  3064  00A5               	movwf	___aldiv@dividend+1
 40918  3065  0871               	movf	?_labs,w
 40919  3066  00A4               	movwf	___aldiv@dividend
 40920  3067  31C9  2155  31B0   	fcall	___aldiv
 40921  306A  0823               	movf	?___aldiv+3,w
 40922  306B  00BD               	movwf	cncCalcToCruise@len+3
 40923  306C  0822               	movf	?___aldiv+2,w
 40924  306D  00BC               	movwf	cncCalcToCruise@len+2
 40925  306E  0821               	movf	?___aldiv+1,w
 40926  306F  00BB               	movwf	cncCalcToCruise@len+1
 40927  3070  0820               	movf	?___aldiv,w
 40928  3071  287A               	goto	L49
 40929  3072                     l9976:
 40930  3072  3000               	movlw	0
 40931  3073  0140               	movlb	0	; select bank0
 40932  3074  00BD               	movwf	cncCalcToCruise@len+3
 40933  3075  3000               	movlw	0
 40934  3076  00BC               	movwf	cncCalcToCruise@len+2
 40935  3077  300D               	movlw	13
 40936  3078  00BB               	movwf	cncCalcToCruise@len+1
 40937  3079  30E8               	movlw	232
 40938  307A                     L49:
 40939  307A  00BA               	movwf	cncCalcToCruise@len
 40940  307B  28B3               	goto	l9994
 40941  307C                     l9978:
 40942                           
 40943                           ;cnc.c: 204: a = 200000*2;
 40944  307C  3000               	movlw	0
 40945  307D  00C1               	movwf	cncCalcToCruise@a+3
 40946  307E  3006               	movlw	6
 40947  307F  00C0               	movwf	cncCalcToCruise@a+2
 40948  3080  301A               	movlw	26
 40949  3081  288F               	goto	L56
 40950  3082                     l9980:	
 40951                           ;cnc.c: 205: break;
 40952                           
 40953                           
 40954                           ;cnc.c: 207: a = 137000*2;
 40955  3082  3000               	movlw	0
 40956  3083  00C1               	movwf	cncCalcToCruise@a+3
 40957  3084  3004               	movlw	4
 40958  3085  00C0               	movwf	cncCalcToCruise@a+2
 40959  3086  302E               	movlw	46
 40960  3087  00BF               	movwf	cncCalcToCruise@a+1
 40961  3088  3050               	movlw	80
 40962  3089  28B1               	goto	L55
 40963  308A                     l9982:	
 40964                           ;cnc.c: 208: break;
 40965                           
 40966                           
 40967                           ;cnc.c: 210: a = 88000*2;
 40968  308A  3000               	movlw	0
 40969  308B  00C1               	movwf	cncCalcToCruise@a+3
 40970  308C  3002               	movlw	2
 40971  308D  00C0               	movwf	cncCalcToCruise@a+2
 40972  308E  30AF               	movlw	175
 40973  308F                     L56:
 40974  308F  00BF               	movwf	cncCalcToCruise@a+1
 40975  3090  3080               	movlw	128
 40976  3091  28B1               	goto	L55
 40977  3092                     l9984:	
 40978                           ;cnc.c: 211: break;
 40979                           
 40980                           
 40981                           ;cnc.c: 213: a = (2*200000/4) ;
 40982  3092  3000               	movlw	0
 40983  3093  00C1               	movwf	cncCalcToCruise@a+3
 40984  3094  3001               	movlw	1
 40985  3095  00C0               	movwf	cncCalcToCruise@a+2
 40986  3096  3086               	movlw	134
 40987  3097  00BF               	movwf	cncCalcToCruise@a+1
 40988  3098  30A0               	movlw	160
 40989  3099  28B1               	goto	L55
 40990  309A                     l9986:	
 40991                           ;cnc.c: 214: break;
 40992                           
 40993                           
 40994                           ;cnc.c: 216: a = (2*200000/16);
 40995  309A  3000               	movlw	0
 40996  309B  00C1               	movwf	cncCalcToCruise@a+3
 40997  309C  3000               	movlw	0
 40998  309D  00C0               	movwf	cncCalcToCruise@a+2
 40999  309E  3061               	movlw	97
 41000  309F  00BF               	movwf	cncCalcToCruise@a+1
 41001  30A0  30A8               	movlw	168
 41002  30A1  28B1               	goto	L55
 41003  30A2                     l9988:	
 41004                           ;cnc.c: 217: break;
 41005                           
 41006                           
 41007                           ;cnc.c: 219: a = (2*200000/64);
 41008  30A2  3000               	movlw	0
 41009  30A3  00C1               	movwf	cncCalcToCruise@a+3
 41010  30A4  3000               	movlw	0
 41011  30A5  00C0               	movwf	cncCalcToCruise@a+2
 41012  30A6  3018               	movlw	24
 41013  30A7  00BF               	movwf	cncCalcToCruise@a+1
 41014  30A8  306A               	movlw	106
 41015  30A9  28B1               	goto	L55
 41016  30AA                     l9990:	
 41017                           ;cnc.c: 220: break;
 41018                           
 41019                           
 41020                           ;cnc.c: 222: a = (2*200000/1024);
 41021  30AA  3000               	movlw	0
 41022  30AB  00C1               	movwf	cncCalcToCruise@a+3
 41023  30AC  3000               	movlw	0
 41024  30AD  00C0               	movwf	cncCalcToCruise@a+2
 41025  30AE  3001               	movlw	1
 41026  30AF  00BF               	movwf	cncCalcToCruise@a+1
 41027  30B0  3086               	movlw	134
 41028  30B1                     L55:
 41029  30B1  00BE               	movwf	cncCalcToCruise@a
 41030                           
 41031                           ;cnc.c: 223: break;
 41032  30B2  28CF               	goto	l9996
 41033  30B3                     l9994:
 41034  30B3  082E               	movf	cncCalcToCruise@mv,w
 41035  30B4  0086               	movwf	6
 41036  30B5  082F               	movf	cncCalcToCruise@mv+1,w
 41037  30B6  0087               	movwf	7
 41038  30B7  3142               	addfsr 1,2
 41039  30B8  0801               	movf	1,w
 41040                           
 41041                           ; Switch size 1, requested type "simple"
 41042                           ; Number of cases is 7, Range of values is 0 to 6
 41043                           ; switch strategies available:
 41044                           ; Name         Instructions Cycles
 41045                           ; direct_byte           20     6 (fixed)
 41046                           ; simple_byte           22    12 (average)
 41047                           ; jumptable            260     6 (fixed)
 41048                           ;	Chosen strategy is simple_byte
 41049  30B9  3A00               	xorlw	0	; case 0
 41050  30BA  1903               	skipnz
 41051  30BB  287C               	goto	l9978
 41052  30BC  3A01               	xorlw	1	; case 1
 41053  30BD  1903               	skipnz
 41054  30BE  2882               	goto	l9980
 41055  30BF  3A03               	xorlw	3	; case 2
 41056  30C0  1903               	skipnz
 41057  30C1  288A               	goto	l9982
 41058  30C2  3A01               	xorlw	1	; case 3
 41059  30C3  1903               	skipnz
 41060  30C4  2892               	goto	l9984
 41061  30C5  3A07               	xorlw	7	; case 4
 41062  30C6  1903               	skipnz
 41063  30C7  289A               	goto	l9986
 41064  30C8  3A01               	xorlw	1	; case 5
 41065  30C9  1903               	skipnz
 41066  30CA  28A2               	goto	l9988
 41067  30CB  3A03               	xorlw	3	; case 6
 41068  30CC  1903               	skipnz
 41069  30CD  28AA               	goto	l9990
 41070  30CE  28CF               	goto	l9996
 41071  30CF                     l9996:
 41072                           
 41073                           ;cnc.c: 226: V = mv->vCruise * mv->vCruise;
 41074  30CF  082E               	movf	cncCalcToCruise@mv,w
 41075  30D0  0086               	movwf	6
 41076  30D1  082F               	movf	cncCalcToCruise@mv+1,w
 41077  30D2  0087               	movwf	7
 41078  30D3  314B               	addfsr 1,11
 41079  30D4  3F40               	moviw [0]fsr1
 41080  30D5  00F1               	movwf	___lmul@multiplier
 41081  30D6  3F41               	moviw [1]fsr1
 41082  30D7  00F2               	movwf	___lmul@multiplier+1
 41083  30D8  3F42               	moviw [2]fsr1
 41084  30D9  00F3               	movwf	___lmul@multiplier+2
 41085  30DA  3F43               	moviw [3]fsr1
 41086  30DB  00F4               	movwf	___lmul@multiplier+3
 41087  30DC  082E               	movf	cncCalcToCruise@mv,w
 41088  30DD  0086               	movwf	6
 41089  30DE  082F               	movf	cncCalcToCruise@mv+1,w
 41090  30DF  0087               	movwf	7
 41091  30E0  314B               	addfsr 1,11
 41092  30E1  3F40               	moviw [0]fsr1
 41093  30E2  00F5               	movwf	___lmul@multiplicand
 41094  30E3  3F41               	moviw [1]fsr1
 41095  30E4  00F6               	movwf	___lmul@multiplicand+1
 41096  30E5  3F42               	moviw [2]fsr1
 41097  30E6  00F7               	movwf	___lmul@multiplicand+2
 41098  30E7  3F43               	moviw [3]fsr1
 41099  30E8  00F8               	movwf	___lmul@multiplicand+3
 41100  30E9  31C0  2002  31B0   	fcall	___lmul
 41101  30EC  0874               	movf	?___lmul+3,w
 41102  30ED  00B5               	movwf	cncCalcToCruise@V+3
 41103  30EE  0873               	movf	?___lmul+2,w
 41104  30EF  00B4               	movwf	cncCalcToCruise@V+2
 41105  30F0  0872               	movf	?___lmul+1,w
 41106  30F1  00B3               	movwf	cncCalcToCruise@V+1
 41107  30F2  0871               	movf	?___lmul,w
 41108  30F3  00B2               	movwf	cncCalcToCruise@V
 41109                           
 41110                           ;cnc.c: 227: S = V/a;
 41111  30F4  0841               	movf	cncCalcToCruise@a+3,w
 41112  30F5  00A3               	movwf	___aldiv@divisor+3
 41113  30F6  0840               	movf	cncCalcToCruise@a+2,w
 41114  30F7  00A2               	movwf	___aldiv@divisor+2
 41115  30F8  083F               	movf	cncCalcToCruise@a+1,w
 41116  30F9  00A1               	movwf	___aldiv@divisor+1
 41117  30FA  083E               	movf	cncCalcToCruise@a,w
 41118  30FB  00A0               	movwf	___aldiv@divisor
 41119  30FC  0835               	movf	cncCalcToCruise@V+3,w
 41120  30FD  00A7               	movwf	___aldiv@dividend+3
 41121  30FE  0834               	movf	cncCalcToCruise@V+2,w
 41122  30FF  00A6               	movwf	___aldiv@dividend+2
 41123  3100  0833               	movf	cncCalcToCruise@V+1,w
 41124  3101  00A5               	movwf	___aldiv@dividend+1
 41125  3102  0832               	movf	cncCalcToCruise@V,w
 41126  3103  00A4               	movwf	___aldiv@dividend
 41127  3104  31C9  2155  31B0   	fcall	___aldiv
 41128  3107  0823               	movf	?___aldiv+3,w
 41129  3108  00B9               	movwf	cncCalcToCruise@S+3
 41130  3109  0822               	movf	?___aldiv+2,w
 41131  310A  00B8               	movwf	cncCalcToCruise@S+2
 41132  310B  0821               	movf	?___aldiv+1,w
 41133  310C  00B7               	movwf	cncCalcToCruise@S+1
 41134  310D  0820               	movf	?___aldiv,w
 41135  310E  00B6               	movwf	cncCalcToCruise@S
 41136                           
 41137                           ;cnc.c: 229: return (((S) < (len)) ? (S) : (len));
 41138  310F  0839               	movf	cncCalcToCruise@S+3,w
 41139  3110  3A80               	xorlw	128
 41140  3111  00F9               	movwf	??_cncCalcToCruise
 41141  3112  083D               	movf	cncCalcToCruise@len+3,w
 41142  3113  3A80               	xorlw	128
 41143  3114  0279               	subwf	??_cncCalcToCruise,w
 41144  3115  1D03               	skipz
 41145  3116  2921               	goto	u11333
 41146  3117  083C               	movf	cncCalcToCruise@len+2,w
 41147  3118  0238               	subwf	cncCalcToCruise@S+2,w
 41148  3119  1D03               	skipz
 41149  311A  2921               	goto	u11333
 41150  311B  083B               	movf	cncCalcToCruise@len+1,w
 41151  311C  0237               	subwf	cncCalcToCruise@S+1,w
 41152  311D  1D03               	skipz
 41153  311E  2921               	goto	u11333
 41154  311F  083A               	movf	cncCalcToCruise@len,w
 41155  3120  0236               	subwf	cncCalcToCruise@S,w
 41156  3121                     u11333:
 41157  3121  1C03               	skipc
 41158  3122  292C               	goto	l10004
 41159  3123  083D               	movf	cncCalcToCruise@len+3,w
 41160  3124  00B1               	movwf	?_cncCalcToCruise+3
 41161  3125  083C               	movf	cncCalcToCruise@len+2,w
 41162  3126  00B0               	movwf	?_cncCalcToCruise+2
 41163  3127  083B               	movf	cncCalcToCruise@len+1,w
 41164  3128  00AF               	movwf	?_cncCalcToCruise+1
 41165  3129  083A               	movf	cncCalcToCruise@len,w
 41166  312A  00AE               	movwf	?_cncCalcToCruise
 41167  312B  0008               	return
 41168  312C                     l10004:
 41169  312C  0839               	movf	cncCalcToCruise@S+3,w
 41170  312D  00B1               	movwf	?_cncCalcToCruise+3
 41171  312E  0838               	movf	cncCalcToCruise@S+2,w
 41172  312F  00B0               	movwf	?_cncCalcToCruise+2
 41173  3130  0837               	movf	cncCalcToCruise@S+1,w
 41174  3131  00AF               	movwf	?_cncCalcToCruise+1
 41175  3132  0836               	movf	cncCalcToCruise@S,w
 41176  3133  00AE               	movwf	?_cncCalcToCruise
 41177  3134  0008               	return
 41178  3135                     __end_of_cncCalcToCruise:
 41179                           
 41180                           	psect	text68
 41181  5F3D                     __ptext68:	
 41182 ;; *************** function _labs *****************
 41183 ;; Defined at:
 41184 ;;		line 4 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\labs.c"
 41185 ;; Parameters:    Size  Location     Type
 41186 ;;  l               4    1[COMMON] long 
 41187 ;; Auto vars:     Size  Location     Type
 41188 ;;		None
 41189 ;; Return value:  Size  Location     Type
 41190 ;;                  4    1[COMMON] long 
 41191 ;; Registers used:
 41192 ;;		wreg, status,2, status,0
 41193 ;; Tracked objects:
 41194 ;;		On entry : 3F/0
 41195 ;;		On exit  : 3F/0
 41196 ;;		Unchanged: 3F/0
 41197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41202 ;;Total ram usage:        4 bytes
 41203 ;; Hardware stack levels used: 1
 41204 ;; Hardware stack levels required when called: unknown (due to recursion)
 41205 ;; This function calls:
 41206 ;;		Nothing
 41207 ;; This function is called by:
 41208 ;;		_cncCalcToCruise
 41209 ;; This function uses a non-reentrant model
 41210 ;;
 41211                           
 41212  5F3D                     _labs:	
 41213                           ;psect for function _labs
 41214                           
 41215                           
 41216                           ;incstack = 0
 41217                           ; Regs used in _labs: [wreg+status,2+status,0]
 41218  5F3D  1FF4               	btfss	labs@l+3,7
 41219  5F3E  0008               	return
 41220  5F3F  0971               	comf	labs@l,w
 41221  5F40  00F1               	movwf	?_labs
 41222  5F41  0972               	comf	labs@l+1,w
 41223  5F42  00F2               	movwf	?_labs+1
 41224  5F43  0973               	comf	labs@l+2,w
 41225  5F44  00F3               	movwf	?_labs+2
 41226  5F45  0974               	comf	labs@l+3,w
 41227  5F46  00F4               	movwf	?_labs+3
 41228  5F47  0AF1               	incf	?_labs,f
 41229  5F48  1903               	skipnz
 41230  5F49  0AF2               	incf	?_labs+1,f
 41231  5F4A  1903               	skipnz
 41232  5F4B  0AF3               	incf	?_labs+2,f
 41233  5F4C  1903               	skipnz
 41234  5F4D  0AF4               	incf	?_labs+3,f
 41235  5F4E  0008               	return
 41236  5F4F                     __end_of_labs:
 41237                           
 41238                           	psect	text69
 41239  4002                     __ptext69:	
 41240 ;; *************** function ___lmul *****************
 41241 ;; Defined at:
 41242 ;;		line 15 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
 41243 ;; Parameters:    Size  Location     Type
 41244 ;;  multiplier      4    1[COMMON] unsigned long 
 41245 ;;  multiplicand    4    5[COMMON] unsigned long 
 41246 ;; Auto vars:     Size  Location     Type
 41247 ;;  product         4    0[BANK0 ] unsigned long 
 41248 ;; Return value:  Size  Location     Type
 41249 ;;                  4    1[COMMON] unsigned long 
 41250 ;; Registers used:
 41251 ;;		wreg, status,2, status,0
 41252 ;; Tracked objects:
 41253 ;;		On entry : 3F/0
 41254 ;;		On exit  : 3F/0
 41255 ;;		Unchanged: 0/0
 41256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41260 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41261 ;;Total ram usage:       12 bytes
 41262 ;; Hardware stack levels used: 1
 41263 ;; Hardware stack levels required when called: unknown (due to recursion)
 41264 ;; This function calls:
 41265 ;;		Nothing
 41266 ;; This function is called by:
 41267 ;;		_cncCalcToCruise
 41268 ;;		_getMoveTime
 41269 ;;		_atol
 41270 ;; This function uses a non-reentrant model
 41271 ;;
 41272                           
 41273  4002                     ___lmul:	
 41274                           ;psect for function ___lmul
 41275                           
 41276                           
 41277                           ;incstack = 0
 41278                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 41279  4002  3000               	movlw	0
 41280  4003  00A3               	movwf	___lmul@product+3
 41281  4004  3000               	movlw	0
 41282  4005  00A2               	movwf	___lmul@product+2
 41283  4006  3000               	movlw	0
 41284  4007  00A1               	movwf	___lmul@product+1
 41285  4008  3000               	movlw	0
 41286  4009  00A0               	movwf	___lmul@product
 41287  400A                     l9390:
 41288  400A  1C71               	btfss	___lmul@multiplier,0
 41289  400B  2814               	goto	l9394
 41290  400C  0875               	movf	___lmul@multiplicand,w
 41291  400D  07A0               	addwf	___lmul@product,f
 41292  400E  0876               	movf	___lmul@multiplicand+1,w
 41293  400F  3DA1               	addwfc	___lmul@product+1,f
 41294  4010  0877               	movf	___lmul@multiplicand+2,w
 41295  4011  3DA2               	addwfc	___lmul@product+2,f
 41296  4012  0878               	movf	___lmul@multiplicand+3,w
 41297  4013  3DA3               	addwfc	___lmul@product+3,f
 41298  4014                     l9394:
 41299  4014  3001               	movlw	1
 41300  4015                     u10095:
 41301  4015  35F5               	lslf	___lmul@multiplicand,f
 41302  4016  0DF6               	rlf	___lmul@multiplicand+1,f
 41303  4017  0DF7               	rlf	___lmul@multiplicand+2,f
 41304  4018  0DF8               	rlf	___lmul@multiplicand+3,f
 41305  4019  0B89               	decfsz	9,f
 41306  401A  2815               	goto	u10095
 41307  401B  3001               	movlw	1
 41308  401C                     u10105:
 41309  401C  36F4               	lsrf	___lmul@multiplier+3,f
 41310  401D  0CF3               	rrf	___lmul@multiplier+2,f
 41311  401E  0CF2               	rrf	___lmul@multiplier+1,f
 41312  401F  0CF1               	rrf	___lmul@multiplier,f
 41313  4020  0B89               	decfsz	9,f
 41314  4021  281C               	goto	u10105
 41315  4022  0874               	movf	___lmul@multiplier+3,w
 41316  4023  0473               	iorwf	___lmul@multiplier+2,w
 41317  4024  0472               	iorwf	___lmul@multiplier+1,w
 41318  4025  0471               	iorwf	___lmul@multiplier,w
 41319  4026  1D03               	skipz
 41320  4027  280A               	goto	l9390
 41321  4028  0823               	movf	___lmul@product+3,w
 41322  4029  00F4               	movwf	?___lmul+3
 41323  402A  0822               	movf	___lmul@product+2,w
 41324  402B  00F3               	movwf	?___lmul+2
 41325  402C  0821               	movf	___lmul@product+1,w
 41326  402D  00F2               	movwf	?___lmul+1
 41327  402E  0820               	movf	___lmul@product,w
 41328  402F  00F1               	movwf	?___lmul
 41329  4030  0008               	return
 41330  4031                     __end_of___lmul:
 41331                           
 41332                           	psect	text70
 41333  4955                     __ptext70:	
 41334 ;; *************** function ___aldiv *****************
 41335 ;; Defined at:
 41336 ;;		line 5 in file "C:\Eletronica\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
 41337 ;; Parameters:    Size  Location     Type
 41338 ;;  divisor         4    0[BANK0 ] long 
 41339 ;;  dividend        4    4[BANK0 ] long 
 41340 ;; Auto vars:     Size  Location     Type
 41341 ;;  quotient        4   10[BANK0 ] long 
 41342 ;;  sign            1    9[BANK0 ] unsigned char 
 41343 ;;  counter         1    8[BANK0 ] unsigned char 
 41344 ;; Return value:  Size  Location     Type
 41345 ;;                  4    0[BANK0 ] long 
 41346 ;; Registers used:
 41347 ;;		wreg, status,2, status,0
 41348 ;; Tracked objects:
 41349 ;;		On entry : 3F/0
 41350 ;;		On exit  : 3F/0
 41351 ;;		Unchanged: 0/0
 41352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41353 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41356 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41357 ;;Total ram usage:       15 bytes
 41358 ;; Hardware stack levels used: 1
 41359 ;; Hardware stack levels required when called: unknown (due to recursion)
 41360 ;; This function calls:
 41361 ;;		Nothing
 41362 ;; This function is called by:
 41363 ;;		_cncCalcToCruise
 41364 ;;		_getSpeedTable
 41365 ;;		_getFrontTableSpeed
 41366 ;; This function uses a non-reentrant model
 41367 ;;
 41368                           
 41369  4955                     ___aldiv:	
 41370                           ;psect for function ___aldiv
 41371                           
 41372                           
 41373                           ;incstack = 0
 41374                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 41375  4955  01A9               	clrf	___aldiv@sign
 41376  4956  1FA3               	btfss	___aldiv@divisor+3,7
 41377  4957  2965               	goto	l1802
 41378  4958  09A0               	comf	___aldiv@divisor,f
 41379  4959  09A1               	comf	___aldiv@divisor+1,f
 41380  495A  09A2               	comf	___aldiv@divisor+2,f
 41381  495B  09A3               	comf	___aldiv@divisor+3,f
 41382  495C  0AA0               	incf	___aldiv@divisor,f
 41383  495D  1903               	skipnz
 41384  495E  0AA1               	incf	___aldiv@divisor+1,f
 41385  495F  1903               	skipnz
 41386  4960  0AA2               	incf	___aldiv@divisor+2,f
 41387  4961  1903               	skipnz
 41388  4962  0AA3               	incf	___aldiv@divisor+3,f
 41389  4963  01A9               	clrf	___aldiv@sign
 41390  4964  0AA9               	incf	___aldiv@sign,f
 41391  4965                     l1802:
 41392  4965  1FA7               	btfss	___aldiv@dividend+3,7
 41393  4966  2976               	goto	l9436
 41394  4967  09A4               	comf	___aldiv@dividend,f
 41395  4968  09A5               	comf	___aldiv@dividend+1,f
 41396  4969  09A6               	comf	___aldiv@dividend+2,f
 41397  496A  09A7               	comf	___aldiv@dividend+3,f
 41398  496B  0AA4               	incf	___aldiv@dividend,f
 41399  496C  1903               	skipnz
 41400  496D  0AA5               	incf	___aldiv@dividend+1,f
 41401  496E  1903               	skipnz
 41402  496F  0AA6               	incf	___aldiv@dividend+2,f
 41403  4970  1903               	skipnz
 41404  4971  0AA7               	incf	___aldiv@dividend+3,f
 41405  4972  3001               	movlw	1
 41406  4973  00F8               	movwf	??___aldiv
 41407  4974  0878               	movf	??___aldiv,w
 41408  4975  06A9               	xorwf	___aldiv@sign,f
 41409  4976                     l9436:
 41410  4976  3000               	movlw	0
 41411  4977  00AD               	movwf	___aldiv@quotient+3
 41412  4978  3000               	movlw	0
 41413  4979  00AC               	movwf	___aldiv@quotient+2
 41414  497A  3000               	movlw	0
 41415  497B  00AB               	movwf	___aldiv@quotient+1
 41416  497C  3000               	movlw	0
 41417  497D  00AA               	movwf	___aldiv@quotient
 41418  497E  0823               	movf	___aldiv@divisor+3,w
 41419  497F  0422               	iorwf	___aldiv@divisor+2,w
 41420  4980  0421               	iorwf	___aldiv@divisor+1,w
 41421  4981  0420               	iorwf	___aldiv@divisor,w
 41422  4982  1903               	skipnz
 41423  4983  29BF               	goto	l9458
 41424  4984  01A8               	clrf	___aldiv@counter
 41425  4985  0AA8               	incf	___aldiv@counter,f
 41426  4986                     l9444:
 41427  4986  1BA3               	btfsc	___aldiv@divisor+3,7
 41428  4987  2994               	goto	l9446
 41429  4988  3001               	movlw	1
 41430  4989                     u10225:
 41431  4989  35A0               	lslf	___aldiv@divisor,f
 41432  498A  0DA1               	rlf	___aldiv@divisor+1,f
 41433  498B  0DA2               	rlf	___aldiv@divisor+2,f
 41434  498C  0DA3               	rlf	___aldiv@divisor+3,f
 41435  498D  0B89               	decfsz	9,f
 41436  498E  2989               	goto	u10225
 41437  498F  3001               	movlw	1
 41438  4990  00F8               	movwf	??___aldiv
 41439  4991  0878               	movf	??___aldiv,w
 41440  4992  07A8               	addwf	___aldiv@counter,f
 41441  4993  2986               	goto	l9444
 41442  4994                     l9446:
 41443  4994  3001               	movlw	1
 41444  4995                     u10245:
 41445  4995  35AA               	lslf	___aldiv@quotient,f
 41446  4996  0DAB               	rlf	___aldiv@quotient+1,f
 41447  4997  0DAC               	rlf	___aldiv@quotient+2,f
 41448  4998  0DAD               	rlf	___aldiv@quotient+3,f
 41449  4999  0B89               	decfsz	9,f
 41450  499A  2995               	goto	u10245
 41451  499B  0823               	movf	___aldiv@divisor+3,w
 41452  499C  0227               	subwf	___aldiv@dividend+3,w
 41453  499D  1D03               	skipz
 41454  499E  29A9               	goto	u10255
 41455  499F  0822               	movf	___aldiv@divisor+2,w
 41456  49A0  0226               	subwf	___aldiv@dividend+2,w
 41457  49A1  1D03               	skipz
 41458  49A2  29A9               	goto	u10255
 41459  49A3  0821               	movf	___aldiv@divisor+1,w
 41460  49A4  0225               	subwf	___aldiv@dividend+1,w
 41461  49A5  1D03               	skipz
 41462  49A6  29A9               	goto	u10255
 41463  49A7  0820               	movf	___aldiv@divisor,w
 41464  49A8  0224               	subwf	___aldiv@dividend,w
 41465  49A9                     u10255:
 41466  49A9  1C03               	skipc
 41467  49AA  29B4               	goto	l9454
 41468  49AB  0820               	movf	___aldiv@divisor,w
 41469  49AC  02A4               	subwf	___aldiv@dividend,f
 41470  49AD  0821               	movf	___aldiv@divisor+1,w
 41471  49AE  3BA5               	subwfb	___aldiv@dividend+1,f
 41472  49AF  0822               	movf	___aldiv@divisor+2,w
 41473  49B0  3BA6               	subwfb	___aldiv@dividend+2,f
 41474  49B1  0823               	movf	___aldiv@divisor+3,w
 41475  49B2  3BA7               	subwfb	___aldiv@dividend+3,f
 41476  49B3  142A               	bsf	___aldiv@quotient,0
 41477  49B4                     l9454:
 41478  49B4  3001               	movlw	1
 41479  49B5                     u10265:
 41480  49B5  36A3               	lsrf	___aldiv@divisor+3,f
 41481  49B6  0CA2               	rrf	___aldiv@divisor+2,f
 41482  49B7  0CA1               	rrf	___aldiv@divisor+1,f
 41483  49B8  0CA0               	rrf	___aldiv@divisor,f
 41484  49B9  0B89               	decfsz	9,f
 41485  49BA  29B5               	goto	u10265
 41486  49BB  3001               	movlw	1
 41487  49BC  02A8               	subwf	___aldiv@counter,f
 41488  49BD  1D03               	btfss	3,2
 41489  49BE  2994               	goto	l9446
 41490  49BF                     l9458:
 41491  49BF  0829               	movf	___aldiv@sign,w
 41492  49C0  1903               	btfsc	3,2
 41493  49C1  29CD               	goto	l9462
 41494  49C2  09AA               	comf	___aldiv@quotient,f
 41495  49C3  09AB               	comf	___aldiv@quotient+1,f
 41496  49C4  09AC               	comf	___aldiv@quotient+2,f
 41497  49C5  09AD               	comf	___aldiv@quotient+3,f
 41498  49C6  0AAA               	incf	___aldiv@quotient,f
 41499  49C7  1903               	skipnz
 41500  49C8  0AAB               	incf	___aldiv@quotient+1,f
 41501  49C9  1903               	skipnz
 41502  49CA  0AAC               	incf	___aldiv@quotient+2,f
 41503  49CB  1903               	skipnz
 41504  49CC  0AAD               	incf	___aldiv@quotient+3,f
 41505  49CD                     l9462:
 41506  49CD  082D               	movf	___aldiv@quotient+3,w
 41507  49CE  00A3               	movwf	?___aldiv+3
 41508  49CF  082C               	movf	___aldiv@quotient+2,w
 41509  49D0  00A2               	movwf	?___aldiv+2
 41510  49D1  082B               	movf	___aldiv@quotient+1,w
 41511  49D2  00A1               	movwf	?___aldiv+1
 41512  49D3  082A               	movf	___aldiv@quotient,w
 41513  49D4  00A0               	movwf	?___aldiv
 41514  49D5  0008               	return
 41515  49D6                     __end_of___aldiv:
 41516                           
 41517                           	psect	text71
 41518  51F7                     __ptext71:	
 41519 ;; *************** function _SYSTEM_Initialize *****************
 41520 ;; Defined at:
 41521 ;;		line 50 in file "mcc_generated_files/mcc.c"
 41522 ;; Parameters:    Size  Location     Type
 41523 ;;		None
 41524 ;; Auto vars:     Size  Location     Type
 41525 ;;		None
 41526 ;; Return value:  Size  Location     Type
 41527 ;;                  1    wreg      void 
 41528 ;; Registers used:
 41529 ;;		wreg, status,2, status,0, pclath, cstack
 41530 ;; Tracked objects:
 41531 ;;		On entry : B3F/0
 41532 ;;		On exit  : 3F/11
 41533 ;;		Unchanged: 0/0
 41534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41539 ;;Total ram usage:        0 bytes
 41540 ;; Hardware stack levels used: 1
 41541 ;; Hardware stack levels required when called: unknown (due to recursion)
 41542 ;; This function calls:
 41543 ;;		_ADCC_Initialize
 41544 ;;		_CLC1_Initialize
 41545 ;;		_CLC2_Initialize
 41546 ;;		_CLKREF_Initialize
 41547 ;;		_EUSART_Initialize
 41548 ;;		_FVR_Initialize
 41549 ;;		_NCO1_Initialize
 41550 ;;		_OSCILLATOR_Initialize
 41551 ;;		_PIN_MANAGER_Initialize
 41552 ;;		_PMD_Initialize
 41553 ;;		_SPI2_Initialize
 41554 ;;		_TMR1_Initialize
 41555 ;;		_TMR2_Initialize
 41556 ;;		_TMR4_Initialize
 41557 ;;		_TMR5_Initialize
 41558 ;; This function is called by:
 41559 ;;		_main
 41560 ;; This function uses a non-reentrant model
 41561 ;;
 41562                           
 41563  51F7                     _SYSTEM_Initialize:	
 41564                           ;psect for function _SYSTEM_Initialize
 41565                           
 41566                           
 41567                           ;mcc.c: 52: PMD_Initialize();
 41568                           
 41569                           ;incstack = 0
 41570                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 41571  51F7  31C8  2000  31D1   	fcall	_PMD_Initialize
 41572                           
 41573                           ;mcc.c: 53: SPI2_Initialize();
 41574  51FA  31D0  2056  31D1   	fcall	_SPI2_Initialize
 41575                           
 41576                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 41577  51FD  31D6  26B3  31D1   	fcall	_PIN_MANAGER_Initialize
 41578                           
 41579                           ;mcc.c: 55: OSCILLATOR_Initialize();
 41580  5200  31A0  2001  31D1   	fcall	_OSCILLATOR_Initialize
 41581                           
 41582                           ;mcc.c: 56: FVR_Initialize();
 41583  5203  31DE  2655  31D1   	fcall	_FVR_Initialize
 41584                           
 41585                           ;mcc.c: 57: ADCC_Initialize();
 41586  5206  31DF  27E7  31D1   	fcall	_ADCC_Initialize
 41587                           
 41588                           ;mcc.c: 58: NCO1_Initialize();
 41589  5209  31DE  26D3  31D1   	fcall	_NCO1_Initialize
 41590                           
 41591                           ;mcc.c: 59: CLC2_Initialize();
 41592  520C  31DF  2775  31D1   	fcall	_CLC2_Initialize
 41593                           
 41594                           ;mcc.c: 60: TMR4_Initialize();
 41595  520F  31DE  26FE  31D1   	fcall	_TMR4_Initialize
 41596                           
 41597                           ;mcc.c: 61: TMR2_Initialize();
 41598  5212  31B0  2000  31D1   	fcall	_TMR2_Initialize
 41599                           
 41600                           ;mcc.c: 62: CLC1_Initialize();
 41601  5215  31DF  2762  31D1   	fcall	_CLC1_Initialize
 41602                           
 41603                           ;mcc.c: 63: TMR5_Initialize();
 41604  5218  31DF  2788  31D1   	fcall	_TMR5_Initialize
 41605                           
 41606                           ;mcc.c: 64: TMR1_Initialize();
 41607  521B  31DF  272D  31D1   	fcall	_TMR1_Initialize
 41608                           
 41609                           ;mcc.c: 65: EUSART_Initialize();
 41610  521E  31D3  2394  31D1   	fcall	_EUSART_Initialize
 41611                           
 41612                           ;mcc.c: 66: CLKREF_Initialize();
 41613  5221  31DE  2675         	fcall	_CLKREF_Initialize
 41614  5223  0008               	return
 41615  5224                     __end_of_SYSTEM_Initialize:
 41616                           
 41617                           	psect	text72
 41618  5F88                     __ptext72:	
 41619 ;; *************** function _TMR5_Initialize *****************
 41620 ;; Defined at:
 41621 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 41622 ;; Parameters:    Size  Location     Type
 41623 ;;		None
 41624 ;; Auto vars:     Size  Location     Type
 41625 ;;		None
 41626 ;; Return value:  Size  Location     Type
 41627 ;;                  1    wreg      void 
 41628 ;; Registers used:
 41629 ;;		wreg, status,2
 41630 ;; Tracked objects:
 41631 ;;		On entry : 3F/3C
 41632 ;;		On exit  : 3F/4
 41633 ;;		Unchanged: 0/0
 41634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41639 ;;Total ram usage:        0 bytes
 41640 ;; Hardware stack levels used: 1
 41641 ;; Hardware stack levels required when called: unknown (due to recursion)
 41642 ;; This function calls:
 41643 ;;		Nothing
 41644 ;; This function is called by:
 41645 ;;		_SYSTEM_Initialize
 41646 ;; This function uses a non-reentrant model
 41647 ;;
 41648                           
 41649  5F88                     _TMR5_Initialize:	
 41650                           ;psect for function _TMR5_Initialize
 41651                           
 41652                           
 41653                           ;tmr5.c: 68: T5GCON = 0x00;
 41654                           
 41655                           ;incstack = 0
 41656                           ; Regs used in _TMR5_Initialize: [wreg+status,2]
 41657  5F88  0144               	movlb	4	; select bank4
 41658  5F89  019B               	clrf	27	;volatile
 41659                           
 41660                           ;tmr5.c: 71: T5GATE = 0x00;
 41661  5F8A  019C               	clrf	28	;volatile
 41662                           
 41663                           ;tmr5.c: 74: T5CLK = 0x07;
 41664  5F8B  3007               	movlw	7
 41665  5F8C  009D               	movwf	29	;volatile
 41666                           
 41667                           ;tmr5.c: 77: TMR5H = 0xFA;
 41668  5F8D  30FA               	movlw	250
 41669  5F8E  0099               	movwf	25	;volatile
 41670                           
 41671                           ;tmr5.c: 80: TMR5L = 0x24;
 41672  5F8F  3024               	movlw	36
 41673  5F90  0098               	movwf	24	;volatile
 41674                           
 41675                           ;tmr5.c: 83: PIR4bits.TMR5IF = 0;
 41676  5F91  014E               	movlb	14	; select bank14
 41677  5F92  1210               	bcf	16,4	;volatile
 41678                           
 41679                           ;tmr5.c: 86: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 41680  5F93  0144               	movlb	4	; select bank4
 41681  5F94  0819               	movf	25,w	;volatile
 41682  5F95  0143               	movlb	3	; select bank3
 41683  5F96  00E5               	movwf	(_timer5ReloadVal+1)^(0+384)	;volatile
 41684  5F97  0144               	movlb	4	; select bank4
 41685  5F98  0818               	movf	24,w	;volatile
 41686  5F99  0143               	movlb	3	; select bank3
 41687  5F9A  00E4               	movwf	_timer5ReloadVal^(0+384)	;volatile
 41688                           
 41689                           ;tmr5.c: 89: T5CON = 0x03;
 41690  5F9B  3003               	movlw	3
 41691  5F9C  0144               	movlb	4	; select bank4
 41692  5F9D  009A               	movwf	26	;volatile
 41693  5F9E  0008               	return
 41694  5F9F                     __end_of_TMR5_Initialize:
 41695                           
 41696                           	psect	text73
 41697  5EFE                     __ptext73:	
 41698 ;; *************** function _TMR4_Initialize *****************
 41699 ;; Defined at:
 41700 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 41701 ;; Parameters:    Size  Location     Type
 41702 ;;		None
 41703 ;; Auto vars:     Size  Location     Type
 41704 ;;		None
 41705 ;; Return value:  Size  Location     Type
 41706 ;;                  1    wreg      void 
 41707 ;; Registers used:
 41708 ;;		wreg, status,2
 41709 ;; Tracked objects:
 41710 ;;		On entry : 3F/3C
 41711 ;;		On exit  : 3F/5
 41712 ;;		Unchanged: 0/0
 41713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41718 ;;Total ram usage:        0 bytes
 41719 ;; Hardware stack levels used: 1
 41720 ;; Hardware stack levels required when called: unknown (due to recursion)
 41721 ;; This function calls:
 41722 ;;		Nothing
 41723 ;; This function is called by:
 41724 ;;		_SYSTEM_Initialize
 41725 ;; This function uses a non-reentrant model
 41726 ;;
 41727                           
 41728  5EFE                     _TMR4_Initialize:	
 41729                           ;psect for function _TMR4_Initialize
 41730                           
 41731                           
 41732                           ;tmr4.c: 67: T4CLKCON = 0x05;
 41733                           
 41734                           ;incstack = 0
 41735                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 41736  5EFE  3005               	movlw	5
 41737  5EFF  0145               	movlb	5	; select bank5
 41738  5F00  0096               	movwf	22	;volatile
 41739                           
 41740                           ;tmr4.c: 70: T4HLT = 0x20;
 41741  5F01  3020               	movlw	32
 41742  5F02  0095               	movwf	21	;volatile
 41743                           
 41744                           ;tmr4.c: 73: T4RST = 0x00;
 41745  5F03  0197               	clrf	23	;volatile
 41746                           
 41747                           ;tmr4.c: 76: T4PR = 0x8D;
 41748  5F04  308D               	movlw	141
 41749  5F05  0093               	movwf	19	;volatile
 41750                           
 41751                           ;tmr4.c: 79: T4TMR = 0x00;
 41752  5F06  0192               	clrf	18	;volatile
 41753                           
 41754                           ;tmr4.c: 82: PIR4bits.TMR4IF = 0;
 41755  5F07  014E               	movlb	14	; select bank14
 41756  5F08  1190               	bcf	16,3	;volatile
 41757                           
 41758                           ;tmr4.c: 85: T4CON = 0x9A;
 41759  5F09  309A               	movlw	154
 41760  5F0A  0145               	movlb	5	; select bank5
 41761  5F0B  0094               	movwf	20	;volatile
 41762  5F0C  0008               	return
 41763  5F0D                     __end_of_TMR4_Initialize:
 41764                           
 41765                           	psect	text74
 41766  3000                     __ptext74:	
 41767 ;; *************** function _TMR2_Initialize *****************
 41768 ;; Defined at:
 41769 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 41770 ;; Parameters:    Size  Location     Type
 41771 ;;		None
 41772 ;; Auto vars:     Size  Location     Type
 41773 ;;		None
 41774 ;; Return value:  Size  Location     Type
 41775 ;;                  1    wreg      void 
 41776 ;; Registers used:
 41777 ;;		wreg, status,2, status,0, pclath, cstack
 41778 ;; Tracked objects:
 41779 ;;		On entry : 3F/5
 41780 ;;		On exit  : 3F/5
 41781 ;;		Unchanged: 0/0
 41782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41787 ;;Total ram usage:        0 bytes
 41788 ;; Hardware stack levels used: 1
 41789 ;; Hardware stack levels required when called: unknown (due to recursion)
 41790 ;; This function calls:
 41791 ;;		_TMR2_SetInterruptHandler
 41792 ;; This function is called by:
 41793 ;;		_SYSTEM_Initialize
 41794 ;; This function uses a non-reentrant model
 41795 ;;
 41796                           
 41797  3000                     _TMR2_Initialize:	
 41798                           ;psect for function _TMR2_Initialize
 41799                           
 41800                           
 41801                           ;tmr2.c: 69: T2CLKCON = 0x04;
 41802                           
 41803                           ;incstack = 0
 41804                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 41805  3000  3004               	movlw	4
 41806  3001  0090               	movwf	16	;volatile
 41807                           
 41808                           ;tmr2.c: 72: T2HLT = 0x20;
 41809  3002  3020               	movlw	32
 41810  3003  008F               	movwf	15	;volatile
 41811                           
 41812                           ;tmr2.c: 75: T2RST = 0x00;
 41813  3004  0191               	clrf	17	;volatile
 41814                           
 41815                           ;tmr2.c: 78: T2PR = 0x9A;
 41816  3005  309A               	movlw	154
 41817  3006  008D               	movwf	13	;volatile
 41818                           
 41819                           ;tmr2.c: 81: T2TMR = 0x00;
 41820  3007  018C               	clrf	12	;volatile
 41821                           
 41822                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 41823  3008  014E               	movlb	14	; select bank14
 41824  3009  1090               	bcf	16,1	;volatile
 41825                           
 41826                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 41827  300A  149A               	bsf	26,1	;volatile
 41828                           
 41829                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 41830  300B  3087               	movlw	low _TMR2_DefaultInterruptHandler
 41831  300C  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 41832  300D  301C               	movlw	high _TMR2_DefaultInterruptHandler
 41833  300E  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 41834  300F  31D0  2001         	fcall	_TMR2_SetInterruptHandler
 41835                           
 41836                           ;tmr2.c: 93: T2CON = 0x90;
 41837  3011  3090               	movlw	144
 41838  3012  0145               	movlb	5	; select bank5
 41839  3013  008E               	movwf	14	;volatile
 41840  3014  0008               	return
 41841  3015                     __end_of_TMR2_Initialize:
 41842                           
 41843                           	psect	text75
 41844  5001                     __ptext75:	
 41845 ;; *************** function _TMR2_SetInterruptHandler *****************
 41846 ;; Defined at:
 41847 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 41848 ;; Parameters:    Size  Location     Type
 41849 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 41850 ;;		 -> task10ms(1), TMR2_DefaultInterruptHandler(1), 
 41851 ;; Auto vars:     Size  Location     Type
 41852 ;;		None
 41853 ;; Return value:  Size  Location     Type
 41854 ;;                  1    wreg      void 
 41855 ;; Registers used:
 41856 ;;		wreg
 41857 ;; Tracked objects:
 41858 ;;		On entry : 0/11
 41859 ;;		On exit  : 3F/2
 41860 ;;		Unchanged: 0/0
 41861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41866 ;;Total ram usage:        2 bytes
 41867 ;; Hardware stack levels used: 1
 41868 ;; Hardware stack levels required when called: unknown (due to recursion)
 41869 ;; This function calls:
 41870 ;;		Nothing
 41871 ;; This function is called by:
 41872 ;;		_TMR2_Initialize
 41873 ;;		_main
 41874 ;; This function uses a non-reentrant model
 41875 ;;
 41876                           
 41877  5001                     _TMR2_SetInterruptHandler:	
 41878                           ;psect for function _TMR2_SetInterruptHandler
 41879                           
 41880                           
 41881                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 41882                           
 41883                           ;incstack = 0
 41884                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 41885  5001  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 41886  5002  0142               	movlb	2	; select bank2
 41887  5003  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
 41888  5004  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 41889  5005  00E1               	movwf	_TMR2_InterruptHandler^(0+256)
 41890  5006  0008               	return
 41891  5007                     __end_of_TMR2_SetInterruptHandler:
 41892                           
 41893                           	psect	text76
 41894  5F2D                     __ptext76:	
 41895 ;; *************** function _TMR1_Initialize *****************
 41896 ;; Defined at:
 41897 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 41898 ;; Parameters:    Size  Location     Type
 41899 ;;		None
 41900 ;; Auto vars:     Size  Location     Type
 41901 ;;		None
 41902 ;; Return value:  Size  Location     Type
 41903 ;;                  1    wreg      void 
 41904 ;; Registers used:
 41905 ;;		wreg, status,2
 41906 ;; Tracked objects:
 41907 ;;		On entry : 3F/4
 41908 ;;		On exit  : 3F/4
 41909 ;;		Unchanged: 0/0
 41910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41915 ;;Total ram usage:        0 bytes
 41916 ;; Hardware stack levels used: 1
 41917 ;; Hardware stack levels required when called: unknown (due to recursion)
 41918 ;; This function calls:
 41919 ;;		Nothing
 41920 ;; This function is called by:
 41921 ;;		_SYSTEM_Initialize
 41922 ;; This function uses a non-reentrant model
 41923 ;;
 41924                           
 41925  5F2D                     _TMR1_Initialize:	
 41926                           ;psect for function _TMR1_Initialize
 41927                           
 41928                           
 41929                           ;tmr1.c: 68: T1GCON = 0x00;
 41930                           
 41931                           ;incstack = 0
 41932                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
 41933  5F2D  018F               	clrf	15	;volatile
 41934                           
 41935                           ;tmr1.c: 71: T1GATE = 0x00;
 41936  5F2E  0190               	clrf	16	;volatile
 41937                           
 41938                           ;tmr1.c: 74: T1CLK = 0x0C;
 41939  5F2F  300C               	movlw	12
 41940  5F30  0091               	movwf	17	;volatile
 41941                           
 41942                           ;tmr1.c: 77: TMR1H = 0x00;
 41943  5F31  018D               	clrf	13	;volatile
 41944                           
 41945                           ;tmr1.c: 80: TMR1L = 0x00;
 41946  5F32  018C               	clrf	12	;volatile
 41947                           
 41948                           ;tmr1.c: 83: PIR4bits.TMR1IF = 0;
 41949  5F33  014E               	movlb	14	; select bank14
 41950  5F34  1010               	bcf	16,0	;volatile
 41951                           
 41952                           ;tmr1.c: 86: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 41953  5F35  0144               	movlb	4	; select bank4
 41954  5F36  080D               	movf	13,w	;volatile
 41955  5F37  00E9               	movwf	(_timer1ReloadVal+1)^(0+512)	;volatile
 41956  5F38  080C               	movf	12,w	;volatile
 41957  5F39  00E8               	movwf	_timer1ReloadVal^(0+512)	;volatile
 41958                           
 41959                           ;tmr1.c: 89: T1CON = 0x03;
 41960  5F3A  3003               	movlw	3
 41961  5F3B  008E               	movwf	14	;volatile
 41962  5F3C  0008               	return
 41963  5F3D                     __end_of_TMR1_Initialize:
 41964                           
 41965                           	psect	text77
 41966  5056                     __ptext77:	
 41967 ;; *************** function _SPI2_Initialize *****************
 41968 ;; Defined at:
 41969 ;;		line 62 in file "mcc_generated_files/spi2.c"
 41970 ;; Parameters:    Size  Location     Type
 41971 ;;		None
 41972 ;; Auto vars:     Size  Location     Type
 41973 ;;		None
 41974 ;; Return value:  Size  Location     Type
 41975 ;;                  1    wreg      void 
 41976 ;; Registers used:
 41977 ;;		wreg, status,2, status,0, pclath, cstack
 41978 ;; Tracked objects:
 41979 ;;		On entry : B3F/F
 41980 ;;		On exit  : B3F/3
 41981 ;;		Unchanged: B00/0
 41982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41987 ;;Total ram usage:        0 bytes
 41988 ;; Hardware stack levels used: 1
 41989 ;; Hardware stack levels required when called: unknown (due to recursion)
 41990 ;; This function calls:
 41991 ;;		_SPI2_SetInterruptHandler
 41992 ;; This function is called by:
 41993 ;;		_SYSTEM_Initialize
 41994 ;; This function uses a non-reentrant model
 41995 ;;
 41996                           
 41997  5056                     _SPI2_Initialize:	
 41998                           ;psect for function _SPI2_Initialize
 41999                           
 42000                           
 42001                           ;spi2.c: 65: SSP2CLKPPS = 29;
 42002                           
 42003                           ;incstack = 0
 42004                           ; Regs used in _SPI2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 42005  5056  301D               	movlw	29
 42006  5057  017D               	movlb	61	; select bank61
 42007  5058  00C8               	movwf	72	;volatile
 42008                           
 42009                           ;spi2.c: 66: SSP2DATPPS = 31;
 42010  5059  301F               	movlw	31
 42011  505A  00C9               	movwf	73	;volatile
 42012                           
 42013                           ;spi2.c: 67: RD5PPS = 22;
 42014  505B  3016               	movlw	22
 42015  505C  017E               	movlb	62	; select bank62
 42016  505D  00AD               	movwf	45	;volatile
 42017                           
 42018                           ;spi2.c: 68: RD6PPS = 23;
 42019  505E  3017               	movlw	23
 42020  505F  00AE               	movwf	46	;volatile
 42021                           
 42022                           ;spi2.c: 70: SSP2STAT = 0x40;
 42023  5060  3040               	movlw	64
 42024  5061  0143               	movlb	3	; select bank3
 42025  5062  0099               	movwf	25	;volatile
 42026                           
 42027                           ;spi2.c: 71: SSP2CON1 = 0x0A;
 42028  5063  300A               	movlw	10
 42029  5064  009A               	movwf	26	;volatile
 42030                           
 42031                           ;spi2.c: 72: SSP2ADD = 0x31;
 42032  5065  3031               	movlw	49
 42033  5066  0097               	movwf	23	;volatile
 42034                           
 42035                           ;spi2.c: 73: PIE3bits.SSP2IE = 1;
 42036  5067  014E               	movlb	14	; select bank14
 42037  5068  1519               	bsf	25,2	;volatile
 42038                           
 42039                           ;spi2.c: 74: SPI2_SetInterruptHandler(SPI2_Isr);
 42040  5069  300D               	movlw	low _SPI2_Isr
 42041  506A  00F1               	movwf	SPI2_SetInterruptHandler@handler
 42042  506B  305F               	movlw	high _SPI2_Isr
 42043  506C  00F2               	movwf	SPI2_SetInterruptHandler@handler+1
 42044  506D  31DE  2693         	fcall	_SPI2_SetInterruptHandler
 42045                           
 42046                           ;spi2.c: 75: TRISDbits.TRISD5 = 0;
 42047  506F  0140               	movlb	0	; select bank0
 42048  5070  1294               	bcf	20,5	;volatile
 42049                           
 42050                           ;spi2.c: 76: SSP2CON1bits.SSPEN = 0;
 42051  5071  0143               	movlb	3	; select bank3
 42052  5072  129A               	bcf	26,5	;volatile
 42053  5073  0008               	return
 42054  5074                     __end_of_SPI2_Initialize:
 42055                           
 42056                           	psect	text78
 42057  5E93                     __ptext78:	
 42058 ;; *************** function _SPI2_SetInterruptHandler *****************
 42059 ;; Defined at:
 42060 ;;		line 158 in file "mcc_generated_files/spi2.c"
 42061 ;; Parameters:    Size  Location     Type
 42062 ;;  handler         2    1[COMMON] PTR FTN()void 
 42063 ;;		 -> SPI2_Isr(1), 
 42064 ;; Auto vars:     Size  Location     Type
 42065 ;;		None
 42066 ;; Return value:  Size  Location     Type
 42067 ;;                  1    wreg      void 
 42068 ;; Registers used:
 42069 ;;		wreg
 42070 ;; Tracked objects:
 42071 ;;		On entry : B3F/E
 42072 ;;		On exit  : B3F/2
 42073 ;;		Unchanged: B00/0
 42074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42079 ;;Total ram usage:        2 bytes
 42080 ;; Hardware stack levels used: 1
 42081 ;; Hardware stack levels required when called: unknown (due to recursion)
 42082 ;; This function calls:
 42083 ;;		Nothing
 42084 ;; This function is called by:
 42085 ;;		_SPI2_Initialize
 42086 ;; This function uses a non-reentrant model
 42087 ;;
 42088                           
 42089  5E93                     _SPI2_SetInterruptHandler:	
 42090                           ;psect for function _SPI2_SetInterruptHandler
 42091                           
 42092                           
 42093                           ;spi2.c: 160: MSSP2_InterruptHandler = handler;
 42094                           
 42095                           ;incstack = 0
 42096                           ; Regs used in _SPI2_SetInterruptHandler: [wreg]
 42097  5E93  0872               	movf	SPI2_SetInterruptHandler@handler+1,w
 42098  5E94  0142               	movlb	2	; select bank2
 42099  5E95  00EA               	movwf	(_MSSP2_InterruptHandler+1)^(0+256)
 42100  5E96  0871               	movf	SPI2_SetInterruptHandler@handler,w
 42101  5E97  00E9               	movwf	_MSSP2_InterruptHandler^(0+256)
 42102  5E98  0008               	return
 42103  5E99                     __end_of_SPI2_SetInterruptHandler:
 42104                           
 42105                           	psect	text79
 42106  4800                     __ptext79:	
 42107 ;; *************** function _PMD_Initialize *****************
 42108 ;; Defined at:
 42109 ;;		line 83 in file "mcc_generated_files/mcc.c"
 42110 ;; Parameters:    Size  Location     Type
 42111 ;;		None
 42112 ;; Auto vars:     Size  Location     Type
 42113 ;;		None
 42114 ;; Return value:  Size  Location     Type
 42115 ;;                  1    wreg      void 
 42116 ;; Registers used:
 42117 ;;		status,2
 42118 ;; Tracked objects:
 42119 ;;		On entry : B3F/0
 42120 ;;		On exit  : B3F/F
 42121 ;;		Unchanged: B00/0
 42122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42127 ;;Total ram usage:        0 bytes
 42128 ;; Hardware stack levels used: 1
 42129 ;; Hardware stack levels required when called: unknown (due to recursion)
 42130 ;; This function calls:
 42131 ;;		Nothing
 42132 ;; This function is called by:
 42133 ;;		_SYSTEM_Initialize
 42134 ;; This function uses a non-reentrant model
 42135 ;;
 42136                           
 42137  4800                     _PMD_Initialize:	
 42138                           ;psect for function _PMD_Initialize
 42139                           
 42140                           
 42141                           ;mcc.c: 86: PMD0 = 0x00;
 42142                           
 42143                           ;incstack = 0
 42144                           ; Regs used in _PMD_Initialize: [status,2]
 42145  4800  014F               	movlb	15	; select bank15
 42146  4801  0196               	clrf	22	;volatile
 42147                           
 42148                           ;mcc.c: 88: PMD1 = 0x00;
 42149  4802  0197               	clrf	23	;volatile
 42150                           
 42151                           ;mcc.c: 90: PMD2 = 0x00;
 42152  4803  0198               	clrf	24	;volatile
 42153                           
 42154                           ;mcc.c: 92: PMD3 = 0x00;
 42155  4804  0199               	clrf	25	;volatile
 42156                           
 42157                           ;mcc.c: 94: PMD4 = 0x00;
 42158  4805  019A               	clrf	26	;volatile
 42159                           
 42160                           ;mcc.c: 96: PMD5 = 0x00;
 42161  4806  019B               	clrf	27	;volatile
 42162  4807  0008               	return
 42163  4808                     __end_of_PMD_Initialize:
 42164                           
 42165                           	psect	text80
 42166  56B3                     __ptext80:	
 42167 ;; *************** function _PIN_MANAGER_Initialize *****************
 42168 ;; Defined at:
 42169 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
 42170 ;; Parameters:    Size  Location     Type
 42171 ;;		None
 42172 ;; Auto vars:     Size  Location     Type
 42173 ;;		None
 42174 ;; Return value:  Size  Location     Type
 42175 ;;                  1    wreg      void 
 42176 ;; Registers used:
 42177 ;;		wreg, status,2, status,0, pclath, cstack
 42178 ;; Tracked objects:
 42179 ;;		On entry : B3F/3
 42180 ;;		On exit  : 3F/3E
 42181 ;;		Unchanged: 0/0
 42182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42187 ;;Total ram usage:        0 bytes
 42188 ;; Hardware stack levels used: 1
 42189 ;; Hardware stack levels required when called: unknown (due to recursion)
 42190 ;; This function calls:
 42191 ;;		_IOCBF3_SetInterruptHandler
 42192 ;;		_IOCBF4_SetInterruptHandler
 42193 ;;		_IOCBF5_SetInterruptHandler
 42194 ;; This function is called by:
 42195 ;;		_SYSTEM_Initialize
 42196 ;; This function uses a non-reentrant model
 42197 ;;
 42198                           
 42199  56B3                     _PIN_MANAGER_Initialize:	
 42200                           ;psect for function _PIN_MANAGER_Initialize
 42201                           
 42202                           
 42203                           ;pin_manager.c: 64: LATE = 0x07;
 42204                           
 42205                           ;incstack = 0
 42206                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 42207  56B3  3007               	movlw	7
 42208  56B4  0140               	movlb	0	; select bank0
 42209  56B5  009A               	movwf	26	;volatile
 42210                           
 42211                           ;pin_manager.c: 65: LATD = 0x00;
 42212  56B6  0199               	clrf	25	;volatile
 42213                           
 42214                           ;pin_manager.c: 66: LATA = 0x20;
 42215  56B7  3020               	movlw	32
 42216  56B8  0096               	movwf	22	;volatile
 42217                           
 42218                           ;pin_manager.c: 67: LATB = 0x00;
 42219  56B9  0197               	clrf	23	;volatile
 42220                           
 42221                           ;pin_manager.c: 68: LATC = 0x00;
 42222  56BA  0198               	clrf	24	;volatile
 42223                           
 42224                           ;pin_manager.c: 73: TRISE = 0x00;
 42225  56BB  0195               	clrf	21	;volatile
 42226                           
 42227                           ;pin_manager.c: 74: TRISA = 0xDE;
 42228  56BC  30DE               	movlw	222
 42229  56BD  0091               	movwf	17	;volatile
 42230                           
 42231                           ;pin_manager.c: 75: TRISB = 0xF8;
 42232  56BE  30F8               	movlw	248
 42233  56BF  0092               	movwf	18	;volatile
 42234                           
 42235                           ;pin_manager.c: 76: TRISC = 0x80;
 42236  56C0  3080               	movlw	128
 42237  56C1  0093               	movwf	19	;volatile
 42238                           
 42239                           ;pin_manager.c: 77: TRISD = 0x18;
 42240  56C2  3018               	movlw	24
 42241  56C3  0094               	movwf	20	;volatile
 42242                           
 42243                           ;pin_manager.c: 82: ANSELD = 0x00;
 42244  56C4  017E               	movlb	62	; select bank62
 42245  56C5  01D9               	clrf	89	;volatile
 42246                           
 42247                           ;pin_manager.c: 83: ANSELC = 0x80;
 42248  56C6  3080               	movlw	128
 42249  56C7  00CE               	movwf	78	;volatile
 42250                           
 42251                           ;pin_manager.c: 84: ANSELB = 0xC0;
 42252  56C8  30C0               	movlw	192
 42253  56C9  00C3               	movwf	67	;volatile
 42254                           
 42255                           ;pin_manager.c: 85: ANSELE = 0x00;
 42256  56CA  01E4               	clrf	100	;volatile
 42257                           
 42258                           ;pin_manager.c: 86: ANSELA = 0xC0;
 42259  56CB  30C0               	movlw	192
 42260  56CC  00B8               	movwf	56	;volatile
 42261                           
 42262                           ;pin_manager.c: 91: WPUD = 0x00;
 42263  56CD  01DA               	clrf	90	;volatile
 42264                           
 42265                           ;pin_manager.c: 92: WPUE = 0x00;
 42266  56CE  01E5               	clrf	101	;volatile
 42267                           
 42268                           ;pin_manager.c: 93: WPUB = 0x00;
 42269  56CF  01C4               	clrf	68	;volatile
 42270                           
 42271                           ;pin_manager.c: 94: WPUA = 0x00;
 42272  56D0  01B9               	clrf	57	;volatile
 42273                           
 42274                           ;pin_manager.c: 95: WPUC = 0x00;
 42275  56D1  01CF               	clrf	79	;volatile
 42276                           
 42277                           ;pin_manager.c: 100: ODCONE = 0x00;
 42278  56D2  01E6               	clrf	102	;volatile
 42279                           
 42280                           ;pin_manager.c: 101: ODCONA = 0x00;
 42281  56D3  01BA               	clrf	58	;volatile
 42282                           
 42283                           ;pin_manager.c: 102: ODCONB = 0x00;
 42284  56D4  01C5               	clrf	69	;volatile
 42285                           
 42286                           ;pin_manager.c: 103: ODCONC = 0x00;
 42287  56D5  01D0               	clrf	80	;volatile
 42288                           
 42289                           ;pin_manager.c: 104: ODCOND = 0x00;
 42290  56D6  01DB               	clrf	91	;volatile
 42291                           
 42292                           ;pin_manager.c: 109: SLRCONA = 0xFF;
 42293  56D7  30FF               	movlw	255
 42294  56D8  00BB               	movwf	59	;volatile
 42295                           
 42296                           ;pin_manager.c: 110: SLRCONB = 0xFF;
 42297  56D9  30FF               	movlw	255
 42298  56DA  00C6               	movwf	70	;volatile
 42299                           
 42300                           ;pin_manager.c: 111: SLRCONC = 0xFF;
 42301  56DB  30FF               	movlw	255
 42302  56DC  00D1               	movwf	81	;volatile
 42303                           
 42304                           ;pin_manager.c: 112: SLRCOND = 0xFF;
 42305  56DD  30FF               	movlw	255
 42306  56DE  00DC               	movwf	92	;volatile
 42307                           
 42308                           ;pin_manager.c: 113: SLRCONE = 0x07;
 42309  56DF  3007               	movlw	7
 42310  56E0  00E7               	movwf	103	;volatile
 42311                           
 42312                           ;pin_manager.c: 118: INLVLA = 0xFF;
 42313  56E1  30FF               	movlw	255
 42314  56E2  00BC               	movwf	60	;volatile
 42315                           
 42316                           ;pin_manager.c: 119: INLVLB = 0xFF;
 42317  56E3  30FF               	movlw	255
 42318  56E4  00C7               	movwf	71	;volatile
 42319                           
 42320                           ;pin_manager.c: 120: INLVLC = 0xFF;
 42321  56E5  30FF               	movlw	255
 42322  56E6  00D2               	movwf	82	;volatile
 42323                           
 42324                           ;pin_manager.c: 121: INLVLD = 0xFF;
 42325  56E7  30FF               	movlw	255
 42326  56E8  00DD               	movwf	93	;volatile
 42327                           
 42328                           ;pin_manager.c: 122: INLVLE = 0x0F;
 42329  56E9  300F               	movlw	15
 42330  56EA  00E8               	movwf	104	;volatile
 42331                           
 42332                           ;pin_manager.c: 129: IOCBFbits.IOCBF3 = 0;
 42333  56EB  11CA               	bcf	74,3	;volatile
 42334                           
 42335                           ;pin_manager.c: 131: IOCBFbits.IOCBF4 = 0;
 42336  56EC  124A               	bcf	74,4	;volatile
 42337                           
 42338                           ;pin_manager.c: 133: IOCBFbits.IOCBF5 = 0;
 42339  56ED  12CA               	bcf	74,5	;volatile
 42340                           
 42341                           ;pin_manager.c: 135: IOCBNbits.IOCBN3 = 1;
 42342  56EE  15C9               	bsf	73,3	;volatile
 42343                           
 42344                           ;pin_manager.c: 137: IOCBNbits.IOCBN4 = 1;
 42345  56EF  1649               	bsf	73,4	;volatile
 42346                           
 42347                           ;pin_manager.c: 139: IOCBNbits.IOCBN5 = 1;
 42348  56F0  16C9               	bsf	73,5	;volatile
 42349                           
 42350                           ;pin_manager.c: 141: IOCBPbits.IOCBP3 = 1;
 42351  56F1  15C8               	bsf	72,3	;volatile
 42352                           
 42353                           ;pin_manager.c: 143: IOCBPbits.IOCBP4 = 1;
 42354  56F2  1648               	bsf	72,4	;volatile
 42355                           
 42356                           ;pin_manager.c: 145: IOCBPbits.IOCBP5 = 1;
 42357  56F3  16C8               	bsf	72,5	;volatile
 42358                           
 42359                           ;pin_manager.c: 150: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 42360  56F4  3086               	movlw	low _IOCBF3_DefaultInterruptHandler
 42361  56F5  00F1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
 42362  56F6  301C               	movlw	high _IOCBF3_DefaultInterruptHandler
 42363  56F7  00F2               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
 42364  56F8  31DE  268D  31D6   	fcall	_IOCBF3_SetInterruptHandler
 42365                           
 42366                           ;pin_manager.c: 151: IOCBF4_SetInterruptHandler(IOCBF4_DefaultInterruptHandler);
 42367  56FB  3000               	movlw	low _IOCBF4_DefaultInterruptHandler
 42368  56FC  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
 42369  56FD  3020               	movlw	high _IOCBF4_DefaultInterruptHandler
 42370  56FE  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
 42371  56FF  31DE  266B  31D6   	fcall	_IOCBF4_SetInterruptHandler
 42372                           
 42373                           ;pin_manager.c: 152: IOCBF5_SetInterruptHandler(IOCBF5_DefaultInterruptHandler);
 42374  5702  3001               	movlw	low _IOCBF5_DefaultInterruptHandler
 42375  5703  00F1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
 42376  5704  3038               	movlw	high _IOCBF5_DefaultInterruptHandler
 42377  5705  00F2               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
 42378  5706  31DE  2670         	fcall	_IOCBF5_SetInterruptHandler
 42379                           
 42380                           ;pin_manager.c: 155: PIE0bits.IOCIE = 1;
 42381  5708  014E               	movlb	14	; select bank14
 42382  5709  1616               	bsf	22,4	;volatile
 42383                           
 42384                           ;pin_manager.c: 157: RC5PPS = 0x10;
 42385  570A  3010               	movlw	16
 42386  570B  017E               	movlb	62	; select bank62
 42387  570C  00A5               	movwf	37	;volatile
 42388                           
 42389                           ;pin_manager.c: 158: RXPPS = 0x14;
 42390  570D  3014               	movlw	20
 42391  570E  017D               	movlb	61	; select bank61
 42392  570F  00CB               	movwf	75	;volatile
 42393                           
 42394                           ;pin_manager.c: 159: RC4PPS = 0x02;
 42395  5710  3002               	movlw	2
 42396  5711  017E               	movlb	62	; select bank62
 42397  5712  00A4               	movwf	36	;volatile
 42398                           
 42399                           ;pin_manager.c: 160: CLCIN2PPS = 0x1C;
 42400  5713  301C               	movlw	28
 42401  5714  017D               	movlb	61	; select bank61
 42402  5715  00BD               	movwf	61	;volatile
 42403                           
 42404                           ;pin_manager.c: 162: SSP2CLKPPS = 0x1D;
 42405  5716  301D               	movlw	29
 42406  5717  00C8               	movwf	72	;volatile
 42407                           
 42408                           ;pin_manager.c: 163: SSP2DATPPS = 0x1F;
 42409  5718  301F               	movlw	31
 42410  5719  00C9               	movwf	73	;volatile
 42411                           
 42412                           ;pin_manager.c: 164: RD5PPS = 0x16;
 42413  571A  3016               	movlw	22
 42414  571B  017E               	movlb	62	; select bank62
 42415  571C  00AD               	movwf	45	;volatile
 42416                           
 42417                           ;pin_manager.c: 165: RD6PPS = 0x17;
 42418  571D  3017               	movlw	23
 42419  571E  00AE               	movwf	46	;volatile
 42420  571F  0008               	return
 42421  5720                     __end_of_PIN_MANAGER_Initialize:
 42422                           
 42423                           	psect	text81
 42424  5E70                     __ptext81:	
 42425 ;; *************** function _IOCBF5_SetInterruptHandler *****************
 42426 ;; Defined at:
 42427 ;;		line 265 in file "mcc_generated_files/pin_manager.c"
 42428 ;; Parameters:    Size  Location     Type
 42429 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 42430 ;;		 -> btFunc(1), IOCBF5_DefaultInterruptHandler(1), 
 42431 ;; Auto vars:     Size  Location     Type
 42432 ;;		None
 42433 ;; Return value:  Size  Location     Type
 42434 ;;                  1    wreg      void 
 42435 ;; Registers used:
 42436 ;;		wreg
 42437 ;; Tracked objects:
 42438 ;;		On entry : 3F/2
 42439 ;;		On exit  : 3F/2
 42440 ;;		Unchanged: 0/0
 42441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42446 ;;Total ram usage:        2 bytes
 42447 ;; Hardware stack levels used: 1
 42448 ;; Hardware stack levels required when called: unknown (due to recursion)
 42449 ;; This function calls:
 42450 ;;		Nothing
 42451 ;; This function is called by:
 42452 ;;		_PIN_MANAGER_Initialize
 42453 ;;		_main
 42454 ;; This function uses a non-reentrant model
 42455 ;;
 42456                           
 42457  5E70                     _IOCBF5_SetInterruptHandler:	
 42458                           ;psect for function _IOCBF5_SetInterruptHandler
 42459                           
 42460                           
 42461                           ;pin_manager.c: 266: IOCBF5_InterruptHandler = InterruptHandler;
 42462                           
 42463                           ;incstack = 0
 42464                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
 42465  5E70  0872               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
 42466  5E71  00E4               	movwf	(_IOCBF5_InterruptHandler+1)^(0+256)
 42467  5E72  0871               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
 42468  5E73  00E3               	movwf	_IOCBF5_InterruptHandler^(0+256)
 42469  5E74  0008               	return
 42470  5E75                     __end_of_IOCBF5_SetInterruptHandler:
 42471                           
 42472                           	psect	text82
 42473  5E6B                     __ptext82:	
 42474 ;; *************** function _IOCBF4_SetInterruptHandler *****************
 42475 ;; Defined at:
 42476 ;;		line 235 in file "mcc_generated_files/pin_manager.c"
 42477 ;; Parameters:    Size  Location     Type
 42478 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 42479 ;;		 -> btFunc(1), IOCBF4_DefaultInterruptHandler(1), 
 42480 ;; Auto vars:     Size  Location     Type
 42481 ;;		None
 42482 ;; Return value:  Size  Location     Type
 42483 ;;                  1    wreg      void 
 42484 ;; Registers used:
 42485 ;;		wreg
 42486 ;; Tracked objects:
 42487 ;;		On entry : 3F/2
 42488 ;;		On exit  : 3F/2
 42489 ;;		Unchanged: 0/0
 42490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42495 ;;Total ram usage:        2 bytes
 42496 ;; Hardware stack levels used: 1
 42497 ;; Hardware stack levels required when called: unknown (due to recursion)
 42498 ;; This function calls:
 42499 ;;		Nothing
 42500 ;; This function is called by:
 42501 ;;		_PIN_MANAGER_Initialize
 42502 ;;		_main
 42503 ;; This function uses a non-reentrant model
 42504 ;;
 42505                           
 42506  5E6B                     _IOCBF4_SetInterruptHandler:	
 42507                           ;psect for function _IOCBF4_SetInterruptHandler
 42508                           
 42509                           
 42510                           ;pin_manager.c: 236: IOCBF4_InterruptHandler = InterruptHandler;
 42511                           
 42512                           ;incstack = 0
 42513                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
 42514  5E6B  0872               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
 42515  5E6C  00E6               	movwf	(_IOCBF4_InterruptHandler+1)^(0+256)
 42516  5E6D  0871               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
 42517  5E6E  00E5               	movwf	_IOCBF4_InterruptHandler^(0+256)
 42518  5E6F  0008               	return
 42519  5E70                     __end_of_IOCBF4_SetInterruptHandler:
 42520                           
 42521                           	psect	text83
 42522  5E8D                     __ptext83:	
 42523 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 42524 ;; Defined at:
 42525 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 42526 ;; Parameters:    Size  Location     Type
 42527 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 42528 ;;		 -> btFunc(1), IOCBF3_DefaultInterruptHandler(1), 
 42529 ;; Auto vars:     Size  Location     Type
 42530 ;;		None
 42531 ;; Return value:  Size  Location     Type
 42532 ;;                  1    wreg      void 
 42533 ;; Registers used:
 42534 ;;		wreg
 42535 ;; Tracked objects:
 42536 ;;		On entry : 3/2
 42537 ;;		On exit  : 3F/2
 42538 ;;		Unchanged: 0/0
 42539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42544 ;;Total ram usage:        2 bytes
 42545 ;; Hardware stack levels used: 1
 42546 ;; Hardware stack levels required when called: unknown (due to recursion)
 42547 ;; This function calls:
 42548 ;;		Nothing
 42549 ;; This function is called by:
 42550 ;;		_PIN_MANAGER_Initialize
 42551 ;;		_main
 42552 ;; This function uses a non-reentrant model
 42553 ;;
 42554                           
 42555  5E8D                     _IOCBF3_SetInterruptHandler:	
 42556                           ;psect for function _IOCBF3_SetInterruptHandler
 42557                           
 42558                           
 42559                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 42560                           
 42561                           ;incstack = 0
 42562                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
 42563  5E8D  0872               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
 42564  5E8E  0142               	movlb	2	; select bank2
 42565  5E8F  00E8               	movwf	(_IOCBF3_InterruptHandler+1)^(0+256)
 42566  5E90  0871               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
 42567  5E91  00E7               	movwf	_IOCBF3_InterruptHandler^(0+256)
 42568  5E92  0008               	return
 42569  5E93                     __end_of_IOCBF3_SetInterruptHandler:
 42570                           
 42571                           	psect	text84
 42572  2001                     __ptext84:	
 42573 ;; *************** function _OSCILLATOR_Initialize *****************
 42574 ;; Defined at:
 42575 ;;		line 69 in file "mcc_generated_files/mcc.c"
 42576 ;; Parameters:    Size  Location     Type
 42577 ;;		None
 42578 ;; Auto vars:     Size  Location     Type
 42579 ;;		None
 42580 ;; Return value:  Size  Location     Type
 42581 ;;                  1    wreg      void 
 42582 ;; Registers used:
 42583 ;;		wreg, status,2
 42584 ;; Tracked objects:
 42585 ;;		On entry : 3F/3E
 42586 ;;		On exit  : 3F/11
 42587 ;;		Unchanged: 0/0
 42588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42593 ;;Total ram usage:        0 bytes
 42594 ;; Hardware stack levels used: 1
 42595 ;; Hardware stack levels required when called: unknown (due to recursion)
 42596 ;; This function calls:
 42597 ;;		Nothing
 42598 ;; This function is called by:
 42599 ;;		_SYSTEM_Initialize
 42600 ;; This function uses a non-reentrant model
 42601 ;;
 42602                           
 42603  2001                     _OSCILLATOR_Initialize:	
 42604                           ;psect for function _OSCILLATOR_Initialize
 42605                           
 42606                           
 42607                           ;mcc.c: 72: OSCCON1 = 0x70;
 42608                           
 42609                           ;incstack = 0
 42610                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 42611  2001  3070               	movlw	112
 42612  2002  0151               	movlb	17	; select bank17
 42613  2003  008D               	movwf	13	;volatile
 42614                           
 42615                           ;mcc.c: 74: OSCCON3 = 0x00;
 42616  2004  018F               	clrf	15	;volatile
 42617                           
 42618                           ;mcc.c: 76: OSCEN = 0x00;
 42619  2005  0191               	clrf	17	;volatile
 42620                           
 42621                           ;mcc.c: 78: OSCFRQ = 0x02;
 42622  2006  3002               	movlw	2
 42623  2007  0093               	movwf	19	;volatile
 42624                           
 42625                           ;mcc.c: 80: OSCTUNE = 0x00;
 42626  2008  0192               	clrf	18	;volatile
 42627  2009  0008               	return
 42628  200A                     __end_of_OSCILLATOR_Initialize:
 42629                           
 42630                           	psect	text85
 42631  5ED3                     __ptext85:	
 42632 ;; *************** function _NCO1_Initialize *****************
 42633 ;; Defined at:
 42634 ;;		line 58 in file "mcc_generated_files/nco1.c"
 42635 ;; Parameters:    Size  Location     Type
 42636 ;;		None
 42637 ;; Auto vars:     Size  Location     Type
 42638 ;;		None
 42639 ;; Return value:  Size  Location     Type
 42640 ;;                  1    wreg      void 
 42641 ;; Registers used:
 42642 ;;		wreg, status,2
 42643 ;; Tracked objects:
 42644 ;;		On entry : 3F/1
 42645 ;;		On exit  : 3F/B
 42646 ;;		Unchanged: 0/0
 42647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42652 ;;Total ram usage:        0 bytes
 42653 ;; Hardware stack levels used: 1
 42654 ;; Hardware stack levels required when called: unknown (due to recursion)
 42655 ;; This function calls:
 42656 ;;		Nothing
 42657 ;; This function is called by:
 42658 ;;		_SYSTEM_Initialize
 42659 ;; This function uses a non-reentrant model
 42660 ;;
 42661                           
 42662  5ED3                     _NCO1_Initialize:	
 42663                           ;psect for function _NCO1_Initialize
 42664                           
 42665                           
 42666                           ;nco1.c: 62: NCO1CON = 0x00;
 42667                           
 42668                           ;incstack = 0
 42669                           ; Regs used in _NCO1_Initialize: [wreg+status,2]
 42670  5ED3  014B               	movlb	11	; select bank11
 42671  5ED4  0192               	clrf	18	;volatile
 42672                           
 42673                           ;nco1.c: 64: NCO1CLK = 0x00;
 42674  5ED5  0193               	clrf	19	;volatile
 42675                           
 42676                           ;nco1.c: 66: NCO1ACCU = 0x00;
 42677  5ED6  018E               	clrf	14	;volatile
 42678                           
 42679                           ;nco1.c: 68: NCO1ACCH = 0x00;
 42680  5ED7  018D               	clrf	13	;volatile
 42681                           
 42682                           ;nco1.c: 70: NCO1ACCL = 0x00;
 42683  5ED8  018C               	clrf	12	;volatile
 42684                           
 42685                           ;nco1.c: 72: NCO1INCU = 0x01;
 42686  5ED9  3001               	movlw	1
 42687  5EDA  0091               	movwf	17	;volatile
 42688                           
 42689                           ;nco1.c: 74: NCO1INCH = 0x99;
 42690  5EDB  3099               	movlw	153
 42691  5EDC  0090               	movwf	16	;volatile
 42692                           
 42693                           ;nco1.c: 76: NCO1INCL = 0x9A;
 42694  5EDD  309A               	movlw	154
 42695  5EDE  008F               	movwf	15	;volatile
 42696                           
 42697                           ;nco1.c: 79: NCO1CONbits.N1EN = 1;
 42698  5EDF  1792               	bsf	18,7	;volatile
 42699  5EE0  0008               	return
 42700  5EE1                     __end_of_NCO1_Initialize:
 42701                           
 42702                           	psect	text86
 42703  5E55                     __ptext86:	
 42704 ;; *************** function _FVR_Initialize *****************
 42705 ;; Defined at:
 42706 ;;		line 58 in file "mcc_generated_files/fvr.c"
 42707 ;; Parameters:    Size  Location     Type
 42708 ;;		None
 42709 ;; Auto vars:     Size  Location     Type
 42710 ;;		None
 42711 ;; Return value:  Size  Location     Type
 42712 ;;                  1    wreg      void 
 42713 ;; Registers used:
 42714 ;;		wreg
 42715 ;; Tracked objects:
 42716 ;;		On entry : 3F/11
 42717 ;;		On exit  : 3F/12
 42718 ;;		Unchanged: 0/0
 42719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42724 ;;Total ram usage:        0 bytes
 42725 ;; Hardware stack levels used: 1
 42726 ;; Hardware stack levels required when called: unknown (due to recursion)
 42727 ;; This function calls:
 42728 ;;		Nothing
 42729 ;; This function is called by:
 42730 ;;		_SYSTEM_Initialize
 42731 ;; This function uses a non-reentrant model
 42732 ;;
 42733                           
 42734  5E55                     _FVR_Initialize:	
 42735                           ;psect for function _FVR_Initialize
 42736                           
 42737                           
 42738                           ;fvr.c: 61: FVRCON = 0x83;
 42739                           
 42740                           ;incstack = 0
 42741                           ; Regs used in _FVR_Initialize: [wreg]
 42742  5E55  3083               	movlw	131
 42743  5E56  0152               	movlb	18	; select bank18
 42744  5E57  008C               	movwf	12	;volatile
 42745  5E58  0008               	return
 42746  5E59                     __end_of_FVR_Initialize:
 42747                           
 42748                           	psect	text87
 42749  5394                     __ptext87:	
 42750 ;; *************** function _EUSART_Initialize *****************
 42751 ;; Defined at:
 42752 ;;		line 88 in file "mcc_generated_files/eusart.c"
 42753 ;; Parameters:    Size  Location     Type
 42754 ;;		None
 42755 ;; Auto vars:     Size  Location     Type
 42756 ;;		None
 42757 ;; Return value:  Size  Location     Type
 42758 ;;                  1    wreg      void 
 42759 ;; Registers used:
 42760 ;;		wreg, status,2, status,0, pclath, cstack
 42761 ;; Tracked objects:
 42762 ;;		On entry : 3F/4
 42763 ;;		On exit  : 3F/E
 42764 ;;		Unchanged: 0/0
 42765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42770 ;;Total ram usage:        1 bytes
 42771 ;; Hardware stack levels used: 1
 42772 ;; Hardware stack levels required when called: unknown (due to recursion)
 42773 ;; This function calls:
 42774 ;;		_EUSART_SetErrorHandler
 42775 ;;		_EUSART_SetFramingErrorHandler
 42776 ;;		_EUSART_SetOverrunErrorHandler
 42777 ;;		_EUSART_SetRxInterruptHandler
 42778 ;;		_EUSART_SetTxInterruptHandler
 42779 ;; This function is called by:
 42780 ;;		_SYSTEM_Initialize
 42781 ;; This function uses a non-reentrant model
 42782 ;;
 42783                           
 42784  5394                     _EUSART_Initialize:	
 42785                           ;psect for function _EUSART_Initialize
 42786                           
 42787                           
 42788                           ;eusart.c: 91: PIE3bits.RCIE = 0;
 42789                           
 42790                           ;incstack = 0
 42791                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 42792  5394  014E               	movlb	14	; select bank14
 42793  5395  1299               	bcf	25,5	;volatile
 42794                           
 42795                           ;eusart.c: 92: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 42796  5396  30B1               	movlw	low _EUSART_Receive_ISR
 42797  5397  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 42798  5398  3052               	movlw	high _EUSART_Receive_ISR
 42799  5399  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 42800  539A  31DE  2681  31D3   	fcall	_EUSART_SetRxInterruptHandler
 42801                           
 42802                           ;eusart.c: 93: PIE3bits.TXIE = 0;
 42803  539D  014E               	movlb	14	; select bank14
 42804  539E  1219               	bcf	25,4	;volatile
 42805                           
 42806                           ;eusart.c: 94: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 42807  539F  30F0               	movlw	low _EUSART_Transmit_ISR
 42808  53A0  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 42809  53A1  3050               	movlw	high _EUSART_Transmit_ISR
 42810  53A2  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 42811  53A3  31DE  2687  31D3   	fcall	_EUSART_SetTxInterruptHandler
 42812                           
 42813                           ;eusart.c: 98: BAUD1CON = 0x08;
 42814  53A6  3008               	movlw	8
 42815  53A7  0142               	movlb	2	; select bank2
 42816  53A8  009F               	movwf	31	;volatile
 42817                           
 42818                           ;eusart.c: 101: RC1STA = 0x90;
 42819  53A9  3090               	movlw	144
 42820  53AA  009D               	movwf	29	;volatile
 42821                           
 42822                           ;eusart.c: 104: TX1STA = 0x24;
 42823  53AB  3024               	movlw	36
 42824  53AC  009E               	movwf	30	;volatile
 42825                           
 42826                           ;eusart.c: 107: SP1BRGL = 0x08;
 42827  53AD  3008               	movlw	8
 42828  53AE  009B               	movwf	27	;volatile
 42829                           
 42830                           ;eusart.c: 110: SP1BRGH = 0x02;
 42831  53AF  3002               	movlw	2
 42832  53B0  009C               	movwf	28	;volatile
 42833                           
 42834                           ;eusart.c: 113: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
 42835  53B1  3000               	movlw	low _EUSART_DefaultFramingErrorHandler
 42836  53B2  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 42837  53B3  3038               	movlw	high _EUSART_DefaultFramingErrorHandler
 42838  53B4  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 42839  53B5  31DE  267B  31D3   	fcall	_EUSART_SetFramingErrorHandler
 42840                           
 42841                           ;eusart.c: 114: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
 42842  53B8  3051               	movlw	low _EUSART_DefaultOverrunErrorHandler
 42843  53B9  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 42844  53BA  305E               	movlw	high _EUSART_DefaultOverrunErrorHandler
 42845  53BB  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 42846  53BC  31DE  2666  31D3   	fcall	_EUSART_SetOverrunErrorHandler
 42847                           
 42848                           ;eusart.c: 115: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
 42849  53BF  304B               	movlw	low _EUSART_DefaultErrorHandler
 42850  53C0  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 42851  53C1  305E               	movlw	high _EUSART_DefaultErrorHandler
 42852  53C2  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 42853  53C3  31DE  2661         	fcall	_EUSART_SetErrorHandler
 42854                           
 42855                           ;eusart.c: 117: eusartRxLastError.status = 0;
 42856  53C5  0142               	movlb	2	; select bank2
 42857  53C6  01B1               	clrf	_eusartRxLastError^(0+256)	;volatile
 42858                           
 42859                           ;eusart.c: 120: eusartTxHead = 0;
 42860  53C7  0141               	movlb	1	; select bank1
 42861  53C8  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 42862                           
 42863                           ;eusart.c: 121: eusartTxTail = 0;
 42864  53C9  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 42865                           
 42866                           ;eusart.c: 122: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 42867  53CA  3020               	movlw	32
 42868  53CB  00F3               	movwf	??_EUSART_Initialize
 42869  53CC  0873               	movf	??_EUSART_Initialize,w
 42870  53CD  0142               	movlb	2	; select bank2
 42871  53CE  00EB               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 42872                           
 42873                           ;eusart.c: 124: eusartRxHead = 0;
 42874  53CF  01FC               	clrf	_eusartRxHead	;volatile
 42875                           
 42876                           ;eusart.c: 125: eusartRxTail = 0;
 42877  53D0  0141               	movlb	1	; select bank1
 42878  53D1  01ED               	clrf	_eusartRxTail^(0+128)	;volatile
 42879                           
 42880                           ;eusart.c: 126: eusartRxCount = 0;
 42881  53D2  01EC               	clrf	_eusartRxCount^(0+128)	;volatile
 42882                           
 42883                           ;eusart.c: 129: PIE3bits.RCIE = 1;
 42884  53D3  014E               	movlb	14	; select bank14
 42885  53D4  1699               	bsf	25,5	;volatile
 42886  53D5  0008               	return
 42887  53D6                     __end_of_EUSART_Initialize:
 42888                           
 42889                           	psect	text88
 42890  5E87                     __ptext88:	
 42891 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 42892 ;; Defined at:
 42893 ;;		line 285 in file "mcc_generated_files/eusart.c"
 42894 ;; Parameters:    Size  Location     Type
 42895 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 42896 ;;		 -> EUSART_Transmit_ISR(1), 
 42897 ;; Auto vars:     Size  Location     Type
 42898 ;;		None
 42899 ;; Return value:  Size  Location     Type
 42900 ;;                  1    wreg      void 
 42901 ;; Registers used:
 42902 ;;		wreg
 42903 ;; Tracked objects:
 42904 ;;		On entry : 3F/E
 42905 ;;		On exit  : 3F/3
 42906 ;;		Unchanged: 0/0
 42907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42912 ;;Total ram usage:        2 bytes
 42913 ;; Hardware stack levels used: 1
 42914 ;; Hardware stack levels required when called: unknown (due to recursion)
 42915 ;; This function calls:
 42916 ;;		Nothing
 42917 ;; This function is called by:
 42918 ;;		_EUSART_Initialize
 42919 ;; This function uses a non-reentrant model
 42920 ;;
 42921                           
 42922  5E87                     _EUSART_SetTxInterruptHandler:	
 42923                           ;psect for function _EUSART_SetTxInterruptHandler
 42924                           
 42925                           
 42926                           ;eusart.c: 286: EUSART_TxDefaultInterruptHandler = interruptHandler;
 42927                           
 42928                           ;incstack = 0
 42929                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 42930  5E87  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 42931  5E88  0143               	movlb	3	; select bank3
 42932  5E89  00EF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384)
 42933  5E8A  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 42934  5E8B  00EE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+384)
 42935  5E8C  0008               	return
 42936  5E8D                     __end_of_EUSART_SetTxInterruptHandler:
 42937                           
 42938                           	psect	text89
 42939  5E81                     __ptext89:	
 42940 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 42941 ;; Defined at:
 42942 ;;		line 289 in file "mcc_generated_files/eusart.c"
 42943 ;; Parameters:    Size  Location     Type
 42944 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 42945 ;;		 -> EUSART_Receive_ISR(1), 
 42946 ;; Auto vars:     Size  Location     Type
 42947 ;;		None
 42948 ;; Return value:  Size  Location     Type
 42949 ;;                  1    wreg      void 
 42950 ;; Registers used:
 42951 ;;		wreg
 42952 ;; Tracked objects:
 42953 ;;		On entry : 3F/E
 42954 ;;		On exit  : 3F/3
 42955 ;;		Unchanged: 0/0
 42956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 42957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 42961 ;;Total ram usage:        2 bytes
 42962 ;; Hardware stack levels used: 1
 42963 ;; Hardware stack levels required when called: unknown (due to recursion)
 42964 ;; This function calls:
 42965 ;;		Nothing
 42966 ;; This function is called by:
 42967 ;;		_EUSART_Initialize
 42968 ;; This function uses a non-reentrant model
 42969 ;;
 42970                           
 42971  5E81                     _EUSART_SetRxInterruptHandler:	
 42972                           ;psect for function _EUSART_SetRxInterruptHandler
 42973                           
 42974                           
 42975                           ;eusart.c: 290: EUSART_RxDefaultInterruptHandler = interruptHandler;
 42976                           
 42977                           ;incstack = 0
 42978                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 42979  5E81  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 42980  5E82  0143               	movlb	3	; select bank3
 42981  5E83  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
 42982  5E84  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 42983  5E85  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
 42984  5E86  0008               	return
 42985  5E87                     __end_of_EUSART_SetRxInterruptHandler:
 42986                           
 42987                           	psect	text90
 42988  5E66                     __ptext90:	
 42989 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 42990 ;; Defined at:
 42991 ;;		line 277 in file "mcc_generated_files/eusart.c"
 42992 ;; Parameters:    Size  Location     Type
 42993 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 42994 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 42995 ;; Auto vars:     Size  Location     Type
 42996 ;;		None
 42997 ;; Return value:  Size  Location     Type
 42998 ;;                  1    wreg      void 
 42999 ;; Registers used:
 43000 ;;		wreg
 43001 ;; Tracked objects:
 43002 ;;		On entry : 3F/3
 43003 ;;		On exit  : 3F/3
 43004 ;;		Unchanged: 0/0
 43005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43010 ;;Total ram usage:        2 bytes
 43011 ;; Hardware stack levels used: 1
 43012 ;; Hardware stack levels required when called: unknown (due to recursion)
 43013 ;; This function calls:
 43014 ;;		Nothing
 43015 ;; This function is called by:
 43016 ;;		_EUSART_Initialize
 43017 ;; This function uses a non-reentrant model
 43018 ;;
 43019                           
 43020  5E66                     _EUSART_SetOverrunErrorHandler:	
 43021                           ;psect for function _EUSART_SetOverrunErrorHandler
 43022                           
 43023                           
 43024                           ;eusart.c: 278: EUSART_OverrunErrorHandler = interruptHandler;
 43025                           
 43026                           ;incstack = 0
 43027                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 43028  5E66  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 43029  5E67  00E9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 43030  5E68  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 43031  5E69  00E8               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 43032  5E6A  0008               	return
 43033  5E6B                     __end_of_EUSART_SetOverrunErrorHandler:
 43034                           
 43035                           	psect	text91
 43036  5E7B                     __ptext91:	
 43037 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 43038 ;; Defined at:
 43039 ;;		line 273 in file "mcc_generated_files/eusart.c"
 43040 ;; Parameters:    Size  Location     Type
 43041 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 43042 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 43043 ;; Auto vars:     Size  Location     Type
 43044 ;;		None
 43045 ;; Return value:  Size  Location     Type
 43046 ;;                  1    wreg      void 
 43047 ;; Registers used:
 43048 ;;		wreg
 43049 ;; Tracked objects:
 43050 ;;		On entry : 3F/2
 43051 ;;		On exit  : 3F/3
 43052 ;;		Unchanged: 0/0
 43053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43058 ;;Total ram usage:        2 bytes
 43059 ;; Hardware stack levels used: 1
 43060 ;; Hardware stack levels required when called: unknown (due to recursion)
 43061 ;; This function calls:
 43062 ;;		Nothing
 43063 ;; This function is called by:
 43064 ;;		_EUSART_Initialize
 43065 ;; This function uses a non-reentrant model
 43066 ;;
 43067                           
 43068  5E7B                     _EUSART_SetFramingErrorHandler:	
 43069                           ;psect for function _EUSART_SetFramingErrorHandler
 43070                           
 43071                           
 43072                           ;eusart.c: 274: EUSART_FramingErrorHandler = interruptHandler;
 43073                           
 43074                           ;incstack = 0
 43075                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 43076  5E7B  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 43077  5E7C  0143               	movlb	3	; select bank3
 43078  5E7D  00EB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 43079  5E7E  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 43080  5E7F  00EA               	movwf	_EUSART_FramingErrorHandler^(0+384)
 43081  5E80  0008               	return
 43082  5E81                     __end_of_EUSART_SetFramingErrorHandler:
 43083                           
 43084                           	psect	text92
 43085  5E61                     __ptext92:	
 43086 ;; *************** function _EUSART_SetErrorHandler *****************
 43087 ;; Defined at:
 43088 ;;		line 281 in file "mcc_generated_files/eusart.c"
 43089 ;; Parameters:    Size  Location     Type
 43090 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 43091 ;;		 -> EUSART_DefaultErrorHandler(1), 
 43092 ;; Auto vars:     Size  Location     Type
 43093 ;;		None
 43094 ;; Return value:  Size  Location     Type
 43095 ;;                  1    wreg      void 
 43096 ;; Registers used:
 43097 ;;		wreg
 43098 ;; Tracked objects:
 43099 ;;		On entry : 3F/3
 43100 ;;		On exit  : 3F/3
 43101 ;;		Unchanged: 0/0
 43102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43107 ;;Total ram usage:        2 bytes
 43108 ;; Hardware stack levels used: 1
 43109 ;; Hardware stack levels required when called: unknown (due to recursion)
 43110 ;; This function calls:
 43111 ;;		Nothing
 43112 ;; This function is called by:
 43113 ;;		_EUSART_Initialize
 43114 ;; This function uses a non-reentrant model
 43115 ;;
 43116                           
 43117  5E61                     _EUSART_SetErrorHandler:	
 43118                           ;psect for function _EUSART_SetErrorHandler
 43119                           
 43120                           
 43121                           ;eusart.c: 282: EUSART_ErrorHandler = interruptHandler;
 43122                           
 43123                           ;incstack = 0
 43124                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 43125  5E61  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 43126  5E62  00E7               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 43127  5E63  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 43128  5E64  00E6               	movwf	_EUSART_ErrorHandler^(0+384)
 43129  5E65  0008               	return
 43130  5E66                     __end_of_EUSART_SetErrorHandler:
 43131                           
 43132                           	psect	text93
 43133  5E75                     __ptext93:	
 43134 ;; *************** function _CLKREF_Initialize *****************
 43135 ;; Defined at:
 43136 ;;		line 58 in file "mcc_generated_files/clkref.c"
 43137 ;; Parameters:    Size  Location     Type
 43138 ;;		None
 43139 ;; Auto vars:     Size  Location     Type
 43140 ;;		None
 43141 ;; Return value:  Size  Location     Type
 43142 ;;                  1    wreg      void 
 43143 ;; Registers used:
 43144 ;;		wreg
 43145 ;; Tracked objects:
 43146 ;;		On entry : 3F/E
 43147 ;;		On exit  : 3F/11
 43148 ;;		Unchanged: 0/0
 43149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43154 ;;Total ram usage:        0 bytes
 43155 ;; Hardware stack levels used: 1
 43156 ;; Hardware stack levels required when called: unknown (due to recursion)
 43157 ;; This function calls:
 43158 ;;		Nothing
 43159 ;; This function is called by:
 43160 ;;		_SYSTEM_Initialize
 43161 ;; This function uses a non-reentrant model
 43162 ;;
 43163                           
 43164  5E75                     _CLKREF_Initialize:	
 43165                           ;psect for function _CLKREF_Initialize
 43166                           
 43167                           
 43168                           ;clkref.c: 61: CLKRCLK = 0x05;
 43169                           
 43170                           ;incstack = 0
 43171                           ; Regs used in _CLKREF_Initialize: [wreg]
 43172  5E75  3005               	movlw	5
 43173  5E76  0151               	movlb	17	; select bank17
 43174  5E77  0096               	movwf	22	;volatile
 43175                           
 43176                           ;clkref.c: 63: CLKRCON = 0x90;
 43177  5E78  3090               	movlw	144
 43178  5E79  0095               	movwf	21	;volatile
 43179  5E7A  0008               	return
 43180  5E7B                     __end_of_CLKREF_Initialize:
 43181                           
 43182                           	psect	text94
 43183  5F75                     __ptext94:	
 43184 ;; *************** function _CLC2_Initialize *****************
 43185 ;; Defined at:
 43186 ;;		line 58 in file "mcc_generated_files/clc2.c"
 43187 ;; Parameters:    Size  Location     Type
 43188 ;;		None
 43189 ;; Auto vars:     Size  Location     Type
 43190 ;;		None
 43191 ;; Return value:  Size  Location     Type
 43192 ;;                  1    wreg      void 
 43193 ;; Registers used:
 43194 ;;		wreg, status,2
 43195 ;; Tracked objects:
 43196 ;;		On entry : 3F/B
 43197 ;;		On exit  : 3F/3C
 43198 ;;		Unchanged: 0/0
 43199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43204 ;;Total ram usage:        0 bytes
 43205 ;; Hardware stack levels used: 1
 43206 ;; Hardware stack levels required when called: unknown (due to recursion)
 43207 ;; This function calls:
 43208 ;;		Nothing
 43209 ;; This function is called by:
 43210 ;;		_SYSTEM_Initialize
 43211 ;; This function uses a non-reentrant model
 43212 ;;
 43213                           
 43214  5F75                     _CLC2_Initialize:	
 43215                           ;psect for function _CLC2_Initialize
 43216                           
 43217                           
 43218                           ;clc2.c: 63: CLC2POL = 0x00;
 43219                           
 43220                           ;incstack = 0
 43221                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 43222  5F75  017C               	movlb	60	; select bank60
 43223  5F76  019B               	clrf	27	;volatile
 43224                           
 43225                           ;clc2.c: 65: CLC2SEL0 = 0x02;
 43226  5F77  3002               	movlw	2
 43227  5F78  009C               	movwf	28	;volatile
 43228                           
 43229                           ;clc2.c: 67: CLC2SEL1 = 0x02;
 43230  5F79  3002               	movlw	2
 43231  5F7A  009D               	movwf	29	;volatile
 43232                           
 43233                           ;clc2.c: 69: CLC2SEL2 = 0x02;
 43234  5F7B  3002               	movlw	2
 43235  5F7C  009E               	movwf	30	;volatile
 43236                           
 43237                           ;clc2.c: 71: CLC2SEL3 = 0x02;
 43238  5F7D  3002               	movlw	2
 43239  5F7E  009F               	movwf	31	;volatile
 43240                           
 43241                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 43242  5F7F  3002               	movlw	2
 43243  5F80  00A0               	movwf	32	;volatile
 43244                           
 43245                           ;clc2.c: 75: CLC2GLS1 = 0x02;
 43246  5F81  3002               	movlw	2
 43247  5F82  00A1               	movwf	33	;volatile
 43248                           
 43249                           ;clc2.c: 77: CLC2GLS2 = 0x00;
 43250  5F83  01A2               	clrf	34	;volatile
 43251                           
 43252                           ;clc2.c: 79: CLC2GLS3 = 0x00;
 43253  5F84  01A3               	clrf	35	;volatile
 43254                           
 43255                           ;clc2.c: 81: CLC2CON = 0x80;
 43256  5F85  3080               	movlw	128
 43257  5F86  009A               	movwf	26	;volatile
 43258  5F87  0008               	return
 43259  5F88                     __end_of_CLC2_Initialize:
 43260                           
 43261                           	psect	text95
 43262  5F62                     __ptext95:	
 43263 ;; *************** function _CLC1_Initialize *****************
 43264 ;; Defined at:
 43265 ;;		line 58 in file "mcc_generated_files/clc1.c"
 43266 ;; Parameters:    Size  Location     Type
 43267 ;;		None
 43268 ;; Auto vars:     Size  Location     Type
 43269 ;;		None
 43270 ;; Return value:  Size  Location     Type
 43271 ;;                  1    wreg      void 
 43272 ;; Registers used:
 43273 ;;		wreg, status,2
 43274 ;; Tracked objects:
 43275 ;;		On entry : 3F/5
 43276 ;;		On exit  : 3F/3C
 43277 ;;		Unchanged: 0/0
 43278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43283 ;;Total ram usage:        0 bytes
 43284 ;; Hardware stack levels used: 1
 43285 ;; Hardware stack levels required when called: unknown (due to recursion)
 43286 ;; This function calls:
 43287 ;;		Nothing
 43288 ;; This function is called by:
 43289 ;;		_SYSTEM_Initialize
 43290 ;; This function uses a non-reentrant model
 43291 ;;
 43292                           
 43293  5F62                     _CLC1_Initialize:	
 43294                           ;psect for function _CLC1_Initialize
 43295                           
 43296                           
 43297                           ;clc1.c: 63: CLC1POL = 0x00;
 43298                           
 43299                           ;incstack = 0
 43300                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 43301  5F62  017C               	movlb	60	; select bank60
 43302  5F63  0191               	clrf	17	;volatile
 43303                           
 43304                           ;clc1.c: 65: CLC1SEL0 = 0x0C;
 43305  5F64  300C               	movlw	12
 43306  5F65  0092               	movwf	18	;volatile
 43307                           
 43308                           ;clc1.c: 67: CLC1SEL1 = 0x0C;
 43309  5F66  300C               	movlw	12
 43310  5F67  0093               	movwf	19	;volatile
 43311                           
 43312                           ;clc1.c: 69: CLC1SEL2 = 0x0C;
 43313  5F68  300C               	movlw	12
 43314  5F69  0094               	movwf	20	;volatile
 43315                           
 43316                           ;clc1.c: 71: CLC1SEL3 = 0x0C;
 43317  5F6A  300C               	movlw	12
 43318  5F6B  0095               	movwf	21	;volatile
 43319                           
 43320                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 43321  5F6C  3002               	movlw	2
 43322  5F6D  0096               	movwf	22	;volatile
 43323                           
 43324                           ;clc1.c: 75: CLC1GLS1 = 0x02;
 43325  5F6E  3002               	movlw	2
 43326  5F6F  0097               	movwf	23	;volatile
 43327                           
 43328                           ;clc1.c: 77: CLC1GLS2 = 0x00;
 43329  5F70  0198               	clrf	24	;volatile
 43330                           
 43331                           ;clc1.c: 79: CLC1GLS3 = 0x00;
 43332  5F71  0199               	clrf	25	;volatile
 43333                           
 43334                           ;clc1.c: 81: CLC1CON = 0x80;
 43335  5F72  3080               	movlw	128
 43336  5F73  0090               	movwf	16	;volatile
 43337  5F74  0008               	return
 43338  5F75                     __end_of_CLC1_Initialize:
 43339                           
 43340                           	psect	text96
 43341  5FE7                     __ptext96:	
 43342 ;; *************** function _ADCC_Initialize *****************
 43343 ;; Defined at:
 43344 ;;		line 63 in file "mcc_generated_files/adcc.c"
 43345 ;; Parameters:    Size  Location     Type
 43346 ;;		None
 43347 ;; Auto vars:     Size  Location     Type
 43348 ;;		None
 43349 ;; Return value:  Size  Location     Type
 43350 ;;                  1    wreg      void 
 43351 ;; Registers used:
 43352 ;;		wreg, status,2
 43353 ;; Tracked objects:
 43354 ;;		On entry : 3F/12
 43355 ;;		On exit  : 3F/1
 43356 ;;		Unchanged: 0/0
 43357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43362 ;;Total ram usage:        0 bytes
 43363 ;; Hardware stack levels used: 1
 43364 ;; Hardware stack levels required when called: unknown (due to recursion)
 43365 ;; This function calls:
 43366 ;;		Nothing
 43367 ;; This function is called by:
 43368 ;;		_SYSTEM_Initialize
 43369 ;; This function uses a non-reentrant model
 43370 ;;
 43371                           
 43372  5FE7                     _ADCC_Initialize:	
 43373                           ;psect for function _ADCC_Initialize
 43374                           
 43375                           
 43376                           ;adcc.c: 67: ADLTHL = 0x00;
 43377                           
 43378                           ;incstack = 0
 43379                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 43380  5FE7  0142               	movlb	2	; select bank2
 43381  5FE8  018E               	clrf	14	;volatile
 43382                           
 43383                           ;adcc.c: 69: ADLTHH = 0x00;
 43384  5FE9  018F               	clrf	15	;volatile
 43385                           
 43386                           ;adcc.c: 71: ADUTHL = 0x00;
 43387  5FEA  0190               	clrf	16	;volatile
 43388                           
 43389                           ;adcc.c: 73: ADUTHH = 0x00;
 43390  5FEB  0191               	clrf	17	;volatile
 43391                           
 43392                           ;adcc.c: 75: ADSTPTL = 0x00;
 43393  5FEC  0192               	clrf	18	;volatile
 43394                           
 43395                           ;adcc.c: 77: ADSTPTH = 0x00;
 43396  5FED  0193               	clrf	19	;volatile
 43397                           
 43398                           ;adcc.c: 79: ADRPT = 0x00;
 43399  5FEE  018D               	clrf	13	;volatile
 43400                           
 43401                           ;adcc.c: 81: ADPCH = 0x00;
 43402  5FEF  0141               	movlb	1	; select bank1
 43403  5FF0  019E               	clrf	30	;volatile
 43404                           
 43405                           ;adcc.c: 83: ADCAP = 0x00;
 43406  5FF1  019B               	clrf	27	;volatile
 43407                           
 43408                           ;adcc.c: 85: ADPRE = 0x00;
 43409  5FF2  019C               	clrf	28	;volatile
 43410                           
 43411                           ;adcc.c: 87: ADCON1 = 0x00;
 43412  5FF3  0194               	clrf	20	;volatile
 43413                           
 43414                           ;adcc.c: 89: ADCON2 = 0x04;
 43415  5FF4  3004               	movlw	4
 43416  5FF5  0095               	movwf	21	;volatile
 43417                           
 43418                           ;adcc.c: 91: ADCON3 = 0x00;
 43419  5FF6  0196               	clrf	22	;volatile
 43420                           
 43421                           ;adcc.c: 93: ADSTAT = 0x00;
 43422  5FF7  0197               	clrf	23	;volatile
 43423                           
 43424                           ;adcc.c: 95: ADREF = 0x03;
 43425  5FF8  3003               	movlw	3
 43426  5FF9  009A               	movwf	26	;volatile
 43427                           
 43428                           ;adcc.c: 97: ADACT = 0x00;
 43429  5FFA  0199               	clrf	25	;volatile
 43430                           
 43431                           ;adcc.c: 99: ADCLK = 0x00;
 43432  5FFB  0198               	clrf	24	;volatile
 43433                           
 43434                           ;adcc.c: 101: ADCON0 = 0xD4;
 43435  5FFC  30D4               	movlw	212
 43436  5FFD  0093               	movwf	19	;volatile
 43437                           
 43438                           ;adcc.c: 103: ADACQ = 0x00;
 43439  5FFE  019D               	clrf	29	;volatile
 43440  5FFF  0008               	return
 43441  6000                     __end_of_ADCC_Initialize:
 43442                           
 43443                           	psect	text97
 43444  5EEF                     __ptext97:	
 43445 ;; *************** function _Inicia_LCD *****************
 43446 ;; Defined at:
 43447 ;;		line 179 in file "lcd.c"
 43448 ;; Parameters:    Size  Location     Type
 43449 ;;		None
 43450 ;; Auto vars:     Size  Location     Type
 43451 ;;  a               2    0        unsigned int 
 43452 ;; Return value:  Size  Location     Type
 43453 ;;                  1    wreg      void 
 43454 ;; Registers used:
 43455 ;;		wreg, status,2, status,0, pclath, cstack
 43456 ;; Tracked objects:
 43457 ;;		On entry : 3F/11
 43458 ;;		On exit  : 0/0
 43459 ;;		Unchanged: 0/0
 43460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43465 ;;Total ram usage:        1 bytes
 43466 ;; Hardware stack levels used: 1
 43467 ;; Hardware stack levels required when called: unknown (due to recursion)
 43468 ;; This function calls:
 43469 ;;		_Lcd_Clear
 43470 ;;		_Lcd_Init
 43471 ;; This function is called by:
 43472 ;;		_main
 43473 ;; This function uses a non-reentrant model
 43474 ;;
 43475                           
 43476  5EEF                     _Inicia_LCD:	
 43477                           ;psect for function _Inicia_LCD
 43478                           
 43479                           
 43480                           ;lcd.c: 182: unsigned int a;;lcd.c: 183: Lcd_Init();
 43481                           
 43482                           ;incstack = 0
 43483                           ; Regs used in _Inicia_LCD: [wreg+status,2+status,0+pclath+cstack]
 43484  5EEF  31D4  2418  31DE   	fcall	_Lcd_Init
 43485                           
 43486                           ;lcd.c: 184: Lcd_Clear();
 43487  5EF2  31DE  2699  31DE   	fcall	_Lcd_Clear
 43488                           
 43489                           ;lcd.c: 216: _delay((unsigned long)((1)*(20000000/4000.0)));
 43490  5EF5  3007               	movlw	7
 43491  5EF6  00F5               	movwf	??_Inicia_LCD
 43492  5EF7  307D               	movlw	125
 43493  5EF8                     u13127:
 43494  5EF8  0B89               	decfsz	9,f
 43495  5EF9  2EF8               	goto	u13127
 43496  5EFA  0BF5               	decfsz	??_Inicia_LCD,f
 43497  5EFB  2EF8               	goto	u13127
 43498  5EFC  0000               	nop
 43499  5EFD  0008               	return
 43500  5EFE                     __end_of_Inicia_LCD:
 43501                           
 43502                           	psect	text98
 43503  5418                     __ptext98:	
 43504 ;; *************** function _Lcd_Init *****************
 43505 ;; Defined at:
 43506 ;;		line 93 in file "lcd.c"
 43507 ;; Parameters:    Size  Location     Type
 43508 ;;		None
 43509 ;; Auto vars:     Size  Location     Type
 43510 ;;		None
 43511 ;; Return value:  Size  Location     Type
 43512 ;;                  1    wreg      void 
 43513 ;; Registers used:
 43514 ;;		wreg, status,2, status,0, pclath, cstack
 43515 ;; Tracked objects:
 43516 ;;		On entry : 3F/11
 43517 ;;		On exit  : 3F/0
 43518 ;;		Unchanged: 0/0
 43519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43524 ;;Total ram usage:        1 bytes
 43525 ;; Hardware stack levels used: 1
 43526 ;; Hardware stack levels required when called: unknown (due to recursion)
 43527 ;; This function calls:
 43528 ;;		_Lcd_Cmd
 43529 ;;		_Lcd_Port
 43530 ;; This function is called by:
 43531 ;;		_Inicia_LCD
 43532 ;; This function uses a non-reentrant model
 43533 ;;
 43534                           
 43535  5418                     _Lcd_Init:	
 43536                           ;psect for function _Lcd_Init
 43537                           
 43538                           
 43539                           ;lcd.c: 103: Lcd_Port(0x00);
 43540                           
 43541                           ;incstack = 0
 43542                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 43543  5418  3000               	movlw	0
 43544  5419  31DF  27B7  31D4   	fcall	_Lcd_Port
 43545                           
 43546                           ;lcd.c: 104: _delay((unsigned long)((20)*(20000000/4000.0)));
 43547  541C  3082               	movlw	130
 43548  541D  00F4               	movwf	??_Lcd_Init
 43549  541E  30DE               	movlw	222
 43550  541F                     u13137:
 43551  541F  0B89               	decfsz	9,f
 43552  5420  2C1F               	goto	u13137
 43553  5421  0BF4               	decfsz	??_Lcd_Init,f
 43554  5422  2C1F               	goto	u13137
 43555                           
 43556                           ;lcd.c: 105: Lcd_Cmd(0x03);
 43557  5423  3003               	movlw	3
 43558  5424  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43559                           
 43560                           ;lcd.c: 106: _delay((unsigned long)((5)*(20000000/4000.0)));
 43561  5427  3021               	movlw	33
 43562  5428  00F4               	movwf	??_Lcd_Init
 43563  5429  3076               	movlw	118
 43564  542A                     u13147:
 43565  542A  0B89               	decfsz	9,f
 43566  542B  2C2A               	goto	u13147
 43567  542C  0BF4               	decfsz	??_Lcd_Init,f
 43568  542D  2C2A               	goto	u13147
 43569  542E  3200               	nop2
 43570                           
 43571                           ;lcd.c: 107: Lcd_Cmd(0x03);
 43572  542F  3003               	movlw	3
 43573  5430  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43574                           
 43575                           ;lcd.c: 108: _delay((unsigned long)((11)*(20000000/4000.0)));
 43576  5433  3048               	movlw	72
 43577  5434  00F4               	movwf	??_Lcd_Init
 43578  5435  306C               	movlw	108
 43579  5436                     u13157:
 43580  5436  0B89               	decfsz	9,f
 43581  5437  2C36               	goto	u13157
 43582  5438  0BF4               	decfsz	??_Lcd_Init,f
 43583  5439  2C36               	goto	u13157
 43584  543A  3200               	nop2
 43585                           
 43586                           ;lcd.c: 109: Lcd_Cmd(0x03);
 43587  543B  3003               	movlw	3
 43588  543C  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43589                           
 43590                           ;lcd.c: 111: Lcd_Cmd(0x02);
 43591  543F  3002               	movlw	2
 43592  5440  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43593                           
 43594                           ;lcd.c: 112: Lcd_Cmd(0x02);
 43595  5443  3002               	movlw	2
 43596  5444  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43597                           
 43598                           ;lcd.c: 113: Lcd_Cmd(0x08);
 43599  5447  3008               	movlw	8
 43600  5448  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43601                           
 43602                           ;lcd.c: 114: Lcd_Cmd(0x00);
 43603  544B  3000               	movlw	0
 43604  544C  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43605                           
 43606                           ;lcd.c: 115: Lcd_Cmd(0x0C);
 43607  544F  300C               	movlw	12
 43608  5450  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43609                           
 43610                           ;lcd.c: 116: Lcd_Cmd(0x00);
 43611  5453  3000               	movlw	0
 43612  5454  31DF  274F  31D4   	fcall	_Lcd_Cmd
 43613                           
 43614                           ;lcd.c: 117: Lcd_Cmd(0x06);
 43615  5457  3006               	movlw	6
 43616  5458  31DF  274F         	fcall	_Lcd_Cmd
 43617  545A  0008               	return
 43618  545B                     __end_of_Lcd_Init:
 43619                           
 43620                           	psect	text99
 43621  5E99                     __ptext99:	
 43622 ;; *************** function _Lcd_Clear *****************
 43623 ;; Defined at:
 43624 ;;		line 50 in file "lcd.c"
 43625 ;; Parameters:    Size  Location     Type
 43626 ;;		None
 43627 ;; Auto vars:     Size  Location     Type
 43628 ;;		None
 43629 ;; Return value:  Size  Location     Type
 43630 ;;                  1    wreg      void 
 43631 ;; Registers used:
 43632 ;;		wreg, status,2, status,0, pclath, cstack
 43633 ;; Tracked objects:
 43634 ;;		On entry : 3D/2
 43635 ;;		On exit  : 3F/0
 43636 ;;		Unchanged: 0/0
 43637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43642 ;;Total ram usage:        0 bytes
 43643 ;; Hardware stack levels used: 1
 43644 ;; Hardware stack levels required when called: unknown (due to recursion)
 43645 ;; This function calls:
 43646 ;;		_Lcd_Cmd
 43647 ;; This function is called by:
 43648 ;;		_main
 43649 ;;		_Inicia_LCD
 43650 ;; This function uses a non-reentrant model
 43651 ;;
 43652                           
 43653  5E99                     _Lcd_Clear:	
 43654                           ;psect for function _Lcd_Clear
 43655                           
 43656                           
 43657                           ;lcd.c: 53: Lcd_Cmd(0);
 43658                           
 43659                           ;incstack = 0
 43660                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 43661  5E99  3000               	movlw	0
 43662  5E9A  31DF  274F  31DE   	fcall	_Lcd_Cmd
 43663                           
 43664                           ;lcd.c: 54: Lcd_Cmd(1);
 43665  5E9D  3001               	movlw	1
 43666  5E9E  31DF  274F         	fcall	_Lcd_Cmd
 43667  5EA0  0008               	return
 43668  5EA1                     __end_of_Lcd_Clear:
 43669                           
 43670                           	psect	text100
 43671  5F4F                     __ptext100:	
 43672 ;; *************** function _Lcd_Cmd *****************
 43673 ;; Defined at:
 43674 ;;		line 39 in file "lcd.c"
 43675 ;; Parameters:    Size  Location     Type
 43676 ;;  a               1    wreg     unsigned char 
 43677 ;; Auto vars:     Size  Location     Type
 43678 ;;  a               1    3[COMMON] unsigned char 
 43679 ;; Return value:  Size  Location     Type
 43680 ;;                  1    wreg      void 
 43681 ;; Registers used:
 43682 ;;		wreg, status,2, status,0, pclath, cstack
 43683 ;; Tracked objects:
 43684 ;;		On entry : 0/0
 43685 ;;		On exit  : 3F/0
 43686 ;;		Unchanged: 0/0
 43687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43692 ;;Total ram usage:        2 bytes
 43693 ;; Hardware stack levels used: 1
 43694 ;; Hardware stack levels required when called: unknown (due to recursion)
 43695 ;; This function calls:
 43696 ;;		_Lcd_Port
 43697 ;; This function is called by:
 43698 ;;		_Lcd_Clear
 43699 ;;		_Lcd_Set_Cursor
 43700 ;;		_Lcd_Init
 43701 ;; This function uses a non-reentrant model
 43702 ;;
 43703                           
 43704  5F4F                     _Lcd_Cmd:	
 43705                           ;psect for function _Lcd_Cmd
 43706                           
 43707                           
 43708                           ;incstack = 0
 43709                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 43710                           ;Lcd_Cmd@a stored from wreg
 43711  5F4F  00F3               	movwf	Lcd_Cmd@a
 43712                           
 43713                           ;lcd.c: 42: LATDbits.LATD2 = 0;
 43714  5F50  0140               	movlb	0	; select bank0
 43715  5F51  1119               	bcf	25,2	;volatile
 43716                           
 43717                           ;lcd.c: 43: Lcd_Port(a);
 43718  5F52  0873               	movf	Lcd_Cmd@a,w
 43719  5F53  31DF  27B7  31DF   	fcall	_Lcd_Port
 43720                           
 43721                           ;lcd.c: 44: LATDbits.LATD1 = 1;
 43722  5F56  1499               	bsf	25,1	;volatile
 43723                           
 43724                           ;lcd.c: 45: _delay((unsigned long)((4)*(20000000/4000.0)));
 43725  5F57  301A               	movlw	26
 43726  5F58  00F2               	movwf	??_Lcd_Cmd
 43727  5F59  30F8               	movlw	248
 43728  5F5A                     u13167:
 43729  5F5A  0B89               	decfsz	9,f
 43730  5F5B  2F5A               	goto	u13167
 43731  5F5C  0BF2               	decfsz	??_Lcd_Cmd,f
 43732  5F5D  2F5A               	goto	u13167
 43733  5F5E  3200               	nop2
 43734                           
 43735                           ;lcd.c: 46: LATDbits.LATD1 = 0;
 43736  5F5F  0140               	movlb	0	; select bank0
 43737  5F60  1099               	bcf	25,1	;volatile
 43738  5F61  0008               	return
 43739  5F62                     __end_of_Lcd_Cmd:
 43740                           
 43741                           	psect	text101
 43742  5FB7                     __ptext101:	
 43743 ;; *************** function _Lcd_Port *****************
 43744 ;; Defined at:
 43745 ;;		line 17 in file "lcd.c"
 43746 ;; Parameters:    Size  Location     Type
 43747 ;;  a               1    wreg     unsigned char 
 43748 ;; Auto vars:     Size  Location     Type
 43749 ;;  a               1    1[COMMON] unsigned char 
 43750 ;; Return value:  Size  Location     Type
 43751 ;;                  1    wreg      void 
 43752 ;; Registers used:
 43753 ;;		wreg
 43754 ;; Tracked objects:
 43755 ;;		On entry : 2C/2
 43756 ;;		On exit  : 3F/0
 43757 ;;		Unchanged: 0/0
 43758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43763 ;;Total ram usage:        1 bytes
 43764 ;; Hardware stack levels used: 1
 43765 ;; Hardware stack levels required when called: unknown (due to recursion)
 43766 ;; This function calls:
 43767 ;;		Nothing
 43768 ;; This function is called by:
 43769 ;;		_Lcd_Cmd
 43770 ;;		_Lcd_Init
 43771 ;;		_Lcd_Write_Char
 43772 ;; This function uses a non-reentrant model
 43773 ;;
 43774                           
 43775  5FB7                     _Lcd_Port:	
 43776                           ;psect for function _Lcd_Port
 43777                           
 43778                           
 43779                           ;incstack = 0
 43780                           ; Regs used in _Lcd_Port: [wreg]
 43781                           ;Lcd_Port@a stored from wreg
 43782  5FB7  00F1               	movwf	Lcd_Port@a
 43783                           
 43784                           ;lcd.c: 19: if(a & 1)
 43785  5FB8  1C71               	btfss	Lcd_Port@a,0
 43786  5FB9  2FBD               	goto	l1143
 43787                           
 43788                           ;lcd.c: 20: LATDbits.LATD0 = 1;
 43789  5FBA  0140               	movlb	0	; select bank0
 43790  5FBB  1419               	bsf	25,0	;volatile
 43791  5FBC  2FBF               	goto	l9362
 43792  5FBD                     l1143:
 43793                           
 43794                           ;lcd.c: 21: else;lcd.c: 22: LATDbits.LATD0 = 0;
 43795  5FBD  0140               	movlb	0	; select bank0
 43796  5FBE  1019               	bcf	25,0	;volatile
 43797  5FBF                     l9362:
 43798                           
 43799                           ;lcd.c: 24: if(a & 2)
 43800  5FBF  1CF1               	btfss	Lcd_Port@a,1
 43801  5FC0  2FC3               	goto	l1145
 43802                           
 43803                           ;lcd.c: 25: LATCbits.LATC3 = 1;
 43804  5FC1  1598               	bsf	24,3	;volatile
 43805  5FC2  2FC4               	goto	l9366
 43806  5FC3                     l1145:
 43807                           
 43808                           ;lcd.c: 26: else;lcd.c: 27: LATCbits.LATC3 = 0;
 43809  5FC3  1198               	bcf	24,3	;volatile
 43810  5FC4                     l9366:
 43811                           
 43812                           ;lcd.c: 29: if(a & 4)
 43813  5FC4  1D71               	btfss	Lcd_Port@a,2
 43814  5FC5  2FC8               	goto	l1147
 43815                           
 43816                           ;lcd.c: 30: LATCbits.LATC2 = 1;
 43817  5FC6  1518               	bsf	24,2	;volatile
 43818  5FC7  2FC9               	goto	l9370
 43819  5FC8                     l1147:
 43820                           
 43821                           ;lcd.c: 31: else;lcd.c: 32: LATCbits.LATC2 = 0;
 43822  5FC8  1118               	bcf	24,2	;volatile
 43823  5FC9                     l9370:
 43824                           
 43825                           ;lcd.c: 34: if(a & 8)
 43826  5FC9  1DF1               	btfss	Lcd_Port@a,3
 43827  5FCA  2FCD               	goto	l1149
 43828                           
 43829                           ;lcd.c: 35: LATCbits.LATC1 = 1;
 43830  5FCB  1498               	bsf	24,1	;volatile
 43831  5FCC  0008               	return
 43832  5FCD                     l1149:
 43833                           
 43834                           ;lcd.c: 36: else;lcd.c: 37: LATCbits.LATC1 = 0;
 43835  5FCD  1098               	bcf	24,1	;volatile
 43836  5FCE  0008               	return
 43837  5FCF                     __end_of_Lcd_Port:
 43838                           
 43839                           	psect	intentry
 43840  0004                     __pintentry:	
 43841 ;; *************** function _INTERRUPT_InterruptManager *****************
 43842 ;; Defined at:
 43843 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 43844 ;; Parameters:    Size  Location     Type
 43845 ;;		None
 43846 ;; Auto vars:     Size  Location     Type
 43847 ;;		None
 43848 ;; Return value:  Size  Location     Type
 43849 ;;                  1    wreg      void 
 43850 ;; Registers used:
 43851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 43852 ;; Tracked objects:
 43853 ;;		On entry : 0/0
 43854 ;;		On exit  : 0/0
 43855 ;;		Unchanged: 0/0
 43856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43861 ;;Total ram usage:        0 bytes
 43862 ;; Hardware stack levels used: 1
 43863 ;; Hardware stack levels required when called: unknown (due to recursion)
 43864 ;; This function calls:
 43865 ;;		Absolute function
 43866 ;;		_EUSART_Receive_ISR
 43867 ;;		_EUSART_Transmit_ISR
 43868 ;;		_PIN_MANAGER_IOC
 43869 ;;		_SPI2_Isr
 43870 ;;		_TMR2_ISR
 43871 ;; This function is called by:
 43872 ;;		Interrupt level 1
 43873 ;; This function uses a non-reentrant model
 43874 ;;
 43875                           
 43876  0004                     _INTERRUPT_InterruptManager:
 43877                           
 43878                           ;incstack = 0
 43879  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 43880                           
 43881                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 43882  0005  3180               	pagesel	$
 43883                           
 43884                           ;interrupt_manager.c: 55: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 43885  0006  014E               	movlb	14	; select bank14
 43886  0007  1A16               	btfsc	22,4	;volatile
 43887  0008  1E0C               	btfss	12,4	;volatile
 43888  0009  280D               	goto	i1l8702
 43889                           
 43890                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: PIN_MANAGER_IOC();
 43891  000A  31DF  271D  3180   	fcall	_PIN_MANAGER_IOC
 43892  000D                     i1l8702:
 43893                           
 43894                           ;interrupt_manager.c: 58: };interrupt_manager.c: 59: if(INTCONbits.PEIE == 1)
 43895  000D  1F0B               	btfss	11,6	;volatile
 43896  000E  283E               	goto	i1l299
 43897                           
 43898                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE4bits.TMR2IE == 1 && PIR4bits
      +                          .TMR2IF == 1)
 43899  000F  014E               	movlb	14	; select bank14
 43900  0010  189A               	btfsc	26,1	;volatile
 43901  0011  1C90               	btfss	16,1	;volatile
 43902  0012  2816               	goto	i1l8710
 43903                           
 43904                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR2_ISR();
 43905  0013  31DE  26A1  3180   	fcall	_TMR2_ISR
 43906  0016                     i1l8710:
 43907                           
 43908                           ;interrupt_manager.c: 64: };interrupt_manager.c: 65: if(PIE3bits.RCIE == 1 && PIR3bits.R
      +                          CIF == 1)
 43909  0016  014E               	movlb	14	; select bank14
 43910  0017  1A99               	btfsc	25,5	;volatile
 43911  0018  1E8F               	btfss	15,5	;volatile
 43912  0019  2820               	goto	i1l8716
 43913                           
 43914                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
 43915  001A  0143               	movlb	3	; select bank3
 43916  001B  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 43917  001C  008A               	movwf	10
 43918  001D  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 43919  001E  000A               	callw
 43920  001F  3180               	pagesel	$
 43921  0020                     i1l8716:
 43922                           
 43923                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: if(PIE3bits.TXIE == 1 && PIR3bits.T
      +                          XIF == 1)
 43924  0020  014E               	movlb	14	; select bank14
 43925  0021  1A19               	btfsc	25,4	;volatile
 43926  0022  1E0F               	btfss	15,4	;volatile
 43927  0023  282A               	goto	i1l8722
 43928                           
 43929                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: EUSART_TxDefaultInterruptHandler();
 43930  0024  0143               	movlb	3	; select bank3
 43931  0025  086F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384),w
 43932  0026  008A               	movwf	10
 43933  0027  086E               	movf	_EUSART_TxDefaultInterruptHandler^(0+384),w
 43934  0028  000A               	callw
 43935  0029  3180               	pagesel	$
 43936  002A                     i1l8722:
 43937                           
 43938                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: if(PIE3bits.SSP2IE == 1 && PIR3bits
      +                          .SSP2IF == 1)
 43939  002A  014E               	movlb	14	; select bank14
 43940  002B  1919               	btfsc	25,2	;volatile
 43941  002C  1D0F               	btfss	15,2	;volatile
 43942  002D  2834               	goto	i1l8728
 43943                           
 43944                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: MSSP2_InterruptHandler();
 43945  002E  0142               	movlb	2	; select bank2
 43946  002F  086A               	movf	(_MSSP2_InterruptHandler+1)^(0+256),w
 43947  0030  008A               	movwf	10
 43948  0031  0869               	movf	_MSSP2_InterruptHandler^(0+256),w
 43949  0032  000A               	callw
 43950  0033  3180               	pagesel	$
 43951  0034                     i1l8728:
 43952                           
 43953                           ;interrupt_manager.c: 76: };interrupt_manager.c: 77: if(PIE3bits.BCL2IE == 1 && PIR3bits
      +                          .BCL2IF == 1)
 43954  0034  014E               	movlb	14	; select bank14
 43955  0035  1999               	btfsc	25,3	;volatile
 43956  0036  1D8F               	btfss	15,3	;volatile
 43957  0037  283E               	goto	i1l299
 43958                           
 43959                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: MSSP2_InterruptHandler();
 43960  0038  0142               	movlb	2	; select bank2
 43961  0039  086A               	movf	(_MSSP2_InterruptHandler+1)^(0+256),w
 43962  003A  008A               	movwf	10
 43963  003B  0869               	movf	_MSSP2_InterruptHandler^(0+256),w
 43964  003C  000A               	callw
 43965  003D  3180               	pagesel	$
 43966  003E                     i1l299:
 43967  003E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 43968  003F  0009               	retfie
 43969  0040                     __end_of_INTERRUPT_InterruptManager:
 43970                           
 43971                           	psect	text103
 43972  5EA1                     __ptext103:	
 43973 ;; *************** function _TMR2_ISR *****************
 43974 ;; Defined at:
 43975 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 43976 ;; Parameters:    Size  Location     Type
 43977 ;;		None
 43978 ;; Auto vars:     Size  Location     Type
 43979 ;;		None
 43980 ;; Return value:  Size  Location     Type
 43981 ;;                  1    wreg      void 
 43982 ;; Registers used:
 43983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 43984 ;; Tracked objects:
 43985 ;;		On entry : 3F/E
 43986 ;;		On exit  : 0/0
 43987 ;;		Unchanged: 0/0
 43988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 43989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 43993 ;;Total ram usage:        0 bytes
 43994 ;; Hardware stack levels used: 1
 43995 ;; Hardware stack levels required when called: 1
 43996 ;; This function calls:
 43997 ;;		Absolute function
 43998 ;;		_TMR2_DefaultInterruptHandler
 43999 ;;		_task10ms
 44000 ;; This function is called by:
 44001 ;;		_INTERRUPT_InterruptManager
 44002 ;; This function uses a non-reentrant model
 44003 ;;
 44004                           
 44005  5EA1                     _TMR2_ISR:	
 44006                           ;psect for function _TMR2_ISR
 44007                           
 44008                           
 44009                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 44010                           
 44011                           ;incstack = 0
 44012                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 44013  5EA1  1090               	bcf	16,1	;volatile
 44014                           
 44015                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 44016  5EA2  0142               	movlb	2	; select bank2
 44017  5EA3  0861               	movf	_TMR2_InterruptHandler^(0+256),w
 44018  5EA4  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 44019  5EA5  1903               	btfsc	3,2
 44020  5EA6  0008               	return
 44021                           
 44022                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 44023  5EA7  0862               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 44024  5EA8  008A               	movwf	10
 44025  5EA9  0861               	movf	_TMR2_InterruptHandler^(0+256),w
 44026  5EAA  000A               	callw
 44027  5EAB  31DE               	pagesel	$
 44028  5EAC  0008               	return
 44029  5EAD                     __end_of_TMR2_ISR:
 44030                           
 44031                           	psect	text104
 44032  1C87                     __ptext104:	
 44033 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 44034 ;; Defined at:
 44035 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 44036 ;; Parameters:    Size  Location     Type
 44037 ;;		None
 44038 ;; Auto vars:     Size  Location     Type
 44039 ;;		None
 44040 ;; Return value:  Size  Location     Type
 44041 ;;                  1    wreg      void 
 44042 ;; Registers used:
 44043 ;;		None
 44044 ;; Tracked objects:
 44045 ;;		On entry : 3F/2
 44046 ;;		On exit  : 3F/2
 44047 ;;		Unchanged: 3F/0
 44048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44053 ;;Total ram usage:        0 bytes
 44054 ;; Hardware stack levels used: 1
 44055 ;; This function calls:
 44056 ;;		Nothing
 44057 ;; This function is called by:
 44058 ;;		_TMR2_Initialize
 44059 ;;		_TMR2_ISR
 44060 ;; This function uses a non-reentrant model
 44061 ;;
 44062                           
 44063  1C87                     _TMR2_DefaultInterruptHandler:	
 44064                           ;psect for function _TMR2_DefaultInterruptHandler
 44065                           
 44066                           
 44067                           ;incstack = 0
 44068                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 44069  1C87  0008               	return
 44070  1C88                     __end_of_TMR2_DefaultInterruptHandler:
 44071                           
 44072                           	psect	text105
 44073  5585                     __ptext105:	
 44074 ;; *************** function _task10ms *****************
 44075 ;; Defined at:
 44076 ;;		line 19 in file "tasks.c"
 44077 ;; Parameters:    Size  Location     Type
 44078 ;;		None
 44079 ;; Auto vars:     Size  Location     Type
 44080 ;;		None
 44081 ;; Return value:  Size  Location     Type
 44082 ;;                  1    wreg      void 
 44083 ;; Registers used:
 44084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 44085 ;; Tracked objects:
 44086 ;;		On entry : 3F/2
 44087 ;;		On exit  : 3F/0
 44088 ;;		Unchanged: 0/0
 44089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44094 ;;Total ram usage:        1 bytes
 44095 ;; Hardware stack levels used: 1
 44096 ;; This function calls:
 44097 ;;		Nothing
 44098 ;; This function is called by:
 44099 ;;		_main
 44100 ;;		_TMR2_ISR
 44101 ;; This function uses a non-reentrant model
 44102 ;;
 44103                           
 44104  5585                     _task10ms:	
 44105                           ;psect for function _task10ms
 44106                           
 44107                           
 44108                           ;tasks.c: 21: if(bt.timeAlarme) bt.timeAlarme--;
 44109                           
 44110                           ;incstack = 0
 44111                           ; Regs used in _task10ms: [wreg-fsr0h+status,2+status,0]
 44112  5585  0825               	movf	(_bt^(0+256)+5),w	;volatile
 44113  5586  1903               	btfsc	3,2
 44114  5587  2D8B               	goto	i1l1373
 44115  5588  3001               	movlw	1
 44116  5589  02A5               	subwf	(_bt^(0+256)+5),f	;volatile
 44117  558A  2D8C               	goto	i1l8116
 44118  558B                     i1l1373:
 44119                           
 44120                           ;tasks.c: 22: else alarme.Btt = 0;
 44121  558B  10B0               	bcf	_alarme^(0+256),1	;volatile
 44122  558C                     i1l8116:
 44123                           
 44124                           ;tasks.c: 24: if(!bt.value){
 44125  558C  0820               	movf	_bt^(0+256),w	;volatile
 44126  558D  1903               	btfsc	3,2
 44127  558E  2D9F               	goto	i1l8124
 44128  558F  2DBB               	goto	i1l8130
 44129  5590                     i1l1378:
 44130                           
 44131                           ;tasks.c: 28: LATBbits.LATB0 = 1;
 44132  5590  0140               	movlb	0	; select bank0
 44133  5591  1417               	bsf	23,0	;volatile
 44134                           
 44135                           ;tasks.c: 29: break;
 44136  5592  2DB4               	goto	i1l8126
 44137  5593                     i1l1381:
 44138                           
 44139                           ;tasks.c: 31: LATBbits.LATB1 = 1;
 44140  5593  0140               	movlb	0	; select bank0
 44141  5594  1497               	bsf	23,1	;volatile
 44142                           
 44143                           ;tasks.c: 32: break;
 44144  5595  2DB4               	goto	i1l8126
 44145  5596                     i1l1383:
 44146                           
 44147                           ;tasks.c: 34: LATBbits.LATB2 = 1;
 44148  5596  0140               	movlb	0	; select bank0
 44149  5597  1517               	bsf	23,2	;volatile
 44150                           
 44151                           ;tasks.c: 35: break;
 44152  5598  2DB4               	goto	i1l8126
 44153  5599                     i1l8120:
 44154                           
 44155                           ;tasks.c: 37: LATB &= 0xC0;
 44156  5599  30C0               	movlw	192
 44157  559A  00F0               	movwf	??_task10ms
 44158  559B  0870               	movf	??_task10ms,w
 44159  559C  0140               	movlb	0	; select bank0
 44160  559D  0597               	andwf	23,f	;volatile
 44161                           
 44162                           ;tasks.c: 38: break;
 44163  559E  2DB4               	goto	i1l8126
 44164  559F                     i1l8124:
 44165  559F  0823               	movf	(_bt^(0+256)+3),w	;volatile
 44166  55A0  0AA3               	incf	(_bt^(0+256)+3),f	;volatile
 44167                           
 44168                           ; Switch size 1, requested type "simple"
 44169                           ; Number of cases is 6, Range of values is 1 to 10
 44170                           ; switch strategies available:
 44171                           ; Name         Instructions Cycles
 44172                           ; simple_byte           19    10 (average)
 44173                           ; direct_byte           29     9 (fixed)
 44174                           ; jumptable            263     9 (fixed)
 44175                           ;	Chosen strategy is simple_byte
 44176  55A1  3A01               	xorlw	1	; case 1
 44177  55A2  1903               	skipnz
 44178  55A3  2D90               	goto	i1l1378
 44179  55A4  3A03               	xorlw	3	; case 2
 44180  55A5  1903               	skipnz
 44181  55A6  2D90               	goto	i1l1378
 44182  55A7  3A07               	xorlw	7	; case 5
 44183  55A8  1903               	skipnz
 44184  55A9  2D93               	goto	i1l1381
 44185  55AA  3A03               	xorlw	3	; case 6
 44186  55AB  1903               	skipnz
 44187  55AC  2D93               	goto	i1l1381
 44188  55AD  3A0F               	xorlw	15	; case 9
 44189  55AE  1903               	skipnz
 44190  55AF  2D96               	goto	i1l1383
 44191  55B0  3A03               	xorlw	3	; case 10
 44192  55B1  1903               	skipnz
 44193  55B2  2D96               	goto	i1l1383
 44194  55B3  2D99               	goto	i1l8120
 44195  55B4                     i1l8126:
 44196                           
 44197                           ;tasks.c: 40: if(!(bt.btt^12)){
 44198  55B4  0142               	movlb	2	; select bank2
 44199  55B5  0823               	movf	(_bt^(0+256)+3),w	;volatile
 44200  55B6  3A0C               	xorlw	12
 44201  55B7  1D03               	btfss	3,2
 44202  55B8  2DDF               	goto	i1l8152
 44203  55B9                     i1l8128:
 44204                           
 44205                           ;tasks.c: 41: bt.btt = 0;
 44206  55B9  01A3               	clrf	(_bt^(0+256)+3)	;volatile
 44207  55BA  2DDF               	goto	i1l8152
 44208  55BB                     i1l8130:
 44209                           
 44210                           ;tasks.c: 44: else if(!bt.Loop && !bt.exec){
 44211  55BB  0822               	movf	(_bt^(0+256)+2),w	;volatile
 44212  55BC  1D03               	btfss	3,2
 44213  55BD  2DCF               	goto	i1l8142
 44214  55BE  0821               	movf	(_bt^(0+256)+1),w	;volatile
 44215  55BF  1D03               	btfss	3,2
 44216  55C0  2DCF               	goto	i1l8142
 44217                           
 44218                           ;tasks.c: 45: bt.holdBtt++;
 44219  55C1  3001               	movlw	1
 44220  55C2  00F0               	movwf	??_task10ms
 44221  55C3  0870               	movf	??_task10ms,w
 44222  55C4  07A4               	addwf	(_bt^(0+256)+4),f	;volatile
 44223                           
 44224                           ;tasks.c: 46: if(bt.holdBtt == 50){
 44225  55C5  3032               	movlw	50
 44226  55C6  0624               	xorwf	(_bt^(0+256)+4),w	;volatile
 44227  55C7  1D03               	btfss	3,2
 44228  55C8  2DDF               	goto	i1l8152
 44229                           
 44230                           ;tasks.c: 47: bt.holdBtt = 0;
 44231  55C9  01A4               	clrf	(_bt^(0+256)+4)	;volatile
 44232                           
 44233                           ;tasks.c: 48: bt.Loop = 1;
 44234  55CA  3001               	movlw	1
 44235  55CB  00F0               	movwf	??_task10ms
 44236  55CC  0870               	movf	??_task10ms,w
 44237  55CD  00A2               	movwf	(_bt^(0+256)+2)	;volatile
 44238  55CE  2DB9               	goto	i1l8128
 44239  55CF                     i1l8142:
 44240                           
 44241                           ;tasks.c: 52: else if(bt.Loop){
 44242  55CF  0822               	movf	(_bt^(0+256)+2),w	;volatile
 44243  55D0  1903               	btfsc	3,2
 44244  55D1  2DB9               	goto	i1l8128
 44245                           
 44246                           ;tasks.c: 53: bt.btt++;
 44247  55D2  3001               	movlw	1
 44248  55D3  00F0               	movwf	??_task10ms
 44249  55D4  0870               	movf	??_task10ms,w
 44250  55D5  07A3               	addwf	(_bt^(0+256)+3),f	;volatile
 44251                           
 44252                           ;tasks.c: 54: if(bt.btt == 10){
 44253  55D6  300A               	movlw	10
 44254  55D7  0623               	xorwf	(_bt^(0+256)+3),w	;volatile
 44255  55D8  1D03               	btfss	3,2
 44256  55D9  2DDF               	goto	i1l8152
 44257                           
 44258                           ;tasks.c: 55: bt.btt = 0;
 44259  55DA  01A3               	clrf	(_bt^(0+256)+3)	;volatile
 44260                           
 44261                           ;tasks.c: 56: bt.exec = 1;
 44262  55DB  3001               	movlw	1
 44263  55DC  00F0               	movwf	??_task10ms
 44264  55DD  0870               	movf	??_task10ms,w
 44265  55DE  00A1               	movwf	(_bt^(0+256)+1)	;volatile
 44266  55DF                     i1l8152:
 44267                           
 44268                           ;tasks.c: 61: if(alarme.All) LATAbits.LATA0 = 1;
 44269  55DF  0830               	movf	_alarme^(0+256),w	;volatile
 44270  55E0  1903               	btfsc	3,2
 44271  55E1  2DE5               	goto	i1l1393
 44272  55E2  0140               	movlb	0	; select bank0
 44273  55E3  1416               	bsf	22,0	;volatile
 44274  55E4  0008               	return
 44275  55E5                     i1l1393:
 44276                           
 44277                           ;tasks.c: 62: else LATAbits.LATA0 = 0;
 44278  55E5  0140               	movlb	0	; select bank0
 44279  55E6  1016               	bcf	22,0	;volatile
 44280  55E7  0008               	return
 44281  55E8                     __end_of_task10ms:
 44282                           
 44283                           	psect	text106
 44284  5F1D                     __ptext106:	
 44285 ;; *************** function _PIN_MANAGER_IOC *****************
 44286 ;; Defined at:
 44287 ;;		line 168 in file "mcc_generated_files/pin_manager.c"
 44288 ;; Parameters:    Size  Location     Type
 44289 ;;		None
 44290 ;; Auto vars:     Size  Location     Type
 44291 ;;		None
 44292 ;; Return value:  Size  Location     Type
 44293 ;;                  1    wreg      void 
 44294 ;; Registers used:
 44295 ;;		wreg, status,2, status,0, pclath, cstack
 44296 ;; Tracked objects:
 44297 ;;		On entry : 3F/E
 44298 ;;		On exit  : 3F/3E
 44299 ;;		Unchanged: 0/0
 44300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44305 ;;Total ram usage:        0 bytes
 44306 ;; Hardware stack levels used: 1
 44307 ;; Hardware stack levels required when called: 2
 44308 ;; This function calls:
 44309 ;;		_IOCBF3_ISR
 44310 ;;		_IOCBF4_ISR
 44311 ;;		_IOCBF5_ISR
 44312 ;; This function is called by:
 44313 ;;		_INTERRUPT_InterruptManager
 44314 ;; This function uses a non-reentrant model
 44315 ;;
 44316                           
 44317  5F1D                     _PIN_MANAGER_IOC:	
 44318                           ;psect for function _PIN_MANAGER_IOC
 44319                           
 44320                           
 44321                           ;pin_manager.c: 171: if(IOCBFbits.IOCBF3 == 1)
 44322                           
 44323                           ;incstack = 0
 44324                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 44325  5F1D  017E               	movlb	62	; select bank62
 44326  5F1E  1DCA               	btfss	74,3	;volatile
 44327  5F1F  2F23               	goto	i1l8356
 44328                           
 44329                           ;pin_manager.c: 172: {;pin_manager.c: 173: IOCBF3_ISR();
 44330  5F20  31DE  26B9  31DF   	fcall	_IOCBF3_ISR
 44331  5F23                     i1l8356:
 44332                           
 44333                           ;pin_manager.c: 174: };pin_manager.c: 176: if(IOCBFbits.IOCBF4 == 1)
 44334  5F23  1E4A               	btfss	74,4	;volatile
 44335  5F24  2F28               	goto	i1l8360
 44336                           
 44337                           ;pin_manager.c: 177: {;pin_manager.c: 178: IOCBF4_ISR();
 44338  5F25  31DE  26C6  31DF   	fcall	_IOCBF4_ISR
 44339  5F28                     i1l8360:
 44340                           
 44341                           ;pin_manager.c: 179: };pin_manager.c: 181: if(IOCBFbits.IOCBF5 == 1)
 44342  5F28  1ECA               	btfss	74,5	;volatile
 44343  5F29  0008               	return
 44344                           
 44345                           ;pin_manager.c: 182: {;pin_manager.c: 183: IOCBF5_ISR();
 44346  5F2A  31A8  2000         	fcall	_IOCBF5_ISR
 44347  5F2C  0008               	return
 44348  5F2D                     __end_of_PIN_MANAGER_IOC:
 44349                           
 44350                           	psect	text107
 44351  2800                     __ptext107:	
 44352 ;; *************** function _IOCBF5_ISR *****************
 44353 ;; Defined at:
 44354 ;;		line 250 in file "mcc_generated_files/pin_manager.c"
 44355 ;; Parameters:    Size  Location     Type
 44356 ;;		None
 44357 ;; Auto vars:     Size  Location     Type
 44358 ;;		None
 44359 ;; Return value:  Size  Location     Type
 44360 ;;                  1    wreg      void 
 44361 ;; Registers used:
 44362 ;;		wreg, status,2, status,0, pclath, cstack
 44363 ;; Tracked objects:
 44364 ;;		On entry : 3F/3E
 44365 ;;		On exit  : 3F/3E
 44366 ;;		Unchanged: 0/0
 44367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44372 ;;Total ram usage:        0 bytes
 44373 ;; Hardware stack levels used: 1
 44374 ;; Hardware stack levels required when called: 1
 44375 ;; This function calls:
 44376 ;;		Absolute function
 44377 ;;		_IOCBF5_DefaultInterruptHandler
 44378 ;;		_btFunc
 44379 ;; This function is called by:
 44380 ;;		_PIN_MANAGER_IOC
 44381 ;; This function uses a non-reentrant model
 44382 ;;
 44383                           
 44384  2800                     _IOCBF5_ISR:	
 44385                           ;psect for function _IOCBF5_ISR
 44386                           
 44387                           
 44388                           ;pin_manager.c: 255: if(IOCBF5_InterruptHandler)
 44389                           
 44390                           ;incstack = 0
 44391                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 44392  2800  0142               	movlb	2	; select bank2
 44393  2801  0863               	movf	_IOCBF5_InterruptHandler^(0+256),w
 44394  2802  0464               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+256),w
 44395  2803  1903               	btfsc	3,2
 44396  2804  280A               	goto	i1l7978
 44397                           
 44398                           ;pin_manager.c: 256: {;pin_manager.c: 257: IOCBF5_InterruptHandler();
 44399  2805  0864               	movf	(_IOCBF5_InterruptHandler+1)^(0+256),w
 44400  2806  008A               	movwf	10
 44401  2807  0863               	movf	_IOCBF5_InterruptHandler^(0+256),w
 44402  2808  000A               	callw
 44403  2809  31A8               	pagesel	$
 44404  280A                     i1l7978:
 44405                           
 44406                           ;pin_manager.c: 258: };pin_manager.c: 259: IOCBFbits.IOCBF5 = 0;
 44407  280A  017E               	movlb	62	; select bank62
 44408  280B  12CA               	bcf	74,5	;volatile
 44409  280C  0008               	return
 44410  280D                     __end_of_IOCBF5_ISR:
 44411                           
 44412                           	psect	text108
 44413  1C86                     __ptext108:	
 44414 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 44415 ;; Defined at:
 44416 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 44417 ;; Parameters:    Size  Location     Type
 44418 ;;		None
 44419 ;; Auto vars:     Size  Location     Type
 44420 ;;		None
 44421 ;; Return value:  Size  Location     Type
 44422 ;;                  1    wreg      void 
 44423 ;; Registers used:
 44424 ;;		None
 44425 ;; Tracked objects:
 44426 ;;		On entry : 3F/2
 44427 ;;		On exit  : 3F/2
 44428 ;;		Unchanged: 3F/0
 44429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44434 ;;Total ram usage:        0 bytes
 44435 ;; Hardware stack levels used: 1
 44436 ;; This function calls:
 44437 ;;		Nothing
 44438 ;; This function is called by:
 44439 ;;		_PIN_MANAGER_Initialize
 44440 ;;		_IOCBF3_ISR
 44441 ;; This function uses a non-reentrant model
 44442 ;;
 44443                           
 44444  1C86                     _IOCBF3_DefaultInterruptHandler:	
 44445                           ;psect for function _IOCBF3_DefaultInterruptHandler
 44446                           
 44447                           
 44448                           ;incstack = 0
 44449                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 44450  1C86  0008               	return
 44451  1C87                     __end_of_IOCBF3_DefaultInterruptHandler:
 44452                           
 44453                           	psect	text109
 44454  2000                     __ptext109:	
 44455 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 44456 ;; Defined at:
 44457 ;;		line 242 in file "mcc_generated_files/pin_manager.c"
 44458 ;; Parameters:    Size  Location     Type
 44459 ;;		None
 44460 ;; Auto vars:     Size  Location     Type
 44461 ;;		None
 44462 ;; Return value:  Size  Location     Type
 44463 ;;                  1    wreg      void 
 44464 ;; Registers used:
 44465 ;;		None
 44466 ;; Tracked objects:
 44467 ;;		On entry : 3F/2
 44468 ;;		On exit  : 3F/2
 44469 ;;		Unchanged: 3F/0
 44470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44475 ;;Total ram usage:        0 bytes
 44476 ;; Hardware stack levels used: 1
 44477 ;; This function calls:
 44478 ;;		Nothing
 44479 ;; This function is called by:
 44480 ;;		_PIN_MANAGER_Initialize
 44481 ;;		_IOCBF4_ISR
 44482 ;; This function uses a non-reentrant model
 44483 ;;
 44484                           
 44485  2000                     _IOCBF4_DefaultInterruptHandler:	
 44486                           ;psect for function _IOCBF4_DefaultInterruptHandler
 44487                           
 44488                           
 44489                           ;incstack = 0
 44490                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 44491  2000  0008               	return
 44492  2001                     __end_of_IOCBF4_DefaultInterruptHandler:
 44493                           
 44494                           	psect	text110
 44495  5074                     __ptext110:	
 44496 ;; *************** function _btFunc *****************
 44497 ;; Defined at:
 44498 ;;		line 3 in file "tasks.c"
 44499 ;; Parameters:    Size  Location     Type
 44500 ;;		None
 44501 ;; Auto vars:     Size  Location     Type
 44502 ;;		None
 44503 ;; Return value:  Size  Location     Type
 44504 ;;                  1    wreg      void 
 44505 ;; Registers used:
 44506 ;;		wreg, status,2, status,0
 44507 ;; Tracked objects:
 44508 ;;		On entry : 3F/2
 44509 ;;		On exit  : 3F/2
 44510 ;;		Unchanged: 0/0
 44511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44516 ;;Total ram usage:        1 bytes
 44517 ;; Hardware stack levels used: 1
 44518 ;; This function calls:
 44519 ;;		Nothing
 44520 ;; This function is called by:
 44521 ;;		_main
 44522 ;;		_IOCBF3_ISR
 44523 ;;		_IOCBF4_ISR
 44524 ;;		_IOCBF5_ISR
 44525 ;; This function uses a non-reentrant model
 44526 ;;
 44527                           
 44528  5074                     _btFunc:	
 44529                           ;psect for function _btFunc
 44530                           
 44531                           
 44532                           ;tasks.c: 4: if(PORTB&0x38){
 44533                           
 44534                           ;incstack = 0
 44535                           ; Regs used in _btFunc: [wreg+status,2+status,0]
 44536  5074  0140               	movlb	0	; select bank0
 44537  5075  080D               	movf	13,w	;volatile
 44538  5076  3938               	andlw	56
 44539  5077  1903               	btfsc	3,2
 44540  5078  288E               	goto	i1l7678
 44541                           
 44542                           ;tasks.c: 5: if(!bt.exec){
 44543  5079  0142               	movlb	2	; select bank2
 44544  507A  0821               	movf	(_bt^(0+256)+1),w	;volatile
 44545  507B  1D03               	btfss	3,2
 44546  507C  0008               	return
 44547                           
 44548                           ;tasks.c: 6: bt.value = PORTB&0x3F;
 44549  507D  0140               	movlb	0	; select bank0
 44550  507E  080D               	movf	13,w	;volatile
 44551  507F  393F               	andlw	63
 44552  5080  00F0               	movwf	??_btFunc
 44553  5081  0870               	movf	??_btFunc,w
 44554  5082  0142               	movlb	2	; select bank2
 44555  5083  00A0               	movwf	_bt^(0+256)	;volatile
 44556                           
 44557                           ;tasks.c: 7: bt.exec = 1;
 44558  5084  3001               	movlw	1
 44559  5085  00F0               	movwf	??_btFunc
 44560  5086  0870               	movf	??_btFunc,w
 44561  5087  00A1               	movwf	(_bt^(0+256)+1)	;volatile
 44562                           
 44563                           ;tasks.c: 8: bt.timeAlarme = 4;
 44564  5088  3004               	movlw	4
 44565  5089  00F0               	movwf	??_btFunc
 44566  508A  0870               	movf	??_btFunc,w
 44567  508B  00A5               	movwf	(_bt^(0+256)+5)	;volatile
 44568                           
 44569                           ;tasks.c: 9: alarme.Btt = 1;
 44570  508C  14B0               	bsf	_alarme^(0+256),1	;volatile
 44571  508D  0008               	return
 44572  508E                     i1l7678:
 44573                           
 44574                           ;tasks.c: 12: else{;tasks.c: 13: bt.exec = 0;
 44575  508E  0142               	movlb	2	; select bank2
 44576  508F  01A1               	clrf	(_bt^(0+256)+1)	;volatile
 44577                           
 44578                           ;tasks.c: 14: bt.value = 0;
 44579  5090  01A0               	clrf	_bt^(0+256)	;volatile
 44580                           
 44581                           ;tasks.c: 15: bt.Loop = 0;
 44582  5091  01A2               	clrf	(_bt^(0+256)+2)	;volatile
 44583  5092  0008               	return
 44584  5093                     __end_of_btFunc:
 44585                           
 44586                           	psect	text111
 44587  3801                     __ptext111:	
 44588 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 44589 ;; Defined at:
 44590 ;;		line 272 in file "mcc_generated_files/pin_manager.c"
 44591 ;; Parameters:    Size  Location     Type
 44592 ;;		None
 44593 ;; Auto vars:     Size  Location     Type
 44594 ;;		None
 44595 ;; Return value:  Size  Location     Type
 44596 ;;                  1    wreg      void 
 44597 ;; Registers used:
 44598 ;;		None
 44599 ;; Tracked objects:
 44600 ;;		On entry : 3F/2
 44601 ;;		On exit  : 3F/2
 44602 ;;		Unchanged: 3F/0
 44603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44608 ;;Total ram usage:        0 bytes
 44609 ;; Hardware stack levels used: 1
 44610 ;; This function calls:
 44611 ;;		Nothing
 44612 ;; This function is called by:
 44613 ;;		_PIN_MANAGER_Initialize
 44614 ;;		_IOCBF5_ISR
 44615 ;; This function uses a non-reentrant model
 44616 ;;
 44617                           
 44618  3801                     _IOCBF5_DefaultInterruptHandler:	
 44619                           ;psect for function _IOCBF5_DefaultInterruptHandler
 44620                           
 44621                           
 44622                           ;incstack = 0
 44623                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 44624  3801  0008               	return
 44625  3802                     __end_of_IOCBF5_DefaultInterruptHandler:
 44626                           
 44627                           	psect	text112
 44628  5EC6                     __ptext112:	
 44629 ;; *************** function _IOCBF4_ISR *****************
 44630 ;; Defined at:
 44631 ;;		line 220 in file "mcc_generated_files/pin_manager.c"
 44632 ;; Parameters:    Size  Location     Type
 44633 ;;		None
 44634 ;; Auto vars:     Size  Location     Type
 44635 ;;		None
 44636 ;; Return value:  Size  Location     Type
 44637 ;;                  1    wreg      void 
 44638 ;; Registers used:
 44639 ;;		wreg, status,2, status,0, pclath, cstack
 44640 ;; Tracked objects:
 44641 ;;		On entry : 3F/3E
 44642 ;;		On exit  : 3F/3E
 44643 ;;		Unchanged: 0/0
 44644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44649 ;;Total ram usage:        0 bytes
 44650 ;; Hardware stack levels used: 1
 44651 ;; Hardware stack levels required when called: 1
 44652 ;; This function calls:
 44653 ;;		Absolute function
 44654 ;;		_IOCBF4_DefaultInterruptHandler
 44655 ;;		_btFunc
 44656 ;; This function is called by:
 44657 ;;		_PIN_MANAGER_IOC
 44658 ;; This function uses a non-reentrant model
 44659 ;;
 44660                           
 44661  5EC6                     _IOCBF4_ISR:	
 44662                           ;psect for function _IOCBF4_ISR
 44663                           
 44664                           
 44665                           ;pin_manager.c: 225: if(IOCBF4_InterruptHandler)
 44666                           
 44667                           ;incstack = 0
 44668                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 44669  5EC6  0142               	movlb	2	; select bank2
 44670  5EC7  0865               	movf	_IOCBF4_InterruptHandler^(0+256),w
 44671  5EC8  0466               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+256),w
 44672  5EC9  1903               	btfsc	3,2
 44673  5ECA  2ED0               	goto	i1l7972
 44674                           
 44675                           ;pin_manager.c: 226: {;pin_manager.c: 227: IOCBF4_InterruptHandler();
 44676  5ECB  0866               	movf	(_IOCBF4_InterruptHandler+1)^(0+256),w
 44677  5ECC  008A               	movwf	10
 44678  5ECD  0865               	movf	_IOCBF4_InterruptHandler^(0+256),w
 44679  5ECE  000A               	callw
 44680  5ECF  31DE               	pagesel	$
 44681  5ED0                     i1l7972:
 44682                           
 44683                           ;pin_manager.c: 228: };pin_manager.c: 229: IOCBFbits.IOCBF4 = 0;
 44684  5ED0  017E               	movlb	62	; select bank62
 44685  5ED1  124A               	bcf	74,4	;volatile
 44686  5ED2  0008               	return
 44687  5ED3                     __end_of_IOCBF4_ISR:
 44688                           
 44689                           	psect	text113
 44690  5EB9                     __ptext113:	
 44691 ;; *************** function _IOCBF3_ISR *****************
 44692 ;; Defined at:
 44693 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 44694 ;; Parameters:    Size  Location     Type
 44695 ;;		None
 44696 ;; Auto vars:     Size  Location     Type
 44697 ;;		None
 44698 ;; Return value:  Size  Location     Type
 44699 ;;                  1    wreg      void 
 44700 ;; Registers used:
 44701 ;;		wreg, status,2, status,0, pclath, cstack
 44702 ;; Tracked objects:
 44703 ;;		On entry : 3F/3E
 44704 ;;		On exit  : 3F/3E
 44705 ;;		Unchanged: 0/0
 44706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44711 ;;Total ram usage:        0 bytes
 44712 ;; Hardware stack levels used: 1
 44713 ;; Hardware stack levels required when called: 1
 44714 ;; This function calls:
 44715 ;;		Absolute function
 44716 ;;		_IOCBF3_DefaultInterruptHandler
 44717 ;;		_btFunc
 44718 ;; This function is called by:
 44719 ;;		_PIN_MANAGER_IOC
 44720 ;; This function uses a non-reentrant model
 44721 ;;
 44722                           
 44723  5EB9                     _IOCBF3_ISR:	
 44724                           ;psect for function _IOCBF3_ISR
 44725                           
 44726                           
 44727                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 44728                           
 44729                           ;incstack = 0
 44730                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 44731  5EB9  0142               	movlb	2	; select bank2
 44732  5EBA  0867               	movf	_IOCBF3_InterruptHandler^(0+256),w
 44733  5EBB  0468               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+256),w
 44734  5EBC  1903               	btfsc	3,2
 44735  5EBD  2EC3               	goto	i1l7966
 44736                           
 44737                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 44738  5EBE  0868               	movf	(_IOCBF3_InterruptHandler+1)^(0+256),w
 44739  5EBF  008A               	movwf	10
 44740  5EC0  0867               	movf	_IOCBF3_InterruptHandler^(0+256),w
 44741  5EC1  000A               	callw
 44742  5EC2  31DE               	pagesel	$
 44743  5EC3                     i1l7966:
 44744                           
 44745                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 44746  5EC3  017E               	movlb	62	; select bank62
 44747  5EC4  11CA               	bcf	74,3	;volatile
 44748  5EC5  0008               	return
 44749  5EC6                     __end_of_IOCBF3_ISR:
 44750                           
 44751                           	psect	text114
 44752  50F0                     __ptext114:	
 44753 ;; *************** function _EUSART_Transmit_ISR *****************
 44754 ;; Defined at:
 44755 ;;		line 206 in file "mcc_generated_files/eusart.c"
 44756 ;; Parameters:    Size  Location     Type
 44757 ;;		None
 44758 ;; Auto vars:     Size  Location     Type
 44759 ;;		None
 44760 ;; Return value:  Size  Location     Type
 44761 ;;                  1    wreg      void 
 44762 ;; Registers used:
 44763 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 44764 ;; Tracked objects:
 44765 ;;		On entry : 3F/3
 44766 ;;		On exit  : 33/2
 44767 ;;		Unchanged: 0/0
 44768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44773 ;;Total ram usage:        1 bytes
 44774 ;; Hardware stack levels used: 1
 44775 ;; This function calls:
 44776 ;;		Nothing
 44777 ;; This function is called by:
 44778 ;;		_EUSART_Initialize
 44779 ;;		_INTERRUPT_InterruptManager
 44780 ;; This function uses a non-reentrant model
 44781 ;;
 44782                           
 44783  50F0                     _EUSART_Transmit_ISR:	
 44784                           ;psect for function _EUSART_Transmit_ISR
 44785                           
 44786                           
 44787                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 44788                           
 44789                           ;incstack = 0
 44790                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 44791  50F0  3020               	movlw	32
 44792  50F1  0142               	movlb	2	; select bank2
 44793  50F2  026B               	subwf	_eusartTxBufferRemaining^(0+256),w
 44794  50F3  1803               	skipnc
 44795  50F4  290D               	goto	i1l112
 44796                           
 44797                           ;eusart.c: 211: {;eusart.c: 212: TX1REG = eusartTxBuffer[eusartTxTail++];
 44798  50F5  0141               	movlb	1	; select bank1
 44799  50F6  086E               	movf	_eusartTxTail^(0+128),w
 44800  50F7  3E40               	addlw	(low (_eusartTxBuffer| (0+768)))& (0+255)
 44801  50F8  0086               	movwf	6
 44802  50F9  3003               	movlw	3	; select bank6/7
 44803  50FA  0087               	movwf	7
 44804  50FB  0801               	movf	1,w
 44805  50FC  0142               	movlb	2	; select bank2
 44806  50FD  009A               	movwf	26	;volatile
 44807  50FE  3001               	movlw	1
 44808  50FF  00F0               	movwf	??_EUSART_Transmit_ISR
 44809  5100  0870               	movf	??_EUSART_Transmit_ISR,w
 44810  5101  0141               	movlb	1	; select bank1
 44811  5102  07EE               	addwf	_eusartTxTail^(0+128),f	;volatile
 44812                           
 44813                           ;eusart.c: 213: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 44814  5103  3020               	movlw	32
 44815  5104  026E               	subwf	_eusartTxTail^(0+128),w
 44816  5105  1803               	btfsc	3,0
 44817                           
 44818                           ;eusart.c: 214: {;eusart.c: 215: eusartTxTail = 0;
 44819  5106  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 44820                           
 44821                           ;eusart.c: 216: };eusart.c: 217: eusartTxBufferRemaining++;
 44822  5107  3001               	movlw	1
 44823  5108  00F0               	movwf	??_EUSART_Transmit_ISR
 44824  5109  0870               	movf	??_EUSART_Transmit_ISR,w
 44825  510A  0142               	movlb	2	; select bank2
 44826  510B  07EB               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 44827                           
 44828                           ;eusart.c: 218: }
 44829  510C  0008               	return
 44830  510D                     i1l112:
 44831                           
 44832                           ;eusart.c: 219: else;eusart.c: 220: {;eusart.c: 221: PIE3bits.TXIE = 0;
 44833  510D  014E               	movlb	14	; select bank14
 44834  510E  1219               	bcf	25,4	;volatile
 44835  510F  0008               	return
 44836  5110                     __end_of_EUSART_Transmit_ISR:
 44837                           
 44838                           	psect	text115
 44839  52B1                     __ptext115:	
 44840 ;; *************** function _EUSART_Receive_ISR *****************
 44841 ;; Defined at:
 44842 ;;		line 225 in file "mcc_generated_files/eusart.c"
 44843 ;; Parameters:    Size  Location     Type
 44844 ;;		None
 44845 ;; Auto vars:     Size  Location     Type
 44846 ;;		None
 44847 ;; Return value:  Size  Location     Type
 44848 ;;                  1    wreg      void 
 44849 ;; Registers used:
 44850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 44851 ;; Tracked objects:
 44852 ;;		On entry : 3F/3
 44853 ;;		On exit  : 0/0
 44854 ;;		Unchanged: 0/0
 44855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44860 ;;Total ram usage:        0 bytes
 44861 ;; Hardware stack levels used: 1
 44862 ;; Hardware stack levels required when called: 2
 44863 ;; This function calls:
 44864 ;;		Absolute function
 44865 ;;		_EUSART_DefaultErrorHandler
 44866 ;;		_EUSART_DefaultFramingErrorHandler
 44867 ;;		_EUSART_DefaultOverrunErrorHandler
 44868 ;;		_EUSART_RxDataHandler
 44869 ;; This function is called by:
 44870 ;;		_EUSART_Initialize
 44871 ;;		_INTERRUPT_InterruptManager
 44872 ;; This function uses a non-reentrant model
 44873 ;;
 44874                           
 44875  52B1                     _EUSART_Receive_ISR:	
 44876                           ;psect for function _EUSART_Receive_ISR
 44877                           
 44878                           
 44879                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].status = 0;
 44880                           
 44881                           ;incstack = 0
 44882                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 44883  52B1  087C               	movf	_eusartRxHead,w	;volatile
 44884  52B2  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 44885  52B3  0086               	movwf	6
 44886  52B4  3003               	movlw	3	; select bank6/7
 44887  52B5  0087               	movwf	7
 44888  52B6  0181               	clrf	1
 44889                           
 44890                           ;eusart.c: 230: if(RC1STAbits.FERR){
 44891  52B7  0142               	movlb	2	; select bank2
 44892  52B8  1D1D               	btfss	29,2	;volatile
 44893  52B9  2AC6               	goto	i1l8340
 44894                           
 44895                           ;eusart.c: 231: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 44896  52BA  087C               	movf	_eusartRxHead,w	;volatile
 44897  52BB  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 44898  52BC  0086               	movwf	6
 44899  52BD  3003               	movlw	3	; select bank6/7
 44900  52BE  0087               	movwf	7
 44901  52BF  1481               	bsf	1,1
 44902                           
 44903                           ;eusart.c: 232: EUSART_FramingErrorHandler();
 44904  52C0  0143               	movlb	3	; select bank3
 44905  52C1  086B               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 44906  52C2  008A               	movwf	10
 44907  52C3  086A               	movf	_EUSART_FramingErrorHandler^(0+384),w
 44908  52C4  000A               	callw
 44909  52C5  31D2               	pagesel	$
 44910  52C6                     i1l8340:
 44911                           
 44912                           ;eusart.c: 233: };eusart.c: 235: if(RC1STAbits.OERR){
 44913  52C6  0142               	movlb	2	; select bank2
 44914  52C7  1C9D               	btfss	29,1	;volatile
 44915  52C8  2AD5               	goto	i1l8346
 44916                           
 44917                           ;eusart.c: 236: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 44918  52C9  087C               	movf	_eusartRxHead,w	;volatile
 44919  52CA  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 44920  52CB  0086               	movwf	6
 44921  52CC  3003               	movlw	3	; select bank6/7
 44922  52CD  0087               	movwf	7
 44923  52CE  1501               	bsf	1,2
 44924                           
 44925                           ;eusart.c: 237: EUSART_OverrunErrorHandler();
 44926  52CF  0143               	movlb	3	; select bank3
 44927  52D0  0869               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 44928  52D1  008A               	movwf	10
 44929  52D2  0868               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 44930  52D3  000A               	callw
 44931  52D4  31D2               	pagesel	$
 44932  52D5                     i1l8346:
 44933                           
 44934                           ;eusart.c: 238: };eusart.c: 240: if(eusartRxStatusBuffer[eusartRxHead].status){
 44935  52D5  087C               	movf	_eusartRxHead,w	;volatile
 44936  52D6  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 44937  52D7  0086               	movwf	6
 44938  52D8  3003               	movlw	3	; select bank6/7
 44939  52D9  0087               	movwf	7
 44940  52DA  0801               	movf	1,w
 44941  52DB  1903               	btfsc	3,2
 44942  52DC  2AE4               	goto	i1l8350
 44943                           
 44944                           ;eusart.c: 241: EUSART_ErrorHandler();
 44945  52DD  0143               	movlb	3	; select bank3
 44946  52DE  0867               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 44947  52DF  008A               	movwf	10
 44948  52E0  0866               	movf	_EUSART_ErrorHandler^(0+384),w
 44949  52E1  000A               	callw
 44950  52E2  31D2               	pagesel	$
 44951                           
 44952                           ;eusart.c: 242: } else {
 44953  52E3  0008               	return
 44954  52E4                     i1l8350:
 44955                           
 44956                           ;eusart.c: 243: EUSART_RxDataHandler();
 44957  52E4  31DF  279F         	fcall	_EUSART_RxDataHandler
 44958  52E6  0008               	return
 44959  52E7                     __end_of_EUSART_Receive_ISR:
 44960                           
 44961                           	psect	text116
 44962  5E51                     __ptext116:	
 44963 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 44964 ;; Defined at:
 44965 ;;		line 261 in file "mcc_generated_files/eusart.c"
 44966 ;; Parameters:    Size  Location     Type
 44967 ;;		None
 44968 ;; Auto vars:     Size  Location     Type
 44969 ;;		None
 44970 ;; Return value:  Size  Location     Type
 44971 ;;                  1    wreg      void 
 44972 ;; Registers used:
 44973 ;;		None
 44974 ;; Tracked objects:
 44975 ;;		On entry : 3F/3
 44976 ;;		On exit  : 3F/2
 44977 ;;		Unchanged: 0/0
 44978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 44979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 44983 ;;Total ram usage:        0 bytes
 44984 ;; Hardware stack levels used: 1
 44985 ;; This function calls:
 44986 ;;		Nothing
 44987 ;; This function is called by:
 44988 ;;		_EUSART_Initialize
 44989 ;;		_EUSART_Receive_ISR
 44990 ;; This function uses a non-reentrant model
 44991 ;;
 44992                           
 44993  5E51                     _EUSART_DefaultOverrunErrorHandler:	
 44994                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 44995                           
 44996                           
 44997                           ;eusart.c: 264: RC1STAbits.CREN = 0;
 44998                           
 44999                           ;incstack = 0
 45000                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 45001  5E51  0142               	movlb	2	; select bank2
 45002  5E52  121D               	bcf	29,4	;volatile
 45003                           
 45004                           ;eusart.c: 265: RC1STAbits.CREN = 1;
 45005  5E53  161D               	bsf	29,4	;volatile
 45006  5E54  0008               	return
 45007  5E55                     __end_of_EUSART_DefaultOverrunErrorHandler:
 45008                           
 45009                           	psect	text117
 45010  3800                     __ptext117:	
 45011 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 45012 ;; Defined at:
 45013 ;;		line 259 in file "mcc_generated_files/eusart.c"
 45014 ;; Parameters:    Size  Location     Type
 45015 ;;		None
 45016 ;; Auto vars:     Size  Location     Type
 45017 ;;		None
 45018 ;; Return value:  Size  Location     Type
 45019 ;;                  1    wreg      void 
 45020 ;; Registers used:
 45021 ;;		None
 45022 ;; Tracked objects:
 45023 ;;		On entry : 3F/3
 45024 ;;		On exit  : 3F/3
 45025 ;;		Unchanged: 3E/0
 45026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 45027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45031 ;;Total ram usage:        0 bytes
 45032 ;; Hardware stack levels used: 1
 45033 ;; This function calls:
 45034 ;;		Nothing
 45035 ;; This function is called by:
 45036 ;;		_EUSART_Initialize
 45037 ;;		_EUSART_Receive_ISR
 45038 ;; This function uses a non-reentrant model
 45039 ;;
 45040                           
 45041  3800                     _EUSART_DefaultFramingErrorHandler:	
 45042                           ;psect for function _EUSART_DefaultFramingErrorHandler
 45043                           
 45044                           
 45045                           ;incstack = 0
 45046                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 45047  3800  0008               	return
 45048  3801                     __end_of_EUSART_DefaultFramingErrorHandler:
 45049                           
 45050                           	psect	text118
 45051  5E4B                     __ptext118:	
 45052 ;; *************** function _EUSART_DefaultErrorHandler *****************
 45053 ;; Defined at:
 45054 ;;		line 269 in file "mcc_generated_files/eusart.c"
 45055 ;; Parameters:    Size  Location     Type
 45056 ;;		None
 45057 ;; Auto vars:     Size  Location     Type
 45058 ;;		None
 45059 ;; Return value:  Size  Location     Type
 45060 ;;                  1    wreg      void 
 45061 ;; Registers used:
 45062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 45063 ;; Tracked objects:
 45064 ;;		On entry : 3F/3
 45065 ;;		On exit  : 3F/1
 45066 ;;		Unchanged: 0/0
 45067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 45068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45072 ;;Total ram usage:        0 bytes
 45073 ;; Hardware stack levels used: 1
 45074 ;; Hardware stack levels required when called: 1
 45075 ;; This function calls:
 45076 ;;		_EUSART_RxDataHandler
 45077 ;; This function is called by:
 45078 ;;		_EUSART_Initialize
 45079 ;;		_EUSART_Receive_ISR
 45080 ;; This function uses a non-reentrant model
 45081 ;;
 45082                           
 45083  5E4B                     _EUSART_DefaultErrorHandler:	
 45084                           ;psect for function _EUSART_DefaultErrorHandler
 45085                           
 45086                           
 45087                           ;eusart.c: 270: EUSART_RxDataHandler();
 45088                           
 45089                           ;incstack = 0
 45090                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 45091  5E4B  31DF  279F         	fcall	_EUSART_RxDataHandler
 45092  5E4D  0008               	return
 45093  5E4E                     __end_of_EUSART_DefaultErrorHandler:
 45094                           
 45095                           	psect	text119
 45096  5F9F                     __ptext119:	
 45097 ;; *************** function _EUSART_RxDataHandler *****************
 45098 ;; Defined at:
 45099 ;;		line 249 in file "mcc_generated_files/eusart.c"
 45100 ;; Parameters:    Size  Location     Type
 45101 ;;		None
 45102 ;; Auto vars:     Size  Location     Type
 45103 ;;		None
 45104 ;; Return value:  Size  Location     Type
 45105 ;;                  1    wreg      void 
 45106 ;; Registers used:
 45107 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 45108 ;; Tracked objects:
 45109 ;;		On entry : 0/2
 45110 ;;		On exit  : 3F/1
 45111 ;;		Unchanged: 0/0
 45112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 45113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45117 ;;Total ram usage:        1 bytes
 45118 ;; Hardware stack levels used: 1
 45119 ;; This function calls:
 45120 ;;		Nothing
 45121 ;; This function is called by:
 45122 ;;		_EUSART_Receive_ISR
 45123 ;;		_EUSART_DefaultErrorHandler
 45124 ;; This function uses a non-reentrant model
 45125 ;;
 45126                           
 45127  5F9F                     _EUSART_RxDataHandler:	
 45128                           ;psect for function _EUSART_RxDataHandler
 45129                           
 45130                           
 45131                           ;eusart.c: 251: eusartRxBuffer[eusartRxHead++] = RC1REG;
 45132                           
 45133                           ;incstack = 0
 45134                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 45135  5F9F  0142               	movlb	2	; select bank2
 45136  5FA0  0819               	movf	25,w	;volatile
 45137  5FA1  00F0               	movwf	??_EUSART_RxDataHandler
 45138  5FA2  087C               	movf	_eusartRxHead,w
 45139  5FA3  3EA0               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 45140  5FA4  0086               	movwf	6
 45141  5FA5  3003               	movlw	3	; select bank7/8
 45142  5FA6  0087               	movwf	7
 45143  5FA7  0870               	movf	??_EUSART_RxDataHandler,w
 45144  5FA8  0081               	movwf	1
 45145  5FA9  3001               	movlw	1
 45146  5FAA  00F0               	movwf	??_EUSART_RxDataHandler
 45147  5FAB  0870               	movf	??_EUSART_RxDataHandler,w
 45148  5FAC  07FC               	addwf	_eusartRxHead,f	;volatile
 45149                           
 45150                           ;eusart.c: 252: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 45151  5FAD  3020               	movlw	32
 45152  5FAE  027C               	subwf	_eusartRxHead,w
 45153  5FAF  1803               	btfsc	3,0
 45154                           
 45155                           ;eusart.c: 253: {;eusart.c: 254: eusartRxHead = 0;
 45156  5FB0  01FC               	clrf	_eusartRxHead	;volatile
 45157                           
 45158                           ;eusart.c: 255: };eusart.c: 256: eusartRxCount++;
 45159  5FB1  3001               	movlw	1
 45160  5FB2  00F0               	movwf	??_EUSART_RxDataHandler
 45161  5FB3  0870               	movf	??_EUSART_RxDataHandler,w
 45162  5FB4  0141               	movlb	1	; select bank1
 45163  5FB5  07EC               	addwf	_eusartRxCount^(0+128),f	;volatile
 45164  5FB6  0008               	return
 45165  5FB7                     __end_of_EUSART_RxDataHandler:
 45166                           
 45167                           	psect	text120
 45168  5F0D                     __ptext120:	
 45169 ;; *************** function _SPI2_Isr *****************
 45170 ;; Defined at:
 45171 ;;		line 148 in file "mcc_generated_files/spi2.c"
 45172 ;; Parameters:    Size  Location     Type
 45173 ;;		None
 45174 ;; Auto vars:     Size  Location     Type
 45175 ;;		None
 45176 ;; Return value:  Size  Location     Type
 45177 ;;                  1    wreg      void 
 45178 ;; Registers used:
 45179 ;;		wreg, status,2, status,0, pclath, cstack
 45180 ;; Tracked objects:
 45181 ;;		On entry : 3F/2
 45182 ;;		On exit  : 3F/E
 45183 ;;		Unchanged: 0/0
 45184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 45185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 45189 ;;Total ram usage:        0 bytes
 45190 ;; Hardware stack levels used: 1
 45191 ;; Hardware stack levels required when called: 1
 45192 ;; This function calls:
 45193 ;;		Absolute function
 45194 ;;		_SPI2_Isr
 45195 ;; This function is called by:
 45196 ;;		_SPI2_Initialize
 45197 ;;		_INTERRUPT_InterruptManager
 45198 ;; This function uses a non-reentrant model
 45199 ;;
 45200                           
 45201  5F0D                     _SPI2_Isr:	
 45202                           ;psect for function _SPI2_Isr
 45203                           
 45204                           
 45205                           ;spi2.c: 150: if(PIR3bits.SSP2IF == 1){
 45206                           
 45207                           ;incstack = 0
 45208 ;; hardware stack exceeded
 45209                           ; Regs used in _SPI2_Isr: [wreg+status,2+status,0+pclath+cstack]
 45210  5F0D  014E               	movlb	14	; select bank14
 45211  5F0E  1D0F               	btfss	15,2	;volatile
 45212  5F0F  0008               	return
 45213                           
 45214                           ;spi2.c: 151: if(MSSP2_InterruptHandler){
 45215  5F10  0142               	movlb	2	; select bank2
 45216  5F11  0869               	movf	_MSSP2_InterruptHandler^(0+256),w
 45217  5F12  046A               	iorwf	(_MSSP2_InterruptHandler+1)^(0+256),w
 45218  5F13  1903               	btfsc	3,2
 45219  5F14  2F1A               	goto	i1l7736
 45220                           
 45221                           ;spi2.c: 152: MSSP2_InterruptHandler();
 45222  5F15  086A               	movf	(_MSSP2_InterruptHandler+1)^(0+256),w
 45223  5F16  008A               	movwf	10
 45224  5F17  0869               	movf	_MSSP2_InterruptHandler^(0+256),w
 45225  5F18  000A               	callw
 45226  5F19  31DF               	pagesel	$
 45227  5F1A                     i1l7736:
 45228                           
 45229                           ;spi2.c: 153: };spi2.c: 154: PIR3bits.SSP2IF= 0;
 45230  5F1A  014E               	movlb	14	; select bank14
 45231  5F1B  110F               	bcf	15,2	;volatile
 45232  5F1C  0008               	return
 45233  5F1D                     __end_of_SPI2_Isr:
 45234  007E                     btemp	set	126	;btemp
 45235  007E                     int$flags	set	126
 45236  007E                     wtemp0	set	126
 45237  2EF8                     
 45238                           	psect	idloc
 45239                           
 45240                           ;Config register IDLOC0 @ 0x8000
 45241                           ;	unspecified, using default values
 45242  8000                     	org	32768
 45243  8000  3FFF               	dw	16383
 45244                           
 45245                           ;Config register IDLOC1 @ 0x8001
 45246                           ;	unspecified, using default values
 45247  8001                     	org	32769
 45248  8001  3FFF               	dw	16383
 45249                           
 45250                           ;Config register IDLOC2 @ 0x8002
 45251                           ;	unspecified, using default values
 45252  8002                     	org	32770
 45253  8002  3FFF               	dw	16383
 45254                           
 45255                           ;Config register IDLOC3 @ 0x8003
 45256                           ;	unspecified, using default values
 45257  8003                     	org	32771
 45258  8003  3FFF               	dw	16383
 45259                           
 45260                           	psect	config
 45261                           
 45262                           ;Config register CONFIG1 @ 0x8007
 45263                           ;	External Oscillator mode selection bits
 45264                           ;	FEXTOSC = HS, HS (crystal oscillator) above 4MHz; PFM set to high power
 45265                           ;	Power-up default value for COSC bits
 45266                           ;	RSTOSC = EXT1X, EXTOSC operating per FEXTOSC bits
 45267                           ;	Clock Out Enable bit
 45268                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 45269                           ;	Clock Switch Enable bit
 45270                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 45271                           ;	Fail-Safe Clock Monitor Enable bit
 45272                           ;	FCMEN = ON, FSCM timer enabled
 45273  8007                     	org	32775
 45274  8007  3FFA               	dw	16378
 45275                           
 45276                           ;Config register CONFIG2 @ 0x8008
 45277                           ;	Master Clear Enable bit
 45278                           ;	MCLRE = ON, MCLR pin is Master Clear function
 45279                           ;	Power-up Timer Enable bit
 45280                           ;	PWRTE = OFF, PWRT disabled
 45281                           ;	Low-Power BOR enable bit
 45282                           ;	LPBOREN = OFF, ULPBOR disabled
 45283                           ;	Brown-out reset enable bits
 45284                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 45285                           ;	Brown-out Reset Voltage Selection
 45286                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 45287                           ;	Zero-cross detect disable
 45288                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 45289                           ;	Peripheral Pin Select one-way control
 45290                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 45291                           ;	Stack Overflow/Underflow Reset Enable bit
 45292                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 45293                           ;	Background Debugger
 45294                           ;	DEBUG = OFF, Background Debugger disabled
 45295  8008                     	org	32776
 45296  8008  3FFF               	dw	16383
 45297                           
 45298                           ;Config register CONFIG3 @ 0x8009
 45299                           ;	WDT Period Select bits
 45300                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 45301                           ;	WDT operating mode
 45302                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 45303                           ;	WDT Window Select bits
 45304                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 45305                           ;	WDT input clock selector
 45306                           ;	WDTCCS = SC, Software Control
 45307  8009                     	org	32777
 45308  8009  3F9F               	dw	16287
 45309                           
 45310                           ;Config register CONFIG4 @ 0x800A
 45311                           ;	UserNVM self-write protection bits
 45312                           ;	WRT = OFF, Write protection off
 45313                           ;	Scanner Enable bit
 45314                           ;	SCANE = available, Scanner module is available for use
 45315                           ;	Low Voltage Programming Enable bit
 45316                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 45317  800A                     	org	32778
 45318  800A  3FFF               	dw	16383
 45319                           
 45320                           ;Config register CONFIG5 @ 0x800B
 45321                           ;	UserNVM Program memory code protection bit
 45322                           ;	CP = OFF, Program Memory code protection disabled
 45323                           ;	DataNVM code protection bit
 45324                           ;	CPD = OFF, Data EEPROM code protection disabled
 45325  800B                     	org	32779
 45326  800B  3FFF               	dw	16383

Data Sizes:
    Strings     427
    Constant    7278
    Data        4
    BSS         367
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     73      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      2      76
    BANK5            80      0      58
    BANK6            80      0      64
    BANK7            80      0      32
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           72      0       0
    BANK48            0      0       0
    BANK49            0      0       0
    BANK50            0      0       0

Pointer List with Targets:

    step.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_48(CODE[2]), STR_47(CODE[15]), STR_46(CODE[2]), STR_45(CODE[10]), 
		 -> STR_44(CODE[6]), STR_43(CODE[13]), STR_42(CODE[15]), STR_41(CODE[11]), 
		 -> STR_40(CODE[15]), STR_39(CODE[12]), STR_38(CODE[15]), STR_37(CODE[14]), 
		 -> STR_36(CODE[15]), STR_35(CODE[14]), STR_34(CODE[10]), STR_33(CODE[11]), 
		 -> STR_32(CODE[16]), STR_31(CODE[11]), STR_30(CODE[15]), STR_29(CODE[16]), 
		 -> STR_28(CODE[17]), STR_26(CODE[12]), STR_25(CODE[21]), STR_9(CODE[14]), 
		 -> STR_7(CODE[12]), STR_6(CODE[12]), STR_3(CODE[13]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 20
		 -> str2(BANK2[20]), str1(BANK4[20]), str(BANK5[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), str2(BANK2[20]), str1(BANK4[20]), str(BANK5[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), printf@ap(BANK1[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> step.Pos(BIGRAM[4]), step.Speed(BIGRAM[4]), ?_sprintf(BANK1[2]), STR_49(CODE[7]), 
		 -> _doprnt@c(BANK1[1]), ?_printf(BANK1[2]), NULL(NULL[0]), str2(BANK2[20]), 
		 -> str1(BANK4[20]), str(BANK5[20]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_48(CODE[2]), STR_47(CODE[15]), STR_46(CODE[2]), STR_45(CODE[10]), 
		 -> STR_44(CODE[6]), STR_43(CODE[13]), STR_42(CODE[15]), STR_41(CODE[11]), 
		 -> STR_40(CODE[15]), STR_39(CODE[12]), STR_38(CODE[15]), STR_37(CODE[14]), 
		 -> STR_36(CODE[15]), STR_35(CODE[14]), STR_34(CODE[10]), STR_33(CODE[11]), 
		 -> STR_32(CODE[16]), STR_31(CODE[11]), STR_30(CODE[15]), STR_29(CODE[16]), 
		 -> STR_28(CODE[17]), STR_26(CODE[12]), STR_25(CODE[21]), STR_24(CODE[9]), 
		 -> STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[6]), 
		 -> STR_3(CODE[13]), STR_2(CODE[6]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), str2(BANK2[20]), str1(BANK4[20]), str(BANK5[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK1[4]), printf@pb(BANK1[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_24(CODE[9]), STR_5(CODE[6]), STR_2(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 

    S3936__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S3936__prbuf$ptr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), str2(BANK2[20]), str1(BANK4[20]), str(BANK5[20]), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), str2(BANK2[20]), str1(BANK4[20]), str(BANK5[20]), 

    atol@s	PTR const unsigned char  size(1) Largest target is 27
		 -> serial.data(BANK2[20]), serial(BANK2[27]), 

    mvTela.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    mvTela.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    mvTela	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    escreve_LCD@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_27(CODE[11]), STR_23(CODE[2]), STR_22(CODE[17]), STR_21(CODE[11]), 
		 -> STR_20(CODE[16]), STR_19(CODE[17]), STR_18(CODE[15]), STR_17(CODE[8]), 
		 -> STR_16(CODE[7]), STR_15(CODE[10]), STR_14(CODE[8]), STR_13(CODE[5]), 
		 -> STR_12(CODE[7]), STR_11(CODE[9]), STR_10(CODE[7]), STR_8(CODE[9]), 
		 -> str2(BANK2[20]), str1(BANK4[20]), STR_4(CODE[16]), str(BANK5[20]), 
		 -> STR_1(CODE[12]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_27(CODE[11]), STR_23(CODE[2]), STR_22(CODE[17]), STR_21(CODE[11]), 
		 -> STR_20(CODE[16]), STR_19(CODE[17]), STR_18(CODE[15]), STR_17(CODE[8]), 
		 -> STR_16(CODE[7]), STR_15(CODE[10]), STR_14(CODE[8]), STR_13(CODE[5]), 
		 -> STR_12(CODE[7]), STR_11(CODE[9]), STR_10(CODE[7]), STR_8(CODE[9]), 
		 -> str2(BANK2[20]), str1(BANK4[20]), STR_4(CODE[16]), str(BANK5[20]), 
		 -> STR_1(CODE[12]), 

    getBackTableSpeed@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    getBackTableSpeed@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    getFrontTableSpeed@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    getFrontTableSpeed@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    getAccelTable@accel	PTR enum E12679 size(2) Largest target is 8192
		 -> NULL(NULL[0]), getSpeedTable@accel(COMMON[1]), RAM(DATA[8192]), step.Return(BIGRAM[57]), 
		 -> step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), step(BIGRAM[248]), 

    getAccelTable@i	PTR long  size(1) Largest target is 4
		 -> getBackTableSpeed@count(BANK0[4]), getFrontTableSpeed@count(BANK0[4]), getSpeedTable@i(BANK0[4]), cncMove@timeSteps(BANK0[4]), 
		 -> cncHomeMove@timeSteps(BANK0[4]), getMoveTime@count(BANK0[4]), cncCalcToCruise_Table@count(COMMON[4]), 

    getVelMax@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    velMax@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    velMax@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    cncMove@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncMove@mv	PTR struct . size(2) Largest target is 248
		 -> step(BIGRAM[248]), 

    cncEndMove@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncEndMove@mv	PTR struct . size(2) Largest target is 248
		 -> step(BIGRAM[248]), 

    cncHomeMove@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncHomeMove@mv	PTR struct . size(2) Largest target is 248
		 -> step(BIGRAM[248]), 

    getMoveTime@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    getMoveTime@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    cncConfigStop@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncConfigStop@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncConfigStop@mv	PTR struct . size(2) Largest target is 248
		 -> step(BIGRAM[248]), 

    cncCalcToCruise@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncCalcToCruise@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    cncCalcToCruise_Table@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncConfigMove@mv.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    cncConfigMove@mv	PTR struct . size(2) Largest target is 248
		 -> NULL(NULL[0]), step.Return(BIGRAM[57]), step.Welding(BIGRAM[57]), step.Forward(BIGRAM[57]), 
		 -> step(BIGRAM[248]), 

    step.Manual.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    step.Return.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    step.Welding.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S1244$Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    step.Forward.stop.Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    oscCfg.stepFinal.name	PTR unsigned char  size(1) Largest target is 0

    oscCfg.stepFinal.func	PTR FTN()void  size(2) Largest target is 0

    oscCfg.stepSerial.name	PTR unsigned char  size(1) Largest target is 0

    oscCfg.stepSerial.func	PTR FTN()void  size(2) Largest target is 0

    oscCfg.stepOperacao.name	PTR unsigned char  size(1) Largest target is 0

    oscCfg.stepOperacao.func	PTR FTN()void  size(2) Largest target is 0

    S1135$name	PTR unsigned char  size(1) Largest target is 0

    oscCfg.stepInicial.name	PTR unsigned char  size(1) Largest target is 0

    S1135$func	PTR FTN()void  size(2) Largest target is 0

    oscCfg.stepInicial.func	PTR FTN()void  size(2) Largest target is 0

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> task10ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> task10ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> btFunc(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    SPI2_SetInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> SPI2_Isr(), 

    MSSP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), SPI2_Isr(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_escreve_LCD
    _navTelas->_escreve_LCD
    _navCfgMove->_escreve_LCD
    _navCfgMove->_getBackTableSpeed
    _getFrontTableSpeed->___aldiv
    _getBackTableSpeed->_getAccelTable
    _getch->_EUSART_Read
    _atol->___lmul
    __doprnt->___awdiv
    __doprnt->___llmod
    _scale->___awdiv
    ___awdiv->___awmod
    _putch->_EUSART_Write
    _fround->___lbdiv
    ___lbdiv->___lbmod
    ___llmod->___lldiv
    _cncTeste->_escreve_LCD
    _cncManualMove->_escreve_LCD
    _cncMove->_cncEndMove
    _cncConfigHome->_escreve_LCD
    _escreve_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _cncHomeMove->_cncEndMove
    _getSpeedTable->___aldiv
    _getMoveTime->___lmul
    _getMoveTime->___xxtofl
    ___fldiv->___xxtofl
    ___flmul->___awdiv
    ___flmul->___lbdiv
    _cncCalcToCruise->___aldiv
    _cncCalcToCruise->___lmul
    ___aldiv->_getAccelTable
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _SPI2_Initialize->_SPI2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _Inicia_LCD->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _TMR2_ISR->_task10ms
    _IOCBF5_ISR->_btFunc
    _IOCBF4_ISR->_btFunc
    _IOCBF3_ISR->_btFunc
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_cncConfigHome
    _sprintf->__doprnt
    _getFrontTableSpeed->___aldiv
    _cncSetPosStop->___flge
    _cncSetPosStart->___flge
    _cncSetPosHome->___flge
    _getSerial->_atol
    _atol->___lmul
    _printf->__doprnt
    __doprnt->___flge
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___flsub->___fladd
    ___fladd->_fround
    _getValueCMD->___fltol
    _cncTeste->_cncMoveTo
    _cncMoveTo->_cncConfigMove
    _cncManualMove->_cncConfigMove
    _cncConfigHome->_cncConfigMove
    _cncSetPos->___flge
    ___flge->___fladd
    _cncConfigMove->_convertMMtoSteps
    _getSpeedTable->___aldiv
    _getMoveTime->___fldiv
    ___fldiv->___xxtofl
    _convertStepsToMM->___flmul
    _convertMMtoSteps->___fltol
    ___fltol->_scale
    ___flmul->___xxtofl
    _cncCalcToCruise->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_navTelas
    _navTelas->_navCfgMove
    _navCfgMove->_sprintf
    _sprintf->__doprnt
    _cncSetPosStop->_cncSetPos
    _cncSetPosStart->_cncSetPos
    _cncSetPosHome->_cncSetPos
    _exeSerial->_sendCMD
    _sendCMD->_sendCMDValue
    _sendCMDValue->_printf
    _printf->__doprnt
    __doprnt->___flge
    __doprnt->___flsub
    _cncTeste->_cncMoveTo
    _cncMoveTo->_cncConfigMove
    _cncManualMove->_cncConfigMove
    _cncConfigHome->_cncConfigMove
    _cncConfig->_cncSetPos
    _cncSetPos->___flge

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  945055
                                             71 BANK1      2     2      0
                                              0 BANK4      2     2      0
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                         _Inicia_LCD
                          _Lcd_Clear
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                          _cncConfig
                      _cncConfigHome
                      _cncConfigMove
                      _cncManualMove
                          _cncSetPos
                           _cncTeste
                   _convertStepsToMM
                        _escreve_LCD
                          _exeSerial
                          _getSerial
                     _liberarTeclado
                           _navTelas
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _navTelas                                             1     1      0  369630
                                             70 BANK1      1     1      0
                        _escreve_LCD
                        _getMoveTime
                     _liberarTeclado
                      _navCfgControl
                       _navCfgEspera
                         _navCfgMove
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _navCfgMove                                          10    10      0  295854
                                             60 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                      _cncConfigMove
                          _cncMoveTo
                          _cncSetPos
                      _cncSetPosHome
                     _cncSetPosStart
                      _cncSetPosStop
                   _convertStepsToMM
                        _escreve_LCD
                  _getBackTableSpeed
                 _getFrontTableSpeed
                        _getMoveTime
                      _getSpeedTable
                     _liberarTeclado
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18     6     12   57182
                                             42 BANK1     18     6     12
                            __doprnt
                   _convertStepsToMM (ARG)
                        _getMoveTime (ARG)
 ---------------------------------------------------------------------------------
 (3) _getFrontTableSpeed                                  24    20      4    5423
                                             14 BANK0     24    20      4
                            ___aldiv
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (3) _getBackTableSpeed                                   20    16      4    3239
                                              8 COMMON     4     0      4
                                              0 BANK0     16    16      0
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (3) _cncSetPosStop                                        4     0      4   19227
                                             36 BANK1      4     0      4
                             ___flge
                          _cncSetPos
 ---------------------------------------------------------------------------------
 (3) _cncSetPosStart                                       8     4      4   28811
                                             36 BANK1      8     4      4
                            ___fladd
                             ___flge
                            ___flsub
                          _cncSetPos
 ---------------------------------------------------------------------------------
 (3) _cncSetPosHome                                        4     0      4   23569
                                             36 BANK1      4     0      4
                            ___fladd
                             ___flge
                          _cncSetPos
 ---------------------------------------------------------------------------------
 (2) _navCfgEspera                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _navCfgControl                                        1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _getSerial                                            1     1      0    1458
                                              9 COMMON     1     1      0
                               _atol
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0      37
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _atol                                                15    11      4    1421
                                              4 BANK0     15    11      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (1) _exeSerial                                            2     2      0  132166
                                             68 BANK1      2     2      0
                        _getValueCMD
                            _sendCMD
                       _sendCMDValue
 ---------------------------------------------------------------------------------
 (2) _sendCMD                                              5     5      0   66114
                                             63 BANK1      5     5      0
                        _getValueCMD
                       _sendCMDValue
 ---------------------------------------------------------------------------------
 (2) _sendCMDValue                                         7     3      4   54156
                                             56 BANK1      7     3      4
                        _getValueCMD (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     6      8   53914
                                             42 BANK1     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             40    37      3   53316
                                             77 BANK0      3     0      3
                                              8 BANK1     34    34      0
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               21    17      4   10943
                                             32 BANK0     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1513
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1845
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     743
                                              3 COMMON     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              21    17      4    8319
                                             32 BANK0     21    17      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     502
                                              1 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     511
                                              7 COMMON     5     4      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     634
                                              1 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     634
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     952
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5087
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4342
                                             53 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getValueCMD                                         13     9      4   11862
                                             64 BANK0     13     9      4
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     961
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _cncTeste                                             6     6      0   64123
                                             18 BANK1      6     6      0
                          _cncMoveTo
                   _convertMMtoSteps
                        _escreve_LCD
 ---------------------------------------------------------------------------------
 (3) _cncMoveTo                                           14     5      9   47836
                                             75 BANK0      4     4      0
                                              9 BANK1      9     0      9
                      _cncConfigMove
                            _cncMove
 ---------------------------------------------------------------------------------
 (1) _cncManualMove                                       22     9     13   55923
                                             75 BANK0      4     4      0
                                              9 BANK1     18     5     13
                      _cncConfigMove
                      _cncConfigStop
                            _cncMove
                        _escreve_LCD
                     _liberarTeclado
 ---------------------------------------------------------------------------------
 (4) _cncMove                                             17    15      2    4321
                                              0 BANK0     17    15      2
                         _cncEndMove
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (2) _cncConfigStop                                        8     2      6     577
                                              1 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _cncConfigHome                                        5     5      0   64042
                                             75 BANK0      5     5      0
                      _cncConfigMove
                        _cncHomeMove
                   _convertMMtoSteps
                        _escreve_LCD
                     _liberarTeclado
 ---------------------------------------------------------------------------------
 (3) _liberarTeclado                                       3     1      2    1504
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _escreve_LCD                                          5     2      3    6741
                                             11 COMMON     1     1      0
                                              0 BANK0      4     1      3
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_String                                     5     3      2     437
                                              4 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (5) _Lcd_Write_Char                                       2     2      0     186
                                              2 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       7     6      1     705
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _cncHomeMove                                         18    15      3    4402
                                              0 BANK0     18    15      3
                         _cncEndMove
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (5) _cncEndMove                                          10     8      2     211
                                              1 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _cncConfig                                            1     1      0   69491
                                             77 BANK0      1     1      0
                            ___fldiv
                      _cncConfigMove
                          _cncSetPos
                   _convertMMtoSteps
 ---------------------------------------------------------------------------------
 (4) _cncSetPos                                           28    16     12   15612
                                              8 BANK1     28    16     12
                             ___flge
                   _convertMMtoSteps
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    3426
                                             73 BANK0      4     4      0
                                              0 BANK1      8     0      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) _cncConfigMove                                       16     9      7   41852
                                             68 BANK0      7     0      7
                                              0 BANK1      9     9      0
                    _cncCalcToCruise
                   _convertMMtoSteps
                   _convertStepsToMM
                        _getMoveTime
                      _getSpeedTable
                             _velMax
 ---------------------------------------------------------------------------------
 (5) _velMax                                               4     0      4     211
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _getSpeedTable                                       10     6      4    5354
                                              9 COMMON     1     1      0
                                             14 BANK0      9     5      4
                            ___aldiv
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (3) _getMoveTime                                         17    13      4    8349
                                             32 BANK0     17    13      4
                            ___fldiv
                             ___lmul
                           ___xxtofl
                      _getAccelTable
 ---------------------------------------------------------------------------------
 (4) _getAccelTable                                        7     4      3    2784
                                              1 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2583
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _convertStepsToMM                                     4     0      4    8343
                                             32 BANK0      4     0      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _convertMMtoSteps                                     4     0      4    9444
                                             64 BANK0      4     0      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4    1237
                                             53 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6956
                                              6 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _cncCalcToCruise                                     21    17      4    3638
                                              9 COMMON     1     1      0
                                             14 BANK0     20    16      4
                            ___aldiv
                             ___lmul
                               _labs
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4     273
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     816
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2085
                                              8 COMMON     1     1      0
                                              0 BANK0     14     6      8
                      _getAccelTable (ARG)
                               _labs (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1570
                    _ADCC_Initialize
                    _CLC1_Initialize
                    _CLC2_Initialize
                  _CLKREF_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0     121
           _SPI2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _SPI2_SetInterruptHandler                             2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     633
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Inicia_LCD                                           3     3      0     434
                                              5 COMMON     1     1      0
                          _Lcd_Clear
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     279
                                              4 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              2     2      0     155
                                              2 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Port                                             1     1      0     124
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _SPI2_Isr *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                           _task10ms *
 ---------------------------------------------------------------------------------
 (11) _task10ms                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCBF5_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                             _btFunc *
 ---------------------------------------------------------------------------------
 (12) _IOCBF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                             _btFunc *
 ---------------------------------------------------------------------------------
 (12) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCBF3_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                             _btFunc *
 ---------------------------------------------------------------------------------
 (12) _btFunc                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (?) _SPI2_Isr                                             0     0      0       0
                   Absolute function *
                           _SPI2_Isr *
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth unknown (due to recursion)
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _Inicia_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
   _Lcd_Clear
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLKREF_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _FVR_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PMD_Initialize
     _SPI2_Initialize
       _SPI2_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
     _TMR5_Initialize
   _TMR2_SetInterruptHandler
   _cncConfig
     ___fldiv
       ___xxtofl (ARG)
     _cncConfigMove
       _cncCalcToCruise
         ___aldiv
           _getAccelTable (ARG)
           _labs (ARG)
         ___lmul
         _labs
       _convertMMtoSteps
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___flmul (ARG)
           _scale (ARG)
             ___awdiv
             ___awmod
             ___flmul
       _convertStepsToMM
         ___flmul
         ___xxtofl
       _getMoveTime
         ___fldiv
         ___lmul
         ___xxtofl
         _getAccelTable
       _getSpeedTable
         ___aldiv
         _getAccelTable
       _velMax
     _cncSetPos
       ___flge
         ___fladd (ARG)
           _fround (ARG)
             ___flmul
             ___lbdiv
             ___lbmod
       _convertMMtoSteps
     _convertMMtoSteps
   _cncConfigHome
     _cncConfigMove
     _cncHomeMove
       _cncEndMove
       _getAccelTable
     _convertMMtoSteps
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
     _liberarTeclado
   _cncConfigMove
   _cncManualMove
     _cncConfigMove
     _cncConfigStop
     _cncMove
       _cncEndMove
       _getAccelTable
     _escreve_LCD
     _liberarTeclado
   _cncSetPos
   _cncTeste
     _cncMoveTo
       _cncConfigMove
       _cncMove
     _convertMMtoSteps
     _escreve_LCD
   _convertStepsToMM
   _escreve_LCD
   _exeSerial
     _getValueCMD
       ___fldiv
       ___flmul
       ___fltol
       ___lldiv
     _sendCMD
       _getValueCMD
       _sendCMDValue
         _getValueCMD (ARG)
         _printf (ARG)
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
             ___fladd *
             ___fleq *
             ___flge *
             ___flmul *
             ___flneg *
             ___flsub *
               ___fladd
               ___xxtofl (ARG)
             ___fltol *
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
             _isdigit *
             _putch *
               _EUSART_Write
             _scale *
     _sendCMDValue
   _getSerial
     _atol
       ___lmul
       _isdigit
     _getch
       _EUSART_Read
   _liberarTeclado
   _navTelas
     _escreve_LCD
     _getMoveTime
     _liberarTeclado
     _navCfgControl
     _navCfgEspera
     _navCfgMove
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flsub
       _cncConfigMove
       _cncMoveTo
       _cncSetPos
       _cncSetPosHome
         ___fladd
         ___flge
         _cncSetPos
       _cncSetPosStart
         ___fladd
         ___flge
         ___flsub
         _cncSetPos
       _cncSetPosStop
         ___flge
         _cncSetPos
       _convertStepsToMM
       _escreve_LCD
       _getBackTableSpeed
         _getAccelTable
       _getFrontTableSpeed
         ___aldiv
         _getAccelTable
       _getMoveTime
       _getSpeedTable
       _liberarTeclado
       _sprintf
         __doprnt
         _convertStepsToMM (ARG)
         _getMoveTime (ARG)
     _sprintf
   _printf
   _sprintf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _btFunc *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _btFunc *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _btFunc *
   _SPI2_Isr *
     Absolute function(Fake) *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _task10ms *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     49      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      2      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      20      19       40.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     233      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     233      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              48      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48               0      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49               0      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50               0      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 20 16:48:57 2024

                ?_EUSART_SetRxInterruptHandler 0071               __end_of_TMR2_SetInterruptHandler 5007  
                                 ___fldiv@aexp 003F                                   ___fldiv@bexp 003E  
             ??_IOCBF3_DefaultInterruptHandler 0070                ?_IOCBF3_DefaultInterruptHandler 0070  
                                 ___fldiv@sign 0037                                ??_getSpeedTable 0032  
                                 ___awdiv@sign 0022                                             _bt 0120  
                       __end_of_FVR_Initialize 5E59                            ___wmul@multiplicand 0073  
                          __Umul8_16@word_mpld 0077                          __end_of_cncManualMove 4EC9  
                             cncManualMove@btt 00BA                               cncManualMove@max 00AE  
                             cncManualMove@min 00B2                                            l100 515E  
                                          l803 35A1                                            l913 2847  
                                          l918 4D2C                                            l935 3D8D  
                                          l990 39A1                                            l991 39C5  
                                          l983 399C                                            l998 3A08  
                                          l999 3A35                             convertMMtoSteps@mm 0060  
                              _timer1ReloadVal 0268                         ??_EUSART_RxDataHandler 0070  
                                          _cnc 01A0                                            _pot 0220  
               ?_EUSART_SetFramingErrorHandler 0071                                            _str 02C6  
                                 ___awmod@sign 0077                                _TMR2_Initialize 3000  
                            ??_CLC2_Initialize 0071                                            wreg 0009  
                             getValueCMD@value 0069                              sendCMDValue@value 00D8  
                                ?_navCfgEspera 0070                                   ___flmul@aexp 0034  
                                 ___flmul@bexp 0035             __end_of_IOCBF4_SetInterruptHandler 5E70  
                   _IOCBF4_SetInterruptHandler 5E6B                                   ___flmul@sign 0033  
                                 ___flmul@temp 003E                                   ___flmul@prod 003A  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 005F  
                                         l1002 3A52                                           l1040 1E09  
                                         l1043 1EA6                                           l1053 1F04  
                                         l2110 47FB                                           l1062 1F67  
                                         l1046 1ED2                                           l2030 3E6B  
                                         l1143 5FBD                                           l1063 1F93  
                                         l1056 1F28                                           l1145 5FC3  
                                         l1305 4954                                           l2034 3EFE  
                                         l1147 5FC8                                           l2107 47D6  
                                         l2051 3F81                                           l2108 47EE  
                                         l1068 1FB3                                           l2036 3EE1  
                                         l1149 5FCD                                           l1280 4516  
                                         l2072 3FF8                                           l2064 3FE0  
                                         l1520 2BA6                                           l2145 50A3  
                                         l2138 3340                                           l2170 4AF9  
                                         l1291 5741                                           l2086 46CF  
                                         l2350 26DE                                           l2190 4A59  
                                         l1294 5763                                           l2183 4B43  
                                         l2343 269A                                           l2184 4B4D  
                                         l2176 4B2F                                           l2409 4C92  
                                         l1561 3B49                                           l1802 4965  
                                         l2266 20F4                                           l1298 577D  
                                         l2291 22D0                                           l2267 20F6  
                                         l1911 4D73                                           l2287 2193  
                                         l1575 3C4F                                           l2392 4BF6  
                                         l2288 269F                                           l1737 5028  
                                         l1930 5631                                           l1914 4DEB  
                                         l1906 54BB                                           l1907 54D5  
                                         l1947 50EA                                           l9012 3E3B  
                                         l9014 3E43                                           l9032 3E60  
                                         l9008 3E38                                           l9202 314E  
                                         l9106 3F1E                                           l9042 3E75  
                                         l9220 3171                                           l9204 3150  
                                         l9108 3F20                                           l9116 3F2F  
                                         l9036 3E63                                           l9310 3316  
                                         l9222 3173                                           l9206 3158  
                                         l9142 3FA0                                           l9134 3F93  
                                         l9126 3F79                                           l9150 3FA9  
                                         l9232 3189                                           l9224 317B  
                                         l9160 3FB4                                           l9080 3EE9  
                                         l9072 3EB1                                           l9306 3301  
                                         l9410 2029                                           l9082 3EEB  
                                         l9090 3EF9                                           l9316 332D  
                                         l9340 48AB                                           l9332 486F  
                                         l9156 3FB2                                           l9148 3FA7  
                                         l9342 48B1                                           l9334 4885  
                                         l9422 2054                                           l9182 3FF4  
                                         l9512 55FA                                           l9336 489F  
                                         l9408 201B                                           l9370 5FC9  
                                         l9362 5FBF                                           l9530 562D  
                                         l9602 46C4                                           l9338 48A5  
                                         l9346 48B7                                           l9418 2049  
                                         l9178 3FF0                                           l9098 3F0C  
                                 ?_escreve_LCD 0020                                           l9444 4986  
                                         l9436 4976                                           l9292 32D6  
                                         l9284 32A8                                           l9508 55F1  
                                         l9348 48D2                                           l9366 5FC4  
                                         l9462 49CD                                           l9454 49B4  
                                         l9446 4994                                           l9390 400A  
                                         l9286 32BF                                           l9702 47F7  
                                         l9622 46FA                                           l9606 46C7  
                                         l9550 53EC                                           l8910 4855  
                                         l8902 4844                                           l9296 32D8  
                                         l9528 561F                                           l9720 4B08  
                                         l9616 46EE                                           l9376 5022  
                                         l9800 36B6                                           l9458 49BF  
                                         l9394 4014                                           l8842 509D  
                                         l9538 563E                                           l9714 4AF1  
                                         l9642 4741                                           l9650 4723  
                                         l9474 54E7                                           l9554 5404  
                                         l8906 484D                                           l8922 5465  
                                         l9724 4B0C                                           l9652 475F  
                                         l9484 4D96                                           l9548 53DE  
                                         l8940 548A                                           l9812 377F  
                                         l9804 36D4                                           l9734 4B41  
                                         l9726 4B1C                                           l9582 46A0  
                                         l9558 540F                                           l9902 4BD2  
                                         l8854 5153                                           l8934 5472  
                                         l8926 546C                                           l9736 4B34  
                                         l9648 475A                                           l9488 4DC1  
                                         l9912 4BE4                                           l9824 4C1C  
                                         l9760 5EED                                           l8936 547E  
                                         l8944 5493                                           l9674 4793  
                                         l9666 4765                                           l9586 46A3  
                                         l9922 4C03                                           l9914 4BF2  
                                         l9850 4C6F                                           l9842 4C55  
                                         l8962 5117                                           l9818 37E2  
                                         l9748 4B68                                           l9668 477C  
                                         l9588 46AB                                           l9940 5657  
                                         l9860 4C80                                           l9828 4C25  
                                         l8964 5120                                           l9772 431A  
                                         l8868 5174                                           l8884 481E  
                                         l8948 549B                                           l9678 4795  
                                         l9870 4C9F                                           l9862 4C8E  
                                         l8974 512F                                           l8982 50D7  
                                         l8894 4826                                           l8878 4813  
                                         STR_1 6105                                           l9688 47BE  
                                         l9960 5684                                           l9952 5672  
                                         l9944 5660                                           l9936 564E  
                                         l9880 4B84                                           l8896 4832  
                                         STR_2 61A0                                           STR_3 6099  
                                         l9970 5696                                           l9778 438C  
                                         l9794 3653                                           STR_4 6078  
                                         STR_5 61A0                                           l9980 3082  
                                         l9964 568D                                           l9956 567B  
                                         l9948 5669                                           l9876 4B7B  
                                         STR_6 6111                                           STR_7 6111  
                                         l9990 30AA                                           l9982 308A  
                                         l9974 3046                                           l9894 4BB2  
                                         STR_8 6179                                           STR_9 60D2  
                                         l9984 3092                                           l9976 3072  
                                         l9986 309A                                           l9978 307C  
                                         l9994 30B3                                           l9988 30A2  
                                         l9996 30CF                                           _LATA 0016  
                                         _LATB 0017                                           _LATC 0018  
                                         _LATD 0019                                           _LATE 001A  
                                         _T2PR 028D                                           _T4PR 0293  
                                         _PMD0 0796                                           _PMD1 0797  
                                         _PMD2 0798                                           _PMD3 0799  
                                         _PMD4 079A                                           _PMD5 079B  
                                         u9045 4829                                           u9065 4833  
                                         u9145 5475                                           u9075 483D  
                                         u9245 50DA                                           u9085 4845  
                                         u9165 5484                                           u9415 3EEF  
                                         u9175 548B                                           u9370 3ED0  
                                         u9380 3ED1                                           u9365 3EC5  
                                         u9535 3F94                                           u9635 3FCB  
                                         u9805 327B                                           u9493 3F41  
                                         u9485 3F24                                           u9815 3297  
                                         u9825 32AB                                           u9915 32EF  
                                         u8965 50A4                                           u9925 330A  
                                         u9845 32B4                                           u9935 3320  
                                         u9785 31FC                                           u9795 3229  
                                         u9955 48A0                                           u9965 48A6  
                                         _TMR5 0218                                           u9975 48AC  
                                         u9985 48B2                                           _WPUA 1F39  
                                         _WPUB 1F44                                           _WPUC 1F4F  
                                         _WPUD 1F5A                                           _WPUE 1F65  
                            ?_Lcd_Write_String 0074                              ?_convertMMtoSteps 0060  
                                         _labs 5F3D                                           _atol 4A57  
                                         _main 334D                                           _tela 00EB  
                                         _str1 0254                                           _str2 014D  
                                         _test 0126                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           _step 2EF8  
                                         btemp 007E                                           start 0040  
                              _timer5ReloadVal 01E4                             ??_Lcd_Write_String 0076  
                           ??_convertMMtoSteps 007C                                ___fldiv@new_exp 0038  
                               ?_navCfgControl 0070                                __end_of_Lcd_Cmd 5F62  
                             ?_NCO1_Initialize 0070                          __end_of_cncSetPosHome 4D51  
                        __end_of_cncSetPosStop 5800                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                             cncManualMove@accel 00AD  
                              __end_of_acce200 1C86                  __end_of_OSCILLATOR_Initialize 200A  
                                        l10004 312C                                          l10012 5540  
                                        l10100 2092                                          l10014 554E  
                                        l10024 1CA8                                          l10016 5557  
                                        l10120 20BD                                          l10104 20A8  
                                        l10050 5348                                          l10122 20EF  
                                        l10300 255A                                          l10220 2352  
                                        l10212 230B                                          l10132 210E  
                                        l10206 22B7                                          l10150 215C  
                                        l10126 20F8                                          l10312 261A  
                                        l10224 236A                                          l10160 218A  
                                        l10136 2110                                          l10058 5352  
                                        l10322 2680                                          l10314 2632  
                                        l10250 2425                                          l10234 23A6  
                                        l10138 211E                                          l11210 4A83  
                                        l10412 282A                                          l10332 26B5  
                                        l10244 23F8                                          l10156 2133  
                                        l11212 4ABF                                          l10350 2715  
                                        l10342 26F3                                          l10326 2695  
                                        l10318 266A                                          l10270 2454  
                                        l10238 23F2                                          l10182 220F  
                                        l10174 21D1                                          l10158 217C  
                                        l10166 2195                                          l11302 2C56  
                                        l11230 29A0                                          l11160 3A7B  
                                        l10600 50CC                                          l10344 2707  
                                        l10280 2501                                          l10272 24D5  
                                        l10256 243F                                          l10168 21C1  
                                        l11162 3A98                                          l11154 3A42  
                                        l11138 39D2                                          l10370 2765  
                                        l10362 2748                                          l10282 2506  
                                        l11218 4AD2                                          l11242 29B9  
                                        l11226 299C                                          l10460 3D0F  
                                        l10356 271B                                          l10276 24EC  
                                        l10268 24C5                                          l11308 2CAA  
                                        l11252 2A1D                                          l11236 29A9  
                                        l10462 3D4C                                          l10526 1ED7  
                                        l10542 1F35                                          l10390 2795  
                                        l10198 2259                                          l11350 2E73  
                                        l11342 2E1B                                          l11334 2DA8  
                                        l11318 2D38                                          l11326 2D6F  
                                        l11270 2AC8                                          l11246 29BC  
                                        l11238 29B1                                          l10560 1FB0  
                                        l10800 44A3                                          l10376 2780  
                                        l10296 2545                                          l10288 2520  
                                        l10392 205F                                          l10616 5177  
                                        l10712 40E7                                          l10720 57B4  
                                        l11360 2EA8                                          l11344 2E23  
                                        l11328 2D7B                                          l11280 2B66  
                                        l11264 2A90                                          l11248 29BE  
                                        l11450 413E                                          l10802 44AA  
                                        l10386 27EF                                          l10394 27FC  
                                        l11194 4AB2                                          l10714 4103  
                                        l10706 4058                                          l11370 2F11  
                                        l11338 2DC9                                          l11290 2BA7  
                                        l11258 2A57                                          l11610 3B87  
                                        l11602 3B38                                          l10484 1DD3  
                                        l10804 44B9                                          l11540 5785  
                                        l10724 57DB                                          l11292 2BA9  
                                        l11604 3B4A                                          l10582 5374  
                                        l10662 530F                                          l10654 52F2  
                                        l11454 4147                                          l11446 4135  
                                        l10566 1FDC                                          l10558 1FA0  
                                        l10806 44C4                                          l10814 44CD  
                                        l11550 48E8                                          l11198 4A7F  
                                        l10742 38DD                                          l10734 3872  
                                        l11374 2F46                                          l11278 2B5A  
                                        l11358 2E8B                                          l11382 2FDD  
                                        l11622 3C01                                          l11630 3C39  
                                        l10656 5302                                          l10680 5007  
                                        l10568 1FF9                                          l10816 450E  
                                        l11560 4913                                          l11528 576B  
                                        l10760 4A3D                                          l10744 389D  
                                        l10736 3893                                          l11376 2F63  
                                        l11384 2FE9                                          l11296 2C03  
                                        l11288 2B9A                                          l11624 3C1D  
                                        l11616 3BC4                                          l11632 3C4E  
                                        l10682 5018                                          l10762 4A01  
                                        l10746 38ED                                          l11378 2FA0  
                                        l11626 3C25                                          l11730 338F  
                                        l10780 43E9                                          l10772 43C7  
                                        l11556 4907                                          l11564 491B  
                                        l10764 4A4D                                          l10756 4A10  
                                        l10598 50B4                                          l10790 4440  
                                        l10782 43F7                                          l10774 43CE  
                                        l11558 490F                                          l11590 3B17  
                                        l11582 3B00                                          l11806 358A  
                                        l11750 33F7                                          l10792 4460  
                                        l10784 4413                                          l10776 43D5  
                                        l11592 3B1C                                          l10794 446E  
                                        l10786 4426                                          l10778 43E2  
                                        l11498 5726                                          l10698 4CCF  
                                        l11594 3B21                                          l11586 3B0C  
                                        l11578 3AFC                                          l11754 33FC  
                                        l10796 4499                                          l10788 4433  
                                        l11686 4E11                                          l10798 44A0  
                                        l11598 3B26                                          l11790 3553  
                                        l11792 3557                                          l11784 3517  
                                        l11776 3504                                          l11794 355B  
                                        l11786 3520                                          l11788 3528  
                                ___fltol@sign1 005E                                __end_of___aldiv 49D6  
                               _cncSetPosStart 4031                                          ?_labs 0071  
                                        _ADACQ 009D                                          _ADCAP 009B  
                                        _ADACT 0099                                          ?_atol 0024  
                              __end_of___fladd 4000                                          ?_main 0070  
                                        _ADCLK 0098                                          _ADPCH 009E  
                              __end_of___fldiv 4800                                          _ADREF 009A  
                              __end_of___awdiv 485A                                __end_of___lbdiv 5131  
                              __end_of___flneg 1C91                                          _ADPRE 009C  
                                        STR_10 6199                                          STR_11 6170  
                                        STR_12 6199                                          STR_20 6068  
                                        STR_13 61A6                                          STR_21 613E  
                                        STR_14 618A                                          STR_30 6097  
                                        STR_22 6026                                          STR_23 6086  
                                        STR_15 615D                                          STR_31 6133  
                                        STR_16 6199                                          STR_40 60A6  
                                        STR_24 6167                                          STR_32 6058  
                                        STR_33 6133                                          STR_17 6182  
                                        STR_41 611D                                          STR_25 6000  
                                        STR_42 60A6                                          STR_34 6153  
                                        STR_26 60F9                                          STR_18 60B5  
                                        STR_27 6128                                          STR_43 60E0  
                                        STR_35 60C4                                          STR_19 6037  
                                        STR_44 6138                                          STR_36 60A6  
                                        STR_28 6015                                __end_of___awmod 54A0  
                                        STR_37 60C4                                          STR_45 6149  
                                        STR_29 6048                                          STR_46 6086  
                                        STR_38 60A6                                          STR_39 60ED  
                                        STR_47 6088                                          STR_48 6086  
                                        _ADRPT 010D                                          STR_49 6192  
                              __end_of___lbmod 50F0                                __end_of___flmul 334D  
                              __end_of___flsub 52B1                                __end_of___fltol 564D  
                           cncManualMove@speed 00A9                                __end_of___lldiv 205D  
                                        u10105 401C                                          u10135 201E  
                                        u10055 5029                                          u10225 4989  
                                        u10065 502E                                          u11105 4C70  
                                        u12003 1DCF                                          u10155 202A  
                                        u10315 54E3                                          u10245 4995  
                                        u10165 203E                                          u10255 49A9  
                                        u10095 4015                                          u12023 1E05  
                                        u10175 204A                                          u11215 4BB3  
                                        _T1CLK 0211                                          u10265 49B5  
                                        u10425 5620                                          u12113 1F63  
                                        u11305 4BFA                                          u11225 4BC7  
                                        u11145 4C81                                          u10515 53FA  
                                        u11235 4BD3                                ___awdiv@divisor 0078  
                                        u11333 3121                                          u12205 5380  
                                        u10525 5405                                          u11085 4C56  
                                        u13005 33EA                                          u10455 5635  
                                        u12063 1E76                                          u11175 4C96  
                                        u11095 4C66                                          _T1CON 020E  
                                        u10705 4768                                __end_of___llmod 5418  
                                        u10395 5603                                          u10635 472B  
                                        u11363 1CF4                                          u13107 524B  
                                        u11275 4BE5                                          u10805 47C7  
                                        u10725 4771                                          u10645 4732  
                                        u12413 3969                                          u13117 390F  
                                        u13037 4F1C                                          u13127 5EF8  
                                        u10815 47E0                                          u11375 5344  
                                        u13047 4F76                                          u10495 53E1  
                                        u11615 2350                                          _T2CON 028E  
                                        u13137 541F                                          u10905 4B3B  
                                        u10665 473B                                          u12185 5360  
                                        u13057 4F9E                                          u13147 542A  
                                        u10675 474F                                          u12443 3A00  
                                        u11395 5236                                          u13067 4FF8  
                                        u11715 250F                                          u11475 212C  
                                        u13157 5436                                          u13077 1E1A  
                                        u11725 251B                                          u11645 241B  
                                        u12373 38AF                                          u12365 38EB  
                                        u13167 5F5A                                          u13087 5012  
                                        u11575 22DA                                          u10945 4B55  
                                        u10865 4B15                                          u13097 523F  
                                        u11585 2315                                          u12385 4A4B  
                                        u10795 47AC                                          u12715 2F0A  
                                        u10885 4B29                                          _T5CLK 021D  
                                        _T4CON 0294                                          u11865 273E  
                                        _T2HLT 028F                                          u11973 3CD0  
                                        u11885 274F                                          u11983 3D76  
                                        u11895 275B                                          _T5CON 021A  
                                        u12985 4EAB                                          _T4HLT 0295  
                                        i1l112 510D                                          _T2TMR 028C  
                                        _T2RST 0291                                          _T4TMR 0292  
                                        _T4RST 0297                                          i1l299 003E  
                              ___awdiv@counter 0021                      ?_SPI2_SetInterruptHandler 0071  
                                        _OSCEN 0891                                          _TMR1H 020D  
                                        _TMR1L 020C                                          _TMR5H 0219  
                                        _TMR5L 0218                                          _PORTB 000D  
                              __end_of__doprnt 2800                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _TRISD 0014                                          _TRISE 0015  
                                        _RXPPS 1ECB                                __end_of_cncMove 2000  
                               ??_navCfgEspera 0071                                _TMR4_Initialize 5EFE  
                          ___lmul@multiplicand 0075                               __end_of_SPI2_Isr 5F1D  
                             __end_of_TMR2_ISR 5EAD                        __end_of_PIN_MANAGER_IOC 5F2D  
                                        _getch 5E4E                                __end_of_dpowers 5890  
                                        _scale 35A2                                __end_of_isdigit 5EEF  
                              __end_of_sendCMD 5152                                          labs@l 0071  
                                        atol@a 002D                                          atol@c 0032  
                                        atol@s 0031                                          _putch 5E59  
                                        main@i 026A                        __end_of_TMR1_Initialize 5F3D  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __end_of_sprintf 3823  
                                   _Inicia_LCD 5EEF                                ___lbdiv@divisor 0077  
                              ___lbdiv@counter 007A                               __end_of_Lcd_Init 545B  
                              _TMR5_Initialize 5F88                             getSpeedTable@accel 0079  
                             __end_of_Lcd_Port 5FCF                                __initialization 0042  
                                 __end_of_labs 5F4F                                   __end_of_atol 4ADB  
                                 __end_of_main 35A2                          __end_of_getAccelTable 48D7  
                       __end_of_cncSetPosStart 4129                                 ??_EUSART_Write 0071  
                      __end_of_TMR2_Initialize 3015                    ?_INTERRUPT_InterruptManager 0070  
                            ?_convertStepsToMM 0040                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_labs 0075                                         ??_atol 0028  
                     _TMR2_SetInterruptHandler 5001                                         ??_main 00E7  
                           ??_convertStepsToMM 007C      __end_of_EUSART_DefaultFramingErrorHandler 3801  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 3800                                         ?_getch 0070  
                                       _ADCON0 0093                                         _ADCON1 0094  
                                       _ADCON2 0095                                         _ADCON3 0096  
                   _EUSART_OverrunErrorHandler 01E8                   ??_IOCBF5_SetInterruptHandler 0073  
                             ___llmod@dividend 0029                                         _ADLTHH 010F  
                                       ?_scale 0040                                         _ADLTHL 010E  
                          cncManualMove@posEnd 00B6                                         _ADSTAT 0097  
                                       _ADUTHH 0111                               ___awdiv@dividend 007A  
                                       _ADUTHL 0110                                         _ANSELA 1F38  
                                       ?_putch 0073                                         _ANSELB 1F43  
                                       _ANSELC 1F4E                                         _ANSELD 1F59  
                                       _ANSELE 1F64                                         _T1GATE 0210  
                                       _T1GCON 020F                                         _T5GATE 021C  
                                       _T5GCON 021B                                         _RC1REG 0119  
                                       _RC1STA 011D                                         _RC4PPS 1F24  
                                       _RC5PPS 1F25                                         _ODCONA 1F3A  
                                       _ODCONB 1F45                                         _ODCONC 1F50  
                                       _ODCOND 1F5B                                         i1l1381 5593  
                                       i1l1373 558B                                         _ODCONE 1F66  
                                       i1l1383 5596                                         i1l1393 55E5  
                                       i1l1378 5590                                         _RD5PPS 1F2D  
                                       _RD6PPS 1F2E                                         i1l8120 5599  
                                       i1l8130 55BB                                         i1l8124 559F  
                                       i1l8116 558C                                         i1l8142 55CF  
                                       i1l8126 55B4                                         i1l8128 55B9  
                                       i1l8152 55DF                                         i1l8340 52C6  
                                       i1l8350 52E4                                         i1l8360 5F28  
                                       i1l8346 52D5                                         i1l8356 5F23  
                                       i1l8710 0016                                         i1l8702 000D  
                                       i1l7736 5F1A                                         _INLVLA 1F3C  
                                       i1l8722 002A                                         _INLVLB 1F47  
                                       _INLVLC 1F52                                         i1l8716 0020  
                                       _INLVLD 1F5D                                         _INLVLE 1F68  
                                       i1l7678 508E                                         i1l8728 0034  
                                       i1l7972 5ED0                                         i1l7966 5EC3  
                                       i1l7978 280A                                         _FVRCON 090C  
                                       _OSCFRQ 0893                                      ??_Lcd_Cmd 0072  
                             cncCalcToCruise@S 0036                               cncCalcToCruise@V 0032  
                                       _TMR2IE 38D1                                         _TMR2IF 3881  
                             cncCalcToCruise@a 003E                                         _TMR4IF 3883  
                                       _TX1REG 011A                                         _TX1STA 011E  
                             navCfgEspera@tela 0070                               __end_of___xxtofl 4B71  
                              ??_navCfgControl 0071                               __end_of_cncTeste 5000  
                                 exeSerial@cmd 00E5                                   __doprnt$4358 00AE  
                            _CLKREF_Initialize 5E75                          getFrontTableSpeed@len 003A  
                        getFrontTableSpeed@ini 003E                               __end_of__powers_ 5834  
                         cncHomeMove@timeSteps 002E                                         ___flge 4D51  
                                       ___fleq 54A0                                         ___lmul 4002  
                                    ??___aldiv 0078                                      ??___fladd 005D  
                                       ___wmul 5020                             ?_CLKREF_Initialize 0070  
                                    ??___fldiv 002E                                      ??___awdiv 0020  
                                    ??___lbdiv 0078                                      ??___flneg 0075  
                                       _btFunc 5074                                      ??___awmod 0075  
                                    ??___lbmod 0072                                      ??___flmul 002E  
                                    ??___flsub 007C                                      ??___fltol 0059  
                                       _alarme 0130                                      ??___lldiv 0079  
                                    ??___llmod 007A                               __end_of_navTelas 3C50  
                              ?_cncSetPosStart 00C4                            _EUSART_Transmit_ISR 50F0  
                                    ??__doprnt 00A8                        __end_of_TMR4_Initialize 5F0D  
                                       _oscCfg 02A0                                         _fround 4268  
                                       _mvTela 00E9                                      ??_cncMove 0022  
                             ___awdiv@quotient 0023                                ___awmod@divisor 0071  
                                       _velMax 564D                               __end_of_task10ms 55E8  
                                       _serial 0132                                   __doprnt@flag 00B6  
                              ___awmod@counter 0076                                         _printf 503B  
                                 __doprnt@eexp 00B8                                   __doprnt@fval 00C2  
                                 __doprnt@prec 00C6                            ??_CLKREF_Initialize 0071  
                              _ADCC_Initialize 5FE7                                 _PMD_Initialize 4800  
                                    ??_isdigit 0071                                      ??_sendCMD 007C  
                                ?_sendCMDValue 00D8                                  cncHomeMove@mv 0020  
     TMR2_SetInterruptHandler@InterruptHandler 0071     IOCBF5_SetInterruptHandler@InterruptHandler 0071  
   IOCBF4_SetInterruptHandler@InterruptHandler 0071     IOCBF3_SetInterruptHandler@InterruptHandler 0071  
                             ?_PIN_MANAGER_IOC 0070                                _CLC1_Initialize 5F62  
                                    ??_sprintf 00D6                               ___lbdiv@dividend 0079  
                              Lcd_Set_Cursor@a 0077                                Lcd_Set_Cursor@b 0074  
                              Lcd_Set_Cursor@y 0079                                Lcd_Set_Cursor@z 0078  
                         ?_EUSART_Transmit_ISR 0070                                   ??_IOCBF3_ISR 0071  
                                 ??_IOCBF4_ISR 0071                                   ??_IOCBF5_ISR 0071  
                                 escreve_LCD@c 012D                                     ___flge@ff1 00A0  
                                   ___flge@ff2 00A4                               ?_TMR1_Initialize 0070  
                      __end_of_TMR5_Initialize 5F9F                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 51F7  
                                 ___xxtofl@val 0071                                     ___fleq@ff1 0071  
                                   ___fleq@ff2 0075                                ___lbmod@divisor 0071  
                      __end_of__initialization 00A8                                ___lbmod@counter 0075  
                                   ___flneg@f1 0071                             _getFrontTableSpeed 3823  
                                  ?_Inicia_LCD 0070                             ?_SYSTEM_Initialize 0070  
                    __end_of_CLKREF_Initialize 5E7B                                sendCMDValue@cmd 00DE  
                            __end_of_Lcd_Clear 5EA1                                     ___fltol@f1 0055  
                            ??_cncCalcToCruise 0079           __end_of_EUSART_SetTxInterruptHandler 5E8D  
                 _EUSART_SetTxInterruptHandler 5E87                           __end_of_navCfgEspera 0004  
              SPI2_SetInterruptHandler@handler 0071                     __end_of_spi2_configuration 61AF  
                               __pcstackCOMMON 0070                            ?_getFrontTableSpeed 002E  
                                 __pidataBANK2 5E5D                                      ?_SPI2_Isr 0070  
                          ??_SYSTEM_Initialize 0074                                _CLC2_Initialize 5F75  
                                    ?_TMR2_ISR 0070                                  __end_of_getch 5E51  
                                __end_of_scale 3800                                  __end_of_putch 5E5D  
                             ?_TMR2_Initialize 0070                               ___lbdiv@quotient 007B  
                       __end_of_PMD_Initialize 4808                             __end_of_IOCBF3_ISR 5EC6  
                           __end_of_IOCBF4_ISR 5ED3                             __end_of_IOCBF5_ISR 280D  
                               _Lcd_Set_Cursor 5354                                     __div_to_l_ 4B71  
                               ??_sendCMDValue 00DC                           _eusartRxStatusBuffer 0320  
                          getFrontTableSpeed@i 0036                ??_EUSART_SetOverrunErrorHandler 0073  
                         ??_getFrontTableSpeed 0032         __end_of_IOCBF3_DefaultInterruptHandler 1C87  
               _IOCBF3_DefaultInterruptHandler 1C86                    ?_IOCBF4_SetInterruptHandler 0071  
                                    ?_Lcd_Init 0070                                     _cncEndMove 531D  
                                    ?_Lcd_Port 0070                                     __doprnt@ap 006F  
                                   __doprnt@cp 00B4                                     __doprnt@pb 00C9  
                               _liberarTeclado 5007                                        ??_getch 0073  
                              __div_to_l_@exp1 0025                                __div_to_l_@cntr 0024  
                                      ??_scale 0044                      __end_of_SYSTEM_Initialize 5224  
                        ??_EUSART_Transmit_ISR 0070                                __div_to_l_@quot 0020  
                            navCfgControl@tela 0070                                        ??_putch 0074  
                            ??_SPI2_Initialize 0073                                     __pbssBANK1 00E9  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                                     __pbssBANK5 02A0  
                                   __pbssBANK6 0320                                     __pbssBANK7 03A0  
                         __end_of_EUSART_Write 5177                                  __div_to_l_@f1 0071  
                                __div_to_l_@f2 0075                          convertStepsToMM@steps 0040  
                            __end_of__Umul8_16 50B2               __end_of_SPI2_SetInterruptHandler 5E99  
                             ??_FVR_Initialize 0071                                     __pmaintext 334D  
                                      ?___flge 00A0                  ?_EUSART_SetTxInterruptHandler 0071  
                                      ?___fleq 0071               _EUSART_TxDefaultInterruptHandler 01EE  
                                      ?___lmul 0071                                     ??_SPI2_Isr 0070  
                                      ?___wmul 0071                                        ?_btFunc 0070  
                                   ??_TMR2_ISR 0071                        __end_of_ADCC_Initialize 6000  
                                   __pintentry 0004                                        _CLC1CON 1E10  
                                      _CLC2CON 1E1A                                        _CLC1POL 1E11  
                                      _CLC2POL 1E1B                                        ?_fround 0040  
                               ___lmul@product 0020                                 cncConfigHome@b 006F  
                             ?_TMR4_Initialize 0070               ??_IOCBF4_DefaultInterruptHandler 0070  
              ?_IOCBF4_DefaultInterruptHandler 0070                                        ?_velMax 0071  
                       __end_of_Lcd_Set_Cursor 5394                                  cncSetPos@home 00A8  
                        __end_of_getSpeedTable 5585                                        _ADSTPTH 0113  
                                      _ADSTPTL 0112                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 00CA                                ?_PMD_Initialize 0070  
                                cncSetPos@stop 00B0                                        _CLKRCLK 0896  
                                      _CLKRCON 0895                                        _NCO1CLK 0593  
                                      _NCO1CON 0592                        __end_of_CLC1_Initialize 5F75  
                                _eusartRxCount 00EC                                      ?___xxtofl 0071  
                                      _SP1BRGH 011C                         __end_of_liberarTeclado 5020  
                                      _SP1BRGL 011B                                      ?_cncTeste 0070  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
           __end_of_IOCBF5_SetInterruptHandler 5E75                     _IOCBF5_SetInterruptHandler 5E70  
                                      _OSCTUNE 0892                                     ??_Lcd_Init 0074  
                                      _SSP2ADD 0197                                        _SLRCONA 1F3B  
                                      _SLRCONB 1F46                                        _SLRCONC 1F51  
                                      _SLRCOND 1F5C                                        _SLRCONE 1F67  
                            cncCalcToCruise@mv 002E                                     ??_Lcd_Port 0071  
                     ??_EUSART_SetErrorHandler 0073                              __end_of_cncConfig 4687  
                           cncSetPosStart@diff 00C8                                     _navCfgMove 2993  
                            __end_of_cncSetPos 2993                              __end_of_cncMoveTo 5534  
                                    ?_navTelas 0070                               ?_TMR5_Initialize 0070  
                               _Lcd_Write_Char 5224                                        _Lcd_Cmd 5F4F  
                                    ?_task10ms 0070                        __end_of_CLC2_Initialize 5F88  
                            __end_of__npowers_ 5868                                      _CLCIN2PPS 1EBD  
                            __end_of_getSerial 578D                                     _scale$4357 0050  
                   ??_TMR2_SetInterruptHandler 0073                                        _acce200 00AC  
                                      ___aldiv 4955                                        ___fladd 3E1F  
                                      ___fldiv 4687                                        ___awdiv 4808  
                                      ___lbdiv 5110                                        ___flneg 1C88  
                                      ___awmod 545B                                        ___lbmod 50D1  
                                      ___flmul 3135                                        ___flsub 527E  
                                      ___fltol 55E8                                        ___lldiv 200A  
                                      ___llmod 53D6                              __end_of_exeSerial 4955  
                                      __doprnt 205D                                        _cncMove 1D98  
                              ?_Lcd_Set_Cursor 0074                                  ??_cncHomeMove 0023  
                                   cncSetPos@e 00C0                                     cncSetPos@h 00B8  
                                   cncSetPos@s 00BC                                        __ptext1 3A9F  
                                      __ptext2 2993                                        __ptext3 3802  
                                      __ptext4 3823                                        __ptext5 49D6  
                                      __ptext6 578D                                        __ptext7 4031  
                                      __ptext8 4CA8                                        __ptext9 0003  
                                  ?__div_to_l_ 0071                                        _dpowers 5868  
                        _OSCILLATOR_Initialize 2001                                        _isdigit 5EE1  
                                   ??___xxtofl 0075                                        _sendCMD 5131  
                             ___awmod@dividend 0073                               ___aldiv@dividend 0024  
                                   ??_cncTeste 00B2                                ?_liberarTeclado 0071  
                     ??_PIN_MANAGER_Initialize 0073                                      _IOCBFbits 1F4A  
                          getBackTableSpeed@mv 0078                                      _IOCBNbits 1F49  
                                    _IOCBPbits 1F48                                    ?_cncEndMove 0071  
                                      _sprintf 3802                                        clrloop0 5EAE  
                       __end_of_Lcd_Write_Char 5251                           end_of_initialization 00A8  
                                   ??_navTelas 00E6          __end_of_EUSART_SetOverrunErrorHandler 5E6B  
                _EUSART_SetOverrunErrorHandler 5E66                                  _cncConfigHome 4129  
                                _cncConfigMove 3C50                                  _cncConfigStop 5251  
                                   ??_task10ms 0070                         getBackTableSpeed@count 002C  
                            _EUSART_Initialize 5394                                ___lldiv@divisor 0071  
                         __end_of_sendCMDValue 5FE7                                ___lldiv@counter 0024  
                             ??_cncSetPosStart 007C                             ?_EUSART_Initialize 0070  
                                      printf@f 00CA                               ___aldiv@quotient 002A  
                                    Lcd_Port@a 0071                               ?_ADCC_Initialize 0070  
                               __tdiv_to_l_@f1 0071                                 __tdiv_to_l_@f2 0075  
                     _SPI2_SetInterruptHandler 5E93                                  ??__tdiv_to_l_ 0020  
                          ??_EUSART_Initialize 0073                 ??_EUSART_SetTxInterruptHandler 0073  
                                    _PORTAbits 000C                                  _cncManualMove 4DFE  
                             ?_CLC1_Initialize 0070                                    ___fladd@grs 0068  
                                   _strCncTela 024E                               ___lbmod@dividend 0074  
                                ??_getMoveTime 0044                                  ___xxtofl@sign 0020  
                                ??_getValueCMD 0064                                      _TRISDbits 0014  
                                 _navCfgEspera 0003                            __end_of_cncHomeMove 3A9F  
                                  ___fldiv@grs 003A                                    ___fldiv@rem 0033  
                 ??_IOCBF3_SetInterruptHandler 0073                                _cncCalcToCruise 3015  
                                  ?_navCfgMove 0070                                ?_Lcd_Write_Char 0070  
                            Lcd_Write_String@a 0074                              Lcd_Write_String@i 0077  
                               ?_cncConfigHome 0070                                    ___lbmod@rem 0076  
                               ?_cncConfigMove 0064                                    ___flmul@grs 0036  
                               ?_cncConfigStop 0071                      __end_of_EUSART_Initialize 53D6  
                                 ??_Inicia_LCD 0075                                   sendCMD@value 00DF  
                             ?_CLC2_Initialize 0070                          __end_of_navCfgControl 0003  
                                    _Lcd_Clear 5E99                                  _cncSetPosHome 4CA8  
         __end_of_TMR2_DefaultInterruptHandler 1C88                   _TMR2_DefaultInterruptHandler 1C87  
                                _cncSetPosStop 578D                                 __end_of___flge 4DFE  
                               __end_of___fleq 54E9                                 __end_of___lmul 4031  
           __end_of_EUSART_DefaultErrorHandler 5E4E                     _EUSART_DefaultErrorHandler 5E4B  
                               __end_of___wmul 503B                                 __end_of_btFunc 5093  
                           cncHomeMove@varHome 0022                               _Lcd_Write_String 50B2  
                             _convertMMtoSteps 51A0                                   _EUSART_Write 5152  
                                _cncTeste$4354 00B4                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_fround 43BC                                 ?_cncManualMove 00A9  
                              _SPI2_Initialize 5056                                 __end_of_velMax 56B3  
                               __end_of_printf 5056                              navCfgMove@subTela 00E5  
                                 cncEndMove@mv 0071                             _spi2_configuration 61AB  
                          start_initialization 0042                             __end_of_Inicia_LCD 5EFE  
                          __end_of__tdiv_to_l_ 4CA8                              ??_NCO1_Initialize 0071  
                               navCfgMove@tela 00E4                                  ??_EUSART_Read 0071  
                               navCfgMove@soma 016C   EUSART_SetRxInterruptHandler@interruptHandler 0071  
 EUSART_SetTxInterruptHandler@interruptHandler 0071                                  ??_escreve_LCD 007B  
                                  putch@txData 0073                            __end_of_getMoveTime 1D98  
                          __end_of_getValueCMD 4517                                ___llmod@divisor 0025  
                              ___llmod@counter 007B                 ?_EUSART_SetOverrunErrorHandler 0071  
                             liberarTeclado@ms 0071                           getFrontTableSpeed@mv 002E  
                   _EUSART_FramingErrorHandler 01EA                                     ?_Lcd_Clear 0070  
                                     ??___flge 0069                                       ??___fleq 0020  
                             ??_PMD_Initialize 0071                                 ?_cncSetPosHome 00C4  
                                     ??___lmul 0079                                       ??___wmul 0075  
                               ?_cncSetPosStop 00C4                         _EUSART_SetErrorHandler 5E61  
                                     ??_btFunc 0070                                    __doprnt@len 00B2  
                                    __Umul8_16 5093                                    __doprnt@val 00BA  
                                  __pdataBANK2 016C                                  _getAccelTable 485A  
                              Lcd_Write_Char@a 0073                                Lcd_Write_Char@y 012E  
                                     ??_fround 0044                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_velMax 0075                                   cncHomeMove@t 002C  
                                     ??_printf 00D2                                    _cncHomeMove 38F6  
                                    ___fladd@a 0059                                      ___fladd@b 0055  
                      __end_of_cncCalcToCruise 3135                                     fround@prec 0054  
                                    ___fldiv@a 0026                                      ___fldiv@b 002A  
                                  __pbssBIGRAM 2EF8                    __end_of_EUSART_Transmit_ISR 5110  
                           cncConfigMove@accel 006A                              cncSetPosHome@home 00C4  
                                    ___flmul@a 002A                                      ___flmul@b 0026  
                                  __pbssCOMMON 007C                                      ___flsub@a 00A0  
                                    ___flsub@b 00A4                                     sendCMD@cmd 00E3  
                                    ___latbits 0004                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK4 026A  
                           cncConfigMove@speed 0066                    ?_IOCBF5_SetInterruptHandler 0071  
                                 _isdigit$3932 0071                                ??_cncConfigHome 006B  
                              ??_cncConfigMove 00A0                                ??_cncConfigStop 0077  
                             _convertStepsToMM 51CB         __end_of_IOCBF4_DefaultInterruptHandler 2001  
               _IOCBF4_DefaultInterruptHandler 2000                     __end_of_EUSART_Receive_ISR 52E7  
                                     ?_Lcd_Cmd 0070                                      __doprnt@c 00C8  
                                    __doprnt@f 006D                                      _cncConfig 4517  
             _EUSART_RxDefaultInterruptHandler 01EC                            __end_of_EUSART_Read 51A0  
                                    __pnvBANK2 0161                                      __pnvBANK3 01E4  
                                    __pnvBANK4 0268                                      _cncSetPos 280D  
                                    _cncMoveTo 54E9                            __end_of_escreve_LCD 531D  
                      _IOCBF3_InterruptHandler 0167                   __end_of_EUSART_RxDataHandler 5FB7  
                       _PIN_MANAGER_Initialize 56B3                           EUSART_Read@readValue 0072  
                             ??_Lcd_Set_Cursor 0075                                       ?___aldiv 0020  
                      __end_of_SPI2_Initialize 5074                                       ?___fladd 0055  
                                     ?___fldiv 0026                                       ?___awdiv 0078  
                                    __ptext100 5F4F                                      __ptext101 5FB7  
                                     ?___lbdiv 0077                                      __ptext110 5074  
                                     ?___flneg 0071                                      __ptext111 3801  
                                    __ptext103 5EA1                                      __ptext120 5F0D  
                                    __ptext112 5EC6                                      __ptext104 1C87  
                                    __ptext113 5EB9                                      __ptext105 5585  
                                    __ptext114 50F0                                      __ptext106 5F1D  
                                    __ptext115 52B1                                      __ptext107 2800  
                                    __ptext116 5E51                                      __ptext108 1C86  
                                    __ptext117 3800                                      __ptext109 2000  
                                    __ptext118 5E4B                                      __ptext119 5F9F  
                                     ?___awmod 0071                                       ?___lbmod 0071  
                                     ?___flmul 0026                                       ?___flsub 00A0  
                                     ?___fltol 0055                                       ?___lldiv 0071  
                                     ?___llmod 0025                                      __npowers_ 5834  
                                    _getSerial 5720                                     ?__Umul8_16 0071  
                               ?_getAccelTable 0071                                   _eusartRxHead 007C  
                                 cncMoveTo@pos 00A9                                   _eusartTxHead 00EF  
                                 _eusartRxTail 00ED                                       ?__doprnt 006D  
                              ??_cncManualMove 006B                                   _eusartTxTail 00EE  
                                     ?_cncMove 0020                               ??_liberarTeclado 0073  
                 ??_INTERRUPT_InterruptManager 0071                                    __tdiv_to_l_ 4C0C  
                      _eusartTxBufferRemaining 016B                                   ??__div_to_l_ 0079  
                                     _BAUD1CON 011F               ??_IOCBF5_DefaultInterruptHandler 0070  
              ?_IOCBF5_DefaultInterruptHandler 0070                                      _exeSerial 48D7  
                                     _CLC1GLS0 1E16                                       _CLC1GLS1 1E17  
                                     _CLC1GLS2 1E18                                       _CLC1GLS3 1E19  
                                     _CLC2GLS0 1E20                                       _CLC2GLS1 1E21  
                                     _CLC2GLS2 1E22                                       _CLC2GLS3 1E23  
                                     _CLC1SEL0 1E12                                       _CLC1SEL1 1E13  
                                     _CLC1SEL2 1E14                                       _CLC1SEL3 1E15  
                                     _CLC2SEL0 1E1C                                       _CLC2SEL1 1E1D  
                                     _CLC2SEL2 1E1E                                       _CLC2SEL3 1E1F  
                                     ?_isdigit 0070                                       ?_sendCMD 0070  
                            cncSetPosStop@stop 00C4                                   _sendCMDValue 5FCF  
                                  _getMoveTime 1C91             __end_of_IOCBF3_SetInterruptHandler 5E93  
                   _IOCBF3_SetInterruptHandler 5E8D                                    _getValueCMD 43BC  
                                 ??_cncEndMove 0073                             cncConfigStop@value 0076  
                                  _NCO1CONbits 0592                                 cncSetPos@start 00AC  
                              cncConfigMove@mv 0064                                 cncMoveTo@accel 00B1  
                                     ?_sprintf 00CA                                       _T2CLKCON 0290  
                                    cncMove@mv 0020                                       _T4CLKCON 0296  
                                     _NCO1ACCH 058D                                       _NCO1ACCL 058C  
                                     _NCO1ACCU 058E                                 cncMoveTo@speed 00AD  
                                     _NCO1INCH 0590                                       _NCO1INCL 058F  
                              cncConfigStop@mv 0071                                       _NCO1INCU 0591  
                               _eusartRxBuffer 03A0                             getBackTableSpeed@i 0024  
                              ___aldiv@divisor 0020                                 _eusartTxBuffer 0340  
                              ___aldiv@counter 0028                                     ?_cncConfig 0070  
                               ___wmul@product 0075                                       _LATAbits 0016  
       EUSART_SetErrorHandler@interruptHandler 0071                                       _LATBbits 0017  
                                     _LATCbits 0018                                       _LATDbits 0019  
                                     _LATEbits 001A                                      clear_ram0 5EAD  
                                     _PIE0bits 0716                                     ?_cncSetPos 00A8  
                   ??_SPI2_SetInterruptHandler 0073                                     ?_cncMoveTo 00A9  
                                     _PIE3bits 0719                                       _PIE4bits 071A  
                            _eusartRxLastError 0131                                ??_cncSetPosHome 007C  
                                     Lcd_Cmd@a 0073                                       _PIR0bits 070C  
                              ??_cncSetPosStop 007C                             __end_of__div_to_l_ 4C0C  
              ??_EUSART_SetFramingErrorHandler 0073                                       _PIR3bits 070F  
                                     _PIR4bits 0710                                    ??_Lcd_Clear 0074  
                                     _SPI2_Isr 5F0D                             cncCalcToCruise@len 003A  
                                     _SSP2CON1 019A      __end_of_EUSART_DefaultOverrunErrorHandler 5E55  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 5E51                                       _TMR2_ISR 5EA1  
                                   ?_getSerial 0070                                       _SSP2STAT 0199  
                            ??_PIN_MANAGER_IOC 0071                             __end_of_cncEndMove 5354  
                            ??_TMR1_Initialize 0071                              ___wmul@multiplier 0071  
                          cncSetPosStart@start 00C4                                 getValueCMD@cmd 0068  
                                   ?_exeSerial 0070                               ?_cncCalcToCruise 002E  
                             ??_Lcd_Write_Char 0072                 ??_TMR2_DefaultInterruptHandler 0070  
                    ?_TMR2_SetInterruptHandler 0071                              _getBackTableSpeed 49D6  
                                     _Lcd_Init 5418                                       _Lcd_Port 5FB7  
                                  _EUSART_Read 5177                               cncMove@timeSteps 002D  
                            ___lmul@multiplier 0071                                   ??_navCfgMove 00DC  
                           ?_getBackTableSpeed 0078                                    _escreve_LCD 52E7  
                     __end_of_Lcd_Write_String 50D1                       __end_of_convertMMtoSteps 51CB  
                            ??_TMR2_Initialize 0073                            ??_getBackTableSpeed 0020  
                      getFrontTableSpeed@count 0042                                ??_getAccelTable 0074  
                             ?_SPI2_Initialize 0070                        ??_OSCILLATOR_Initialize 0071  
                                  ??__Umul8_16 0073                            _EUSART_ErrorHandler 01E6  
                              _NCO1_Initialize 5ED3                    ?_EUSART_DefaultErrorHandler 0070  
                           __end_of_navCfgMove 3000                                    _fround$4355 0050  
                                  _fround$4356 004C                                  _getSpeedTable 5534  
                               getSpeedTable@i 002E                      __end_of_getBackTableSpeed 4A57  
                      _IOCBF4_InterruptHandler 0165                                       ___xxtofl 4ADB  
                                     _cncTeste 4EC9                         _MSSP2_InterruptHandler 0169  
                         _EUSART_RxDataHandler 5F9F                                       __ptext10 0002  
                                     __ptext11 5720                                       __ptext20 35A2  
                                     __ptext12 5E4E                                       __ptext21 545B  
                                     __ptext13 5177                                       __ptext30 4B71  
                                     __ptext22 4808                                       __ptext14 4A57  
                                     __ptext31 5020                                       __ptext23 5E59  
                                     __ptext15 48D7                                       __ptext40 54E9  
                                     __ptext32 53D6                                       __ptext24 5152  
                                     __ptext16 5131                                       __ptext41 4DFE  
                                     __ptext33 527E                                       __ptext25 5EE1  
                                     __ptext17 5FCF                                       __ptext50 38F6  
                                     __ptext42 1D98                                       __ptext34 3E1F  
                                     __ptext26 4268                                       __ptext18 503B  
                                     __ptext51 531D                                       __ptext43 5251  
                                     __ptext35 1C88                                       __ptext27 50D1  
                                     __ptext19 205D                                       __ptext60 4687  
                                     __ptext52 4517                                       __ptext44 4129  
                                     __ptext36 54A0                                       __ptext28 5110  
                                     __ptext61 51CB                                       __ptext53 280D  
                                     __ptext45 5007                                       __ptext37 43BC  
                                     __ptext29 4C0C                                       __ptext70 4955  
                                     __ptext62 4ADB                                       __ptext54 4D51  
                                     __ptext46 52E7                                       __ptext38 200A  
                                     __ptext71 51F7                                       __ptext63 51A0  
                                     __ptext55 3C50                                       __ptext47 50B2  
                                     __ptext39 4EC9                                       __ptext80 56B3  
                                     __ptext72 5F88                                       __ptext64 55E8  
                                     __ptext56 564D                                       __ptext48 5224  
                                     __ptext81 5E70                                       __ptext73 5EFE  
                                     __ptext65 3135                                       __ptext57 5534  
                                     __ptext49 5354                                       __ptext90 5E66  
                                     __ptext82 5E6B                                       __ptext74 3000  
                                     __ptext66 5093                                       __ptext58 1C91  
                                     __ptext91 5E7B                                       __ptext83 5E8D  
                                     __ptext75 5001                                       __ptext67 3015  
                                     __ptext59 485A                                       __ptext92 5E61  
                                     __ptext84 2001                                       __ptext76 5F2D  
                                     __ptext68 5F3D                                       __ptext93 5E75  
                                     __ptext85 5ED3                                       __ptext77 5056  
                                     __ptext69 4002                                       __ptext94 5F75  
                                     __ptext86 5E55                                       __ptext78 5E93  
                                     __ptext95 5F62                                       __ptext87 5394  
                                     __ptext79 4800                                       __ptext96 5FE7  
                                     __ptext88 5E87                                       __ptext97 5EEF  
                                     __ptext89 5E81                                       __ptext98 5418  
                                     __ptext99 5E99                   ??_IOCBF4_SetInterruptHandler 0073  
                                     __powers_ 5800                                   _SSP2CON1bits 019A  
                                   _IOCBF3_ISR 5EB9                                     _IOCBF4_ISR 5EC6  
                                   _IOCBF5_ISR 2800                                       _navTelas 3A9F  
                            cncConfigStop@mask 0075                              cncConfigStop@port 0073  
                                  ??_cncConfig 006D                              ??_TMR4_Initialize 0071  
                                     cncMove@t 002B                                       _task10ms 5585  
                                  ??_cncSetPos 00B4                                    ??_cncMoveTo 006B  
                           getAccelTable@accel 0071                        ?_EUSART_SetErrorHandler 0071  
                         getBackTableSpeed@ini 0028                                     _RC1STAbits 011D  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                                  getMoveTime@mv 0040  
                            escreve_LCD@coluna 0020                                       int$flags 007E  
                                  ??_getSerial 0079                                       atol@sign 002C  
                     __end_of_convertStepsToMM 51F7             __end_of_INTERRUPT_InterruptManager 0040  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 5E81  
                _EUSART_SetFramingErrorHandler 5E7B                                  getSerial@data 012C  
                               __doprnt@tmpval 00BE                                 ?_getSpeedTable 002E  
                            ??_TMR5_Initialize 0071                                   ?_cncHomeMove 0020  
                                  ??_exeSerial 00E4                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                 __pstringtext10 6048  
                               __pstringtext11 6058                                 __pstringtext20 60E0  
                               __pstringtext12 6068                                 __pstringtext21 60ED  
                               __pstringtext13 6078                                 __pstringtext30 6153  
                               __pstringtext22 60F9                                 __pstringtext14 6088  
                               __pstringtext31 615D                                 __pstringtext23 6105  
                               __pstringtext15 6097                                 __pstringtext40 61A6  
                               __pstringtext32 6167                                 __pstringtext24 6111  
                               __pstringtext16 60A6                                 __pstringtext41 0000  
                               __pstringtext33 6170                                 __pstringtext25 611D  
                               __pstringtext17 60B5                                 __pstringtext34 6179  
                               __pstringtext26 6128                                 __pstringtext18 60C4  
                               __pstringtext35 6182                                 __pstringtext27 6133  
                               __pstringtext19 60D2                                 __pstringtext36 618A  
                               __pstringtext28 613E                                 __pstringtext37 6192  
                               __pstringtext29 6149                                 __pstringtext38 6199  
                               __pstringtext39 61A0                                       isdigit@c 0072  
                                     scale@scl 0054                             Lcd_Write_Char@temp 012F  
                                     intlevel1 0000                                      sprintf@ap 00D7  
                                    sprintf@pb 00D8                               __tdiv_to_l_@exp1 0029  
                             __tdiv_to_l_@cntr 0028                                      sprintf@wh 00CA  
                             __tdiv_to_l_@quot 0024                               ___lldiv@dividend 0075  
                      ?_PIN_MANAGER_Initialize 0070                                       velMax@mv 0071  
               __end_of_EUSART_SetErrorHandler 5E66           __end_of_EUSART_SetRxInterruptHandler 5E87  
                 _EUSART_SetRxInterruptHandler 5E81                        __end_of_NCO1_Initialize 5EE1  
                             escreve_LCD@linha 0023                                       printf@ap 00D3  
                                     printf@pb 00D4                             _EUSART_Receive_ISR 52B1  
EUSART_SetFramingErrorHandler@interruptHandler 0071                               getMoveTime@count 004D  
                             getMoveTime@usAcc 0049                             Lcd_Set_Cursor@temp 007A  
                                 ?__tdiv_to_l_ 0071                                  __pstringtext1 00AC  
                                __pstringtext2 5800                                  __pstringtext3 5834  
                                __pstringtext4 61AB                                  __pstringtext5 5868  
                                __pstringtext6 6000                                  __pstringtext7 6015  
                                __pstringtext8 6026                                  __pstringtext9 6037  
                               _FVR_Initialize 5E55                         __Umul8_16@multiplicand 0071  
                                     sprintf@f 00CC                            ?_EUSART_Receive_ISR 0070  
                                   _SSP2DATPPS 1EC9                               ___lldiv@quotient 0020  
                                   _SSP2CLKPPS 1EC8                     __end_of_getFrontTableSpeed 38F6  
                                 ?_getMoveTime 0040                                   ___aldiv@sign 0029  
                                 ?_getValueCMD 0060                    ?_IOCBF3_SetInterruptHandler 0071  
                                ___fladd@signs 0065                             EUSART_Write@txData 0072  
                                  ?_IOCBF3_ISR 0070                                    ?_IOCBF4_ISR 0070  
                                  ?_IOCBF5_ISR 0070                 __end_of_PIN_MANAGER_Initialize 5720  
                            ??_ADCC_Initialize 0071                          __end_of_cncConfigHome 4268  
                        __end_of_cncConfigMove 3E1F                                getAccelTable@us 012A  
                        __end_of_cncConfigStop 527E                                   ___fladd@aexp 0066  
                                 ___fladd@bexp 0067                                 escreve_LCD@str 0021  
       __end_of_IOCBF5_DefaultInterruptHandler 3802                 _IOCBF5_DefaultInterruptHandler 3801  
                              _PIN_MANAGER_IOC 5F1D                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0079                          _TMR2_InterruptHandler 0161  
                               getAccelTable@i 0073                        _IOCBF5_InterruptHandler 0163  
                              _TMR1_Initialize 5F2D                              ??_CLC1_Initialize 0071  
                            __Umul8_16@product 0075                                  _navCfgControl 0002  
